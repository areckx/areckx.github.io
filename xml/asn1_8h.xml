<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="asn1_8h" kind="file" language="C++">
    <compoundname>asn1.h</compoundname>
    <includes local="no">time.h</includes>
    <includes refid="e__os2_8h" local="no">openssl/e_os2.h</includes>
    <includes refid="bio_8h" local="no">openssl/bio.h</includes>
    <includes refid="stack_8h" local="no">openssl/stack.h</includes>
    <includes refid="safestack_8h" local="no">openssl/safestack.h</includes>
    <includes refid="symhacks_8h" local="no">openssl/symhacks.h</includes>
    <includes refid="ossl__typ_8h" local="no">openssl/ossl_typ.h</includes>
    <includes refid="bn_8h" local="no">openssl/bn.h</includes>
    <includedby refid="asn1__mac_8h" local="no">thirdparty/openssl/include/openssl/asn1_mac.h</includedby>
    <includedby refid="asn1t_8h" local="no">thirdparty/openssl/include/openssl/asn1t.h</includedby>
    <includedby refid="ec_8h" local="no">thirdparty/openssl/include/openssl/ec.h</includedby>
    <includedby refid="objects_8h" local="no">thirdparty/openssl/include/openssl/objects.h</includedby>
    <includedby refid="pkcs7_8h" local="no">thirdparty/openssl/include/openssl/pkcs7.h</includedby>
    <includedby refid="rsa_8h" local="no">thirdparty/openssl/include/openssl/rsa.h</includedby>
    <includedby refid="ts_8h" local="no">thirdparty/openssl/include/openssl/ts.h</includedby>
    <includedby refid="x509_8h" local="no">thirdparty/openssl/include/openssl/x509.h</includedby>
    <incdepgraph>
      <node id="82144">
        <label>stdarg.h</label>
      </node>
      <node id="82149">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82152">
        <label>stdint.h</label>
      </node>
      <node id="82146">
        <label>stdlib.h</label>
      </node>
      <node id="82142">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="82140" relation="include">
        </childnode>
        <childnode refid="82143" relation="include">
        </childnode>
        <childnode refid="82144" relation="include">
        </childnode>
        <childnode refid="82145" relation="include">
        </childnode>
        <childnode refid="82152" relation="include">
        </childnode>
      </node>
      <node id="82147">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82153">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="82140" relation="include">
        </childnode>
        <childnode refid="82143" relation="include">
        </childnode>
        <childnode refid="82150" relation="include">
        </childnode>
        <childnode refid="82145" relation="include">
        </childnode>
      </node>
      <node id="82151">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82140" relation="include">
        </childnode>
      </node>
      <node id="82138">
        <label>thirdparty/openssl/include/openssl/asn1.h</label>
        <link refid="asn1_8h"/>
        <childnode refid="82139" relation="include">
        </childnode>
        <childnode refid="82140" relation="include">
        </childnode>
        <childnode refid="82142" relation="include">
        </childnode>
        <childnode refid="82147" relation="include">
        </childnode>
        <childnode refid="82148" relation="include">
        </childnode>
        <childnode refid="82151" relation="include">
        </childnode>
        <childnode refid="82150" relation="include">
        </childnode>
        <childnode refid="82153" relation="include">
        </childnode>
      </node>
      <node id="82148">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82147" relation="include">
        </childnode>
      </node>
      <node id="82139">
        <label>time.h</label>
      </node>
      <node id="82141">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82140">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82141" relation="include">
        </childnode>
      </node>
      <node id="82143">
        <label>stdio.h</label>
      </node>
      <node id="82150">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82140" relation="include">
        </childnode>
      </node>
      <node id="82145">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82146" relation="include">
        </childnode>
        <childnode refid="82140" relation="include">
        </childnode>
        <childnode refid="82143" relation="include">
        </childnode>
        <childnode refid="82147" relation="include">
        </childnode>
        <childnode refid="82148" relation="include">
        </childnode>
        <childnode refid="82149" relation="include">
        </childnode>
        <childnode refid="82150" relation="include">
        </childnode>
        <childnode refid="82151" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="82159">
        <label>thirdparty/openssl/include/openssl/engine.h</label>
        <link refid="engine_8h_source"/>
      </node>
      <node id="82170">
        <label>thirdparty/openssl/include/openssl/ts.h</label>
        <link refid="ts_8h_source"/>
      </node>
      <node id="82177">
        <label>thirdparty/openssl/include/openssl/hmac.h</label>
        <link refid="hmac_8h_source"/>
        <childnode refid="82167" relation="include">
        </childnode>
      </node>
      <node id="82157">
        <label>thirdparty/openssl/include/openssl/ec.h</label>
        <link refid="ec_8h_source"/>
        <childnode refid="82158" relation="include">
        </childnode>
        <childnode refid="82173" relation="include">
        </childnode>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82162">
        <label>thirdparty/poppler/poppler/SignatureHandler.h</label>
        <link refid="_signature_handler_8h_source"/>
        <childnode refid="82163" relation="include">
        </childnode>
      </node>
      <node id="82179">
        <label>thirdparty/openssl/include/openssl/rsa.h</label>
        <link refid="rsa_8h_source"/>
        <childnode refid="82159" relation="include">
        </childnode>
        <childnode refid="82170" relation="include">
        </childnode>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82176">
        <label>thirdparty/openssl/include/openssl/cmac.h</label>
        <link refid="cmac_8h_source"/>
      </node>
      <node id="82166">
        <label>thirdparty/kQOAuth/kqoauthutils.cpp</label>
        <link refid="kqoauthutils_8cpp_source"/>
      </node>
      <node id="82178">
        <label>thirdparty/openssl/include/openssl/pkcs7.h</label>
        <link refid="pkcs7_8h_source"/>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82155">
        <label>thirdparty/openssl/include/openssl/asn1_mac.h</label>
        <link refid="asn1__mac_8h_source"/>
      </node>
      <node id="82168">
        <label>thirdparty/openssl/include/openssl/ssl3.h</label>
        <link refid="ssl3_8h_source"/>
        <childnode refid="82167" relation="include">
        </childnode>
      </node>
      <node id="82160">
        <label>thirdparty/openssl/include/openssl/x509.h</label>
        <link refid="x509_8h_source"/>
        <childnode refid="82161" relation="include">
        </childnode>
        <childnode refid="82159" relation="include">
        </childnode>
        <childnode refid="82164" relation="include">
        </childnode>
        <childnode refid="82165" relation="include">
        </childnode>
        <childnode refid="82169" relation="include">
        </childnode>
        <childnode refid="82167" relation="include">
        </childnode>
        <childnode refid="82170" relation="include">
        </childnode>
        <childnode refid="82171" relation="include">
        </childnode>
        <childnode refid="82172" relation="include">
        </childnode>
      </node>
      <node id="82171">
        <label>thirdparty/openssl/include/openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h_source"/>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82154">
        <label>thirdparty/openssl/include/openssl/asn1.h</label>
        <link refid="asn1_8h"/>
        <childnode refid="82155" relation="include">
        </childnode>
        <childnode refid="82156" relation="include">
        </childnode>
        <childnode refid="82157" relation="include">
        </childnode>
        <childnode refid="82174" relation="include">
        </childnode>
        <childnode refid="82178" relation="include">
        </childnode>
        <childnode refid="82179" relation="include">
        </childnode>
        <childnode refid="82170" relation="include">
        </childnode>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82175">
        <label>thirdparty/openssl/include/openssl/evp.h</label>
        <link refid="evp_8h_source"/>
        <childnode refid="82166" relation="include">
        </childnode>
        <childnode refid="82176" relation="include">
        </childnode>
        <childnode refid="82177" relation="include">
        </childnode>
        <childnode refid="82165" relation="include">
        </childnode>
        <childnode refid="82168" relation="include">
        </childnode>
        <childnode refid="82170" relation="include">
        </childnode>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82173">
        <label>thirdparty/openssl/include/openssl/ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="82159" relation="include">
        </childnode>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82165">
        <label>thirdparty/openssl/include/openssl/pem.h</label>
        <link refid="pem_8h_source"/>
        <childnode refid="82166" relation="include">
        </childnode>
        <childnode refid="82167" relation="include">
        </childnode>
      </node>
      <node id="82161">
        <label>thirdparty/openssl/include/openssl/cms.h</label>
        <link refid="cms_8h_source"/>
        <childnode refid="82162" relation="include">
        </childnode>
      </node>
      <node id="82174">
        <label>thirdparty/openssl/include/openssl/objects.h</label>
        <link refid="objects_8h_source"/>
        <childnode refid="82175" relation="include">
        </childnode>
      </node>
      <node id="82167">
        <label>thirdparty/openssl/include/openssl/ssl.h</label>
        <link refid="ssl_8h_source"/>
        <childnode refid="82166" relation="include">
        </childnode>
        <childnode refid="82168" relation="include">
        </childnode>
      </node>
      <node id="82156">
        <label>thirdparty/openssl/include/openssl/asn1t.h</label>
        <link refid="asn1t_8h_source"/>
      </node>
      <node id="82163">
        <label>thirdparty/poppler/poppler/SignatureHandler.cc</label>
        <link refid="_signature_handler_8cc_source"/>
      </node>
      <node id="82158">
        <label>thirdparty/openssl/include/openssl/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="82159" relation="include">
        </childnode>
        <childnode refid="82160" relation="include">
        </childnode>
      </node>
      <node id="82172">
        <label>thirdparty/openssl/include/openssl/x509v3.h</label>
        <link refid="x509v3_8h_source"/>
        <childnode refid="82164" relation="include">
        </childnode>
        <childnode refid="82170" relation="include">
        </childnode>
      </node>
      <node id="82169">
        <label>thirdparty/openssl/include/openssl/pkcs12.h</label>
        <link refid="pkcs12_8h_source"/>
      </node>
      <node id="82164">
        <label>thirdparty/openssl/include/openssl/ocsp.h</label>
        <link refid="ocsp_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structasn1__ctx__st" prot="public">asn1_ctx_st</innerclass>
    <innerclass refid="structasn1__const__ctx__st" prot="public">asn1_const_ctx_st</innerclass>
    <innerclass refid="structasn1__object__st" prot="public">asn1_object_st</innerclass>
    <innerclass refid="structasn1__string__st" prot="public">asn1_string_st</innerclass>
    <innerclass refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" prot="public">ASN1_ENCODING_st</innerclass>
    <innerclass refid="structasn1__string__table__st" prot="public">asn1_string_table_st</innerclass>
    <innerclass refid="structasn1__type__st" prot="public">asn1_type_st</innerclass>
    <innerclass refid="struct_n_e_t_s_c_a_p_e___x509__st" prot="public">NETSCAPE_X509_st</innerclass>
    <innerclass refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" prot="public">BIT_STRING_BITNAME_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="asn1_8h_1a5e307a806acbaf3dd7d49cf89ed95b09" prot="public" static="no">
        <name>V_ASN1_UNIVERSAL</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="86" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a49573d3a4d386e291178538d677e14c3" prot="public" static="no">
        <name>V_ASN1_APPLICATION</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="87" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9f5921718e5537eee49fbffa06c3bb25" prot="public" static="no">
        <name>V_ASN1_CONTEXT_SPECIFIC</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="88" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2bdfce0fef45a66e10c5f69454e594c3" prot="public" static="no">
        <name>V_ASN1_PRIVATE</name>
        <initializer>0xc0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="89" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a45df18b839e1fe5919302e11c2ec12c3" prot="public" static="no">
        <name>V_ASN1_CONSTRUCTED</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="91" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7335b7eeb4fc5a75a63f94b6f2fbac4e" prot="public" static="no">
        <name>V_ASN1_PRIMITIVE_TAG</name>
        <initializer>0x1f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="92" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a70fb9e9ae3b32aec7d280c75df2322d2" prot="public" static="no">
        <name>V_ASN1_PRIMATIVE_TAG</name>
        <initializer>0x1f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="93" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae1ea4c4cbd8a3f5dd9a84d37e3fd88d8" prot="public" static="no">
        <name>V_ASN1_APP_CHOOSE</name>
        <initializer>-2	/* let the recipient choose */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="95" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a77fea8c38548c2c591cdd24c76b47b4e" prot="public" static="no">
        <name>V_ASN1_OTHER</name>
        <initializer>-3	/* used in <ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="96" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a18cf605aaf607666cb51932ebe252664" prot="public" static="no">
        <name>V_ASN1_ANY</name>
        <initializer>-4	/* used in ASN1 template code */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="97" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adb36656f72977e59d5be4cd65311b82e" prot="public" static="no">
        <name>V_ASN1_NEG</name>
        <initializer>0x100	/* negative flag */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="99" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae9ce601db9cb8ba6fa09b69d399d7475" prot="public" static="no">
        <name>V_ASN1_UNDEF</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="101" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a579aebf1da3bfeb235e952db3c7f08e3" prot="public" static="no">
        <name>V_ASN1_EOC</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="102" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aff59c36cefb3d3b8ef813971f1aa165d" prot="public" static="no">
        <name>V_ASN1_BOOLEAN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="103" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0fc996672dd3dd88bfcd087456a6796b" prot="public" static="no">
        <name>V_ASN1_INTEGER</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="104" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5a0bb74c35cee59ea1ee2c64cd396a8e" prot="public" static="no">
        <name>V_ASN1_NEG_INTEGER</name>
        <initializer>(2 | V_ASN1_NEG)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="105" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2c6b3331bbb8775d33379a287b3cbf55" prot="public" static="no">
        <name>V_ASN1_BIT_STRING</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="106" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab7338bcfcfbbd8f90c680759f373663b" prot="public" static="no">
        <name>V_ASN1_OCTET_STRING</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="107" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0ee96d376143ded4fe24f9dd70da6a29" prot="public" static="no">
        <name>V_ASN1_NULL</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="108" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa8aa9044005ad5fec5af188c7c1bd186" prot="public" static="no">
        <name>V_ASN1_OBJECT</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="109" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1add2d5d04aaa4f2b8c8d85604c4bb55eb" prot="public" static="no">
        <name>V_ASN1_OBJECT_DESCRIPTOR</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="110" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab1bc75db2c87c77ee0849427b55a4b8f" prot="public" static="no">
        <name>V_ASN1_EXTERNAL</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="111" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad8bb8ddcc18ac590423faf99092c1113" prot="public" static="no">
        <name>V_ASN1_REAL</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="112" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa306fe24cb2028dc08d2c730fbad5bab" prot="public" static="no">
        <name>V_ASN1_ENUMERATED</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="113" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a35e109e600adf63675e83d2173778da6" prot="public" static="no">
        <name>V_ASN1_NEG_ENUMERATED</name>
        <initializer>(10 | V_ASN1_NEG)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="114" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3d1cc4bd27cc649035839b824d7a1220" prot="public" static="no">
        <name>V_ASN1_UTF8STRING</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="115" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab76fef5a089d894b827029a84a6f4f7a" prot="public" static="no">
        <name>V_ASN1_SEQUENCE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="116" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a078f04fc79c8a1acccbb1a4c6705521b" prot="public" static="no">
        <name>V_ASN1_SET</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="117" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aad920e3c5122a0eabec18758fa756936" prot="public" static="no">
        <name>V_ASN1_NUMERICSTRING</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="118" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a90e781fa9a38ee9b80bd8b75b2257ccf" prot="public" static="no">
        <name>V_ASN1_PRINTABLESTRING</name>
        <initializer>19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="119" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a901aa5f489f0e4efe8a9c6bbd7286c51" prot="public" static="no">
        <name>V_ASN1_T61STRING</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="120" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6d463c38d47c9b98c2250cab56e0e7a6" prot="public" static="no">
        <name>V_ASN1_TELETEXSTRING</name>
        <initializer>20	/* alias */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="121" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6e7742a636d958fca16186454ff98572" prot="public" static="no">
        <name>V_ASN1_VIDEOTEXSTRING</name>
        <initializer>21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="122" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae9b8aad0d5710edad90ff55a9ebcfd51" prot="public" static="no">
        <name>V_ASN1_IA5STRING</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="123" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2a8dd01504f7ee166a07e05cb0707634" prot="public" static="no">
        <name>V_ASN1_UTCTIME</name>
        <initializer>23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="124" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7ec32dd2efb9a8765ccd91b2ab0721a3" prot="public" static="no">
        <name>V_ASN1_GENERALIZEDTIME</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="125" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af6be78a5cadcdf643d3a20d39e2e9a4f" prot="public" static="no">
        <name>V_ASN1_GRAPHICSTRING</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="126" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afc9db6a5c88da564131bc04d8305661b" prot="public" static="no">
        <name>V_ASN1_ISO64STRING</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="127" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1f20daacf45aa895125ae56fbdeca412" prot="public" static="no">
        <name>V_ASN1_VISIBLESTRING</name>
        <initializer>26	/* alias */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="128" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4f51f73e3c9670d90f3520c2b234b060" prot="public" static="no">
        <name>V_ASN1_GENERALSTRING</name>
        <initializer>27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="129" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a907f21d8ca9d0156f894d7c16f938ab6" prot="public" static="no">
        <name>V_ASN1_UNIVERSALSTRING</name>
        <initializer>28</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="130" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a052cc5b8987a30264899503f10d5a06a" prot="public" static="no">
        <name>V_ASN1_BMPSTRING</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="131" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a118340eb9cdd4033181e4d55457f4966" prot="public" static="no">
        <name>B_ASN1_NUMERICSTRING</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="134" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1156941d337c1c99ea717511a4f457a4" prot="public" static="no">
        <name>B_ASN1_PRINTABLESTRING</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="135" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9d7ab435ecd374869a069555059748d4" prot="public" static="no">
        <name>B_ASN1_T61STRING</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="136" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ada9a3eabe50ef2e808fa9ed12dc624e9" prot="public" static="no">
        <name>B_ASN1_TELETEXSTRING</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="137" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a900436472f580592fb66edd24a1d4998" prot="public" static="no">
        <name>B_ASN1_VIDEOTEXSTRING</name>
        <initializer>0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="138" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a94795fc4b7b2ce70fc28d2cfa667910d" prot="public" static="no">
        <name>B_ASN1_IA5STRING</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="139" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a04d41687e2da7437485190027d19daab" prot="public" static="no">
        <name>B_ASN1_GRAPHICSTRING</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="140" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac36a1fc5ecfb3cc439b600700926ba20" prot="public" static="no">
        <name>B_ASN1_ISO64STRING</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="141" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad56bda5ebb716812b62d3d87dd98f078" prot="public" static="no">
        <name>B_ASN1_VISIBLESTRING</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="142" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a43cbb87ee574da4b0b61b93e2e00dbe8" prot="public" static="no">
        <name>B_ASN1_GENERALSTRING</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="143" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1abdfd03514c415877a01481fb540f74a4" prot="public" static="no">
        <name>B_ASN1_UNIVERSALSTRING</name>
        <initializer>0x0100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="144" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a65f4a4f090f0cdbb56747820e06f14ac" prot="public" static="no">
        <name>B_ASN1_OCTET_STRING</name>
        <initializer>0x0200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="145" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a962adf17b1b7859fbc0221d75bb975c8" prot="public" static="no">
        <name>B_ASN1_BIT_STRING</name>
        <initializer>0x0400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="146" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9a64724eaa04dd8438871484ab1e2297" prot="public" static="no">
        <name>B_ASN1_BMPSTRING</name>
        <initializer>0x0800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="147" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae09f79e5e18d4fffe0fcd705e28562d9" prot="public" static="no">
        <name>B_ASN1_UNKNOWN</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="148" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3832e061d21ece9f58b5bec3fcb863b4" prot="public" static="no">
        <name>B_ASN1_UTF8STRING</name>
        <initializer>0x2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="149" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0daaab350b68cf64f888f07fadc903aa" prot="public" static="no">
        <name>B_ASN1_UTCTIME</name>
        <initializer>0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="150" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae920c8f63a0b1696aad5ce3c3007ac52" prot="public" static="no">
        <name>B_ASN1_GENERALIZEDTIME</name>
        <initializer>0x8000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="151" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acbda9b4df10b143f2402016db84e4fa1" prot="public" static="no">
        <name>B_ASN1_SEQUENCE</name>
        <initializer>0x10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="152" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7e568b023c5fc901b40cb2de3f988fef" prot="public" static="no">
        <name>MBSTRING_FLAG</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="155" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5f73d35687f23f529d0c39ee33d4b268" prot="public" static="no">
        <name>MBSTRING_UTF8</name>
        <initializer>(MBSTRING_FLAG)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="156" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a25c96f5f02c326baedd8ba42bacf0625" prot="public" static="no">
        <name>MBSTRING_ASC</name>
        <initializer>(MBSTRING_FLAG|1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="157" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a30fdc79de5fcbefaddcdaa8a87e257fd" prot="public" static="no">
        <name>MBSTRING_BMP</name>
        <initializer>(MBSTRING_FLAG|2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="158" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a8335206021b65cf207372f2a35105021" prot="public" static="no">
        <name>MBSTRING_UNIV</name>
        <initializer>(MBSTRING_FLAG|4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="159" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acf9b371c44923490ecfbf84195d6373d" prot="public" static="no">
        <name>SMIME_OLDMIME</name>
        <initializer>0x400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="161" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a765953ac19f9777a5a5d755b81bcd8de" prot="public" static="no">
        <name>SMIME_CRLFEOL</name>
        <initializer>0x800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="162" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0678db85184cf5d0d1c84c8a6ba8eb5d" prot="public" static="no">
        <name>SMIME_STREAM</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="163" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9b87f6c3344be51ad1ad74aacfaa38a0" prot="public" static="no">
        <name>DECLARE_ASN1_SET_OF</name>
        <param><defname>type</defname></param>
        <initializer>/* filled in by mkstack.pl */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="168" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adfafd2497aff75de74d1bc236a78f335" prot="public" static="no">
        <name>IMPLEMENT_ASN1_SET_OF</name>
        <param><defname>type</defname></param>
        <initializer>/* nothing, no longer needed */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="169" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac1a59c043650f4e434203915191caed4" prot="public" static="no">
        <name>ASN1_OBJECT_FLAG_DYNAMIC</name>
        <initializer>0x01	/* internal use */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="207" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1664c7923fddab41e9e66b353cc77fab" prot="public" static="no">
        <name>ASN1_OBJECT_FLAG_CRITICAL</name>
        <initializer>0x02	/* critical x509v3 object id */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="208" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a80e486c7c3fd9029fc3acd4c478fef4b" prot="public" static="no">
        <name>ASN1_OBJECT_FLAG_DYNAMIC_STRINGS</name>
        <initializer>0x04	/* internal use */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="209" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a646792f6b260f40aaf1216bfd8e596d3" prot="public" static="no">
        <name>ASN1_OBJECT_FLAG_DYNAMIC_DATA</name>
        <initializer>0x08	/* internal use */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="210" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9688333c08e7d20b5fadd262d3c7d73a" prot="public" static="no">
        <name>ASN1_STRING_FLAG_BITS_LEFT</name>
        <initializer>0x08 /* Set if 0x07 has bits left value */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="220" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acfd3d2e84baac0730e8c99d260a7fba9" prot="public" static="no">
        <name>ASN1_STRING_FLAG_NDEF</name>
        <initializer>0x010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="225" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4b7ab2e2bd5b4e52b4f3d13a3a3e59bd" prot="public" static="no">
        <name>ASN1_STRING_FLAG_CONT</name>
        <initializer>0x020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="232" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6b9a0874e56b75bf9db6bc9870a1419a" prot="public" static="no">
        <name>ASN1_STRING_FLAG_MSTRING</name>
        <initializer>0x040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="236" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4aa88b7e81c4deb050490d01908501cd" prot="public" static="no">
        <name>ASN1_LONG_UNDEF</name>
        <initializer>0x7fffffffL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="263" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aea94d028117769d15e17a5a4506cf97c" prot="public" static="no">
        <name>STABLE_FLAGS_MALLOC</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="265" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab559f5ba6d9fda4b793a16cf4ae4a551" prot="public" static="no">
        <name>STABLE_NO_MASK</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="266" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a61d4fc3a96ab6e71aa728cedabb2c72a" prot="public" static="no">
        <name>DIRSTRING_TYPE</name>
        <initializer>(B_ASN1_PRINTABLESTRING|B_ASN1_T61STRING|B_ASN1_BMPSTRING|B_ASN1_UTF8STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="267" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5b9812bd8f46192fa13915ecf804394d" prot="public" static="no">
        <name>PKCS9STRING_TYPE</name>
        <initializer>(DIRSTRING_TYPE|B_ASN1_IA5STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="269" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa2f98df91c6ba4eb11bf6d7c614c857f" prot="public" static="no">
        <name>ub_name</name>
        <initializer>32768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="283" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3aedfae0ce2fdf0a98f4ff40c853b189" prot="public" static="no">
        <name>ub_common_name</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="284" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab0edf764923f0f81e30c3d0f54806856" prot="public" static="no">
        <name>ub_locality_name</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="285" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acc4a20ca9f8f92e1e5aa36bf8098ba46" prot="public" static="no">
        <name>ub_state_name</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="286" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a890ab7bd832c96f7c3e33827409db5be" prot="public" static="no">
        <name>ub_organization_name</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="287" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a181d5a9d88c01ff6017add6071dd45d9" prot="public" static="no">
        <name>ub_organization_unit_name</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="288" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa46a98e1687c1c680945fa830f538547" prot="public" static="no">
        <name>ub_title</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="289" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa025273744e4615047276886022da7d5" prot="public" static="no">
        <name>ub_email_address</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="290" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7e2da94cd39f50e0e9fc8eafb1b6e20d" prot="public" static="no">
        <name>DECLARE_ASN1_FUNCTIONS</name>
        <param><defname>type</defname></param>
        <initializer>DECLARE_ASN1_FUNCTIONS_name(type, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="302" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad84e212878ac444a4753f8c9a0dea93d" prot="public" static="no">
        <name>DECLARE_ASN1_ALLOC_FUNCTIONS</name>
        <param><defname>type</defname></param>
        <initializer>DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="304" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1f645aaf437adb7b0c8a7551caaa290c" prot="public" static="no">
        <name>DECLARE_ASN1_FUNCTIONS_name</name>
        <param><defname>type</defname></param>
        <param><defname>name</defname></param>
        <initializer>DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) \
	DECLARE_ASN1_ENCODE_FUNCTIONS(type, name, name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="307" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0228d6159108b859e1596ab5866bf6c3" prot="public" static="no">
        <name>DECLARE_ASN1_FUNCTIONS_fname</name>
        <param><defname>type</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>name</defname></param>
        <initializer>DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) \
	DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="311" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac5b23d77ccdffabeedcd896c0c3cfc94" prot="public" static="no">
        <name>DECLARE_ASN1_ENCODE_FUNCTIONS</name>
        <param><defname>type</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>name</defname></param>
        <initializer>type *d2i_##name(type **a, const unsigned char **in, long len); \
	int i2d_##name(type *a, unsigned char **out); \
	DECLARE_ASN1_ITEM(itname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="315" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1addac73a11abea75ee5547945b01e6140" prot="public" static="no">
        <name>DECLARE_ASN1_ENCODE_FUNCTIONS_const</name>
        <param><defname>type</defname></param>
        <param><defname>name</defname></param>
        <initializer>type *d2i_##name(type **a, const unsigned char **in, long len); \
	int i2d_##name(const type *a, unsigned char **out); \
	DECLARE_ASN1_ITEM(name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="320" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3fcd4a868caf58709a9bf7c6a3fd90ba" prot="public" static="no">
        <name>DECLARE_ASN1_NDEF_FUNCTION</name>
        <param><defname>name</defname></param>
        <initializer>int i2d_##name##_NDEF(name *a, unsigned char **out);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="325" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a087ebba07234a6cdd42344e3e0946465" prot="public" static="no">
        <name>DECLARE_ASN1_FUNCTIONS_const</name>
        <param><defname>name</defname></param>
        <initializer>DECLARE_ASN1_ALLOC_FUNCTIONS(name) \
	DECLARE_ASN1_ENCODE_FUNCTIONS_const(name, name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="328" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a11696875130889ec52bf3f9a68765aa7" prot="public" static="no">
        <name>DECLARE_ASN1_ALLOC_FUNCTIONS_name</name>
        <param><defname>type</defname></param>
        <param><defname>name</defname></param>
        <initializer>type *name##_new(void); \
	void name##_free(type *a);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="332" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a20d3893f8074b33d3c8a1c574701f43f" prot="public" static="no">
        <name>DECLARE_ASN1_PRINT_FUNCTION</name>
        <param><defname>stname</defname></param>
        <initializer>DECLARE_ASN1_PRINT_FUNCTION_fname(stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="336" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0f76ff3bcc156936002e30692d1d46db" prot="public" static="no">
        <name>DECLARE_ASN1_PRINT_FUNCTION_fname</name>
        <param><defname>stname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>int fname##_print_ctx(<ref refid="structbio__st" kindref="compound">BIO</ref> *out, stname *x, int indent, \
					 const ASN1_PCTX *pctx);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="339" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5e7b3bdc0ac99dd9885bc681b375e21a" prot="public" static="no">
        <name>D2I_OF</name>
        <param><defname>type</defname></param>
        <initializer>type *(*)(type **,const unsigned char **,long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="343" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afbe22614a28618289e2d4e7c34d1125a" prot="public" static="no">
        <name>I2D_OF</name>
        <param><defname>type</defname></param>
        <initializer>int (*)(type *,unsigned char **)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="344" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa1820d2345b1c9e0ad6757a80647e8ea" prot="public" static="no">
        <name>I2D_OF_const</name>
        <param><defname>type</defname></param>
        <initializer>int (*)(const type *,unsigned char **)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="345" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a74f8b914cb17637b4b78207d1f6b84d3" prot="public" static="no">
        <name>CHECKED_D2I_OF</name>
        <param><defname>type</defname></param>
        <param><defname>d2i</defname></param>
        <initializer>((d2i_of_void*) (1 ? d2i : ((D2I_OF(type))0)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="347" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a89e42e3eaffce77672cd6cd90871f354" prot="public" static="no">
        <name>CHECKED_I2D_OF</name>
        <param><defname>type</defname></param>
        <param><defname>i2d</defname></param>
        <initializer>((i2d_of_void*) (1 ? i2d : ((I2D_OF(type))0)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="349" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7b8549baafda45d7327cba788f3c0d50" prot="public" static="no">
        <name>CHECKED_NEW_OF</name>
        <param><defname>type</defname></param>
        <param><defname>xnew</defname></param>
        <initializer>((void *(*)(void)) (1 ? xnew : ((type *(*)(void))0)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="351" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aacd1414f919a894c64b62e09e055a26d" prot="public" static="no">
        <name>CHECKED_PTR_OF</name>
        <param><defname>type</defname></param>
        <param><defname>p</defname></param>
        <initializer>((void*) (1 ? p : (type*)0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="353" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac3797cd4c33e5e96e762b798a39eebcf" prot="public" static="no">
        <name>CHECKED_PPTR_OF</name>
        <param><defname>type</defname></param>
        <param><defname>p</defname></param>
        <initializer>((void**) (1 ? p : (type**)0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="355" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa81e8afb4d3ecf7784f5071dff219da6" prot="public" static="no">
        <name>TYPEDEF_D2I_OF</name>
        <param><defname>type</defname></param>
        <initializer>typedef type *d2i_of_##type(type **,const unsigned char **,long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="358" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3dae10c8a859533b57fbf994efa0ea5e" prot="public" static="no">
        <name>TYPEDEF_I2D_OF</name>
        <param><defname>type</defname></param>
        <initializer>typedef int i2d_of_##type(type *,unsigned char **)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="359" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2a092b356f0def67a88bb505f1fe8164" prot="public" static="no">
        <name>TYPEDEF_D2I2D_OF</name>
        <param><defname>type</defname></param>
        <initializer>TYPEDEF_D2I_OF(type); TYPEDEF_I2D_OF(type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="360" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab7b2d0ca14dc279d38f94f34e20afaec" prot="public" static="no">
        <name>ASN1_ITEM_ptr</name>
        <param><defname>iptr</defname></param>
        <initializer>(iptr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="405" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a611e8c80612542df84f9da6af0178715" prot="public" static="no">
        <name>ASN1_ITEM_ref</name>
        <param><defname>iptr</defname></param>
        <initializer>(&amp;(iptr##_it))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="408" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a704c92967a505aaabb8a8f7065bc88d0" prot="public" static="no">
        <name>ASN1_ITEM_rptr</name>
        <param><defname>ref</defname></param>
        <initializer>(&amp;(ref##_it))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="410" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adf76ea99ecc53b2c3a96652d4b8d3dfc" prot="public" static="no">
        <name>DECLARE_ASN1_ITEM</name>
        <param><defname>name</defname></param>
        <initializer>OPENSSL_EXTERN const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> name##_it;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="412" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad4fb28528ec5900f0ed2ca02f85b704e" prot="public" static="no">
        <name>ASN1_STRFLGS_ESC_2253</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="444" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a29489cf558755b33a1ca73ae302def38" prot="public" static="no">
        <name>ASN1_STRFLGS_ESC_CTRL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="445" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4099370a01d4bf941fb23dae89d7eb5b" prot="public" static="no">
        <name>ASN1_STRFLGS_ESC_MSB</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="446" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a094814ae87521029ec51b69e0cce7894" prot="public" static="no">
        <name>ASN1_STRFLGS_ESC_QUOTE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="454" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acb911e1b70bde136c5a15a82195221fa" prot="public" static="no">
        <name>CHARTYPE_PRINTABLESTRING</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="460" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a627f54e4cd3ec6ac1b18e12152fa94a7" prot="public" static="no">
        <name>CHARTYPE_FIRST_ESC_2253</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="462" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad2e0580851a9111df0b13e13c239cedc" prot="public" static="no">
        <name>CHARTYPE_LAST_ESC_2253</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="464" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a15aeccd43584c121b6e5272ed51e6e6b" prot="public" static="no">
        <name>ASN1_STRFLGS_UTF8_CONVERT</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="474" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae12af99579ffccd8b5cbefe59c5682a3" prot="public" static="no">
        <name>ASN1_STRFLGS_IGNORE_TYPE</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="481" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1e814cef62f8c2411e2b6e1dafba8fdd" prot="public" static="no">
        <name>ASN1_STRFLGS_SHOW_TYPE</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="484" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a094fb392a89f8947f69376207301109d" prot="public" static="no">
        <name>ASN1_STRFLGS_DUMP_ALL</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="494" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a813f23fc008a300d24bf76a56017e937" prot="public" static="no">
        <name>ASN1_STRFLGS_DUMP_UNKNOWN</name>
        <initializer>0x100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="495" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae64e9f11d2d21e419111c27d520632c8" prot="public" static="no">
        <name>ASN1_STRFLGS_DUMP_DER</name>
        <initializer>0x200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="502" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9ef7d8ef9bcc0704b7e1e4ba1de8aeb1" prot="public" static="no">
        <name>ASN1_STRFLGS_RFC2253</name>
        <initializer>(ASN1_STRFLGS_ESC_2253 | \
				ASN1_STRFLGS_ESC_CTRL | \
				ASN1_STRFLGS_ESC_MSB | \
				ASN1_STRFLGS_UTF8_CONVERT | \
				ASN1_STRFLGS_DUMP_UNKNOWN | \
				ASN1_STRFLGS_DUMP_DER)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="509" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5187fab1a6cfb4c153d8672ab0461b57" prot="public" static="no">
        <name>M_ASN1_STRING_length</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;length)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="573" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a84799316d35d2edb4a9dc4aaf7d448a2" prot="public" static="no">
        <name>M_ASN1_STRING_length_set</name>
        <param><defname>x</defname></param>
        <param><defname>n</defname></param>
        <initializer>((x)-&gt;length = (n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="574" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a41379b9eff87b3d3b7b8de0b610cb6f2" prot="public" static="no">
        <name>M_ASN1_STRING_type</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="575" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af719d29adc5ea9112fdffbed232449ae" prot="public" static="no">
        <name>M_ASN1_STRING_data</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;data)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="576" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab95ca5675402d23e9a8ea2d9beafbe50" prot="public" static="no">
        <name>M_ASN1_BIT_STRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_BIT_STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="579" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a248833b30952ab7da63b78b9dda3882b" prot="public" static="no">
        <name>M_ASN1_BIT_STRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="581" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a741a0d100e90d9e43c5c23668a1f9c39" prot="public" static="no">
        <name>M_ASN1_BIT_STRING_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *)\
		ASN1_STRING_dup((const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="582" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae89d26ed375509a9da0b2663e60a44a7" prot="public" static="no">
        <name>M_ASN1_BIT_STRING_cmp</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>ASN1_STRING_cmp(\
		(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="584" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a408481da2ed13556670514594aef8108" prot="public" static="no">
        <name>M_ASN1_BIT_STRING_set</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>ASN1_STRING_set((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,b,c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="586" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a84c6c2f8aafe68c35c4aa1346e4ef87f" prot="public" static="no">
        <name>M_ASN1_INTEGER_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *)\
		ASN1_STRING_type_new(V_ASN1_INTEGER)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="588" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6709609a0e07cf15f336f3038df6f68c" prot="public" static="no">
        <name>M_ASN1_INTEGER_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="590" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a31e81d41c7920f840d9905669ce82e68" prot="public" static="no">
        <name>M_ASN1_INTEGER_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *)\
		ASN1_STRING_dup((const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="591" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aba2943b77f2f5697f60af62225b9adb2" prot="public" static="no">
        <name>M_ASN1_INTEGER_cmp</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>ASN1_STRING_cmp(\
		(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="593" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a630b0e7e8ce105fc41fcdbb3b88ab40b" prot="public" static="no">
        <name>M_ASN1_ENUMERATED_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *)\
		ASN1_STRING_type_new(V_ASN1_ENUMERATED)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="596" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afb6ab3b3331a060f9103e71ea5b0b1e5" prot="public" static="no">
        <name>M_ASN1_ENUMERATED_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="598" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7afe401ac3efe743095bc7a73c702b09" prot="public" static="no">
        <name>M_ASN1_ENUMERATED_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *)\
		ASN1_STRING_dup((const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="599" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a130dfd489c753d33314e5566a7ae8465" prot="public" static="no">
        <name>M_ASN1_ENUMERATED_cmp</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>ASN1_STRING_cmp(\
		(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="601" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5470e63f2455b7949cbae70a7857a9a4" prot="public" static="no">
        <name>M_ASN1_OCTET_STRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_OCTET_STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="604" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aeb277ca2a74c79c8794658522833c176" prot="public" static="no">
        <name>M_ASN1_OCTET_STRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="606" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae50524a75be486c38a40925c35da0f9c" prot="public" static="no">
        <name>M_ASN1_OCTET_STRING_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *)\
		ASN1_STRING_dup((const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="607" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a8bfb2ea2323da0eed592add544068aab" prot="public" static="no">
        <name>M_ASN1_OCTET_STRING_cmp</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>ASN1_STRING_cmp(\
		(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="609" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aee8c15d7dcb309dc19824b7eee3678bd" prot="public" static="no">
        <name>M_ASN1_OCTET_STRING_set</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>ASN1_STRING_set((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,b,c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="611" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adabe37ea9cb720cd0cf06e0093147446" prot="public" static="no">
        <name>M_ASN1_OCTET_STRING_print</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>ASN1_STRING_print(a,(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="612" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acfe61d61d1c42c3facbc8f9b2e37aff9" prot="public" static="no">
        <name>M_i2d_ASN1_OCTET_STRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_OCTET_STRING,\
		V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="613" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0c6ae88a44ac5d55195a1fd7159dd920" prot="public" static="no">
        <name>B_ASN1_TIME</name>
        <initializer>B_ASN1_UTCTIME | \
			B_ASN1_GENERALIZEDTIME</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="617" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad5ffe5a485a723e396280ed36cb40ea7" prot="public" static="no">
        <name>B_ASN1_PRINTABLE</name>
        <initializer>B_ASN1_NUMERICSTRING| \
			B_ASN1_PRINTABLESTRING| \
			B_ASN1_T61STRING| \
			B_ASN1_IA5STRING| \
			B_ASN1_BIT_STRING| \
			B_ASN1_UNIVERSALSTRING|\
			B_ASN1_BMPSTRING|\
			B_ASN1_UTF8STRING|\
			B_ASN1_SEQUENCE|\
			B_ASN1_UNKNOWN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="621" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a748a63e0405685e87991d872774e9339" prot="public" static="no">
        <name>B_ASN1_DIRECTORYSTRING</name>
        <initializer>B_ASN1_PRINTABLESTRING| \
			B_ASN1_TELETEXSTRING|\
			B_ASN1_BMPSTRING|\
			B_ASN1_UNIVERSALSTRING|\
			B_ASN1_UTF8STRING</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="633" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad8ee9b662ce0bf8107247e1c3ca6f778" prot="public" static="no">
        <name>B_ASN1_DISPLAYTEXT</name>
        <initializer>B_ASN1_IA5STRING| \
			B_ASN1_VISIBLESTRING| \
			B_ASN1_BMPSTRING|\
			B_ASN1_UTF8STRING</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="640" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4c407de0dacdfce56bf2566a6469ca81" prot="public" static="no">
        <name>M_ASN1_PRINTABLE_new</name>
        <param></param>
        <initializer>ASN1_STRING_type_new(V_ASN1_T61STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="646" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7f0d40c7d51dc980c72455e8bf69d096" prot="public" static="no">
        <name>M_ASN1_PRINTABLE_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="647" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a8ccbcf7885fdd222a664ec706e4d68e2" prot="public" static="no">
        <name>M_i2d_ASN1_PRINTABLE</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,\
		pp,a-&gt;type,V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="648" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac11aa62cc0b99eb26386b9ac4809eb4e" prot="public" static="no">
        <name>M_d2i_ASN1_PRINTABLE</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>d2i_ASN1_type_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l, \
			B_ASN1_PRINTABLE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="650" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa5a4bd5a434a91aecf691b5112c58e5a" prot="public" static="no">
        <name>M_DIRECTORYSTRING_new</name>
        <param></param>
        <initializer>ASN1_STRING_type_new(V_ASN1_PRINTABLESTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="654" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a54825b6ad267ce2b1e43a7c348008887" prot="public" static="no">
        <name>M_DIRECTORYSTRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="655" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a91f85382120cac01765780575a58c670" prot="public" static="no">
        <name>M_i2d_DIRECTORYSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,\
						pp,a-&gt;type,V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="656" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2ddba3cb5e3cabc24787a621b8adf0a7" prot="public" static="no">
        <name>M_d2i_DIRECTORYSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>d2i_ASN1_type_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l, \
			B_ASN1_DIRECTORYSTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="658" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a810986d88cb261f360e0fd55304b05e0" prot="public" static="no">
        <name>M_DISPLAYTEXT_new</name>
        <param></param>
        <initializer>ASN1_STRING_type_new(V_ASN1_VISIBLESTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="662" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a112c4ad9024a022d1967b67400bd2792" prot="public" static="no">
        <name>M_DISPLAYTEXT_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="663" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0a7de4699b4058f7240be9f8ec896725" prot="public" static="no">
        <name>M_i2d_DISPLAYTEXT</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,\
						pp,a-&gt;type,V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="664" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab4898a98c19437aed55c39b9159c6454" prot="public" static="no">
        <name>M_d2i_DISPLAYTEXT</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>d2i_ASN1_type_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l, \
			B_ASN1_DISPLAYTEXT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="666" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2368aa7dbb09126a9a8a7754b1da6cdf" prot="public" static="no">
        <name>M_ASN1_PRINTABLESTRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_PRINTABLESTRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_PRINTABLESTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="670" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="670" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a78837d86709491a38c1d8ab85f009c2b" prot="public" static="no">
        <name>M_ASN1_PRINTABLESTRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="672" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a24ac24c983fcfde7fbbda3c9491aa484" prot="public" static="no">
        <name>M_i2d_ASN1_PRINTABLESTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_PRINTABLESTRING,\
		V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="673" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa793f88fbf4c9e9355af1aab2baf4ce5" prot="public" static="no">
        <name>M_d2i_ASN1_PRINTABLESTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_PRINTABLESTRING</ref> *)d2i_ASN1_type_bytes\
		((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,B_ASN1_PRINTABLESTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="676" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a308eaf2377537d211a3fcc91fb2916e2" prot="public" static="no">
        <name>M_ASN1_T61STRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_T61STRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_T61STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="680" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a747c25426f9e8b6bbd83c778c3733558" prot="public" static="no">
        <name>M_ASN1_T61STRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="682" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a57124c374437c5902ee3ca6421783b2f" prot="public" static="no">
        <name>M_i2d_ASN1_T61STRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_T61STRING,\
		V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="683" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad900f8f5453a5839c11396ee85127e56" prot="public" static="no">
        <name>M_d2i_ASN1_T61STRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_T61STRING</ref> *)d2i_ASN1_type_bytes\
		((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,B_ASN1_T61STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="686" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aafe038ed670a65c422cfee6d3615b4a3" prot="public" static="no">
        <name>M_ASN1_IA5STRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_IA5STRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_IA5STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="690" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a16b3a87f20af84c83ba8765bcd977f02" prot="public" static="no">
        <name>M_ASN1_IA5STRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="692" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9a77e357040cc8bbed928f550d37be2f" prot="public" static="no">
        <name>M_ASN1_IA5STRING_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_IA5STRING</ref> *)ASN1_STRING_dup((const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="693" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a18202d90f9b804f615adf4a0588db4cd" prot="public" static="no">
        <name>M_i2d_ASN1_IA5STRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_IA5STRING,\
			V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="695" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4a75640b3b44d87b3f1e036875144619" prot="public" static="no">
        <name>M_d2i_ASN1_IA5STRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_IA5STRING</ref> *)d2i_ASN1_type_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,\
			B_ASN1_IA5STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="698" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af0509d1b85918fb15ee6ba635472f9e8" prot="public" static="no">
        <name>M_ASN1_UTCTIME_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *)\
		ASN1_STRING_type_new(V_ASN1_UTCTIME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="702" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a42fa98a8708ba01e0b7081884197e83f" prot="public" static="no">
        <name>M_ASN1_UTCTIME_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="704" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa409a12e6bed78e82bd7eb6cae5d9b29" prot="public" static="no">
        <name>M_ASN1_UTCTIME_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *)\
		ASN1_STRING_dup((const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="705" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2a9902fff76792cdf2376a0eacc3b9a5" prot="public" static="no">
        <name>M_ASN1_GENERALIZEDTIME_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *)\
		ASN1_STRING_type_new(V_ASN1_GENERALIZEDTIME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="708" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad95d78870557c9ed41dfbbd0423de786" prot="public" static="no">
        <name>M_ASN1_GENERALIZEDTIME_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="710" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a59cbb828221fa3c2bae999a6af39413d" prot="public" static="no">
        <name>M_ASN1_GENERALIZEDTIME_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *)ASN1_STRING_dup(\
	(const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="711" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1abf3fcfc16bf820152b5e45fcc4156b75" prot="public" static="no">
        <name>M_ASN1_TIME_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *)\
		ASN1_STRING_type_new(V_ASN1_UTCTIME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="714" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af08946e46d1571e0f2d57645c8935b6d" prot="public" static="no">
        <name>M_ASN1_TIME_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="716" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad4e165d79b714c85c00723325e071bf3" prot="public" static="no">
        <name>M_ASN1_TIME_dup</name>
        <param><defname>a</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *)\
	ASN1_STRING_dup((const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="717" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2b022ab1b8f3119c73862f2b8c05f60e" prot="public" static="no">
        <name>M_ASN1_GENERALSTRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALSTRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_GENERALSTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="720" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1abc42268de63efa9c8e9a6f7afd201e8d" prot="public" static="no">
        <name>M_ASN1_GENERALSTRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="722" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a034f4682a294166a67dcd8f7f659f7f6" prot="public" static="no">
        <name>M_i2d_ASN1_GENERALSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_GENERALSTRING,\
			V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="723" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a58da7a11ba3fb3646ca54cad52e85a3e" prot="public" static="no">
        <name>M_d2i_ASN1_GENERALSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALSTRING</ref> *)d2i_ASN1_type_bytes\
		((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,B_ASN1_GENERALSTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="726" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a15f18d8017d9d756e66f2dff16ca72a1" prot="public" static="no">
        <name>M_ASN1_UNIVERSALSTRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_UNIVERSALSTRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_UNIVERSALSTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="730" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7696cb0de675ae76a96b90bb1d4adfbd" prot="public" static="no">
        <name>M_ASN1_UNIVERSALSTRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="732" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aaf54506f5353888557556977eb689438" prot="public" static="no">
        <name>M_i2d_ASN1_UNIVERSALSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_UNIVERSALSTRING,\
			V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="733" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2fd6c457fdecfac2bbdbfcc054edef8d" prot="public" static="no">
        <name>M_d2i_ASN1_UNIVERSALSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_UNIVERSALSTRING</ref> *)d2i_ASN1_type_bytes\
		((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,B_ASN1_UNIVERSALSTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="736" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4edae3d33a813378be7b6d6744cda9fe" prot="public" static="no">
        <name>M_ASN1_BMPSTRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_BMPSTRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_BMPSTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="740" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a24e32a85166da8decf9979b3528354bd" prot="public" static="no">
        <name>M_ASN1_BMPSTRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="742" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5532caf38c694ca4563d40ecbeb23e0a" prot="public" static="no">
        <name>M_i2d_ASN1_BMPSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_BMPSTRING,\
			V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="743" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4b51d33d4ec2a051d578e9d52828688f" prot="public" static="no">
        <name>M_d2i_ASN1_BMPSTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_BMPSTRING</ref> *)d2i_ASN1_type_bytes\
		((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,B_ASN1_BMPSTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="746" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afa6317854eaac7745c60e4413595ffed" prot="public" static="no">
        <name>M_ASN1_VISIBLESTRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_VISIBLESTRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_VISIBLESTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="750" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2dfc8757b366b1eba2503aef50f5b1c7" prot="public" static="no">
        <name>M_ASN1_VISIBLESTRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="752" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae065bde3bc0be20df2e574a923f16627" prot="public" static="no">
        <name>M_i2d_ASN1_VISIBLESTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_VISIBLESTRING,\
			V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="753" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="753" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab9541dd258f0060f81b448ac7860b202" prot="public" static="no">
        <name>M_d2i_ASN1_VISIBLESTRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_VISIBLESTRING</ref> *)d2i_ASN1_type_bytes\
		((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,B_ASN1_VISIBLESTRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="756" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a59256a0941f584a748e619fba57d5a75" prot="public" static="no">
        <name>M_ASN1_UTF8STRING_new</name>
        <param></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTF8STRING</ref> *)\
		ASN1_STRING_type_new(V_ASN1_UTF8STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="760" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6d7be403e5fccf9e2e47e7df8b56516a" prot="public" static="no">
        <name>M_ASN1_UTF8STRING_free</name>
        <param><defname>a</defname></param>
        <initializer>ASN1_STRING_free((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="762" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3ac21907a34f1bedd8dbe7bfa94c6ffd" prot="public" static="no">
        <name>M_i2d_ASN1_UTF8STRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <initializer>i2d_ASN1_bytes((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *)a,pp,V_ASN1_UTF8STRING,\
			V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="763" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9492eb97c7163a1473e8dd356486d396" prot="public" static="no">
        <name>M_d2i_ASN1_UTF8STRING</name>
        <param><defname>a</defname></param>
        <param><defname>pp</defname></param>
        <param><defname>l</defname></param>
        <initializer>(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTF8STRING</ref> *)d2i_ASN1_type_bytes\
		((<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **)a,pp,l,B_ASN1_UTF8STRING)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="766" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a096f094bc452695d37bfe0e086b31d82" prot="public" static="no">
        <name>IS_SEQUENCE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="771" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af9d81a415feee2d70a485846fe851941" prot="public" static="no">
        <name>IS_SET</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="772" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a89f2b46eeef027b8c916fead8e5e42db" prot="public" static="no">
        <name>ASN1_dup_of</name>
        <param><defname>type</defname></param>
        <param><defname>i2d</defname></param>
        <param><defname>d2i</defname></param>
        <param><defname>x</defname></param>
        <initializer>((type*)ASN1_dup(CHECKED_I2D_OF(type, i2d), \
		     CHECKED_D2I_OF(type, d2i), \
		     CHECKED_PTR_OF(type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="956" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="956" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af8675bb0f2204801dfd9722daddb078d" prot="public" static="no">
        <name>ASN1_dup_of_const</name>
        <param><defname>type</defname></param>
        <param><defname>i2d</defname></param>
        <param><defname>d2i</defname></param>
        <param><defname>x</defname></param>
        <initializer>((type*)ASN1_dup(CHECKED_I2D_OF(const type, i2d), \
		     CHECKED_D2I_OF(type, d2i), \
		     CHECKED_PTR_OF(const type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="961" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="961" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae2f9bfe2b1e8a6b13251fb01ca2dc25c" prot="public" static="no">
        <name>M_ASN1_new_of</name>
        <param><defname>type</defname></param>
        <initializer>(type *)ASN1_item_new(ASN1_ITEM_rptr(type))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="970" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a64344e58b69188c21fd5ec2abe3a4a38" prot="public" static="no">
        <name>M_ASN1_free_of</name>
        <param><defname>x</defname></param>
        <param><defname>type</defname></param>
        <initializer>ASN1_item_free(CHECKED_PTR_OF(type, x), ASN1_ITEM_rptr(type))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="971" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="971" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1e139f59c2b3a1fb620f6a67ed329ead" prot="public" static="no">
        <name>ASN1_d2i_fp_of</name>
        <param><defname>type</defname></param>
        <param><defname>xnew</defname></param>
        <param><defname>d2i</defname></param>
        <param><defname>in</defname></param>
        <param><defname>x</defname></param>
        <initializer>((type*)ASN1_d2i_fp(CHECKED_NEW_OF(type, xnew), \
			CHECKED_D2I_OF(type, d2i), \
			in, \
			CHECKED_PPTR_OF(type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="977" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="977" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aef5387586c3ccd9e9633632870f191c8" prot="public" static="no">
        <name>ASN1_i2d_fp_of</name>
        <param><defname>type</defname></param>
        <param><defname>i2d</defname></param>
        <param><defname>out</defname></param>
        <param><defname>x</defname></param>
        <initializer>(ASN1_i2d_fp(CHECKED_I2D_OF(type, i2d), \
		 out, \
		 CHECKED_PTR_OF(type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="986" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="986" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a489b93acd16d9bcbbdc23d3ea1cbe54e" prot="public" static="no">
        <name>ASN1_i2d_fp_of_const</name>
        <param><defname>type</defname></param>
        <param><defname>i2d</defname></param>
        <param><defname>out</defname></param>
        <param><defname>x</defname></param>
        <initializer>(ASN1_i2d_fp(CHECKED_I2D_OF(const type, i2d), \
		 out, \
		 CHECKED_PTR_OF(const type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="991" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a73ea94b72999e6b4b832cf6b59649ac5" prot="public" static="no">
        <name>ASN1_d2i_bio_of</name>
        <param><defname>type</defname></param>
        <param><defname>xnew</defname></param>
        <param><defname>d2i</defname></param>
        <param><defname>in</defname></param>
        <param><defname>x</defname></param>
        <initializer>((type*)ASN1_d2i_bio( CHECKED_NEW_OF(type, xnew), \
			  CHECKED_D2I_OF(type, d2i), \
			  in, \
			  CHECKED_PPTR_OF(type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1005" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1005" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae1c441038d6ecdaf5b4b15ca800e49aa" prot="public" static="no">
        <name>ASN1_i2d_bio_of</name>
        <param><defname>type</defname></param>
        <param><defname>i2d</defname></param>
        <param><defname>out</defname></param>
        <param><defname>x</defname></param>
        <initializer>(ASN1_i2d_bio(CHECKED_I2D_OF(type, i2d), \
		  out, \
		  CHECKED_PTR_OF(type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1014" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5953594ac6360d30dcd66b18fdd75026" prot="public" static="no">
        <name>ASN1_i2d_bio_of_const</name>
        <param><defname>type</defname></param>
        <param><defname>i2d</defname></param>
        <param><defname>out</defname></param>
        <param><defname>x</defname></param>
        <initializer>(ASN1_i2d_bio(CHECKED_I2D_OF(const type, i2d), \
		  out, \
		  CHECKED_PTR_OF(const type, x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1019" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afad8f7eb9c9e0b2a00c54e7ef74e9154" prot="public" static="no">
        <name>ASN1_pack_string_of</name>
        <param><defname>type</defname></param>
        <param><defname>obj</defname></param>
        <param><defname>i2d</defname></param>
        <param><defname>oct</defname></param>
        <initializer>(ASN1_pack_string(CHECKED_PTR_OF(type, obj), \
		      CHECKED_I2D_OF(type, i2d), \
		      oct))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1061" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1061" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1d04ba422733cde92dc4dc81ec2cbcb1" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_SHOW_ABSENT</name>
        <initializer>0x001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1100" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afc1bb7d0fdf213b7f206edba4dbb08c7" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_SHOW_SEQUENCE</name>
        <initializer>0x002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1102" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1abd1c3143d35db29a14d583d1ac62a534" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_SHOW_SSOF</name>
        <initializer>0x004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1104" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a105295b7d22621ea56e132e0e6f6c3ac" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_SHOW_TYPE</name>
        <initializer>0x008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1106" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9de539e02f3cfdb1a003825e96266578" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_NO_ANY_TYPE</name>
        <initializer>0x010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1108" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7a0de332fe11ad86dffa74b3657e9e95" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_NO_MSTRING_TYPE</name>
        <initializer>0x020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1110" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab574e92b24b6255966b9930f54aeefc7" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_NO_FIELD_NAME</name>
        <initializer>0x040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1112" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1d028dcb9956a237a40ec16484695f8c" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME</name>
        <initializer>0x080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1114" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5617a38c19606336b1aecd31fc4b7583" prot="public" static="no">
        <name>ASN1_PCTX_FLAGS_NO_STRUCT_NAME</name>
        <initializer>0x100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1116" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1abc81af0e426d69870b737f241ece3adb" prot="public" static="no">
        <name>ASN1_F_A2D_ASN1_OBJECT</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1159" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7bafb498efd17b3415f47d3b1692e244" prot="public" static="no">
        <name>ASN1_F_A2I_ASN1_ENUMERATED</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1160" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab0ba18b690236c0cc08708405fc70207" prot="public" static="no">
        <name>ASN1_F_A2I_ASN1_INTEGER</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1161" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aaf3d07ba7bba26b312f8209128699f0d" prot="public" static="no">
        <name>ASN1_F_A2I_ASN1_STRING</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1162" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae2e523443f4b9619e4db525347579914" prot="public" static="no">
        <name>ASN1_F_APPEND_EXP</name>
        <initializer>176</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1163" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a032813a9498663d580e7c424f0bbd9fd" prot="public" static="no">
        <name>ASN1_F_ASN1_BIT_STRING_SET_BIT</name>
        <initializer>183</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1164" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a52a8b83da336ccce00677de12bd72922" prot="public" static="no">
        <name>ASN1_F_ASN1_CB</name>
        <initializer>177</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1165" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aae76adafc7a4405aa637c93018fd4d05" prot="public" static="no">
        <name>ASN1_F_ASN1_CHECK_TLEN</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1166" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aafa949a053d35e9796a160be0de84d29" prot="public" static="no">
        <name>ASN1_F_ASN1_COLLATE_PRIMITIVE</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1167" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aedf6b74c9b3c903d073de9e26eb9f0be" prot="public" static="no">
        <name>ASN1_F_ASN1_COLLECT</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1168" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afa92e58fe71ca6c8ace7b0781a69cbed" prot="public" static="no">
        <name>ASN1_F_ASN1_D2I_EX_PRIMITIVE</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1169" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1bc331acc5f5e7e6eb72611424c1722a" prot="public" static="no">
        <name>ASN1_F_ASN1_D2I_FP</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1170" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a710236db54c15aeeffdfdcb69409da56" prot="public" static="no">
        <name>ASN1_F_ASN1_D2I_READ_BIO</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1171" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac695ede98cfc29ad488ed95f460ab4cc" prot="public" static="no">
        <name>ASN1_F_ASN1_DIGEST</name>
        <initializer>184</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1172" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a81ba6db91f77cdb35dddcac1fd4e4c3b" prot="public" static="no">
        <name>ASN1_F_ASN1_DO_ADB</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1173" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac9a70eba587ac92b4d135e463c2c91c8" prot="public" static="no">
        <name>ASN1_F_ASN1_DUP</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1174" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a74caeefe7ed3aeecd4aa79f084d0927e" prot="public" static="no">
        <name>ASN1_F_ASN1_ENUMERATED_SET</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1175" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa76c37dac0bb0c859588e8e1cc1c714c" prot="public" static="no">
        <name>ASN1_F_ASN1_ENUMERATED_TO_BN</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1176" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aac32b6e57c5afaea96a87c0cd275f071" prot="public" static="no">
        <name>ASN1_F_ASN1_EX_C2I</name>
        <initializer>204</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1177" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1724260085c01d23463b13c9c8d95aee" prot="public" static="no">
        <name>ASN1_F_ASN1_FIND_END</name>
        <initializer>190</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1178" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7ef92f7bb5c097da5aabbe5c9b20e561" prot="public" static="no">
        <name>ASN1_F_ASN1_GENERALIZEDTIME_ADJ</name>
        <initializer>216</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1179" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aaac76b40a0806d8a362881bf53604c62" prot="public" static="no">
        <name>ASN1_F_ASN1_GENERALIZEDTIME_SET</name>
        <initializer>185</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1180" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ade9cb1ae2e2043787f6ee7f38e117a87" prot="public" static="no">
        <name>ASN1_F_ASN1_GENERATE_V3</name>
        <initializer>178</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1181" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab68c874516b99b4d3f9e1538f59a0565" prot="public" static="no">
        <name>ASN1_F_ASN1_GET_OBJECT</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1182" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1addce590e2854c9d76be2289bd498c8d3" prot="public" static="no">
        <name>ASN1_F_ASN1_HEADER_NEW</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1183" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a396aa833f9810eb33bd4e190ad1d2f6c" prot="public" static="no">
        <name>ASN1_F_ASN1_I2D_BIO</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1184" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2c56f0325a79e7f10bf699a3a6d131a2" prot="public" static="no">
        <name>ASN1_F_ASN1_I2D_FP</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1185" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a57b796187762af3fc41438e630a4f524" prot="public" static="no">
        <name>ASN1_F_ASN1_INTEGER_SET</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1186" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aee3c556e237e4d4ed19698f8b5b715bd" prot="public" static="no">
        <name>ASN1_F_ASN1_INTEGER_TO_BN</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1187" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad533dd1d9b43ac65676f3ddcd7d1a509" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_D2I_FP</name>
        <initializer>206</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1188" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2a6f122908a65431865a19aa2bc46262" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_DUP</name>
        <initializer>191</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1189" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a233bb73e70e1f7d021522c782dc9315c" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_EX_COMBINE_NEW</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1190" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a85cf31534900aa85681abd58a5000b7f" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_EX_D2I</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1191" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac1dee9e21cd722e3c89e052a97ce1836" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_I2D_BIO</name>
        <initializer>192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1192" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4e8584436c2add4f0541d324f5b48e4c" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_I2D_FP</name>
        <initializer>193</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1193" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad8c31d951f78986038a7a66cf033c4d2" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_PACK</name>
        <initializer>198</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1194" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5b21dc1c5440a21e19283d348e2c9162" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_SIGN</name>
        <initializer>195</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1195" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a11d8c2c7bb2bbc30c5e7e09c7241c3f1" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_SIGN_CTX</name>
        <initializer>220</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1196" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6fd5a0b714c7c227e9d03c284085ed0d" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_UNPACK</name>
        <initializer>199</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1197" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6cffaa8e100990ee37dfbf5e48a3bd5d" prot="public" static="no">
        <name>ASN1_F_ASN1_ITEM_VERIFY</name>
        <initializer>197</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1198" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa3dad43fdb214b3c7683f899d5c24ac6" prot="public" static="no">
        <name>ASN1_F_ASN1_MBSTRING_NCOPY</name>
        <initializer>122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1199" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa30e8a50679232a61d04aaa8d6039cdc" prot="public" static="no">
        <name>ASN1_F_ASN1_OBJECT_NEW</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1200" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa0da0e2356b175ba4161633e5da6893b" prot="public" static="no">
        <name>ASN1_F_ASN1_OUTPUT_DATA</name>
        <initializer>214</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1201" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a036e41c69a8d04b4a1260f9343831c5c" prot="public" static="no">
        <name>ASN1_F_ASN1_PACK_STRING</name>
        <initializer>124</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1202" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a117e22b6ac25da07bfdda330f546183c" prot="public" static="no">
        <name>ASN1_F_ASN1_PCTX_NEW</name>
        <initializer>205</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1203" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a45bf34951fe3bb5de3fc0917c87efdae" prot="public" static="no">
        <name>ASN1_F_ASN1_PKCS5_PBE_SET</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1204" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a77ba82a4e164d6d445210329ad21206d" prot="public" static="no">
        <name>ASN1_F_ASN1_SEQ_PACK</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1205" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4cfc38894ebd130e3577b20af2505351" prot="public" static="no">
        <name>ASN1_F_ASN1_SEQ_UNPACK</name>
        <initializer>127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1206" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adcc037925c0622e5f9403a51fdef0178" prot="public" static="no">
        <name>ASN1_F_ASN1_SIGN</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1207" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6f4636d435fe08b659a9799a4e8e50fb" prot="public" static="no">
        <name>ASN1_F_ASN1_STR2TYPE</name>
        <initializer>179</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1208" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a91f17d5ef839634284162eb5ec32f493" prot="public" static="no">
        <name>ASN1_F_ASN1_STRING_SET</name>
        <initializer>186</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1209" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a767cd78c0361f3398f1d0526a69ac7f6" prot="public" static="no">
        <name>ASN1_F_ASN1_STRING_TABLE_ADD</name>
        <initializer>129</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1210" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7b58826ef3bf44e57fff94b7a0e58842" prot="public" static="no">
        <name>ASN1_F_ASN1_STRING_TYPE_NEW</name>
        <initializer>130</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1211" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae4e5880f1f40e78dd6d5f6627ae97c7b" prot="public" static="no">
        <name>ASN1_F_ASN1_TEMPLATE_EX_D2I</name>
        <initializer>132</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1212" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0292768ad5da45ae028a85310708c9d1" prot="public" static="no">
        <name>ASN1_F_ASN1_TEMPLATE_NEW</name>
        <initializer>133</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1213" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a567f231ad23f3c5bfe8a6eabe1387356" prot="public" static="no">
        <name>ASN1_F_ASN1_TEMPLATE_NOEXP_D2I</name>
        <initializer>131</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1214" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3eafe32e991b2fa4547c50f88f1bfb14" prot="public" static="no">
        <name>ASN1_F_ASN1_TIME_ADJ</name>
        <initializer>217</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1215" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a179e3f3b9402a53ad6116af7f8cdd3a1" prot="public" static="no">
        <name>ASN1_F_ASN1_TIME_SET</name>
        <initializer>175</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1216" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5b8f7b1aeebfd13cde941042554d56ce" prot="public" static="no">
        <name>ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING</name>
        <initializer>134</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1217" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4c0915fd49ef96b89e6138b7b6d3f599" prot="public" static="no">
        <name>ASN1_F_ASN1_TYPE_GET_OCTETSTRING</name>
        <initializer>135</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1218" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0a2ac774f463ed5cda5b619f3c35029b" prot="public" static="no">
        <name>ASN1_F_ASN1_UNPACK_STRING</name>
        <initializer>136</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1219" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a293249b198e67ed1a4d7b8b76fec187d" prot="public" static="no">
        <name>ASN1_F_ASN1_UTCTIME_ADJ</name>
        <initializer>218</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1220" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab4b0b5635e19b5808fbfba3bf5669709" prot="public" static="no">
        <name>ASN1_F_ASN1_UTCTIME_SET</name>
        <initializer>187</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1221" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0f2dd36e76ad86420a8aaa404d809960" prot="public" static="no">
        <name>ASN1_F_ASN1_VERIFY</name>
        <initializer>137</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1222" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a91ddcbe22c3ad8d707ba18397415905f" prot="public" static="no">
        <name>ASN1_F_B64_READ_ASN1</name>
        <initializer>209</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1223" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab299ef5df9a2485fd9f3a7ad775f6f77" prot="public" static="no">
        <name>ASN1_F_B64_WRITE_ASN1</name>
        <initializer>210</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1224" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a65a0c750a8071ecdd3be2210341b03c8" prot="public" static="no">
        <name>ASN1_F_BIO_NEW_NDEF</name>
        <initializer>208</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1225" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a30c047092a3dc8898b1eb18bb4683db1" prot="public" static="no">
        <name>ASN1_F_BITSTR_CB</name>
        <initializer>180</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1226" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a571931983b4ca166618f15d17d6ea8ab" prot="public" static="no">
        <name>ASN1_F_BN_TO_ASN1_ENUMERATED</name>
        <initializer>138</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1227" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad147a52b66fbfae5f243c0d90cd57c24" prot="public" static="no">
        <name>ASN1_F_BN_TO_ASN1_INTEGER</name>
        <initializer>139</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1228" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a575830a59751c7384a86784f23070b0c" prot="public" static="no">
        <name>ASN1_F_C2I_ASN1_BIT_STRING</name>
        <initializer>189</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1229" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae41b97fcdf7ae338522fb40ba96bc610" prot="public" static="no">
        <name>ASN1_F_C2I_ASN1_INTEGER</name>
        <initializer>194</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1230" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1befb9241d45305c11feb628dacd6a45" prot="public" static="no">
        <name>ASN1_F_C2I_ASN1_OBJECT</name>
        <initializer>196</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1231" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aae05c7fc26b744ec39f9d070e4622586" prot="public" static="no">
        <name>ASN1_F_COLLECT_DATA</name>
        <initializer>140</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1232" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a95d7072c04695d0f9a878b39e2246613" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_BIT_STRING</name>
        <initializer>141</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1233" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5cc0a7829ed09a4e86cae0b13efb9ae4" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_BOOLEAN</name>
        <initializer>142</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1234" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab281ecd4c728f3a9e2bc4fffbc5e30a6" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_BYTES</name>
        <initializer>143</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1235" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a39380c0d9cf1c99c59340f0b1fa285b2" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_GENERALIZEDTIME</name>
        <initializer>144</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1236" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4da1dc594b5e17bb53cc2ede0816d473" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_HEADER</name>
        <initializer>145</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1237" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afd08dc07458faa50a24948d3f266dddb" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_INTEGER</name>
        <initializer>146</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1238" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3d284a0a02dae770bcddc0b8518807e1" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_OBJECT</name>
        <initializer>147</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1239" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a172a629ce920cbb132bbbdc23ee17ec7" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_SET</name>
        <initializer>148</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1240" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6f44ac0b5e02d0d163416d8113890a58" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_TYPE_BYTES</name>
        <initializer>149</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1241" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a440106d3b83bb3ffbb45e1cba1f26cbf" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_UINTEGER</name>
        <initializer>150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1242" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac1a5609259fef27c33007c50e2698f9b" prot="public" static="no">
        <name>ASN1_F_D2I_ASN1_UTCTIME</name>
        <initializer>151</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1243" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a04752c272341965fbda4150ec06b0a9b" prot="public" static="no">
        <name>ASN1_F_D2I_AUTOPRIVATEKEY</name>
        <initializer>207</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1244" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5ba6c384adfb382323cdce17cc6a3455" prot="public" static="no">
        <name>ASN1_F_D2I_NETSCAPE_RSA</name>
        <initializer>152</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1245" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aaa620bc611870ba141048035cb762bcb" prot="public" static="no">
        <name>ASN1_F_D2I_NETSCAPE_RSA_2</name>
        <initializer>153</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1246" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a78154a3dbd764ee38c1bffce762fc3f2" prot="public" static="no">
        <name>ASN1_F_D2I_PRIVATEKEY</name>
        <initializer>154</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1247" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa04ded3c22733a19c342f3e9752159b6" prot="public" static="no">
        <name>ASN1_F_D2I_PUBLICKEY</name>
        <initializer>155</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1248" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afecf91790a60490c546cb98467e5442c" prot="public" static="no">
        <name>ASN1_F_D2I_RSA_NET</name>
        <initializer>200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1249" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab8427806b8e7862b17eb8866b7d76608" prot="public" static="no">
        <name>ASN1_F_D2I_RSA_NET_2</name>
        <initializer>201</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1250" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a18c3d3a7410a715f465414c6817acf9d" prot="public" static="no">
        <name>ASN1_F_D2I_X509</name>
        <initializer>156</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1251" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7ed2e28dbda06c6f574765b997b74b1b" prot="public" static="no">
        <name>ASN1_F_D2I_X509_CINF</name>
        <initializer>157</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1252" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af2801d78f5c9a338fd1731e29b52741a" prot="public" static="no">
        <name>ASN1_F_D2I_X509_PKEY</name>
        <initializer>159</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1253" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae8af3878bf08fb71c956ef7ce297784d" prot="public" static="no">
        <name>ASN1_F_I2D_ASN1_BIO_STREAM</name>
        <initializer>211</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1254" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a62e7c57d350ab7730815b986c1ab5f4b" prot="public" static="no">
        <name>ASN1_F_I2D_ASN1_SET</name>
        <initializer>188</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1255" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a987fd4bbcf4e523110f54ba1cfaa9202" prot="public" static="no">
        <name>ASN1_F_I2D_ASN1_TIME</name>
        <initializer>160</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1256" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acbef786a7401ad69f48965b6315af0fa" prot="public" static="no">
        <name>ASN1_F_I2D_DSA_PUBKEY</name>
        <initializer>161</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1257" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab4ae37d31bb677636b3f7a73bf6f0ee6" prot="public" static="no">
        <name>ASN1_F_I2D_EC_PUBKEY</name>
        <initializer>181</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1258" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a430b53c3a885c5923ff10830ca0fd0f4" prot="public" static="no">
        <name>ASN1_F_I2D_PRIVATEKEY</name>
        <initializer>163</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1259" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a28df6f79ed6bb8035d818c5f8b407f9c" prot="public" static="no">
        <name>ASN1_F_I2D_PUBLICKEY</name>
        <initializer>164</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1260" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac92ea3d04d21e1ebc5df3872d58e1156" prot="public" static="no">
        <name>ASN1_F_I2D_RSA_NET</name>
        <initializer>162</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1261" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a62d6f33aa728b32f6c100b36016508ec" prot="public" static="no">
        <name>ASN1_F_I2D_RSA_PUBKEY</name>
        <initializer>165</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1262" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a48406ad88eb1c45be636690fd6c59b9a" prot="public" static="no">
        <name>ASN1_F_LONG_C2I</name>
        <initializer>166</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1263" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7eb53f6873ad5d033eb5bd0893a7b86a" prot="public" static="no">
        <name>ASN1_F_OID_MODULE_INIT</name>
        <initializer>174</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1264" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a734e4d9504c9d78cb08b916867743d3c" prot="public" static="no">
        <name>ASN1_F_PARSE_TAGGING</name>
        <initializer>182</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1265" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1abd28ac23301933ab3eab46a77a994918" prot="public" static="no">
        <name>ASN1_F_PKCS5_PBE2_SET_IV</name>
        <initializer>167</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1266" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a8019c7b6ce4cffff54b7f44d249e9f28" prot="public" static="no">
        <name>ASN1_F_PKCS5_PBE_SET</name>
        <initializer>202</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1267" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3fd78e0ac30ed53d5130923728d9fde5" prot="public" static="no">
        <name>ASN1_F_PKCS5_PBE_SET0_ALGOR</name>
        <initializer>215</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1268" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5ca989282771cb1460c54a8171425a79" prot="public" static="no">
        <name>ASN1_F_PKCS5_PBKDF2_SET</name>
        <initializer>219</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1269" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae638d0215da51529eff8cb1b66a230a6" prot="public" static="no">
        <name>ASN1_F_SMIME_READ_ASN1</name>
        <initializer>212</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1270" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a95946c8f1f21a4d1ef1612493d911070" prot="public" static="no">
        <name>ASN1_F_SMIME_TEXT</name>
        <initializer>213</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1271" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7a4d4b6aa3c067f03d4320688b25d4ce" prot="public" static="no">
        <name>ASN1_F_X509_CINF_NEW</name>
        <initializer>168</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1272" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac35158aea3fe88217de9c90feecf9157" prot="public" static="no">
        <name>ASN1_F_X509_CRL_ADD0_REVOKED</name>
        <initializer>169</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1273" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a511ac38a236f6c14f37ba2e0d0399bff" prot="public" static="no">
        <name>ASN1_F_X509_INFO_NEW</name>
        <initializer>170</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1274" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0efdce0f7965b409f0694b438f995956" prot="public" static="no">
        <name>ASN1_F_X509_NAME_ENCODE</name>
        <initializer>203</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1275" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a7cd9353af01f2d8cda0817df90544eb2" prot="public" static="no">
        <name>ASN1_F_X509_NAME_EX_D2I</name>
        <initializer>158</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1276" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a43bf9f728f846af7d2d63fc0d78dd219" prot="public" static="no">
        <name>ASN1_F_X509_NAME_EX_NEW</name>
        <initializer>171</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1277" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a628e737d66c7e5d31084f39a5a510fa7" prot="public" static="no">
        <name>ASN1_F_X509_NEW</name>
        <initializer>172</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1278" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a233e36043c5843c425a6ae5cf6726cd7" prot="public" static="no">
        <name>ASN1_F_X509_PKEY_NEW</name>
        <initializer>173</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1279" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1ebd792d3a6918a9e9b6064d384737e2" prot="public" static="no">
        <name>ASN1_R_ADDING_OBJECT</name>
        <initializer>171</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1282" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2ec1549260a83f07fde4c5a5b5081576" prot="public" static="no">
        <name>ASN1_R_ASN1_PARSE_ERROR</name>
        <initializer>203</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1283" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a91de73b1ad701e52a28b1486269efa45" prot="public" static="no">
        <name>ASN1_R_ASN1_SIG_PARSE_ERROR</name>
        <initializer>204</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1284" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a092904618f3303fe933df4f98623516b" prot="public" static="no">
        <name>ASN1_R_AUX_ERROR</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1285" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad20f10290c6b85d54c0ff35e845de31e" prot="public" static="no">
        <name>ASN1_R_BAD_CLASS</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1286" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2c3a71a9486745fbe5f1730438fd613d" prot="public" static="no">
        <name>ASN1_R_BAD_OBJECT_HEADER</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1287" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a73e631c4de8bce52f35bfff33ee009fc" prot="public" static="no">
        <name>ASN1_R_BAD_PASSWORD_READ</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1288" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac132a77b73d08d360315f5d04870ebee" prot="public" static="no">
        <name>ASN1_R_BAD_TAG</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1289" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a329c83e03bfb14b0bbf387fc20b5e3cf" prot="public" static="no">
        <name>ASN1_R_BMPSTRING_IS_WRONG_LENGTH</name>
        <initializer>214</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1290" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af03bc3881c2ae94704ebabba0a649121" prot="public" static="no">
        <name>ASN1_R_BN_LIB</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1291" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a90748b06605e621842568510d0f01eb6" prot="public" static="no">
        <name>ASN1_R_BOOLEAN_IS_WRONG_LENGTH</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1292" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4977ce7d0afc9fb56bfbd2a5a117dba4" prot="public" static="no">
        <name>ASN1_R_BUFFER_TOO_SMALL</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1293" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa226d3d7f99fa084aea1c9e3e1516891" prot="public" static="no">
        <name>ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1294" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a99b12900f4657cb7acf5391b00c7b060" prot="public" static="no">
        <name>ASN1_R_CONTEXT_NOT_INITIALISED</name>
        <initializer>217</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1295" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa5872563bb3a5953a969a9b7411a3f5a" prot="public" static="no">
        <name>ASN1_R_DATA_IS_WRONG</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1296" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9f055bf04d9b0d6799dcdb18582e1c49" prot="public" static="no">
        <name>ASN1_R_DECODE_ERROR</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1297" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af28c5b1d86dd77155635e8e637b6b2b1" prot="public" static="no">
        <name>ASN1_R_DECODING_ERROR</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1298" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a975e244412ea7a635be71884c1f5c413" prot="public" static="no">
        <name>ASN1_R_DEPTH_EXCEEDED</name>
        <initializer>174</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1299" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0cdf651b4e87bca5300abca38a84bb18" prot="public" static="no">
        <name>ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED</name>
        <initializer>198</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1300" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a298986f6fdae73dd3c1b35ae8396e17a" prot="public" static="no">
        <name>ASN1_R_ENCODE_ERROR</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1301" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adb87a4b4cdebf8dead40dea5dcce4424" prot="public" static="no">
        <name>ASN1_R_ERROR_GETTING_TIME</name>
        <initializer>173</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1302" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6adbcc00722a72a25b8538457e86a900" prot="public" static="no">
        <name>ASN1_R_ERROR_LOADING_SECTION</name>
        <initializer>172</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1303" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aaec91d3bac461f9cc4f654e8d70c84cd" prot="public" static="no">
        <name>ASN1_R_ERROR_PARSING_SET_ELEMENT</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1304" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3d78360cd0930e3e6dc7ffa3afa8f427" prot="public" static="no">
        <name>ASN1_R_ERROR_SETTING_CIPHER_PARAMS</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1305" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acaa5c6aa2ff0627fe6ca7b6946407d21" prot="public" static="no">
        <name>ASN1_R_EXPECTING_AN_INTEGER</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1306" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a868b335938614dda9895c3b6ba330568" prot="public" static="no">
        <name>ASN1_R_EXPECTING_AN_OBJECT</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1307" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a17e018470d80a01e9ab41ca6774269b2" prot="public" static="no">
        <name>ASN1_R_EXPECTING_A_BOOLEAN</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1308" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a774af2f27816dbe058e7c66cefcd83be" prot="public" static="no">
        <name>ASN1_R_EXPECTING_A_TIME</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1309" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5bcfd01bb172d5d39e22323d8cdec23e" prot="public" static="no">
        <name>ASN1_R_EXPLICIT_LENGTH_MISMATCH</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1310" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a71fa6815a08c548ce5f52d574f3a382b" prot="public" static="no">
        <name>ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1311" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab23c6aad5f708d2e91882efde08ff72a" prot="public" static="no">
        <name>ASN1_R_FIELD_MISSING</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1312" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aab4a812287580ad59ef99aaee4491ebe" prot="public" static="no">
        <name>ASN1_R_FIRST_NUM_TOO_LARGE</name>
        <initializer>122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1313" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a90646696ee1769d12903fe84c9f1e209" prot="public" static="no">
        <name>ASN1_R_HEADER_TOO_LONG</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1314" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a0443e48decb9747e98c70e0a9e495a4c" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_BITSTRING_FORMAT</name>
        <initializer>175</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1315" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a62a40654152e97d0b2891f5130ce51f6" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_BOOLEAN</name>
        <initializer>176</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1316" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a22d4fc8707ef0f019fbc177d5d9fd387" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_CHARACTERS</name>
        <initializer>124</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1317" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad842f0fd35cd16c4b8f9dc1e4123d40c" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_FORMAT</name>
        <initializer>177</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1318" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac03834055566358fe8577f8e1d73e463" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_HEX</name>
        <initializer>178</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1319" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a26a803241bf32ae5e33d27012e03ed31" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_IMPLICIT_TAG</name>
        <initializer>179</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1320" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a25002fc8b3a2a44bc9f62570078edace" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_INTEGER</name>
        <initializer>180</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1321" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3995864a29415d83afdead2219f7ae8b" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_NESTED_TAGGING</name>
        <initializer>181</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1322" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aef64984f20554431ca620fa6bd358a8d" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_NULL</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1323" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a19c11ef726465703dc2e6b3cd1ebcbc4" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_NULL_VALUE</name>
        <initializer>182</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1324" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aedf307a41864f4686ae8bf059bd9341d" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_OBJECT</name>
        <initializer>183</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1325" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa2d60156b3d60fb8eb95e2e60cca8d59" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_OPTIONAL_ANY</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1326" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a41de4f14750422db2746a90a91dc693a" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE</name>
        <initializer>170</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1327" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3770aa5a6f6f1ac6f019bbdaab80dbff" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_TAGGED_ANY</name>
        <initializer>127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1328" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a38fa94ad6674735f3da4be751db577e3" prot="public" static="no">
        <name>ASN1_R_ILLEGAL_TIME_VALUE</name>
        <initializer>184</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1329" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac8cf3a9803c9687ddef05b425cb0c7af" prot="public" static="no">
        <name>ASN1_R_INTEGER_NOT_ASCII_FORMAT</name>
        <initializer>185</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1330" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af6ec05ae5a1fa0a29378bb53b51298e1" prot="public" static="no">
        <name>ASN1_R_INTEGER_TOO_LARGE_FOR_LONG</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1331" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aeafb8ccfa661cc8a775ddac8d6710668" prot="public" static="no">
        <name>ASN1_R_INVALID_BMPSTRING_LENGTH</name>
        <initializer>129</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1332" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a653c1411012ea016f25c71cf129e0d28" prot="public" static="no">
        <name>ASN1_R_INVALID_DIGIT</name>
        <initializer>130</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1333" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a2f611592411b7b9a7b6bb75aecc5c22f" prot="public" static="no">
        <name>ASN1_R_INVALID_MIME_TYPE</name>
        <initializer>205</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1334" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad090336c196939e6971eac643bcc6b4c" prot="public" static="no">
        <name>ASN1_R_INVALID_MODIFIER</name>
        <initializer>186</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1335" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a48eb6f07e241ffac7bd4a2b76239090e" prot="public" static="no">
        <name>ASN1_R_INVALID_NUMBER</name>
        <initializer>187</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1336" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1e0ee310a439429d06ce9f663e5414cd" prot="public" static="no">
        <name>ASN1_R_INVALID_OBJECT_ENCODING</name>
        <initializer>216</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1337" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adddf0e12e98f1001347c0bb9e9877245" prot="public" static="no">
        <name>ASN1_R_INVALID_SEPARATOR</name>
        <initializer>131</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1338" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac7f51ced02e943811742319be341bf2d" prot="public" static="no">
        <name>ASN1_R_INVALID_TIME_FORMAT</name>
        <initializer>132</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1339" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a94ba2014433ef655f4bd6909164647be" prot="public" static="no">
        <name>ASN1_R_INVALID_UNIVERSALSTRING_LENGTH</name>
        <initializer>133</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1340" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6be61b06f3e2029a837a539305daf433" prot="public" static="no">
        <name>ASN1_R_INVALID_UTF8STRING</name>
        <initializer>134</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1341" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a205d45be9ab951c99c85521c8e05413c" prot="public" static="no">
        <name>ASN1_R_IV_TOO_LARGE</name>
        <initializer>135</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1342" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a498280ce8399a62653cd6165d0d3ad8c" prot="public" static="no">
        <name>ASN1_R_LENGTH_ERROR</name>
        <initializer>136</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1343" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aefa504ccefa590fcd806590b472a81d3" prot="public" static="no">
        <name>ASN1_R_LIST_ERROR</name>
        <initializer>188</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1344" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a13967625f2c9621c5350aa10cbf96189" prot="public" static="no">
        <name>ASN1_R_MIME_NO_CONTENT_TYPE</name>
        <initializer>206</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1345" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3a15226bea76952228dc5607b501e20f" prot="public" static="no">
        <name>ASN1_R_MIME_PARSE_ERROR</name>
        <initializer>207</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1346" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a880d3cc94760d04d8792b0b64af76e24" prot="public" static="no">
        <name>ASN1_R_MIME_SIG_PARSE_ERROR</name>
        <initializer>208</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1347" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a456b8ccdc87e230cbd7f6184729dbca0" prot="public" static="no">
        <name>ASN1_R_MISSING_EOC</name>
        <initializer>137</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1348" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a626efa0d77c04b406ed8cf0dc9262e4e" prot="public" static="no">
        <name>ASN1_R_MISSING_SECOND_NUMBER</name>
        <initializer>138</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1349" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a35ed59d1ea893c905e2885f7e3715974" prot="public" static="no">
        <name>ASN1_R_MISSING_VALUE</name>
        <initializer>189</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1350" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae41485ffe52ad8dcfde03a560ec4d748" prot="public" static="no">
        <name>ASN1_R_MSTRING_NOT_UNIVERSAL</name>
        <initializer>139</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1351" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a496e19a6e03cc412301128372408ce42" prot="public" static="no">
        <name>ASN1_R_MSTRING_WRONG_TAG</name>
        <initializer>140</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1352" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae62ddbbd63c7e58cd32f0b52e2cd9f2e" prot="public" static="no">
        <name>ASN1_R_NESTED_ASN1_STRING</name>
        <initializer>197</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1353" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aacee32066fef3442e83f1bcc83cc21d8" prot="public" static="no">
        <name>ASN1_R_NON_HEX_CHARACTERS</name>
        <initializer>141</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1354" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab99cbdc536273bc5dfd909dcd01ca783" prot="public" static="no">
        <name>ASN1_R_NOT_ASCII_FORMAT</name>
        <initializer>190</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1355" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a92ddc54f82c7433417e7552349624fd3" prot="public" static="no">
        <name>ASN1_R_NOT_ENOUGH_DATA</name>
        <initializer>142</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1356" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a6202956f43a336fd57335d65ead0bdc0" prot="public" static="no">
        <name>ASN1_R_NO_CONTENT_TYPE</name>
        <initializer>209</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1357" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a59019461ac3268578e495ae932b95008" prot="public" static="no">
        <name>ASN1_R_NO_DEFAULT_DIGEST</name>
        <initializer>201</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1358" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1affab77fedf7cdcae035468eb29b15639" prot="public" static="no">
        <name>ASN1_R_NO_MATCHING_CHOICE_TYPE</name>
        <initializer>143</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1359" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ac394c89a38ed54ec03626ba476425303" prot="public" static="no">
        <name>ASN1_R_NO_MULTIPART_BODY_FAILURE</name>
        <initializer>210</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1360" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a81bc50cc45d751e323a6e86e6d078c47" prot="public" static="no">
        <name>ASN1_R_NO_MULTIPART_BOUNDARY</name>
        <initializer>211</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1361" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a603ff35b058228863e183aba7c24880f" prot="public" static="no">
        <name>ASN1_R_NO_SIG_CONTENT_TYPE</name>
        <initializer>212</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1362" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a357a04460fa5b233e6d025931bb90306" prot="public" static="no">
        <name>ASN1_R_NULL_IS_WRONG_LENGTH</name>
        <initializer>144</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1363" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9953bbb8c68be121f6ea416cf2ac0681" prot="public" static="no">
        <name>ASN1_R_OBJECT_NOT_ASCII_FORMAT</name>
        <initializer>191</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1364" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a298f84c669a61af453a8726e6442ec66" prot="public" static="no">
        <name>ASN1_R_ODD_NUMBER_OF_CHARS</name>
        <initializer>145</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1365" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a77362b8b31716435842f4b54515e06a2" prot="public" static="no">
        <name>ASN1_R_PRIVATE_KEY_HEADER_MISSING</name>
        <initializer>146</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1366" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a9636e15bd172b8830c34d0b7409b7063" prot="public" static="no">
        <name>ASN1_R_SECOND_NUMBER_TOO_LARGE</name>
        <initializer>147</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1367" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1afd42c30cec5e83563977d9076778caf2" prot="public" static="no">
        <name>ASN1_R_SEQUENCE_LENGTH_MISMATCH</name>
        <initializer>148</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1368" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aef4d4434b995358b18a75943225bf42a" prot="public" static="no">
        <name>ASN1_R_SEQUENCE_NOT_CONSTRUCTED</name>
        <initializer>149</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1369" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a45a1eddf18b895d0f90d4040e64407e1" prot="public" static="no">
        <name>ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG</name>
        <initializer>192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1370" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a8dc37e128dd96cca2a65ebf242fb0071" prot="public" static="no">
        <name>ASN1_R_SHORT_LINE</name>
        <initializer>150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1371" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a027805225f079c8c91eaa1b92ffb8798" prot="public" static="no">
        <name>ASN1_R_SIG_INVALID_MIME_TYPE</name>
        <initializer>213</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1372" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1acd77664caec7458c28e617989af7b85c" prot="public" static="no">
        <name>ASN1_R_STREAMING_NOT_SUPPORTED</name>
        <initializer>202</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1373" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa410b51d9ed009e709f025c373592864" prot="public" static="no">
        <name>ASN1_R_STRING_TOO_LONG</name>
        <initializer>151</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1374" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5561f40679c342f71a62e65401a10fec" prot="public" static="no">
        <name>ASN1_R_STRING_TOO_SHORT</name>
        <initializer>152</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1375" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a3f41cc7d2e45bff97ce07d1a820624e1" prot="public" static="no">
        <name>ASN1_R_TAG_VALUE_TOO_HIGH</name>
        <initializer>153</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1376" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a205f693352e76b0ddc3fa321788f444d" prot="public" static="no">
        <name>ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD</name>
        <initializer>154</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1377" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ad0392d7de44ab901931d04e89e96b9f2" prot="public" static="no">
        <name>ASN1_R_TIME_NOT_ASCII_FORMAT</name>
        <initializer>193</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1378" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a06c3caa5ea5d48d5946484a5b499b846" prot="public" static="no">
        <name>ASN1_R_TOO_LONG</name>
        <initializer>155</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1379" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ab9e5797b79fbb3b4c6a47e5e19e9e0c2" prot="public" static="no">
        <name>ASN1_R_TYPE_NOT_CONSTRUCTED</name>
        <initializer>156</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1380" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adaac515f55ad7fbcff8ad88da8a23ede" prot="public" static="no">
        <name>ASN1_R_UNABLE_TO_DECODE_RSA_KEY</name>
        <initializer>157</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1381" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a94edaf673df9bbb04d43e336a0f57f02" prot="public" static="no">
        <name>ASN1_R_UNABLE_TO_DECODE_RSA_PRIVATE_KEY</name>
        <initializer>158</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1382" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5a6e8c3f70b7fffc7d65051c2920dff1" prot="public" static="no">
        <name>ASN1_R_UNEXPECTED_EOC</name>
        <initializer>159</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1383" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a1482e7f5df4012ec85b04e8b1236fc04" prot="public" static="no">
        <name>ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH</name>
        <initializer>215</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1384" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a24d9fdcf96443deaf39345625c870791" prot="public" static="no">
        <name>ASN1_R_UNKNOWN_FORMAT</name>
        <initializer>160</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1385" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a4b8b1b84fdad4d642a23e3dbe8f2647b" prot="public" static="no">
        <name>ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM</name>
        <initializer>161</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1386" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1ae04e896adf88bc3d75ab13cffd3c4f0a" prot="public" static="no">
        <name>ASN1_R_UNKNOWN_OBJECT_TYPE</name>
        <initializer>162</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1387" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a811ce5d5199da634afed80d0d4ee7257" prot="public" static="no">
        <name>ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE</name>
        <initializer>163</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1388" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aa579a70bcbd31418b943053cd9048401" prot="public" static="no">
        <name>ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM</name>
        <initializer>199</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1389" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1af7327651c76c4daf3ec32acea5286951" prot="public" static="no">
        <name>ASN1_R_UNKNOWN_TAG</name>
        <initializer>194</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1390" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a5385a10b581ac98e0b36befe916e2453" prot="public" static="no">
        <name>ASN1_R_UNKOWN_FORMAT</name>
        <initializer>195</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1391" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a156107b76beaa8b20f70551cc5266744" prot="public" static="no">
        <name>ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE</name>
        <initializer>164</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1392" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a56be4faf3add0a0fbbf4702bd712da57" prot="public" static="no">
        <name>ASN1_R_UNSUPPORTED_CIPHER</name>
        <initializer>165</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1393" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a84ed3f1b0b4cec7736438649a9fe0743" prot="public" static="no">
        <name>ASN1_R_UNSUPPORTED_ENCRYPTION_ALGORITHM</name>
        <initializer>166</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1394" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1adde7bb6e347c876a5b408b9c0d78fe1c" prot="public" static="no">
        <name>ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE</name>
        <initializer>167</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1395" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a807004c9eb1fc1c756a03ec3596cdd27" prot="public" static="no">
        <name>ASN1_R_UNSUPPORTED_TYPE</name>
        <initializer>196</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1396" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a997c607aefd18c8b4ab30ea6f85b0378" prot="public" static="no">
        <name>ASN1_R_WRONG_PUBLIC_KEY_TYPE</name>
        <initializer>200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1397" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1a77dcb045839bb0fb5f8c113a44057acd" prot="public" static="no">
        <name>ASN1_R_WRONG_TAG</name>
        <initializer>168</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1398" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1_8h_1aff9aec77f602bf7bbca17d34f5d8907d" prot="public" static="no">
        <name>ASN1_R_WRONG_TYPE</name>
        <initializer>169</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1399" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1399" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="asn1_8h_1a6a14f1cca2325194cc8d751af5da3fb0" prot="public" static="no">
        <type>struct <ref refid="structasn1__ctx__st" kindref="compound">asn1_ctx_st</ref></type>
        <definition>typedef struct asn1_ctx_st  ASN1_CTX</definition>
        <argsstring></argsstring>
        <name>ASN1_CTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1ad00c7d3a8bc3bb83cff891611f2538e8" prot="public" static="no">
        <type>struct <ref refid="structasn1__const__ctx__st" kindref="compound">asn1_const_ctx_st</ref></type>
        <definition>typedef struct asn1_const_ctx_st  ASN1_const_CTX</definition>
        <argsstring></argsstring>
        <name>ASN1_const_CTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1ae10c08e4e6b23f67a39b2add932ec48f" prot="public" static="no">
        <type>struct <ref refid="structasn1__object__st" kindref="compound">asn1_object_st</ref></type>
        <definition>typedef struct asn1_object_st  ASN1_OBJECT</definition>
        <argsstring></argsstring>
        <name>ASN1_OBJECT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1ab4e998bfb21dbcf5af17f61035295946" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" kindref="compound">ASN1_ENCODING_st</ref></type>
        <definition>typedef struct ASN1_ENCODING_st  ASN1_ENCODING</definition>
        <argsstring></argsstring>
        <name>ASN1_ENCODING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1a4570c390d8e0f2abd81c0232007c101e" prot="public" static="no">
        <type>struct <ref refid="structasn1__string__table__st" kindref="compound">asn1_string_table_st</ref></type>
        <definition>typedef struct asn1_string_table_st  ASN1_STRING_TABLE</definition>
        <argsstring></argsstring>
        <name>ASN1_STRING_TABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1a6c952ee1ae445fda1ca8e1761bbd93ac" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE_st</ref></type>
        <definition>typedef struct ASN1_TEMPLATE_st ASN1_TEMPLATE</definition>
        <argsstring></argsstring>
        <name>ASN1_TEMPLATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="82" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1a71873837864aac1d3532354b7be79222" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___t_l_c__st" kindref="compound">ASN1_TLC_st</ref></type>
        <definition>typedef struct ASN1_TLC_st ASN1_TLC</definition>
        <argsstring></argsstring>
        <name>ASN1_TLC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="82" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1aaa5ffa26b0bbba094a9ee353b8ade6ab" prot="public" static="no">
        <type>struct ASN1_VALUE_st</type>
        <definition>typedef struct ASN1_VALUE_st ASN1_VALUE</definition>
        <argsstring></argsstring>
        <name>ASN1_VALUE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="82" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1a66f9dbfa70a439af388cb82e0c764944" prot="public" static="no">
        <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref></type>
        <definition>typedef const ASN1_ITEM ASN1_ITEM_EXP</definition>
        <argsstring></argsstring>
        <name>ASN1_ITEM_EXP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="402" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1a7895e03d9fee2bc4963faf2a31a9439e" prot="public" static="no">
        <type>struct <ref refid="structasn1__type__st" kindref="compound">asn1_type_st</ref></type>
        <definition>typedef struct asn1_type_st  ASN1_TYPE</definition>
        <argsstring></argsstring>
        <name>ASN1_TYPE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="549" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1ace9edf684f5a7c5b263aa856e73abc11" prot="public" static="no">
        <type>ASN1_SET_ANY struct <ref refid="struct_n_e_t_s_c_a_p_e___x509__st" kindref="compound">NETSCAPE_X509_st</ref></type>
        <definition>typedef ASN1_SET_ANY struct NETSCAPE_X509_st  NETSCAPE_X509</definition>
        <argsstring></argsstring>
        <name>NETSCAPE_X509</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="563" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1_8h_1a545a07c078ca97c193f84d53b4334538" prot="public" static="no">
        <type>struct <ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME_st</ref></type>
        <definition>typedef struct BIT_STRING_BITNAME_st  BIT_STRING_BITNAME</definition>
        <argsstring></argsstring>
        <name>BIT_STRING_BITNAME</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="570" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="asn1_8h_1a3d54702d866c88bc4b3a88e68fb986d9" prot="public" static="no" mutable="no">
        <type>DIRECTORYSTRING time_t</type>
        <definition>DIRECTORYSTRING time_t t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="886" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asn1_8h_1a3b4c67b77785d8fb51a21fe9832d4822" prot="public" static="no" mutable="no">
        <type>const unsigned char **</type>
        <definition>const unsigned char** pp</definition>
        <argsstring></argsstring>
        <name>pp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="897" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asn1_8h_1a5a2d57a92488e64c730cabc247c9d5b5" prot="public" static="no" mutable="no">
        <type>const unsigned char long</type>
        <definition>const unsigned char long length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="898" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asn1_8h_1abe2690550848716d3c6175c7a825179f" prot="public" static="no" mutable="no">
        <type>const unsigned char long d2i_of_void *</type>
        <definition>int d2i_of_void * d2i</definition>
        <argsstring></argsstring>
        <name>d2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="898" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asn1_8h_1a942bd852ec8360a1803ceda0b1029986" prot="public" static="no" mutable="no">
        <type>const unsigned char long d2i_of_void void(*</type>
        <definition>int d2i_of_void void(* free_func)(OPENSSL_BLOCK))</definition>
        <argsstring>)(OPENSSL_BLOCK)</argsstring>
        <name>free_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="899" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asn1_8h_1ac42bfc5b029eb2f1703849f665194537" prot="public" static="no" mutable="no">
        <type>const unsigned char long d2i_of_void void(*) in</type>
        <definition>const unsigned char long d2i_of_void void(*) in ex_tag) </definition>
        <argsstring>)</argsstring>
        <name>ex_tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="899" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asn1_8h_1ac65cedb7bc785e86cc1fe539d1d31120" prot="public" static="no" mutable="no">
        <type>const unsigned char long d2i_of_void void(*) int in</type>
        <definition>const unsigned char long d2i_of_void void(*) int in ex_class) </definition>
        <argsstring>)</argsstring>
        <name>ex_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="900" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asn1_8h_1afed088663f8704004425cdae2120b9b3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1052" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1.h" bodystart="1052" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="asn1_8h_1a79f5ee2b79351b0f9e93c42aa400a1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TYPEDEF_D2I2D_OF</definition>
        <argsstring>(void)</argsstring>
        <name>TYPEDEF_D2I2D_OF</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a18c63ecc15f9b95b0ccae0803ccc5cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef STACK_OF</definition>
        <argsstring>(ASN1_TYPE) ASN1_SEQUENCE_ANY</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a725c2375d46e3db476b32bf8a97d1774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_ASN1_ENCODE_FUNCTIONS_const</definition>
        <argsstring>(ASN1_SEQUENCE_ANY, ASN1_SEQUENCE_ANY) DECLARE_ASN1_ENCODE_FUNCTIONS_const(ASN1_SEQUENCE_ANY</argsstring>
        <name>DECLARE_ASN1_ENCODE_FUNCTIONS_const</name>
        <param>
          <type>ASN1_SEQUENCE_ANY</type>
        </param>
        <param>
          <type>ASN1_SEQUENCE_ANY</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a09a4ac3c8293ed60791ea6be0c63b512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_ASN1_FUNCTIONS_fname</definition>
        <argsstring>(ASN1_TYPE, ASN1_ANY, ASN1_TYPE) int ASN1_TYPE_get(ASN1_TYPE *a)</argsstring>
        <name>DECLARE_ASN1_FUNCTIONS_fname</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref></type>
        </param>
        <param>
          <type>ASN1_ANY</type>
        </param>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="774" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a98c2c27543d3a203f1e8008d1170bf6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_TYPE_set</definition>
        <argsstring>(ASN1_TYPE *a, int type, void *value)</argsstring>
        <name>ASN1_TYPE_set</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="777" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a78810d51eb9e49ec8e7740d1e223f6a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TYPE_set1</definition>
        <argsstring>(ASN1_TYPE *a, int type, const void *value)</argsstring>
        <name>ASN1_TYPE_set1</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="778" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af1065b7b588f63909f4a76e9eb077d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TYPE_cmp</definition>
        <argsstring>(ASN1_TYPE *a, ASN1_TYPE *b)</argsstring>
        <name>ASN1_TYPE_cmp</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="779" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a75264a9e851b321f2e8d1e125948967f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* ASN1_OBJECT_new</definition>
        <argsstring>(void)</argsstring>
        <name>ASN1_OBJECT_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ad2c99806f355ca34ae6af600b5fcb055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_OBJECT_free</definition>
        <argsstring>(ASN1_OBJECT *a)</argsstring>
        <name>ASN1_OBJECT_free</name>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="782" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a943b0e481060210b0b95639f466a3f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_ASN1_OBJECT</definition>
        <argsstring>(ASN1_OBJECT *a, unsigned char **pp)</argsstring>
        <name>i2d_ASN1_OBJECT</name>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a380e9548d1255ecec10744b798162bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* c2i_ASN1_OBJECT</definition>
        <argsstring>(ASN1_OBJECT **a, const unsigned char **pp, long length)</argsstring>
        <name>c2i_ASN1_OBJECT</name>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae3a06734b9f93f49655a6102703b3972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* d2i_ASN1_OBJECT</definition>
        <argsstring>(ASN1_OBJECT **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_ASN1_OBJECT</name>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="786" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af1e7a4a4dec12e0a71d4609bcac6e276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* ASN1_STRING_new</definition>
        <argsstring>(void)</argsstring>
        <name>ASN1_STRING_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="794" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1abab6c6c7b24147dada0a8ce77fdebe95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_STRING_free</definition>
        <argsstring>(ASN1_STRING *a)</argsstring>
        <name>ASN1_STRING_free</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a63d50d2a45b9743786df314cb856c55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_copy</definition>
        <argsstring>(ASN1_STRING *dst, const ASN1_STRING *str)</argsstring>
        <name>ASN1_STRING_copy</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a2537a429bafad3dac54a01d4bea4a0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* ASN1_STRING_dup</definition>
        <argsstring>(const ASN1_STRING *a)</argsstring>
        <name>ASN1_STRING_dup</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="797" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a618922f2aa1b7349a535d99f3365df3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* ASN1_STRING_type_new</definition>
        <argsstring>(int type)</argsstring>
        <name>ASN1_STRING_type_new</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a301393c164d61c40976d2971a358164f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_cmp</definition>
        <argsstring>(const ASN1_STRING *a, const ASN1_STRING *b)</argsstring>
        <name>ASN1_STRING_cmp</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="799" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ac3d9dac6e1a10d91c46e2d9f30f9c225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_set</definition>
        <argsstring>(ASN1_STRING *str, const void *data, int len)</argsstring>
        <name>ASN1_STRING_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="802" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1add085933f3a303f7c59acf0e9b072d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_STRING_set0</definition>
        <argsstring>(ASN1_STRING *str, void *data, int len)</argsstring>
        <name>ASN1_STRING_set0</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="803" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae2d82f3a87e5f1d3ed51510a298a47fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_length</definition>
        <argsstring>(const ASN1_STRING *x)</argsstring>
        <name>ASN1_STRING_length</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="804" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a190e875ad4ce5fa949c0adf4bcc893da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_STRING_length_set</definition>
        <argsstring>(ASN1_STRING *x, int n)</argsstring>
        <name>ASN1_STRING_length_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="805" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a35fb4857278c3c206739ff4a84613c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_type</definition>
        <argsstring>(ASN1_STRING *x)</argsstring>
        <name>ASN1_STRING_type</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="806" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a33e6aa1a640261cce13033c26f1a7e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* ASN1_STRING_data</definition>
        <argsstring>(ASN1_STRING *x)</argsstring>
        <name>ASN1_STRING_data</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="807" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a6a2dde1d71a1ae0fd6da13b095969b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2c_ASN1_BIT_STRING</definition>
        <argsstring>(ASN1_BIT_STRING *a, unsigned char **pp)</argsstring>
        <name>i2c_ASN1_BIT_STRING</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae73dfbdb0c7bbf3ebf96932fd23fedec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
        <definition>ASN1_BIT_STRING* c2i_ASN1_BIT_STRING</definition>
        <argsstring>(ASN1_BIT_STRING **a, const unsigned char **pp, long length)</argsstring>
        <name>c2i_ASN1_BIT_STRING</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="811" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ad2181753d93adcfe8777d6acf4cc3bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_BIT_STRING_set</definition>
        <argsstring>(ASN1_BIT_STRING *a, unsigned char *d, int length)</argsstring>
        <name>ASN1_BIT_STRING_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="813" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1afd6fae4211f32f8cafe3d3c1ea0c09e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_BIT_STRING_set_bit</definition>
        <argsstring>(ASN1_BIT_STRING *a, int n, int value)</argsstring>
        <name>ASN1_BIT_STRING_set_bit</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="815" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9b3c47189c219f7121d6989f9f205c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_BIT_STRING_get_bit</definition>
        <argsstring>(ASN1_BIT_STRING *a, int n)</argsstring>
        <name>ASN1_BIT_STRING_get_bit</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="816" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ab558789e40afca8a60946be903d235c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_BIT_STRING_check</definition>
        <argsstring>(ASN1_BIT_STRING *a, unsigned char *flags, int flags_len)</argsstring>
        <name>ASN1_BIT_STRING_check</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ac47a03c4f8662da48b86c5084e12b9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_BIT_STRING_name_print</definition>
        <argsstring>(BIO *out, ASN1_BIT_STRING *bs, BIT_STRING_BITNAME *tbl, int indent)</argsstring>
        <name>ASN1_BIT_STRING_name_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>bs</declname>
        </param>
        <param>
          <type><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME</ref> *</type>
          <declname>tbl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="821" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a74861dfa6820e0c8cc4ffa5b53601806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_BIT_STRING_num_asc</definition>
        <argsstring>(char *name, BIT_STRING_BITNAME *tbl)</argsstring>
        <name>ASN1_BIT_STRING_num_asc</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME</ref> *</type>
          <declname>tbl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="824" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af324c9c445f91375ec11e08f498e4910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_BIT_STRING_set_asc</definition>
        <argsstring>(ASN1_BIT_STRING *bs, char *name, int value, BIT_STRING_BITNAME *tbl)</argsstring>
        <name>ASN1_BIT_STRING_set_asc</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>bs</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME</ref> *</type>
          <declname>tbl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="825" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af94b04b63c7e48d6cb648be2d6c56b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_ASN1_BOOLEAN</definition>
        <argsstring>(int a, unsigned char **pp)</argsstring>
        <name>i2d_ASN1_BOOLEAN</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a0ee64a152cbfcba45f0de3db67a4b599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int d2i_ASN1_BOOLEAN</definition>
        <argsstring>(int *a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_ASN1_BOOLEAN</name>
        <param>
          <type>int *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="829" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9711d3ccf97d5f55358a06088f905bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2c_ASN1_INTEGER</definition>
        <argsstring>(ASN1_INTEGER *a, unsigned char **pp)</argsstring>
        <name>i2c_ASN1_INTEGER</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1afc9008fd508da750e42e3ec0b997b163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
        <definition>ASN1_INTEGER* c2i_ASN1_INTEGER</definition>
        <argsstring>(ASN1_INTEGER **a, const unsigned char **pp, long length)</argsstring>
        <name>c2i_ASN1_INTEGER</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="833" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a82ff821fd248c4fe54d055361511790d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
        <definition>ASN1_INTEGER* d2i_ASN1_UINTEGER</definition>
        <argsstring>(ASN1_INTEGER **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_ASN1_UINTEGER</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="835" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af3f2be162134ed4ea915088d042194b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
        <definition>ASN1_INTEGER* ASN1_INTEGER_dup</definition>
        <argsstring>(const ASN1_INTEGER *x)</argsstring>
        <name>ASN1_INTEGER_dup</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="837" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aad8c36259e70b4071b2d90ee9e85ebf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_INTEGER_cmp</definition>
        <argsstring>(const ASN1_INTEGER *x, const ASN1_INTEGER *y)</argsstring>
        <name>ASN1_INTEGER_cmp</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="838" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a69bbb36d31a47de9baa9f668f7c7fcfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_UTCTIME_check</definition>
        <argsstring>(ASN1_UTCTIME *a)</argsstring>
        <name>ASN1_UTCTIME_check</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="842" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a54b0a4e2cb3094f682061d603ddf750e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
        <definition>ASN1_UTCTIME* ASN1_UTCTIME_set</definition>
        <argsstring>(ASN1_UTCTIME *s, time_t t)</argsstring>
        <name>ASN1_UTCTIME_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="843" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a30e49ea58c976b94926f8186ccdfb1b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
        <definition>ASN1_UTCTIME* ASN1_UTCTIME_adj</definition>
        <argsstring>(ASN1_UTCTIME *s, time_t t, int offset_day, long offset_sec)</argsstring>
        <name>ASN1_UTCTIME_adj</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_day</declname>
        </param>
        <param>
          <type>long</type>
          <declname>offset_sec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="844" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a0b093f245da84c6a1b0217bb10a16c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_UTCTIME_set_string</definition>
        <argsstring>(ASN1_UTCTIME *s, const char *str)</argsstring>
        <name>ASN1_UTCTIME_set_string</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="846" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af263839a512c3c618058dd2198c3cf43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_UTCTIME_cmp_time_t</definition>
        <argsstring>(const ASN1_UTCTIME *s, time_t t)</argsstring>
        <name>ASN1_UTCTIME_cmp_time_t</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1affc195305df7d9577f8d46f89b107b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_GENERALIZEDTIME_check</definition>
        <argsstring>(ASN1_GENERALIZEDTIME *a)</argsstring>
        <name>ASN1_GENERALIZEDTIME_check</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af32ba24a6785ca0a4ac037d0884044f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
        <definition>ASN1_GENERALIZEDTIME* ASN1_GENERALIZEDTIME_set</definition>
        <argsstring>(ASN1_GENERALIZEDTIME *s, time_t t)</argsstring>
        <name>ASN1_GENERALIZEDTIME_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="853" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a83d4235e51dd9864abb26e058cee20a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
        <definition>ASN1_GENERALIZEDTIME* ASN1_GENERALIZEDTIME_adj</definition>
        <argsstring>(ASN1_GENERALIZEDTIME *s, time_t t, int offset_day, long offset_sec)</argsstring>
        <name>ASN1_GENERALIZEDTIME_adj</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_day</declname>
        </param>
        <param>
          <type>long</type>
          <declname>offset_sec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="854" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ad3e7e968aeedcf9ae982430c674ae97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_GENERALIZEDTIME_set_string</definition>
        <argsstring>(ASN1_GENERALIZEDTIME *s, const char *str)</argsstring>
        <name>ASN1_GENERALIZEDTIME_set_string</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a1fd5713a00118909a431ce17b505ec52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
        <definition>ASN1_OCTET_STRING* ASN1_OCTET_STRING_dup</definition>
        <argsstring>(const ASN1_OCTET_STRING *a)</argsstring>
        <name>ASN1_OCTET_STRING_dup</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9a5442543cd9a35a1bb6c50c21f890c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_OCTET_STRING_cmp</definition>
        <argsstring>(const ASN1_OCTET_STRING *a, const ASN1_OCTET_STRING *b)</argsstring>
        <name>ASN1_OCTET_STRING_cmp</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1acc9d962b6f5c7a584cfbeb5541416d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_OCTET_STRING_set</definition>
        <argsstring>(ASN1_OCTET_STRING *str, const unsigned char *data, int len)</argsstring>
        <name>ASN1_OCTET_STRING_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="861" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a068200ae693bfec1c9a3995bc1d595fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UTF8_getc</definition>
        <argsstring>(const unsigned char *str, int len, unsigned long *val)</argsstring>
        <name>UTF8_getc</name>
        <param>
          <type>const unsigned char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a5e3bf91569ebdf293d264a4233ca6573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UTF8_putc</definition>
        <argsstring>(unsigned char *str, int len, unsigned long value)</argsstring>
        <name>UTF8_putc</name>
        <param>
          <type>unsigned char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="870" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aac3102dda021bb341d9f4619c075ad4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_ASN1_FUNCTIONS_name</definition>
        <argsstring>(ASN1_STRING, ASN1_PRINTABLE) DECLARE_ASN1_FUNCTIONS_name(ASN1_STRING</argsstring>
        <name>DECLARE_ASN1_FUNCTIONS_name</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref></type>
        </param>
        <param>
          <type>ASN1_PRINTABLE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="872" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a112672e8340d35ab29327427b4485785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DIRECTORYSTRING</type>
        <definition>DIRECTORYSTRING DECLARE_ASN1_FUNCTIONS_name</definition>
        <argsstring>(ASN1_STRING, DISPLAYTEXT) ASN1_TIME *ASN1_TIME_set(ASN1_TIME *s</argsstring>
        <name>DECLARE_ASN1_FUNCTIONS_name</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref></type>
        </param>
        <param>
          <type>DISPLAYTEXT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="875" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a094fdf1e359fd79f63ddc80259d95185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
        <definition>ASN1_TIME* ASN1_TIME_adj</definition>
        <argsstring>(ASN1_TIME *s, time_t t, int offset_day, long offset_sec)</argsstring>
        <name>ASN1_TIME_adj</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_day</declname>
        </param>
        <param>
          <type>long</type>
          <declname>offset_sec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="887" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a338d125d42b1b2f534a6fe0d4ddb0339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TIME_check</definition>
        <argsstring>(ASN1_TIME *t)</argsstring>
        <name>ASN1_TIME_check</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="889" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae6a253a24e0e687fbdf35d8198752e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
        <definition>ASN1_GENERALIZEDTIME* ASN1_TIME_to_generalizedtime</definition>
        <argsstring>(ASN1_TIME *t, ASN1_GENERALIZEDTIME **out)</argsstring>
        <name>ASN1_TIME_to_generalizedtime</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="890" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a1e7408517b55afd9c285804c51278d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TIME_set_string</definition>
        <argsstring>(ASN1_TIME *s, const char *str)</argsstring>
        <name>ASN1_TIME_set_string</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="891" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aa77469f13ff2be2ca354de50db5d45a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_ASN1_SET</definition>
        <argsstring>(STACK_OF(OPENSSL_BLOCK) *a, unsigned char **pp, i2d_of_void *i2d, int ex_tag, int ex_class, int is_set)</argsstring>
        <name>i2d_ASN1_SET</name>
        <param>
          <type>STACK_OF(OPENSSL_BLOCK) *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ex_tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ex_class</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="893" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af0eac8187587ee93eef56027fe79837f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(OPENSSL_BLOCK) *d2i_ASN1_SET(STACK_OF(OPENSSL_BLOCK) **a</argsstring>
        <name>STACK_OF</name>
        <param>
          <type>OPENSSL_BLOCK</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="896" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a557d9f72eecde7a27fc5b4e23646e328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2a_ASN1_INTEGER</definition>
        <argsstring>(BIO *bp, ASN1_INTEGER *a)</argsstring>
        <name>i2a_ASN1_INTEGER</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="903" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a5fb9d1f823ebff363d2b54b6a4065106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int a2i_ASN1_INTEGER</definition>
        <argsstring>(BIO *bp, ASN1_INTEGER *bs, char *buf, int size)</argsstring>
        <name>a2i_ASN1_INTEGER</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>bs</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="904" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a26e05bf8e97113a91702fdf5a911f30e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2a_ASN1_ENUMERATED</definition>
        <argsstring>(BIO *bp, ASN1_ENUMERATED *a)</argsstring>
        <name>i2a_ASN1_ENUMERATED</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="905" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a3ff1390309140e453737dcc760b63d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int a2i_ASN1_ENUMERATED</definition>
        <argsstring>(BIO *bp, ASN1_ENUMERATED *bs, char *buf, int size)</argsstring>
        <name>a2i_ASN1_ENUMERATED</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *</type>
          <declname>bs</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="906" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9ab481e8e603f42dbcf6f256bdea39a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2a_ASN1_OBJECT</definition>
        <argsstring>(BIO *bp, ASN1_OBJECT *a)</argsstring>
        <name>i2a_ASN1_OBJECT</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="907" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ac435b75892a92de77039690353a89259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int a2i_ASN1_STRING</definition>
        <argsstring>(BIO *bp, ASN1_STRING *bs, char *buf, int size)</argsstring>
        <name>a2i_ASN1_STRING</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>bs</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a7ba53cb7f4058117943ee39d642d0941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2a_ASN1_STRING</definition>
        <argsstring>(BIO *bp, ASN1_STRING *a, int type)</argsstring>
        <name>i2a_ASN1_STRING</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="909" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a3d2a7608b801ef1b5cd070885fd25def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2t_ASN1_OBJECT</definition>
        <argsstring>(char *buf, int buf_len, ASN1_OBJECT *a)</argsstring>
        <name>i2t_ASN1_OBJECT</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buf_len</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="911" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a21c83cd9c45fd9fd6f1b7612b1c14220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int a2d_ASN1_OBJECT</definition>
        <argsstring>(unsigned char *out, int olen, const char *buf, int num)</argsstring>
        <name>a2d_ASN1_OBJECT</name>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="913" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a1eefe35f951e01034f8431ab617b5dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* ASN1_OBJECT_create</definition>
        <argsstring>(int nid, unsigned char *data, int len, const char *sn, const char *ln)</argsstring>
        <name>ASN1_OBJECT_create</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="914" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a5716313a70738f4ab0c80c7d19c5f2d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_INTEGER_set</definition>
        <argsstring>(ASN1_INTEGER *a, long v)</argsstring>
        <name>ASN1_INTEGER_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="917" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a393b205ec62b7ebe476c20c523e44d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ASN1_INTEGER_get</definition>
        <argsstring>(const ASN1_INTEGER *a)</argsstring>
        <name>ASN1_INTEGER_get</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="918" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a289119e8c8fe02091bad818799c7c6d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
        <definition>ASN1_INTEGER* BN_to_ASN1_INTEGER</definition>
        <argsstring>(const BIGNUM *bn, ASN1_INTEGER *ai)</argsstring>
        <name>BN_to_ASN1_INTEGER</name>
        <param>
          <type>const <ref refid="structbignum__st" kindref="compound">BIGNUM</ref> *</type>
          <declname>bn</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>ai</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="919" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aa3aeff33d7539c47d2cae804e9ed3201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbignum__st" kindref="compound">BIGNUM</ref> *</type>
        <definition>BIGNUM* ASN1_INTEGER_to_BN</definition>
        <argsstring>(const ASN1_INTEGER *ai, BIGNUM *bn)</argsstring>
        <name>ASN1_INTEGER_to_BN</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>ai</declname>
        </param>
        <param>
          <type><ref refid="structbignum__st" kindref="compound">BIGNUM</ref> *</type>
          <declname>bn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a6ff974d35089d835efddcecb33c64a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_ENUMERATED_set</definition>
        <argsstring>(ASN1_ENUMERATED *a, long v)</argsstring>
        <name>ASN1_ENUMERATED_set</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="922" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a7d669c8810e3d5c88f7410f32204884d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ASN1_ENUMERATED_get</definition>
        <argsstring>(ASN1_ENUMERATED *a)</argsstring>
        <name>ASN1_ENUMERATED_get</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a693ad4236497f2508073ce9456409ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *</type>
        <definition>ASN1_ENUMERATED* BN_to_ASN1_ENUMERATED</definition>
        <argsstring>(BIGNUM *bn, ASN1_ENUMERATED *ai)</argsstring>
        <name>BN_to_ASN1_ENUMERATED</name>
        <param>
          <type><ref refid="structbignum__st" kindref="compound">BIGNUM</ref> *</type>
          <declname>bn</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *</type>
          <declname>ai</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="924" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aaeb114eeb69289196b1de6f822dbeae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbignum__st" kindref="compound">BIGNUM</ref> *</type>
        <definition>BIGNUM* ASN1_ENUMERATED_to_BN</definition>
        <argsstring>(ASN1_ENUMERATED *ai, BIGNUM *bn)</argsstring>
        <name>ASN1_ENUMERATED_to_BN</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref> *</type>
          <declname>ai</declname>
        </param>
        <param>
          <type><ref refid="structbignum__st" kindref="compound">BIGNUM</ref> *</type>
          <declname>bn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="925" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9c56e89034ec97160752a85e617deb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_PRINTABLE_type</definition>
        <argsstring>(const unsigned char *s, int max)</argsstring>
        <name>ASN1_PRINTABLE_type</name>
        <param>
          <type>const unsigned char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="929" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aacaa46fb4a245d01a8ed377e803e3148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_ASN1_bytes</definition>
        <argsstring>(ASN1_STRING *a, unsigned char **pp, int tag, int xclass)</argsstring>
        <name>i2d_ASN1_bytes</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="931" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a124f7a54ceec50d88dc75cc99251adf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* d2i_ASN1_bytes</definition>
        <argsstring>(ASN1_STRING **a, const unsigned char **pp, long length, int Ptag, int Pclass)</argsstring>
        <name>d2i_ASN1_bytes</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Ptag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a5cf29ea4e454ef332831021c1968ad44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ASN1_tag2bit</definition>
        <argsstring>(int tag)</argsstring>
        <name>ASN1_tag2bit</name>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="934" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1acdbac8018e96a7fee33d44cdab399b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* d2i_ASN1_type_bytes</definition>
        <argsstring>(ASN1_STRING **a, const unsigned char **pp, long length, int type)</argsstring>
        <name>d2i_ASN1_type_bytes</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="936" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ac0f388cdebc46e7ab71544876c562733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_Finish</definition>
        <argsstring>(ASN1_CTX *c)</argsstring>
        <name>asn1_Finish</name>
        <param>
          <type><ref refid="structasn1__ctx__st" kindref="compound">ASN1_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a2a3228668c59088c8ac13bffc6c597cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_const_Finish</definition>
        <argsstring>(ASN1_const_CTX *c)</argsstring>
        <name>asn1_const_Finish</name>
        <param>
          <type><ref refid="structasn1__const__ctx__st" kindref="compound">ASN1_const_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="941" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ab062ed0743ee9aa36e462b4a3ec2fd01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_get_object</definition>
        <argsstring>(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax)</argsstring>
        <name>ASN1_get_object</name>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>plength</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pclass</declname>
        </param>
        <param>
          <type>long</type>
          <declname>omax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="944" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a4d146f4a09572457fa73c5d06e3fd0d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_check_infinite_end</definition>
        <argsstring>(unsigned char **p, long len)</argsstring>
        <name>ASN1_check_infinite_end</name>
        <param>
          <type>unsigned char **</type>
          <declname>p</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="946" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9fd7bc9bacafd6e230e36c88124015c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_const_check_infinite_end</definition>
        <argsstring>(const unsigned char **p, long len)</argsstring>
        <name>ASN1_const_check_infinite_end</name>
        <param>
          <type>const unsigned char **</type>
          <declname>p</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="947" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a837555a6b4c2d946c27e3fd038fe7e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_put_object</definition>
        <argsstring>(unsigned char **pp, int constructed, int length, int tag, int xclass)</argsstring>
        <name>ASN1_put_object</name>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>constructed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="948" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a978fd6cd47ef7c81da29cda0a78f52ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_put_eoc</definition>
        <argsstring>(unsigned char **pp)</argsstring>
        <name>ASN1_put_eoc</name>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="950" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a68617e533ae0f386b3c1fa089c054c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_object_size</definition>
        <argsstring>(int constructed, int length, int tag)</argsstring>
        <name>ASN1_object_size</name>
        <param>
          <type>int</type>
          <declname>constructed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="951" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a6d025c5ca00160f91811c9f7dde14ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_dup</definition>
        <argsstring>(i2d_of_void *i2d, d2i_of_void *d2i, void *x)</argsstring>
        <name>ASN1_dup</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type>d2i_of_void *</type>
          <declname>d2i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="954" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a46dd887cac259b46f604ba612203c1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_item_dup</definition>
        <argsstring>(const ASN1_ITEM *it, void *x)</argsstring>
        <name>ASN1_item_dup</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="966" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a46e8f7b1d72f1b0ed35be70b7eebf04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_d2i_fp</definition>
        <argsstring>(void *(*xnew)(void), d2i_of_void *d2i, FILE *in, void **x)</argsstring>
        <name>ASN1_d2i_fp</name>
        <param>
          <type>void *(*)(void)</type>
          <declname>xnew</declname>
        </param>
        <param>
          <type>d2i_of_void *</type>
          <declname>d2i</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="975" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a12e46a19cacab6784c5af5d6ceda3898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_item_d2i_fp</definition>
        <argsstring>(const ASN1_ITEM *it, FILE *in, void *x)</argsstring>
        <name>ASN1_item_d2i_fp</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="983" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ab8593b7f48b705107765d19814fbc205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_i2d_fp</definition>
        <argsstring>(i2d_of_void *i2d, FILE *out, void *x)</argsstring>
        <name>ASN1_i2d_fp</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="984" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1acf1ff2158c01521c3ef93c7b66a6f364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_i2d_fp</definition>
        <argsstring>(const ASN1_ITEM *it, FILE *out, void *x)</argsstring>
        <name>ASN1_item_i2d_fp</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="996" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af07fd35b342d418f7d10ac3138036ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_print_ex_fp</definition>
        <argsstring>(FILE *fp, ASN1_STRING *str, unsigned long flags)</argsstring>
        <name>ASN1_STRING_print_ex_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a267b74b38d51907af5f3152bac2848e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_to_UTF8</definition>
        <argsstring>(unsigned char **out, ASN1_STRING *in)</argsstring>
        <name>ASN1_STRING_to_UTF8</name>
        <param>
          <type>unsigned char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1000" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a288df28063fe2665750d6df2a9fa65c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_d2i_bio</definition>
        <argsstring>(void *(*xnew)(void), d2i_of_void *d2i, BIO *in, void **x)</argsstring>
        <name>ASN1_d2i_bio</name>
        <param>
          <type>void *(*)(void)</type>
          <declname>xnew</declname>
        </param>
        <param>
          <type>d2i_of_void *</type>
          <declname>d2i</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1003" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ab9a262b7e81a7c1d093477645588b614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_item_d2i_bio</definition>
        <argsstring>(const ASN1_ITEM *it, BIO *in, void *x)</argsstring>
        <name>ASN1_item_d2i_bio</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1011" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ab17fb6fa8e9ce2cc3a5ca6b630b9bf64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_i2d_bio</definition>
        <argsstring>(i2d_of_void *i2d, BIO *out, unsigned char *x)</argsstring>
        <name>ASN1_i2d_bio</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1012" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aa8834981e76236333cfead252fc3aa0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_i2d_bio</definition>
        <argsstring>(const ASN1_ITEM *it, BIO *out, void *x)</argsstring>
        <name>ASN1_item_i2d_bio</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1024" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a588242fd14e1a75b7114b708b8fc77e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_UTCTIME_print</definition>
        <argsstring>(BIO *fp, const ASN1_UTCTIME *a)</argsstring>
        <name>ASN1_UTCTIME_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1025" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a3dbbb0e03c42355bd43f75cd40f67d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_GENERALIZEDTIME_print</definition>
        <argsstring>(BIO *fp, const ASN1_GENERALIZEDTIME *a)</argsstring>
        <name>ASN1_GENERALIZEDTIME_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1026" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aa92fd40bc0d1b7efb3bc1aaaca81de49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TIME_print</definition>
        <argsstring>(BIO *fp, const ASN1_TIME *a)</argsstring>
        <name>ASN1_TIME_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1027" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a15c83054ff641f25461f09834ba531dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_print</definition>
        <argsstring>(BIO *bp, const ASN1_STRING *v)</argsstring>
        <name>ASN1_STRING_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1028" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a85fc71dd95cd75921815f1b583dfe2cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_print_ex</definition>
        <argsstring>(BIO *out, ASN1_STRING *str, unsigned long flags)</argsstring>
        <name>ASN1_STRING_print_ex</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1029" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ade14b935f9d4e0982410ea55033d1c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_bn_print</definition>
        <argsstring>(BIO *bp, const char *number, const BIGNUM *num, unsigned char *buf, int off)</argsstring>
        <name>ASN1_bn_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const <ref refid="structbignum__st" kindref="compound">BIGNUM</ref> *</type>
          <declname>num</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1030" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ade8c422b75426eb1fa6e6cb9cdbe570a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_parse</definition>
        <argsstring>(BIO *bp, const unsigned char *pp, long len, int indent)</argsstring>
        <name>ASN1_parse</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1032" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a90eed5987c3a81c5608596b43774a548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_parse_dump</definition>
        <argsstring>(BIO *bp, const unsigned char *pp, long len, int indent, int dump)</argsstring>
        <name>ASN1_parse_dump</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dump</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1033" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a950f789a4bfa68510cf6cf3b9f22d366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ASN1_tag2str</definition>
        <argsstring>(int tag)</argsstring>
        <name>ASN1_tag2str</name>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1035" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a52bb3133b403d042e189c813e6736ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_UNIVERSALSTRING_to_string</definition>
        <argsstring>(ASN1_UNIVERSALSTRING *s)</argsstring>
        <name>ASN1_UNIVERSALSTRING_to_string</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_UNIVERSALSTRING</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1041" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ab3a410513e1485dde2bcbb17c16669b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TYPE_set_octetstring</definition>
        <argsstring>(ASN1_TYPE *a, unsigned char *data, int len)</argsstring>
        <name>ASN1_TYPE_set_octetstring</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1043" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a878f0300e325424801a5b18d3390f71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TYPE_get_octetstring</definition>
        <argsstring>(ASN1_TYPE *a, unsigned char *data, int max_len)</argsstring>
        <name>ASN1_TYPE_get_octetstring</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1045" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a76714f9b088d4d5558e1ce756f534ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TYPE_set_int_octetstring</definition>
        <argsstring>(ASN1_TYPE *a, long num, unsigned char *data, int len)</argsstring>
        <name>ASN1_TYPE_set_int_octetstring</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>num</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1047" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a5c762d82096f153292c536ceaf549c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_TYPE_get_int_octetstring</definition>
        <argsstring>(ASN1_TYPE *a, long *num, unsigned char *data, int max_len)</argsstring>
        <name>ASN1_TYPE_get_int_octetstring</name>
        <param>
          <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>num</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1049" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1adcd0fd151af6b64688b01ef825141fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* ASN1_seq_pack</definition>
        <argsstring>(STACK_OF(OPENSSL_BLOCK) *safes, i2d_of_void *i2d, unsigned char **buf, int *len)</argsstring>
        <name>ASN1_seq_pack</name>
        <param>
          <type>STACK_OF(OPENSSL_BLOCK) *</type>
          <declname>safes</declname>
        </param>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1054" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a6857bd11afa4db39c2b070e736864dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_unpack_string</definition>
        <argsstring>(ASN1_STRING *oct, d2i_of_void *d2i)</argsstring>
        <name>ASN1_unpack_string</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>oct</declname>
        </param>
        <param>
          <type>d2i_of_void *</type>
          <declname>d2i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1056" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a09f402541f23919a85a38a0a3cadb914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ASN1_item_unpack</definition>
        <argsstring>(ASN1_STRING *oct, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_unpack</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>oct</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1057" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a3ebe113d19adcf4f0c8b9c62c9f841a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* ASN1_pack_string</definition>
        <argsstring>(void *obj, i2d_of_void *i2d, ASN1_OCTET_STRING **oct)</argsstring>
        <name>ASN1_pack_string</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> **</type>
          <declname>oct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1058" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae48707fb4d9967ddb90ce4458c3810ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* ASN1_item_pack</definition>
        <argsstring>(void *obj, const ASN1_ITEM *it, ASN1_OCTET_STRING **oct)</argsstring>
        <name>ASN1_item_pack</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> **</type>
          <declname>oct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1066" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae66d390309e29a02c83b7148f9ec42d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_STRING_set_default_mask</definition>
        <argsstring>(unsigned long mask)</argsstring>
        <name>ASN1_STRING_set_default_mask</name>
        <param>
          <type>unsigned long</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1068" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a0b80799560d48c295d09c4f71fb9a296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_set_default_mask_asc</definition>
        <argsstring>(const char *p)</argsstring>
        <name>ASN1_STRING_set_default_mask_asc</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1069" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9b78633019f90bf5a336e7d4d9fb482c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ASN1_STRING_get_default_mask</definition>
        <argsstring>(void)</argsstring>
        <name>ASN1_STRING_get_default_mask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a1fe2bd00b3c747bfb6df96af4ab0ac14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_mbstring_copy</definition>
        <argsstring>(ASN1_STRING **out, const unsigned char *in, int len, int inform, unsigned long mask)</argsstring>
        <name>ASN1_mbstring_copy</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inform</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1071" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1adf9f5632f020bc726afc99323fe11faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_mbstring_ncopy</definition>
        <argsstring>(ASN1_STRING **out, const unsigned char *in, int len, int inform, unsigned long mask, long minsize, long maxsize)</argsstring>
        <name>ASN1_mbstring_ncopy</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inform</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>long</type>
          <declname>minsize</declname>
        </param>
        <param>
          <type>long</type>
          <declname>maxsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1073" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af2dbb8ebc2bfeadb2864491b74e585ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* ASN1_STRING_set_by_NID</definition>
        <argsstring>(ASN1_STRING **out, const unsigned char *in, int inlen, int inform, int nid)</argsstring>
        <name>ASN1_STRING_set_by_NID</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inlen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inform</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1077" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a6a644709fa37e5d58da798febeaf3976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__table__st" kindref="compound">ASN1_STRING_TABLE</ref> *</type>
        <definition>ASN1_STRING_TABLE* ASN1_STRING_TABLE_get</definition>
        <argsstring>(int nid)</argsstring>
        <name>ASN1_STRING_TABLE_get</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1079" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a4a66369127f7f8b81617e1c4d6a5b532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_STRING_TABLE_add</definition>
        <argsstring>(int, long, long, unsigned long, unsigned long)</argsstring>
        <name>ASN1_STRING_TABLE_add</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>unsigned</type>
          <declname>long</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>long</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1080" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a683822e209c331e2f84a6dd6c81a8122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_STRING_TABLE_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>ASN1_STRING_TABLE_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1081" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae135ad7f4c0b73c48eb3247ea061810c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASN1_VALUE *</type>
        <definition>ASN1_VALUE* ASN1_item_new</definition>
        <argsstring>(const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_new</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1086" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9fc686ee2f03ab7e834e1f6998308850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_item_free</definition>
        <argsstring>(ASN1_VALUE *val, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_free</name>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1087" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a5cd3d6660d85c72563fea0f05ca4fa8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASN1_VALUE *</type>
        <definition>ASN1_VALUE* ASN1_item_d2i</definition>
        <argsstring>(ASN1_VALUE **val, const unsigned char **in, long len, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_d2i</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>in</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1088" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ada80d0bea54b10298b0668eabba68e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_i2d</definition>
        <argsstring>(ASN1_VALUE *val, unsigned char **out, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_i2d</name>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1089" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a8dd73cad83600256c079c59fdfc54438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_ndef_i2d</definition>
        <argsstring>(ASN1_VALUE *val, unsigned char **out, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_ndef_i2d</name>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1090" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aa0c3151ab82bdeab88589b7573a9722e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_add_oid_module</definition>
        <argsstring>(void)</argsstring>
        <name>ASN1_add_oid_module</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1092" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a71ec6212c40732af39765cc39e615130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
        <definition>ASN1_TYPE* ASN1_generate_nconf</definition>
        <argsstring>(char *str, CONF *nconf)</argsstring>
        <name>ASN1_generate_nconf</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>nconf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1094" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae0ac12bf7ded5de836f2716ba9c291c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
        <definition>ASN1_TYPE* ASN1_generate_v3</definition>
        <argsstring>(char *str, X509V3_CTX *cnf)</argsstring>
        <name>ASN1_generate_v3</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="structv3__ext__ctx" kindref="compound">X509V3_CTX</ref> *</type>
          <declname>cnf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1095" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ae362feae4412fc987e1a5a84dd0e33ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_print</definition>
        <argsstring>(BIO *out, ASN1_VALUE *ifld, int indent, const ASN1_ITEM *it, const ASN1_PCTX *pctx)</argsstring>
        <name>ASN1_item_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>ifld</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>const ASN1_PCTX *</type>
          <declname>pctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a529a0c657b485dfa4fa84bda5fd0acb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASN1_PCTX *</type>
        <definition>ASN1_PCTX* ASN1_PCTX_new</definition>
        <argsstring>(void)</argsstring>
        <name>ASN1_PCTX_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a18b45289bcb5f4edc9b97b361949ec6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_PCTX_free</definition>
        <argsstring>(ASN1_PCTX *p)</argsstring>
        <name>ASN1_PCTX_free</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a62fd9212331d055e65a553bd1d3ff9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ASN1_PCTX_get_flags</definition>
        <argsstring>(ASN1_PCTX *p)</argsstring>
        <name>ASN1_PCTX_get_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a999d10aeb671611217780c1e513a4d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_PCTX_set_flags</definition>
        <argsstring>(ASN1_PCTX *p, unsigned long flags)</argsstring>
        <name>ASN1_PCTX_set_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a75f4ba092a34f1ffd82e36e6d84ee4b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ASN1_PCTX_get_nm_flags</definition>
        <argsstring>(ASN1_PCTX *p)</argsstring>
        <name>ASN1_PCTX_get_nm_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a384556bc1476b6b0ed279284c436f9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_PCTX_set_nm_flags</definition>
        <argsstring>(ASN1_PCTX *p, unsigned long flags)</argsstring>
        <name>ASN1_PCTX_set_nm_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a4b33c9e1d1014fa7e200725d5965f7f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ASN1_PCTX_get_cert_flags</definition>
        <argsstring>(ASN1_PCTX *p)</argsstring>
        <name>ASN1_PCTX_get_cert_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aa589ad5f35d26d76aead6b59cd9e4b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_PCTX_set_cert_flags</definition>
        <argsstring>(ASN1_PCTX *p, unsigned long flags)</argsstring>
        <name>ASN1_PCTX_set_cert_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1af8200b9913ee651ec0f593e20f2f65d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ASN1_PCTX_get_oid_flags</definition>
        <argsstring>(ASN1_PCTX *p)</argsstring>
        <name>ASN1_PCTX_get_oid_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a097eaeaa2fcaad0679466350583f349f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_PCTX_set_oid_flags</definition>
        <argsstring>(ASN1_PCTX *p, unsigned long flags)</argsstring>
        <name>ASN1_PCTX_set_oid_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ab10f2a0a9fd99c3e729fba354702a052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long ASN1_PCTX_get_str_flags</definition>
        <argsstring>(ASN1_PCTX *p)</argsstring>
        <name>ASN1_PCTX_get_str_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a60b3fd2e022f3dc0c2da71132d8e700e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_PCTX_set_str_flags</definition>
        <argsstring>(ASN1_PCTX *p, unsigned long flags)</argsstring>
        <name>ASN1_PCTX_set_str_flags</name>
        <param>
          <type>ASN1_PCTX *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a4a1e9f4b1ed62e2daaa27fc7d2505d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbio__method__st" kindref="compound">BIO_METHOD</ref> *</type>
        <definition>BIO_METHOD* BIO_f_asn1</definition>
        <argsstring>(void)</argsstring>
        <name>BIO_f_asn1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a81dc99402f3f9e3a70223306feb9bd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
        <definition>BIO* BIO_new_NDEF</definition>
        <argsstring>(BIO *out, ASN1_VALUE *val, const ASN1_ITEM *it)</argsstring>
        <name>BIO_new_NDEF</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ad841ed3964f453427276196becaa9d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_ASN1_bio_stream</definition>
        <argsstring>(BIO *out, ASN1_VALUE *val, BIO *in, int flags, const ASN1_ITEM *it)</argsstring>
        <name>i2d_ASN1_bio_stream</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a388d05c56973084b5d51fef31546ed6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_write_bio_ASN1_stream</definition>
        <argsstring>(BIO *out, ASN1_VALUE *val, BIO *in, int flags, const char *hdr, const ASN1_ITEM *it)</argsstring>
        <name>PEM_write_bio_ASN1_stream</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hdr</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a0f2900ffd4c8d2b7550cf426531d87c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SMIME_write_ASN1</definition>
        <argsstring>(BIO *bio, ASN1_VALUE *val, BIO *data, int flags, int ctype_nid, int econt_nid, STACK_OF(X509_ALGOR) *mdalgs, const ASN1_ITEM *it)</argsstring>
        <name>SMIME_write_ASN1</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type>ASN1_VALUE *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ctype_nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>econt_nid</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref>) *</type>
          <declname>mdalgs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1ad1223792f16994da711058087f5bea5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASN1_VALUE *</type>
        <definition>ASN1_VALUE* SMIME_read_ASN1</definition>
        <argsstring>(BIO *bio, BIO **bcont, const ASN1_ITEM *it)</argsstring>
        <name>SMIME_read_ASN1</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> **</type>
          <declname>bcont</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a9733cdb626618d20a99ee483bcfa55aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SMIME_crlf_copy</definition>
        <argsstring>(BIO *in, BIO *out, int flags)</argsstring>
        <name>SMIME_crlf_copy</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1aa0b7d82a31e8f480bc15b164dee35b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SMIME_text</definition>
        <argsstring>(BIO *in, BIO *out)</argsstring>
        <name>SMIME_text</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1_8h_1a23c13dfccb52b991cabfb2d5fc6aeaa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_ASN1_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_ASN1_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1.h" line="1154" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/asn1/asn1.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1998<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_ASN1_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_ASN1_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/e_os2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/stack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/safestack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/symhacks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ossl_typ.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_BUILD_SHLIBCRYPTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>OPENSSL_EXTERN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>OPENSSL_EXTERN<sp/>OPENSSL_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_UNIVERSAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_APPLICATION<sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_CONTEXT_SPECIFIC<sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_PRIVATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xc0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_CONSTRUCTED<sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_PRIMITIVE_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_PRIMATIVE_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_APP_CHOOSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-2<sp/><sp/></highlight><highlight class="comment">/*<sp/>let<sp/>the<sp/>recipient<sp/>choose<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_OTHER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3<sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>in<sp/>ASN1_TYPE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_ANY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-4<sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>in<sp/>ASN1<sp/>template<sp/>code<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_NEG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x100<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>negative<sp/>flag<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_UNDEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_EOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_BOOLEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_NEG_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>|<sp/>V_ASN1_NEG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_BIT_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_OCTET_STRING<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_OBJECT_DESCRIPTOR<sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_EXTERNAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_REAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_ENUMERATED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_NEG_ENUMERATED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(10<sp/>|<sp/>V_ASN1_NEG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_UTF8STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_SEQUENCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_NUMERICSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_PRINTABLESTRING<sp/><sp/><sp/><sp/><sp/><sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_T61STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_TELETEXSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/><sp/></highlight><highlight class="comment">/*<sp/>alias<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_VIDEOTEXSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/>21<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_IA5STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_UTCTIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_GENERALIZEDTIME<sp/><sp/><sp/><sp/><sp/><sp/>24<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_GRAPHICSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>25<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_ISO64STRING<sp/><sp/><sp/><sp/><sp/><sp/>26<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_VISIBLESTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>26<sp/><sp/></highlight><highlight class="comment">/*<sp/>alias<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_GENERALSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>27<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_UNIVERSALSTRING<sp/><sp/><sp/><sp/><sp/><sp/>28<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>V_ASN1_BMPSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>use<sp/>with<sp/>d2i_ASN1_type_bytes()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_NUMERICSTRING<sp/><sp/><sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_PRINTABLESTRING<sp/><sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_T61STRING<sp/><sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_TELETEXSTRING<sp/><sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_VIDEOTEXSTRING<sp/><sp/><sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_IA5STRING<sp/><sp/><sp/><sp/>0x0010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_GRAPHICSTRING<sp/><sp/><sp/><sp/>0x0020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_ISO64STRING<sp/><sp/>0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_VISIBLESTRING<sp/><sp/><sp/><sp/>0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_GENERALSTRING<sp/><sp/><sp/><sp/>0x0080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_UNIVERSALSTRING<sp/><sp/>0x0100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_OCTET_STRING<sp/>0x0200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_BIT_STRING<sp/><sp/><sp/>0x0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_BMPSTRING<sp/><sp/><sp/><sp/>0x0800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_UNKNOWN<sp/><sp/><sp/><sp/><sp/><sp/>0x1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_UTF8STRING<sp/><sp/><sp/>0x2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_UTCTIME<sp/><sp/><sp/><sp/><sp/><sp/>0x4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_GENERALIZEDTIME<sp/><sp/>0x8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_SEQUENCE<sp/><sp/><sp/><sp/><sp/>0x10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>use<sp/>with<sp/>ASN1_mbstring_copy()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBSTRING_FLAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBSTRING_UTF8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MBSTRING_FLAG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBSTRING_ASC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MBSTRING_FLAG|1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBSTRING_BMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MBSTRING_FLAG|2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBSTRING_UNIV<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MBSTRING_FLAG|4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMIME_OLDMIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMIME_CRLFEOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMIME_STREAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_algor_st</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_SET_OF(type)<sp/></highlight><highlight class="comment">/*<sp/>filled<sp/>in<sp/>by<sp/>mkstack.pl<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_SET_OF(type)<sp/></highlight><highlight class="comment">/*<sp/>nothing,<sp/>no<sp/>longer<sp/>needed<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>MUST<sp/>make<sp/>sure<sp/>that,<sp/>except<sp/>for<sp/>constness,<sp/>asn1_ctx_st<sp/>and</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>asn1_const_ctx<sp/>are<sp/>exactly<sp/>the<sp/>same.<sp/><sp/>Fortunately,<sp/>as<sp/>soon<sp/>as</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>the<sp/>old<sp/>ASN1<sp/>parsing<sp/>macros<sp/>are<sp/>gone,<sp/>we<sp/>can<sp/>throw<sp/>this<sp/>away</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>as<sp/>well...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="structasn1__ctx__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structasn1__ctx__st" kindref="compound">asn1_ctx_st</ref></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight><highlight class="comment">/*<sp/>work<sp/>char<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eos;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>sequence<sp/>read<sp/>for<sp/>indefinite<sp/>encoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error;<sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>code<sp/>to<sp/>use<sp/>when<sp/>returning<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inf;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>constructed<sp/>if<sp/>0x20,<sp/>indefinite<sp/>is<sp/>0x21<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tag<sp/>from<sp/>last<sp/>&apos;get<sp/>object&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xclass;<sp/></highlight><highlight class="comment">/*<sp/>class<sp/>from<sp/>last<sp/>&apos;get<sp/>object&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>slen;<sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>last<sp/>&apos;get<sp/>object&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*max;<sp/></highlight><highlight class="comment">/*<sp/>largest<sp/>value<sp/>of<sp/>p<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q;</highlight><highlight class="comment">/*<sp/>temporary<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp;</highlight><highlight class="comment">/*<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>in<sp/>error<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structasn1__ctx__st" kindref="compound">ASN1_CTX</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structasn1__const__ctx__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structasn1__const__ctx__st" kindref="compound">asn1_const_ctx_st</ref></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight><highlight class="comment">/*<sp/>work<sp/>char<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eos;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>sequence<sp/>read<sp/>for<sp/>indefinite<sp/>encoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error;<sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>code<sp/>to<sp/>use<sp/>when<sp/>returning<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inf;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>constructed<sp/>if<sp/>0x20,<sp/>indefinite<sp/>is<sp/>0x21<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tag<sp/>from<sp/>last<sp/>&apos;get<sp/>object&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xclass;<sp/></highlight><highlight class="comment">/*<sp/>class<sp/>from<sp/>last<sp/>&apos;get<sp/>object&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>slen;<sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>last<sp/>&apos;get<sp/>object&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*max;<sp/></highlight><highlight class="comment">/*<sp/>largest<sp/>value<sp/>of<sp/>p<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q;</highlight><highlight class="comment">/*<sp/>temporary<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp;</highlight><highlight class="comment">/*<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>in<sp/>error<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structasn1__const__ctx__st" kindref="compound">ASN1_const_CTX</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>used<sp/>internally<sp/>in<sp/>the<sp/>ASN1_OBJECT<sp/>to<sp/>keep<sp/>track<sp/>of</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>whether<sp/>the<sp/>names<sp/>and<sp/>data<sp/>need<sp/>to<sp/>be<sp/>free()ed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OBJECT_FLAG_DYNAMIC<sp/><sp/><sp/><sp/><sp/>0x01<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>internal<sp/>use<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OBJECT_FLAG_CRITICAL<sp/><sp/><sp/><sp/>0x02<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>critical<sp/>x509v3<sp/>object<sp/>id<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OBJECT_FLAG_DYNAMIC_STRINGS<sp/>0x04<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>internal<sp/>use<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OBJECT_FLAG_DYNAMIC_DATA<sp/><sp/><sp/><sp/>0x08<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>internal<sp/>use<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="structasn1__object__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">asn1_object_st</ref></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sn,*ln;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;<sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>remains<sp/>const<sp/>after<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>we<sp/>free<sp/>this<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRING_FLAG_BITS_LEFT<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>if<sp/>0x07<sp/>has<sp/>bits<sp/>left<sp/>value<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>indicates<sp/>that<sp/>the<sp/>ASN1_STRING<sp/>is<sp/>not<sp/>a<sp/>real<sp/>value<sp/>but<sp/>just<sp/>a<sp/>place</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>holder<sp/>for<sp/>the<sp/>location<sp/>where<sp/>indefinite<sp/>length<sp/>constructed<sp/>data<sp/>should</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>be<sp/>inserted<sp/>in<sp/>the<sp/>memory<sp/>buffer<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRING_FLAG_NDEF<sp/>0x010<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>the<sp/>CMS<sp/>code<sp/>to<sp/>indicate<sp/>that<sp/>a<sp/>string<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>complete<sp/>and<sp/>is<sp/>a<sp/>place<sp/>holder<sp/>for<sp/>content<sp/>when<sp/>it<sp/>had<sp/>all<sp/>been<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>accessed.<sp/>The<sp/>flag<sp/>will<sp/>be<sp/>reset<sp/>when<sp/>content<sp/>has<sp/>been<sp/>written<sp/>to<sp/>it.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRING_FLAG_CONT<sp/>0x020<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>ASN1<sp/>code<sp/>to<sp/>indicate<sp/>an<sp/>ASN1_STRING<sp/>is<sp/>an<sp/>MSTRING</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>type.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRING_FLAG_MSTRING<sp/>0x040<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>base<sp/>type<sp/>that<sp/>holds<sp/>just<sp/>about<sp/>everything<sp/>:-)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structasn1__string__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">asn1_string_st</ref></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>value<sp/>of<sp/>the<sp/>following<sp/>field<sp/>depends<sp/>on<sp/>the<sp/>type<sp/>being</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>held.<sp/><sp/>It<sp/>is<sp/>mostly<sp/>being<sp/>used<sp/>for<sp/>BIT_STRING<sp/>so<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>input<sp/>data<sp/>has<sp/>a<sp/>non-zero<sp/>&apos;unused<sp/>bits&apos;<sp/>value,<sp/>it<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>handled<sp/>correctly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASN1_ENCODING<sp/>structure:<sp/>this<sp/>is<sp/>used<sp/>to<sp/>save<sp/>the<sp/>received</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>encoding<sp/>of<sp/>an<sp/>ASN1<sp/>type.<sp/>This<sp/>is<sp/>useful<sp/>to<sp/>get<sp/>round</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>problems<sp/>with<sp/>invalid<sp/>encodings<sp/>which<sp/>can<sp/>break<sp/>signatures.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" kindref="compound">ASN1_ENCODING_st</ref></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc;<sp/></highlight><highlight class="comment">/*<sp/>DER<sp/>encoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Length<sp/>of<sp/>encoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modified;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>to<sp/>1<sp/>if<sp/>&apos;enc&apos;<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" kindref="compound">ASN1_ENCODING</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Used<sp/>with<sp/>ASN1<sp/>LONG<sp/>type:<sp/>if<sp/>a<sp/>long<sp/>is<sp/>set<sp/>to<sp/>this<sp/>it<sp/>is<sp/>omitted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_LONG_UNDEF<sp/>0x7fffffffL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STABLE_FLAGS_MALLOC<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STABLE_NO_MASK<sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIRSTRING_TYPE<sp/><sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/>(B_ASN1_PRINTABLESTRING|B_ASN1_T61STRING|B_ASN1_BMPSTRING|B_ASN1_UTF8STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PKCS9STRING_TYPE<sp/>(DIRSTRING_TYPE|B_ASN1_IA5STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="structasn1__string__table__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structasn1__string__table__st" kindref="compound">asn1_string_table_st</ref><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minsize;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxsize;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mask;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}<sp/><ref refid="structasn1__string__table__st" kindref="compound">ASN1_STRING_TABLE</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structasn1__string__table__st" kindref="compound">ASN1_STRING_TABLE</ref>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>size<sp/>limits:<sp/>this<sp/>stuff<sp/>is<sp/>taken<sp/>straight<sp/>from<sp/>RFC2459<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32768</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_common_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_locality_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_state_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_organization_name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_organization_unit_name<sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ub_email_address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>for<sp/>template<sp/>structures:<sp/>for<sp/>full<sp/>definitions</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>see<sp/>asn1t.h</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE_st</ref><sp/>ASN1_TEMPLATE;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___t_l_c__st" kindref="compound">ASN1_TLC_st</ref><sp/>ASN1_TLC;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>just<sp/>an<sp/>opaque<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ASN1_VALUE_st<sp/>ASN1_VALUE;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declare<sp/>ASN1<sp/>functions:<sp/>the<sp/>implement<sp/>macro<sp/>in<sp/>in<sp/>asn1t.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_FUNCTIONS(type)<sp/>DECLARE_ASN1_FUNCTIONS_name(type,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_ALLOC_FUNCTIONS(type)<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ALLOC_FUNCTIONS_name(type,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_FUNCTIONS_name(type,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ALLOC_FUNCTIONS_name(type,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ENCODE_FUNCTIONS(type,<sp/>name,<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_FUNCTIONS_fname(type,<sp/>itname,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ALLOC_FUNCTIONS_name(type,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ENCODE_FUNCTIONS(type,<sp/>itname,<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_ENCODE_FUNCTIONS(type,<sp/>itname,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>type<sp/>*d2i_##name(type<sp/>**a,<sp/>const<sp/>unsigned<sp/>char<sp/>**in,<sp/>long<sp/>len);<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i2d_##name(type<sp/>*a,<sp/>unsigned<sp/>char<sp/>**out);<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ITEM(itname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_ENCODE_FUNCTIONS_const(type,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>type<sp/>*d2i_##name(type<sp/>**a,<sp/>const<sp/>unsigned<sp/>char<sp/>**in,<sp/>long<sp/>len);<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i2d_##name(const<sp/>type<sp/>*a,<sp/>unsigned<sp/>char<sp/>**out);<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ITEM(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_NDEF_FUNCTION(name)<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i2d_##name##_NDEF(name<sp/>*a,<sp/>unsigned<sp/>char<sp/>**out);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_FUNCTIONS_const(name)<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ALLOC_FUNCTIONS(name)<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_ENCODE_FUNCTIONS_const(name,<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_ALLOC_FUNCTIONS_name(type,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>type<sp/>*name##_new(void);<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>name##_free(type<sp/>*a);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_PRINT_FUNCTION(stname)<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_ASN1_PRINT_FUNCTION_fname(stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_PRINT_FUNCTION_fname(stname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>fname##_print_ctx(BIO<sp/>*out,<sp/>stname<sp/>*x,<sp/>int<sp/>indent,<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ASN1_PCTX<sp/>*pctx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>D2I_OF(type)<sp/>type<sp/>*(*)(type<sp/>**,const<sp/>unsigned<sp/>char<sp/>**,long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>I2D_OF(type)<sp/>int<sp/>(*)(type<sp/>*,unsigned<sp/>char<sp/>**)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>I2D_OF_const(type)<sp/>int<sp/>(*)(const<sp/>type<sp/>*,unsigned<sp/>char<sp/>**)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECKED_D2I_OF(type,<sp/>d2i)<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((d2i_of_void*)<sp/>(1<sp/>?<sp/>d2i<sp/>:<sp/>((D2I_OF(type))0)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECKED_I2D_OF(type,<sp/>i2d)<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((i2d_of_void*)<sp/>(1<sp/>?<sp/>i2d<sp/>:<sp/>((I2D_OF(type))0)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECKED_NEW_OF(type,<sp/>xnew)<sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void<sp/>*(*)(void))<sp/>(1<sp/>?<sp/>xnew<sp/>:<sp/>((type<sp/>*(*)(void))0)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECKED_PTR_OF(type,<sp/>p)<sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void*)<sp/>(1<sp/>?<sp/>p<sp/>:<sp/>(type*)0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECKED_PPTR_OF(type,<sp/>p)<sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void**)<sp/>(1<sp/>?<sp/>p<sp/>:<sp/>(type**)0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPEDEF_D2I_OF(type)<sp/>typedef<sp/>type<sp/>*d2i_of_##type(type<sp/>**,const<sp/>unsigned<sp/>char<sp/>**,long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPEDEF_I2D_OF(type)<sp/>typedef<sp/>int<sp/>i2d_of_##type(type<sp/>*,unsigned<sp/>char<sp/>**)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPEDEF_D2I2D_OF(type)<sp/>TYPEDEF_D2I_OF(type);<sp/>TYPEDEF_I2D_OF(type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">TYPEDEF_D2I2D_OF(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>macros<sp/>and<sp/>typedefs<sp/>allow<sp/>an<sp/>ASN1_ITEM</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>to<sp/>be<sp/>embedded<sp/>in<sp/>a<sp/>structure<sp/>and<sp/>referenced.<sp/>Since</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>the<sp/>ASN1_ITEM<sp/>pointers<sp/>need<sp/>to<sp/>be<sp/>globally<sp/>accessible</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>(possibly<sp/>from<sp/>shared<sp/>libraries)<sp/>they<sp/>may<sp/>exist<sp/>in</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>different<sp/>forms.<sp/>On<sp/>platforms<sp/>that<sp/>support<sp/>it<sp/>the</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>ASN1_ITEM<sp/>structure<sp/>itself<sp/>will<sp/>be<sp/>globally<sp/>exported.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>Other<sp/>platforms<sp/>will<sp/>export<sp/>a<sp/>function<sp/>that<sp/>returns</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>an<sp/>ASN1_ITEM<sp/>pointer.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>To<sp/>handle<sp/>both<sp/>cases<sp/>transparently<sp/>the<sp/>macros<sp/>below</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>should<sp/>be<sp/>used<sp/>instead<sp/>of<sp/>hard<sp/>coding<sp/>an<sp/>ASN1_ITEM</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>pointer<sp/>in<sp/>a<sp/>structure.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>The<sp/>structure<sp/>will<sp/>look<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>typedef<sp/>struct<sp/>SOMETHING_st<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITEM_EXP<sp/>*iptr;</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>}<sp/>SOMETHING;<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>It<sp/>would<sp/>be<sp/>initialised<sp/>as<sp/>e.g.:</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>SOMETHING<sp/>somevar<sp/>=<sp/>{...,ASN1_ITEM_ref(X509),...};</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>actual<sp/>pointer<sp/>extracted<sp/>with:</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>const<sp/>ASN1_ITEM<sp/>*it<sp/>=<sp/>ASN1_ITEM_ptr(somevar.iptr);</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>Finally<sp/>an<sp/>ASN1_ITEM<sp/>pointer<sp/>can<sp/>be<sp/>extracted<sp/>from<sp/>an</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>appropriate<sp/>reference<sp/>with:<sp/>ASN1_ITEM_rptr(X509).<sp/>This</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>would<sp/>be<sp/>used<sp/>when<sp/>a<sp/>function<sp/>takes<sp/>an<sp/>ASN1_ITEM<sp/>*<sp/>argument.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_EXPORT_VAR_AS_FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASN1_ITEM<sp/>pointer<sp/>exported<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM_EXP</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>obtain<sp/>ASN1_ITEM<sp/>pointer<sp/>from<sp/>exported<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_ptr(iptr)<sp/>(iptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>include<sp/>ASN1_ITEM<sp/>pointer<sp/>from<sp/>base<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_ref(iptr)<sp/>(&amp;(iptr##_it))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_rptr(ref)<sp/>(&amp;(ref##_it))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_ITEM(name)<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>OPENSSL_EXTERN<sp/>const<sp/>ASN1_ITEM<sp/>name##_it;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Platforms<sp/>that<sp/>can&apos;t<sp/>easily<sp/>handle<sp/>shared<sp/>global<sp/>variables<sp/>are<sp/>declared</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>as<sp/>functions<sp/>returning<sp/>ASN1_ITEM<sp/>pointers.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASN1_ITEM<sp/>pointer<sp/>exported<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*<sp/>ASN1_ITEM_EXP(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>obtain<sp/>ASN1_ITEM<sp/>pointer<sp/>from<sp/>exported<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_ptr(iptr)<sp/>(iptr())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>include<sp/>ASN1_ITEM<sp/>pointer<sp/>from<sp/>base<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_ref(iptr)<sp/>(iptr##_it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_rptr(ref)<sp/>(ref##_it())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_ASN1_ITEM(name)<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>ASN1_ITEM<sp/>*<sp/>name##_it(void);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Parameters<sp/>used<sp/>by<sp/>ASN1_STRING_print_ex()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>determine<sp/>which<sp/>characters<sp/>to<sp/>escape:</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>RFC2253<sp/>special<sp/>characters,<sp/>control<sp/>characters<sp/>and</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>MSB<sp/>set<sp/>characters</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_ESC_2253<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_ESC_CTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_ESC_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>determines<sp/>how<sp/>we<sp/>do<sp/>escaping:<sp/>normally</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>RC2253<sp/>backslash<sp/>only,<sp/>set<sp/>this<sp/>to<sp/>use<sp/>backslash<sp/>and</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>quote.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_ESC_QUOTE<sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>three<sp/>flags<sp/>are<sp/>internal<sp/>use<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Character<sp/>is<sp/>a<sp/>valid<sp/>PrintableString<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHARTYPE_PRINTABLESTRING<sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Character<sp/>needs<sp/>escaping<sp/>if<sp/>it<sp/>is<sp/>the<sp/>first<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHARTYPE_FIRST_ESC_2253<sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Character<sp/>needs<sp/>escaping<sp/>if<sp/>it<sp/>is<sp/>the<sp/>last<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHARTYPE_LAST_ESC_2253<sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NB<sp/>the<sp/>internal<sp/>flags<sp/>are<sp/>safely<sp/>reused<sp/>below<sp/>by<sp/>flags</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>handled<sp/>at<sp/>the<sp/>top<sp/>level.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>set<sp/>we<sp/>convert<sp/>all<sp/>character<sp/>strings</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>to<sp/>UTF8<sp/>first<sp/></highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_UTF8_CONVERT<sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>set<sp/>we<sp/>don&apos;t<sp/>attempt<sp/>to<sp/>interpret<sp/>content:</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>just<sp/>assume<sp/>all<sp/>strings<sp/>are<sp/>1<sp/>byte<sp/>per<sp/>character.<sp/>This</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>will<sp/>produce<sp/>some<sp/>pretty<sp/>odd<sp/>looking<sp/>output!</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_IGNORE_TYPE<sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>set<sp/>we<sp/>include<sp/>the<sp/>string<sp/>type<sp/>in<sp/>the<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_SHOW_TYPE<sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>determines<sp/>which<sp/>strings<sp/>to<sp/>display<sp/>and<sp/>which<sp/>to</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>&apos;dump&apos;<sp/>(hex<sp/>dump<sp/>of<sp/>content<sp/>octets<sp/>or<sp/>DER<sp/>encoding).<sp/>We<sp/>can</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>only<sp/>dump<sp/>non<sp/>character<sp/>strings<sp/>or<sp/>everything.<sp/>If<sp/>we</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/>don&apos;t<sp/>dump<sp/>&apos;unknown&apos;<sp/>they<sp/>are<sp/>interpreted<sp/>as<sp/>character</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/>strings<sp/>with<sp/>1<sp/>octet<sp/>per<sp/>character<sp/>and<sp/>are<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/>the<sp/>usual<sp/>escaping<sp/>options.</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_DUMP_ALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_DUMP_UNKNOWN<sp/><sp/><sp/>0x100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>determine<sp/>what<sp/>&apos;dumping&apos;<sp/>does,<sp/>we<sp/>can<sp/>dump<sp/>the</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/>content<sp/>octets<sp/>or<sp/>the<sp/>DER<sp/>encoding:<sp/>both<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/>RFC2253<sp/>#XXXXX<sp/>notation.</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_DUMP_DER<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>string<sp/>flags<sp/>consistent<sp/>with<sp/>RFC2253,</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>escaping<sp/>control<sp/>characters<sp/>isn&apos;t<sp/>essential<sp/>in</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*<sp/>RFC2253<sp/>but<sp/>it<sp/>is<sp/>advisable<sp/>anyway.</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_STRFLGS_RFC2253<sp/><sp/><sp/><sp/>(ASN1_STRFLGS_ESC_2253<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRFLGS_ESC_CTRL<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRFLGS_ESC_MSB<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRFLGS_UTF8_CONVERT<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRFLGS_DUMP_UNKNOWN<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRFLGS_DUMP_DER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALSTRING</ref>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="structasn1__type__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structasn1__type__st" kindref="compound">asn1_type_st</ref></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_BOOLEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolean;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asn1_string;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>object;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>integer;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*<sp/><sp/><sp/>enumerated;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*<sp/><sp/><sp/>bit_string;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*<sp/>octet_string;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_PRINTABLESTRING</ref><sp/>*<sp/><sp/>printablestring;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_T61STRING</ref><sp/>*<sp/><sp/><sp/><sp/>t61string;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_IA5STRING</ref><sp/>*<sp/><sp/><sp/><sp/>ia5string;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALSTRING</ref><sp/>*<sp/><sp/><sp/><sp/>generalstring;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BMPSTRING</ref><sp/>*<sp/><sp/><sp/><sp/>bmpstring;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_UNIVERSALSTRING</ref><sp/>*<sp/><sp/>universalstring;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>utctime;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*<sp/><sp/>generalizedtime;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_VISIBLESTRING</ref><sp/>*<sp/><sp/><sp/><sp/>visiblestring;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_UTF8STRING</ref><sp/>*<sp/><sp/><sp/>utf8string;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>and<sp/>sequence<sp/>are<sp/>left<sp/>complete<sp/>and<sp/>still</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>contain<sp/>the<sp/>set<sp/>or<sp/>sequence<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequence;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_VALUE<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asn1_value;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref>)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref>)<sp/>ASN1_SEQUENCE_ANY;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">DECLARE_ASN1_ENCODE_FUNCTIONS_const(ASN1_SEQUENCE_ANY,<sp/>ASN1_SEQUENCE_ANY)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">DECLARE_ASN1_ENCODE_FUNCTIONS_const(ASN1_SEQUENCE_ANY,<sp/>ASN1_SET_ANY)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="struct_n_e_t_s_c_a_p_e___x509__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="struct_n_e_t_s_c_a_p_e___x509__st" kindref="compound">NETSCAPE_X509_st</ref></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*header;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*cert;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>NETSCAPE_X509;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>used<sp/>to<sp/>contain<sp/>a<sp/>list<sp/>of<sp/>bit<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME_st</ref><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitnum;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lname;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sname;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}<sp/><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_STRING_length(x)<sp/>((x)-&gt;length)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_STRING_length_set(x,<sp/>n)<sp/><sp/>((x)-&gt;length<sp/>=<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_STRING_type(x)<sp/><sp/><sp/>((x)-&gt;type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_STRING_data(x)<sp/><sp/><sp/>((x)-&gt;data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>string<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_BIT_STRING_new()<sp/>(ASN1_BIT_STRING<sp/>*)\</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_BIT_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_BIT_STRING_free(a)<sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_BIT_STRING_dup(a)<sp/>(ASN1_BIT_STRING<sp/>*)\</highlight></codeline>
<codeline lineno="583"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_dup((const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_BIT_STRING_cmp(a,b)<sp/>ASN1_STRING_cmp(\</highlight></codeline>
<codeline lineno="585"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>ASN1_STRING<sp/>*)a,(const<sp/>ASN1_STRING<sp/>*)b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_BIT_STRING_set(a,b,c)<sp/>ASN1_STRING_set((ASN1_STRING<sp/>*)a,b,c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_INTEGER_new()<sp/><sp/><sp/><sp/>(ASN1_INTEGER<sp/>*)\</highlight></codeline>
<codeline lineno="589"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_INTEGER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_INTEGER_free(a)<sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_INTEGER_dup(a)<sp/>(ASN1_INTEGER<sp/>*)\</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_dup((const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_INTEGER_cmp(a,b)<sp/>ASN1_STRING_cmp(\</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>ASN1_STRING<sp/>*)a,(const<sp/>ASN1_STRING<sp/>*)b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_ENUMERATED_new()<sp/>(ASN1_ENUMERATED<sp/>*)\</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_ENUMERATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_ENUMERATED_free(a)<sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_ENUMERATED_dup(a)<sp/>(ASN1_ENUMERATED<sp/>*)\</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_dup((const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_ENUMERATED_cmp(a,b)<sp/><sp/>ASN1_STRING_cmp(\</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>ASN1_STRING<sp/>*)a,(const<sp/>ASN1_STRING<sp/>*)b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_OCTET_STRING_new()<sp/><sp/><sp/>(ASN1_OCTET_STRING<sp/>*)\</highlight></codeline>
<codeline lineno="605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_OCTET_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_OCTET_STRING_free(a)<sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_OCTET_STRING_dup(a)<sp/>(ASN1_OCTET_STRING<sp/>*)\</highlight></codeline>
<codeline lineno="608"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_dup((const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_OCTET_STRING_cmp(a,b)<sp/>ASN1_STRING_cmp(\</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>ASN1_STRING<sp/>*)a,(const<sp/>ASN1_STRING<sp/>*)b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_OCTET_STRING_set(a,b,c)<sp/><sp/>ASN1_STRING_set((ASN1_STRING<sp/>*)a,b,c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_OCTET_STRING_print(a,b)<sp/><sp/>ASN1_STRING_print(a,(ASN1_STRING<sp/>*)b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_OCTET_STRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_OCTET_STRING,\</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_TIME<sp/>\</highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_UTCTIME<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="619"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_GENERALIZEDTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_PRINTABLE<sp/>\</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_NUMERICSTRING|<sp/>\</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_PRINTABLESTRING|<sp/>\</highlight></codeline>
<codeline lineno="624"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_T61STRING|<sp/>\</highlight></codeline>
<codeline lineno="625"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_IA5STRING|<sp/>\</highlight></codeline>
<codeline lineno="626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_BIT_STRING|<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_UNIVERSALSTRING|\</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_BMPSTRING|\</highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_UTF8STRING|\</highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_SEQUENCE|\</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_UNKNOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_DIRECTORYSTRING<sp/>\</highlight></codeline>
<codeline lineno="634"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_PRINTABLESTRING|<sp/>\</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_TELETEXSTRING|\</highlight></codeline>
<codeline lineno="636"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_BMPSTRING|\</highlight></codeline>
<codeline lineno="637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_UNIVERSALSTRING|\</highlight></codeline>
<codeline lineno="638"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_UTF8STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ASN1_DISPLAYTEXT<sp/>\</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_IA5STRING|<sp/>\</highlight></codeline>
<codeline lineno="642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_VISIBLESTRING|<sp/>\</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_BMPSTRING|\</highlight></codeline>
<codeline lineno="644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_UTF8STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_PRINTABLE_new()<sp/><sp/>ASN1_STRING_type_new(V_ASN1_T61STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_PRINTABLE_free(a)<sp/><sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_PRINTABLE(a,pp)<sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,\</highlight></codeline>
<codeline lineno="649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp,a-&gt;type,V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_PRINTABLE(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2i_ASN1_type_bytes((ASN1_STRING<sp/>**)a,pp,l,<sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_PRINTABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_DIRECTORYSTRING_new()<sp/>ASN1_STRING_type_new(V_ASN1_PRINTABLESTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_DIRECTORYSTRING_free(a)<sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_DIRECTORYSTRING(a,pp)<sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,\</highlight></codeline>
<codeline lineno="657"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp,a-&gt;type,V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_DIRECTORYSTRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2i_ASN1_type_bytes((ASN1_STRING<sp/>**)a,pp,l,<sp/>\</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_DIRECTORYSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_DISPLAYTEXT_new()<sp/>ASN1_STRING_type_new(V_ASN1_VISIBLESTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_DISPLAYTEXT_free(a)<sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_DISPLAYTEXT(a,pp)<sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp,a-&gt;type,V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_DISPLAYTEXT(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2i_ASN1_type_bytes((ASN1_STRING<sp/>**)a,pp,l,<sp/>\</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_DISPLAYTEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_PRINTABLESTRING_new()<sp/>(ASN1_PRINTABLESTRING<sp/>*)\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_PRINTABLESTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_PRINTABLESTRING_free(a)<sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_PRINTABLESTRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="674"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_PRINTABLESTRING,\</highlight></codeline>
<codeline lineno="675"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_PRINTABLESTRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="677"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_PRINTABLESTRING<sp/>*)d2i_ASN1_type_bytes\</highlight></codeline>
<codeline lineno="678"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ASN1_STRING<sp/>**)a,pp,l,B_ASN1_PRINTABLESTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_T61STRING_new()<sp/><sp/>(ASN1_T61STRING<sp/>*)\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_T61STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_T61STRING_free(a)<sp/><sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_T61STRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_T61STRING,\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_T61STRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_T61STRING<sp/>*)d2i_ASN1_type_bytes\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ASN1_STRING<sp/>**)a,pp,l,B_ASN1_T61STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_IA5STRING_new()<sp/><sp/>(ASN1_IA5STRING<sp/>*)\</highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_IA5STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_IA5STRING_free(a)<sp/><sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_IA5STRING_dup(a)<sp/>\</highlight></codeline>
<codeline lineno="694"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_IA5STRING<sp/>*)ASN1_STRING_dup((const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_IA5STRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="696"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_IA5STRING,\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_IA5STRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="699"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_IA5STRING<sp/>*)d2i_ASN1_type_bytes((ASN1_STRING<sp/>**)a,pp,l,\</highlight></codeline>
<codeline lineno="700"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_ASN1_IA5STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_UTCTIME_new()<sp/><sp/><sp/><sp/>(ASN1_UTCTIME<sp/>*)\</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_UTCTIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_UTCTIME_free(a)<sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_UTCTIME_dup(a)<sp/>(ASN1_UTCTIME<sp/>*)\</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_dup((const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_GENERALIZEDTIME_new()<sp/><sp/><sp/><sp/>(ASN1_GENERALIZEDTIME<sp/>*)\</highlight></codeline>
<codeline lineno="709"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_GENERALIZEDTIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_GENERALIZEDTIME_free(a)<sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_GENERALIZEDTIME_dup(a)<sp/>(ASN1_GENERALIZEDTIME<sp/>*)ASN1_STRING_dup(\</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_TIME_new()<sp/><sp/><sp/>(ASN1_TIME<sp/>*)\</highlight></codeline>
<codeline lineno="715"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_UTCTIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_TIME_free(a)<sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_TIME_dup(a)<sp/>(ASN1_TIME<sp/>*)\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_STRING_dup((const<sp/>ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_GENERALSTRING_new()<sp/><sp/>(ASN1_GENERALSTRING<sp/>*)\</highlight></codeline>
<codeline lineno="721"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_GENERALSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_GENERALSTRING_free(a)<sp/><sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_GENERALSTRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="724"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_GENERALSTRING,\</highlight></codeline>
<codeline lineno="725"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_GENERALSTRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="727"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_GENERALSTRING<sp/>*)d2i_ASN1_type_bytes\</highlight></codeline>
<codeline lineno="728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ASN1_STRING<sp/>**)a,pp,l,B_ASN1_GENERALSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_UNIVERSALSTRING_new()<sp/><sp/><sp/><sp/>(ASN1_UNIVERSALSTRING<sp/>*)\</highlight></codeline>
<codeline lineno="731"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_UNIVERSALSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_UNIVERSALSTRING_free(a)<sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_UNIVERSALSTRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="734"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_UNIVERSALSTRING,\</highlight></codeline>
<codeline lineno="735"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_UNIVERSALSTRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="737"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_UNIVERSALSTRING<sp/>*)d2i_ASN1_type_bytes\</highlight></codeline>
<codeline lineno="738"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ASN1_STRING<sp/>**)a,pp,l,B_ASN1_UNIVERSALSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_BMPSTRING_new()<sp/><sp/>(ASN1_BMPSTRING<sp/>*)\</highlight></codeline>
<codeline lineno="741"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_BMPSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_BMPSTRING_free(a)<sp/><sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_BMPSTRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="744"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_BMPSTRING,\</highlight></codeline>
<codeline lineno="745"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_BMPSTRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="747"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_BMPSTRING<sp/>*)d2i_ASN1_type_bytes\</highlight></codeline>
<codeline lineno="748"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ASN1_STRING<sp/>**)a,pp,l,B_ASN1_BMPSTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_VISIBLESTRING_new()<sp/><sp/>(ASN1_VISIBLESTRING<sp/>*)\</highlight></codeline>
<codeline lineno="751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_VISIBLESTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_VISIBLESTRING_free(a)<sp/><sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_VISIBLESTRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_VISIBLESTRING,\</highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_VISIBLESTRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="757"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_VISIBLESTRING<sp/>*)d2i_ASN1_type_bytes\</highlight></codeline>
<codeline lineno="758"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ASN1_STRING<sp/>**)a,pp,l,B_ASN1_VISIBLESTRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_UTF8STRING_new()<sp/>(ASN1_UTF8STRING<sp/>*)\</highlight></codeline>
<codeline lineno="761"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_type_new(V_ASN1_UTF8STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_UTF8STRING_free(a)<sp/><sp/><sp/>ASN1_STRING_free((ASN1_STRING<sp/>*)a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_i2d_ASN1_UTF8STRING(a,pp)<sp/>\</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_bytes((ASN1_STRING<sp/>*)a,pp,V_ASN1_UTF8STRING,\</highlight></codeline>
<codeline lineno="765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_d2i_ASN1_UTF8STRING(a,pp,l)<sp/>\</highlight></codeline>
<codeline lineno="767"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_UTF8STRING<sp/>*)d2i_ASN1_type_bytes\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ASN1_STRING<sp/>**)a,pp,l,B_ASN1_UTF8STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>is_set<sp/>parameter<sp/>to<sp/>i2d_ASN1_SET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SEQUENCE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_SET<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal">DECLARE_ASN1_FUNCTIONS_fname(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref>,<sp/>ASN1_ANY,<sp/><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref>)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TYPE_get(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_TYPE_set(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TYPE_set1(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_TYPE_cmp(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a,<sp/><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*b);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*<sp/><sp/><sp/>ASN1_OBJECT_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_OBJECT_free(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*a);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_OBJECT(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*<sp/><sp/><sp/>c2i_ASN1_OBJECT(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*<sp/><sp/><sp/>d2i_ASN1_OBJECT(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal">DECLARE_ASN1_ITEM(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*<sp/><sp/><sp/>ASN1_STRING_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_free(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*a);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_copy(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*str);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*<sp/><sp/><sp/>ASN1_STRING_dup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*a);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*<sp/><sp/><sp/>ASN1_STRING_type_new(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*b);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>this<sp/>is<sp/>used<sp/>to<sp/>store<sp/>all<sp/>sorts<sp/>of<sp/>things,<sp/>via<sp/>macros,<sp/>for<sp/>now,<sp/>make</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>its<sp/>data<sp/>void<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRING_set0(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*str,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_length(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*x);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_STRING_length_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_type(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*x);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ASN1_STRING_data(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*x);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref>)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2c_ASN1_BIT_STRING(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*c2i_ASN1_BIT_STRING(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ASN1_BIT_STRING_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ASN1_BIT_STRING_set_bit(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ASN1_BIT_STRING_get_bit(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_BIT_STRING_check(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*a,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags_len);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_BIT_STRING_name_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*bs,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME</ref><sp/>*tbl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_BIT_STRING_num_asc(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME</ref><sp/>*tbl);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_BIT_STRING_set_asc(<ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*bs,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_b_i_t___s_t_r_i_n_g___b_i_t_n_a_m_e__st" kindref="compound">BIT_STRING_BITNAME</ref><sp/>*tbl);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_BOOLEAN(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2i_ASN1_BOOLEAN(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2c_ASN1_INTEGER(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*c2i_ASN1_INTEGER(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*d2i_ASN1_UINTEGER(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*<sp/><sp/>ASN1_INTEGER_dup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*x);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_INTEGER_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*y);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_UTCTIME_check(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*a);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*ASN1_UTCTIME_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*s,time_t<sp/>t);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*ASN1_UTCTIME_adj(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*s,<sp/>time_t<sp/>t,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_day,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset_sec);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_UTCTIME_set_string(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_UTCTIME_cmp_time_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*s,<sp/>time_t<sp/>t);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">time_t<sp/>ASN1_UTCTIME_get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*s);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_GENERALIZEDTIME_check(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*a);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*ASN1_GENERALIZEDTIME_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*s,time_t<sp/>t);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*ASN1_GENERALIZEDTIME_adj(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*s,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_day,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset_sec);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_GENERALIZEDTIME_set_string(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref>)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*<sp/>ASN1_OCTET_STRING_dup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*a);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*b);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_VISIBLESTRING</ref>)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_UNIVERSALSTRING</ref>)</highlight></codeline>
<codeline lineno="865"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTF8STRING</ref>)</highlight></codeline>
<codeline lineno="866"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(ASN1_NULL)</highlight></codeline>
<codeline lineno="867"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_BMPSTRING</ref>)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UTF8_getc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UTF8_putc(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal">DECLARE_ASN1_FUNCTIONS_name(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref>,<sp/>ASN1_PRINTABLE)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal">DECLARE_ASN1_FUNCTIONS_name(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref>,<sp/>DIRECTORYSTRING)</highlight></codeline>
<codeline lineno="875"><highlight class="normal">DECLARE_ASN1_FUNCTIONS_name(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref>,<sp/>DISPLAYTEXT)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_PRINTABLESTRING</ref>)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_T61STRING</ref>)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_IA5STRING</ref>)</highlight></codeline>
<codeline lineno="879"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALSTRING</ref>)</highlight></codeline>
<codeline lineno="880"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref>)</highlight></codeline>
<codeline lineno="881"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref>)</highlight></codeline>
<codeline lineno="882"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref>)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal">DECLARE_ASN1_ITEM(ASN1_OCTET_STRING_NDEF)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*ASN1_TIME_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s,time_t<sp/>t);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*ASN1_TIME_adj(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s,time_t<sp/>t,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_day,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset_sec);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TIME_check(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*t);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*ASN1_TIME_to_generalizedtime(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*t,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>**out);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TIME_set_string(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_ASN1_SET(STACK_OF(OPENSSL_BLOCK)<sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_of_void<sp/>*i2d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ex_tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ex_class,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_set);</highlight></codeline>
<codeline lineno="896"><highlight class="normal">STACK_OF(OPENSSL_BLOCK)<sp/>*d2i_ASN1_SET(STACK_OF(OPENSSL_BLOCK)<sp/>**a,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length,<sp/>d2i_of_void<sp/>*d2i,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*free_func)(OPENSSL_BLOCK),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ex_tag,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ex_class);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2a_ASN1_INTEGER(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*a);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a2i_ASN1_INTEGER(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*bs,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2a_ASN1_ENUMERATED(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*a);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a2i_ASN1_ENUMERATED(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*bs,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2a_ASN1_OBJECT(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*a);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a2i_ASN1_STRING(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*bs,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2a_ASN1_STRING(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2t_ASN1_OBJECT(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len,<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*a);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a2d_ASN1_OBJECT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*ASN1_OBJECT_create(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ln);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_INTEGER_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_INTEGER_get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*a);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*BN_to_ASN1_INTEGER(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*bn,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*ai);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*ASN1_INTEGER_to_BN(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*ai,<ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*bn);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_ENUMERATED_set(<ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_ENUMERATED_get(<ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*a);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*BN_to_ASN1_ENUMERATED(<ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*bn,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*ai);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*ASN1_ENUMERATED_to_BN(<ref refid="structasn1__string__st" kindref="compound">ASN1_ENUMERATED</ref><sp/>*ai,<ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*bn);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>General<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>given<sp/>a<sp/>string,<sp/>return<sp/>the<sp/>correct<sp/>type,<sp/>max<sp/>is<sp/>the<sp/>maximum<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_PRINTABLE_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_ASN1_bytes(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xclass);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*d2i_ASN1_bytes(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>**a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ptag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pclass);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_tag2bit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>type<sp/>is<sp/>one<sp/>or<sp/>more<sp/>of<sp/>the<sp/>B_ASN1_<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*d2i_ASN1_type_bytes(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PARSING<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_Finish(<ref refid="structasn1__ctx__st" kindref="compound">ASN1_CTX</ref><sp/>*c);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_const_Finish(<ref refid="structasn1__const__ctx__st" kindref="compound">ASN1_const_CTX</ref><sp/>*c);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SPECIALS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_get_object(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*plength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ptag,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pclass,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>omax);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_check_infinite_end(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**p,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_const_check_infinite_end(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**p,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_put_object(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constructed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xclass);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_put_eoc(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_object_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constructed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Used<sp/>to<sp/>implement<sp/>other<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_dup(i2d_of_void<sp/>*i2d,<sp/>d2i_of_void<sp/>*d2i,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_dup_of(type,i2d,d2i,x)<sp/>\</highlight></codeline>
<codeline lineno="957"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((type*)ASN1_dup(CHECKED_I2D_OF(type,<sp/>i2d),<sp/>\</highlight></codeline>
<codeline lineno="958"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_D2I_OF(type,<sp/>d2i),<sp/>\</highlight></codeline>
<codeline lineno="959"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PTR_OF(type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_dup_of_const(type,i2d,d2i,x)<sp/>\</highlight></codeline>
<codeline lineno="962"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((type*)ASN1_dup(CHECKED_I2D_OF(const<sp/>type,<sp/>i2d),<sp/>\</highlight></codeline>
<codeline lineno="963"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_D2I_OF(type,<sp/>d2i),<sp/>\</highlight></codeline>
<codeline lineno="964"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PTR_OF(const<sp/>type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_item_dup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASN1<sp/>alloc/free<sp/>macros<sp/>for<sp/>when<sp/>a<sp/>type<sp/>is<sp/>only<sp/>used<sp/>internally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_new_of(type)<sp/>(type<sp/>*)ASN1_item_new(ASN1_ITEM_rptr(type))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_free_of(x,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="972"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_item_free(CHECKED_PTR_OF(type,<sp/>x),<sp/>ASN1_ITEM_rptr(type))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_FP_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_d2i_fp(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*xnew)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/>d2i_of_void<sp/>*d2i,<sp/>FILE<sp/>*in,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**x);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_d2i_fp_of(type,xnew,d2i,in,x)<sp/>\</highlight></codeline>
<codeline lineno="978"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((type*)ASN1_d2i_fp(CHECKED_NEW_OF(type,<sp/>xnew),<sp/>\</highlight></codeline>
<codeline lineno="979"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_D2I_OF(type,<sp/>d2i),<sp/>\</highlight></codeline>
<codeline lineno="980"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in,<sp/>\</highlight></codeline>
<codeline lineno="981"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PPTR_OF(type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_item_d2i_fp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/>FILE<sp/>*in,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_i2d_fp(i2d_of_void<sp/>*i2d,FILE<sp/>*out,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_i2d_fp_of(type,i2d,out,x)<sp/>\</highlight></codeline>
<codeline lineno="987"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(ASN1_i2d_fp(CHECKED_I2D_OF(type,<sp/>i2d),<sp/>\</highlight></codeline>
<codeline lineno="988"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/>\</highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PTR_OF(type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_i2d_fp_of_const(type,i2d,out,x)<sp/>\</highlight></codeline>
<codeline lineno="992"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(ASN1_i2d_fp(CHECKED_I2D_OF(const<sp/>type,<sp/>i2d),<sp/>\</highlight></codeline>
<codeline lineno="993"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/>\</highlight></codeline>
<codeline lineno="994"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PTR_OF(const<sp/>type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_i2d_fp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/>FILE<sp/>*out,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_print_ex_fp(FILE<sp/>*fp,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*str,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_to_UTF8(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*in);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_d2i_bio(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*xnew)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/>d2i_of_void<sp/>*d2i,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**x);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_d2i_bio_of(type,xnew,d2i,in,x)<sp/>\</highlight></codeline>
<codeline lineno="1006"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((type*)ASN1_d2i_bio(<sp/>CHECKED_NEW_OF(type,<sp/>xnew),<sp/>\</highlight></codeline>
<codeline lineno="1007"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_D2I_OF(type,<sp/>d2i),<sp/>\</highlight></codeline>
<codeline lineno="1008"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in,<sp/>\</highlight></codeline>
<codeline lineno="1009"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PPTR_OF(type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_item_d2i_bio(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_i2d_bio(i2d_of_void<sp/>*i2d,<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_i2d_bio_of(type,i2d,out,x)<sp/>\</highlight></codeline>
<codeline lineno="1015"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(ASN1_i2d_bio(CHECKED_I2D_OF(type,<sp/>i2d),<sp/>\</highlight></codeline>
<codeline lineno="1016"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/>\</highlight></codeline>
<codeline lineno="1017"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PTR_OF(type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_i2d_bio_of_const(type,i2d,out,x)<sp/>\</highlight></codeline>
<codeline lineno="1020"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(ASN1_i2d_bio(CHECKED_I2D_OF(const<sp/>type,<sp/>i2d),<sp/>\</highlight></codeline>
<codeline lineno="1021"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/>\</highlight></codeline>
<codeline lineno="1022"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_PTR_OF(const<sp/>type,<sp/>x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_i2d_bio(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_UTCTIME_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*fp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_UTCTIME</ref><sp/>*a);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_GENERALIZEDTIME_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*fp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_GENERALIZEDTIME</ref><sp/>*a);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TIME_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*fp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*a);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*v);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_print_ex(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*str,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_bn_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*num,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_parse(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_parse_dump(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dump);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ASN1_tag2str(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Used<sp/>to<sp/>load<sp/>and<sp/>write<sp/>netscape<sp/>format<sp/>cert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(NETSCAPE_X509)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_UNIVERSALSTRING_to_string(<ref refid="structasn1__string__st" kindref="compound">ASN1_UNIVERSALSTRING</ref><sp/>*s);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TYPE_set_octetstring(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TYPE_get_octetstring(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_len);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TYPE_set_int_octetstring(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_TYPE_get_int_octetstring(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*a,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*num,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_len);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal">STACK_OF(OPENSSL_BLOCK)<sp/>*ASN1_seq_unpack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2i_of_void<sp/>*d2i,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*free_func)(OPENSSL_BLOCK));</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ASN1_seq_pack(STACK_OF(OPENSSL_BLOCK)<sp/>*safes,<sp/>i2d_of_void<sp/>*i2d,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len<sp/>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_unpack_string(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*oct,<sp/>d2i_of_void<sp/>*d2i);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ASN1_item_unpack(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*oct,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*ASN1_pack_string(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/>i2d_of_void<sp/>*i2d,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>**oct);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_pack_string_of(type,obj,i2d,oct)<sp/>\</highlight></codeline>
<codeline lineno="1062"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(ASN1_pack_string(CHECKED_PTR_OF(type,<sp/>obj),<sp/>\</highlight></codeline>
<codeline lineno="1063"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECKED_I2D_OF(type,<sp/>i2d),<sp/>\</highlight></codeline>
<codeline lineno="1064"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oct))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*ASN1_item_pack(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>**oct);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_STRING_set_default_mask(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mask);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_set_default_mask_asc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_STRING_get_default_mask(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_mbstring_copy(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inform,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mask);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_mbstring_ncopy(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inform,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mask,<sp/></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minsize,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxsize);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*ASN1_STRING_set_by_NID(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>**out,<sp/></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inform,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><ref refid="structasn1__string__table__st" kindref="compound">ASN1_STRING_TABLE</ref><sp/>*ASN1_STRING_TABLE_get(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_STRING_TABLE_add(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_STRING_TABLE_cleanup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASN1<sp/>template<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Old<sp/>API<sp/>compatible<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal">ASN1_VALUE<sp/>*ASN1_item_new(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_item_free(ASN1_VALUE<sp/>*val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">ASN1_VALUE<sp/>*<sp/>ASN1_item_d2i(ASN1_VALUE<sp/>**val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_i2d(ASN1_VALUE<sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_ndef_i2d(ASN1_VALUE<sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_add_oid_module(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*ASN1_generate_nconf(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*nconf);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*ASN1_generate_v3(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="structv3__ext__ctx" kindref="compound">X509V3_CTX</ref><sp/>*cnf);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASN1<sp/>Print<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Indicate<sp/>missing<sp/>OPTIONAL<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_SHOW_ABSENT<sp/><sp/><sp/><sp/><sp/>0x001<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Mark<sp/>start<sp/>and<sp/>end<sp/>of<sp/>SEQUENCE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_SHOW_SEQUENCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Mark<sp/>start<sp/>and<sp/>end<sp/>of<sp/>SEQUENCE/SET<sp/>OF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_SHOW_SSOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Show<sp/>the<sp/>ASN1<sp/>type<sp/>of<sp/>primitives<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_SHOW_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>show<sp/>ASN1<sp/>type<sp/>of<sp/>ANY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_NO_ANY_TYPE<sp/><sp/><sp/><sp/><sp/>0x010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>show<sp/>ASN1<sp/>type<sp/>of<sp/>MSTRINGs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_NO_MSTRING_TYPE<sp/><sp/><sp/><sp/><sp/>0x020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>show<sp/>field<sp/>names<sp/>in<sp/>SEQUENCE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_NO_FIELD_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Show<sp/>structure<sp/>names<sp/>of<sp/>each<sp/>SEQUENCE<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME<sp/><sp/>0x080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>show<sp/>structure<sp/>name<sp/>even<sp/>at<sp/>top<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_PCTX_FLAGS_NO_STRUCT_NAME<sp/><sp/><sp/><sp/><sp/><sp/>0x100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/>ASN1_VALUE<sp/>*ifld,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ASN1_PCTX<sp/>*pctx);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">ASN1_PCTX<sp/>*ASN1_PCTX_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_PCTX_free(ASN1_PCTX<sp/>*p);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_PCTX_get_flags(ASN1_PCTX<sp/>*p);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_PCTX_set_flags(ASN1_PCTX<sp/>*p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_PCTX_get_nm_flags(ASN1_PCTX<sp/>*p);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_PCTX_set_nm_flags(ASN1_PCTX<sp/>*p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_PCTX_get_cert_flags(ASN1_PCTX<sp/>*p);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_PCTX_set_cert_flags(ASN1_PCTX<sp/>*p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_PCTX_get_oid_flags(ASN1_PCTX<sp/>*p);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_PCTX_set_oid_flags(ASN1_PCTX<sp/>*p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ASN1_PCTX_get_str_flags(ASN1_PCTX<sp/>*p);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_PCTX_set_str_flags(ASN1_PCTX<sp/>*p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><ref refid="structbio__method__st" kindref="compound">BIO_METHOD</ref><sp/>*BIO_f_asn1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*BIO_new_NDEF(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/>ASN1_VALUE<sp/>*val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_ASN1_bio_stream(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/>ASN1_VALUE<sp/>*val,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write_bio_ASN1_stream(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/>ASN1_VALUE<sp/>*val,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hdr,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMIME_write_ASN1(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bio,<sp/>ASN1_VALUE<sp/>*val,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctype_nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>econt_nid,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref>)<sp/>*mdalgs,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">ASN1_VALUE<sp/>*SMIME_read_ASN1(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bio,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>**bcont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMIME_crlf_copy(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMIME_text(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_ASN1_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>ASN1<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_A2D_ASN1_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_A2I_ASN1_ENUMERATED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_A2I_ASN1_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_A2I_ASN1_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_APPEND_EXP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>176</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_BIT_STRING_SET_BIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>183</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_CB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>177</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_CHECK_TLEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_COLLATE_PRIMITIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_COLLECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_D2I_EX_PRIMITIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_D2I_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_D2I_READ_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_DIGEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>184</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_DO_ADB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_DUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ENUMERATED_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ENUMERATED_TO_BN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_EX_C2I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>204</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_FIND_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>190</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_GENERALIZEDTIME_ADJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>216</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_GENERALIZEDTIME_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>185</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_GENERATE_V3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>178</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_GET_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_HEADER_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_I2D_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_I2D_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_INTEGER_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_INTEGER_TO_BN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_D2I_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>206</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_DUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>191</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_EX_COMBINE_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_EX_D2I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_I2D_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>192</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_I2D_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>193</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_PACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>198</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_SIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>195</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_SIGN_CTX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>220</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_UNPACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>199</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_ITEM_VERIFY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>197</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_MBSTRING_NCOPY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>122</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_OBJECT_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_OUTPUT_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>214</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_PACK_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_PCTX_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>205</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_PKCS5_PBE_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_SEQ_PACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_SEQ_UNPACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_SIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_STR2TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>179</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_STRING_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>186</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_STRING_TABLE_ADD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>129</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_STRING_TYPE_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_TEMPLATE_EX_D2I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>132</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_TEMPLATE_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>133</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_TEMPLATE_NOEXP_D2I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>131</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_TIME_ADJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>217</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_TIME_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>175</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>134</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_TYPE_GET_OCTETSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>135</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_UNPACK_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_UTCTIME_ADJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>218</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_UTCTIME_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>187</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_ASN1_VERIFY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>137</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_B64_READ_ASN1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>209</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_B64_WRITE_ASN1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>210</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_BIO_NEW_NDEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>208</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_BITSTR_CB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_BN_TO_ASN1_ENUMERATED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>138</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_BN_TO_ASN1_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>139</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_C2I_ASN1_BIT_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>189</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_C2I_ASN1_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>194</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_C2I_ASN1_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>196</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_COLLECT_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>140</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_BIT_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>141</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_BOOLEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>142</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_BYTES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>143</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_GENERALIZEDTIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>144</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>145</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>146</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>147</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>148</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_TYPE_BYTES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>149</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_UINTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_ASN1_UTCTIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>151</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_AUTOPRIVATEKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>207</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_NETSCAPE_RSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>152</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_NETSCAPE_RSA_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>153</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_PRIVATEKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>154</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_PUBLICKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>155</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_RSA_NET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_RSA_NET_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>201</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_X509<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>156</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_X509_CINF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>157</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_D2I_X509_PKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>159</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_ASN1_BIO_STREAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>211</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_ASN1_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>188</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_ASN1_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>160</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_DSA_PUBKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>161</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_EC_PUBKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>181</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_PRIVATEKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>163</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_PUBLICKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>164</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_RSA_NET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>162</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_I2D_RSA_PUBKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>165</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_LONG_C2I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>166</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_OID_MODULE_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>174</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_PARSE_TAGGING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>182</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_PKCS5_PBE2_SET_IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>167</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_PKCS5_PBE_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>202</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_PKCS5_PBE_SET0_ALGOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>215</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_PKCS5_PBKDF2_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>219</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_SMIME_READ_ASN1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>212</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_SMIME_TEXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>213</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_CINF_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>168</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_CRL_ADD0_REVOKED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>169</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_INFO_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>170</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_NAME_ENCODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>203</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_NAME_EX_D2I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>158</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_NAME_EX_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>171</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>172</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_F_X509_PKEY_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>173</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ADDING_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>171</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ASN1_PARSE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>203</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ASN1_SIG_PARSE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>204</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_AUX_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BAD_CLASS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BAD_OBJECT_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BAD_PASSWORD_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BAD_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BMPSTRING_IS_WRONG_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>214</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BN_LIB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BOOLEAN_IS_WRONG_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_BUFFER_TOO_SMALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER<sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_CONTEXT_NOT_INITIALISED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>217</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_DATA_IS_WRONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_DECODE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_DECODING_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_DEPTH_EXCEEDED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>174</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/>198</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ENCODE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ERROR_GETTING_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>173</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ERROR_LOADING_SECTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>172</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ERROR_PARSING_SET_ELEMENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ERROR_SETTING_CIPHER_PARAMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_EXPECTING_AN_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_EXPECTING_AN_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_EXPECTING_A_BOOLEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_EXPECTING_A_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_EXPLICIT_LENGTH_MISMATCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED<sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_FIELD_MISSING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_FIRST_NUM_TOO_LARGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>122</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_HEADER_TOO_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_BITSTRING_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>175</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_BOOLEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>176</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_CHARACTERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>177</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_HEX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>178</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_IMPLICIT_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>179</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_NESTED_TAGGING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>181</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_NULL_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>182</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>183</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_OPTIONAL_ANY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE<sp/><sp/><sp/><sp/><sp/><sp/>170</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_TAGGED_ANY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ILLEGAL_TIME_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>184</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INTEGER_NOT_ASCII_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>185</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INTEGER_TOO_LARGE_FOR_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_BMPSTRING_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>129</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_DIGIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_MIME_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>205</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_MODIFIER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>186</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>187</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_OBJECT_ENCODING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>216</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_SEPARATOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>131</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_TIME_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>132</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_UNIVERSALSTRING_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>133</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_INVALID_UTF8STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>134</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_IV_TOO_LARGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>135</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_LENGTH_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_LIST_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>188</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MIME_NO_CONTENT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>206</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MIME_PARSE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>207</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MIME_SIG_PARSE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>208</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MISSING_EOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>137</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MISSING_SECOND_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>138</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MISSING_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>189</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MSTRING_NOT_UNIVERSAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>139</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_MSTRING_WRONG_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>140</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NESTED_ASN1_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>197</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NON_HEX_CHARACTERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>141</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NOT_ASCII_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>190</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NOT_ENOUGH_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>142</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NO_CONTENT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>209</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NO_DEFAULT_DIGEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>201</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NO_MATCHING_CHOICE_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>143</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NO_MULTIPART_BODY_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>210</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NO_MULTIPART_BOUNDARY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>211</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NO_SIG_CONTENT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>212</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_NULL_IS_WRONG_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>144</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_OBJECT_NOT_ASCII_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>191</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_ODD_NUMBER_OF_CHARS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>145</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_PRIVATE_KEY_HEADER_MISSING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>146</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_SECOND_NUMBER_TOO_LARGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>147</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_SEQUENCE_LENGTH_MISMATCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>148</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_SEQUENCE_NOT_CONSTRUCTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>149</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG<sp/><sp/><sp/><sp/><sp/><sp/>192</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_SHORT_LINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_SIG_INVALID_MIME_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>213</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_STREAMING_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>202</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_STRING_TOO_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>151</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_STRING_TOO_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>152</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_TAG_VALUE_TOO_HIGH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>153</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD<sp/>154</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_TIME_NOT_ASCII_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>193</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_TOO_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>155</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_TYPE_NOT_CONSTRUCTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>156</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNABLE_TO_DECODE_RSA_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>157</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNABLE_TO_DECODE_RSA_PRIVATE_KEY<sp/><sp/><sp/><sp/><sp/><sp/>158</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNEXPECTED_EOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>159</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>215</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNKNOWN_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>160</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM<sp/><sp/><sp/><sp/><sp/><sp/>161</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNKNOWN_OBJECT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>162</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>163</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>199</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNKNOWN_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>194</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNKOWN_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>195</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>164</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNSUPPORTED_CIPHER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>165</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNSUPPORTED_ENCRYPTION_ALGORITHM<sp/><sp/><sp/><sp/><sp/><sp/>166</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>167</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_UNSUPPORTED_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>196</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_WRONG_PUBLIC_KEY_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_WRONG_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>168</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_R_WRONG_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>169</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/asn1.h"/>
  </compounddef>
</doxygen>
