<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_x_ref_8h" kind="file" language="C++">
    <compoundname>XRef.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_goo_mutex_8h" local="yes">goo/GooMutex.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_stream_8h" local="yes">Stream.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="_p_d_f_doc_8h" local="yes">thirdparty/poppler/poppler/PDFDoc.h</includedby>
    <includedby refid="_annot_8cc" local="yes">thirdparty/poppler/poppler/Annot.cc</includedby>
    <includedby refid="_cairo_font_engine_8cc" local="yes">thirdparty/poppler/poppler/CairoFontEngine.cc</includedby>
    <includedby refid="_catalog_8cc" local="yes">thirdparty/poppler/poppler/Catalog.cc</includedby>
    <includedby refid="_dict_8cc" local="yes">thirdparty/poppler/poppler/Dict.cc</includedby>
    <includedby refid="_form_8cc" local="yes">thirdparty/poppler/poppler/Form.cc</includedby>
    <includedby refid="_hints_8cc" local="yes">thirdparty/poppler/poppler/Hints.cc</includedby>
    <includedby refid="_lexer_8cc" local="yes">thirdparty/poppler/poppler/Lexer.cc</includedby>
    <includedby refid="_object_8cc" local="yes">thirdparty/poppler/poppler/Object.cc</includedby>
    <includedby refid="_outline_8cc" local="yes">thirdparty/poppler/poppler/Outline.cc</includedby>
    <includedby refid="_page_8cc" local="yes">thirdparty/poppler/poppler/Page.cc</includedby>
    <includedby refid="_parser_8cc" local="yes">thirdparty/poppler/poppler/Parser.cc</includedby>
    <includedby refid="_p_d_f_doc_8cc" local="yes">thirdparty/poppler/poppler/PDFDoc.cc</includedby>
    <includedby refid="_poppler_cache_8cc" local="yes">thirdparty/poppler/poppler/PopplerCache.cc</includedby>
    <includedby refid="_p_s_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PSOutputDev.cc</includedby>
    <includedby refid="_stream_8cc" local="yes">thirdparty/poppler/poppler/Stream.cc</includedby>
    <includedby refid="_x_ref_8cc" local="yes">thirdparty/poppler/poppler/XRef.cc</includedby>
    <incdepgraph>
      <node id="90617">
        <label>stdarg.h</label>
      </node>
      <node id="90605">
        <label>thirdparty/poppler/poppler/XRef.h</label>
        <link refid="_x_ref_8h"/>
        <childnode refid="90606" relation="include">
        </childnode>
        <childnode refid="90608" relation="include">
        </childnode>
        <childnode refid="90609" relation="include">
        </childnode>
        <childnode refid="90611" relation="include">
        </childnode>
        <childnode refid="90623" relation="include">
        </childnode>
        <childnode refid="90624" relation="include">
        </childnode>
      </node>
      <node id="90618">
        <label>stdlib.h</label>
      </node>
      <node id="90614">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="90607" relation="include">
        </childnode>
        <childnode refid="90606" relation="include">
        </childnode>
      </node>
      <node id="90621">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="90606" relation="include">
        </childnode>
        <childnode refid="90611" relation="include">
        </childnode>
        <childnode refid="90609" relation="include">
        </childnode>
      </node>
      <node id="90620">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="90617" relation="include">
        </childnode>
        <childnode refid="90606" relation="include">
        </childnode>
        <childnode refid="90608" relation="include">
        </childnode>
        <childnode refid="90615" relation="include">
        </childnode>
      </node>
      <node id="90622">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="90606" relation="include">
        </childnode>
        <childnode refid="90611" relation="include">
        </childnode>
        <childnode refid="90609" relation="include">
        </childnode>
      </node>
      <node id="90616">
        <label>limits.h</label>
      </node>
      <node id="90606">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="90607" relation="include">
        </childnode>
      </node>
      <node id="90619">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="90623">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="90606" relation="include">
        </childnode>
        <childnode refid="90607" relation="include">
        </childnode>
        <childnode refid="90608" relation="include">
        </childnode>
        <childnode refid="90611" relation="include">
        </childnode>
        <childnode refid="90609" relation="include">
        </childnode>
      </node>
      <node id="90610">
        <label>pthread.h</label>
      </node>
      <node id="90613">
        <label>string.h</label>
      </node>
      <node id="90615">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="90616" relation="include">
        </childnode>
        <childnode refid="90617" relation="include">
        </childnode>
        <childnode refid="90618" relation="include">
        </childnode>
        <childnode refid="90608" relation="include">
        </childnode>
      </node>
      <node id="90611">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="90612" relation="include">
        </childnode>
        <childnode refid="90607" relation="include">
        </childnode>
        <childnode refid="90613" relation="include">
        </childnode>
        <childnode refid="90608" relation="include">
        </childnode>
        <childnode refid="90614" relation="include">
        </childnode>
        <childnode refid="90615" relation="include">
        </childnode>
        <childnode refid="90619" relation="include">
        </childnode>
        <childnode refid="90620" relation="include">
        </childnode>
        <childnode refid="90621" relation="include">
        </childnode>
        <childnode refid="90622" relation="include">
        </childnode>
        <childnode refid="90623" relation="include">
        </childnode>
      </node>
      <node id="90624">
        <label>vector</label>
      </node>
      <node id="90609">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="90610" relation="include">
        </childnode>
      </node>
      <node id="90608">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="90606" relation="include">
        </childnode>
      </node>
      <node id="90612">
        <label>set</label>
      </node>
      <node id="90607">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="90645">
        <label>thirdparty/poppler/poppler/PDFDoc.cc</label>
        <link refid="_p_d_f_doc_8cc_source"/>
      </node>
      <node id="90638">
        <label>thirdparty/poppler/poppler/StdinPDFDocBuilder.h</label>
        <link refid="_stdin_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90637" relation="include">
        </childnode>
        <childnode refid="90639" relation="include">
        </childnode>
      </node>
      <node id="90629">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="90640">
        <label>thirdparty/poppler/poppler/FontInfo.cc</label>
        <link refid="_font_info_8cc_source"/>
      </node>
      <node id="90634">
        <label>thirdparty/poppler/poppler/CurlPDFDocBuilder.cc</label>
        <link refid="_curl_p_d_f_doc_builder_8cc_source"/>
      </node>
      <node id="90625">
        <label>thirdparty/poppler/poppler/XRef.h</label>
        <link refid="_x_ref_8h"/>
        <childnode refid="90626" relation="include">
        </childnode>
        <childnode refid="90627" relation="include">
        </childnode>
        <childnode refid="90629" relation="include">
        </childnode>
        <childnode refid="90631" relation="include">
        </childnode>
        <childnode refid="90667" relation="include">
        </childnode>
        <childnode refid="90641" relation="include">
        </childnode>
        <childnode refid="90644" relation="include">
        </childnode>
        <childnode refid="90668" relation="include">
        </childnode>
        <childnode refid="90669" relation="include">
        </childnode>
        <childnode refid="90670" relation="include">
        </childnode>
        <childnode refid="90646" relation="include">
        </childnode>
        <childnode refid="90671" relation="include">
        </childnode>
        <childnode refid="90645" relation="include">
        </childnode>
        <childnode refid="90672" relation="include">
        </childnode>
        <childnode refid="90648" relation="include">
        </childnode>
        <childnode refid="90673" relation="include">
        </childnode>
        <childnode refid="90674" relation="include">
        </childnode>
      </node>
      <node id="90654">
        <label>thirdparty/poppler/qt5/poppler-annotation.cc</label>
        <link refid="poppler-annotation_8cc_source"/>
      </node>
      <node id="90655">
        <label>thirdparty/poppler/qt5/poppler-document.cc</label>
        <link refid="poppler-document_8cc_source"/>
      </node>
      <node id="90669">
        <label>thirdparty/poppler/poppler/Object.cc</label>
        <link refid="_object_8cc_source"/>
      </node>
      <node id="90661">
        <label>thirdparty/poppler/qt5/poppler-optcontent.cc</label>
        <link refid="poppler-optcontent_8cc_source"/>
      </node>
      <node id="90660">
        <label>thirdparty/poppler/qt5/poppler-media.cc</label>
        <link refid="poppler-media_8cc_source"/>
      </node>
      <node id="90653">
        <label>thirdparty/poppler/qt5/poppler-private.h</label>
        <link refid="poppler-private_8h_source"/>
        <childnode refid="90654" relation="include">
        </childnode>
        <childnode refid="90655" relation="include">
        </childnode>
        <childnode refid="90656" relation="include">
        </childnode>
        <childnode refid="90657" relation="include">
        </childnode>
        <childnode refid="90658" relation="include">
        </childnode>
        <childnode refid="90659" relation="include">
        </childnode>
        <childnode refid="90660" relation="include">
        </childnode>
        <childnode refid="90661" relation="include">
        </childnode>
        <childnode refid="90662" relation="include">
        </childnode>
        <childnode refid="90663" relation="include">
        </childnode>
        <childnode refid="90664" relation="include">
        </childnode>
        <childnode refid="90665" relation="include">
        </childnode>
        <childnode refid="90666" relation="include">
        </childnode>
      </node>
      <node id="90662">
        <label>thirdparty/poppler/qt5/poppler-page.cc</label>
        <link refid="poppler-page_8cc_source"/>
      </node>
      <node id="90626">
        <label>thirdparty/poppler/poppler/PDFDoc.h</label>
        <link refid="_p_d_f_doc_8h_source"/>
        <childnode refid="90627" relation="include">
        </childnode>
        <childnode refid="90628" relation="include">
        </childnode>
        <childnode refid="90631" relation="include">
        </childnode>
        <childnode refid="90632" relation="include">
        </childnode>
        <childnode refid="90640" relation="include">
        </childnode>
        <childnode refid="90641" relation="include">
        </childnode>
        <childnode refid="90642" relation="include">
        </childnode>
        <childnode refid="90643" relation="include">
        </childnode>
        <childnode refid="90646" relation="include">
        </childnode>
        <childnode refid="90645" relation="include">
        </childnode>
        <childnode refid="90647" relation="include">
        </childnode>
        <childnode refid="90637" relation="include">
        </childnode>
        <childnode refid="90648" relation="include">
        </childnode>
        <childnode refid="90649" relation="include">
        </childnode>
        <childnode refid="90650" relation="include">
        </childnode>
        <childnode refid="90651" relation="include">
        </childnode>
        <childnode refid="90652" relation="include">
        </childnode>
        <childnode refid="90653" relation="include">
        </childnode>
        <childnode refid="90655" relation="include">
        </childnode>
        <childnode refid="90662" relation="include">
        </childnode>
      </node>
      <node id="90671">
        <label>thirdparty/poppler/poppler/Parser.cc</label>
        <link refid="_parser_8cc_source"/>
      </node>
      <node id="90647">
        <label>thirdparty/poppler/poppler/PDFDocFactory.h</label>
        <link refid="_p_d_f_doc_factory_8h_source"/>
        <childnode refid="90637" relation="include">
        </childnode>
      </node>
      <node id="90665">
        <label>thirdparty/poppler/qt5/poppler-ps-converter.cc</label>
        <link refid="poppler-ps-converter_8cc_source"/>
      </node>
      <node id="90663">
        <label>thirdparty/poppler/qt5/poppler-pdf-converter.cc</label>
        <link refid="poppler-pdf-converter_8cc_source"/>
      </node>
      <node id="90644">
        <label>thirdparty/poppler/poppler/Hints.cc</label>
        <link refid="_hints_8cc_source"/>
      </node>
      <node id="90651">
        <label>thirdparty/poppler/poppler/StructElement.cc</label>
        <link refid="_struct_element_8cc_source"/>
      </node>
      <node id="90659">
        <label>thirdparty/poppler/qt5/poppler-link.cc</label>
        <link refid="poppler-link_8cc_source"/>
      </node>
      <node id="90633">
        <label>thirdparty/poppler/poppler/CurlPDFDocBuilder.h</label>
        <link refid="_curl_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90634" relation="include">
        </childnode>
      </node>
      <node id="90643">
        <label>thirdparty/poppler/poppler/Hints.h</label>
        <link refid="_hints_8h_source"/>
        <childnode refid="90644" relation="include">
        </childnode>
        <childnode refid="90645" relation="include">
        </childnode>
      </node>
      <node id="90637">
        <label>thirdparty/poppler/poppler/PDFDocFactory.cc</label>
        <link refid="_p_d_f_doc_factory_8cc_source"/>
      </node>
      <node id="90664">
        <label>thirdparty/poppler/qt5/poppler-private.cc</label>
        <link refid="poppler-private_8cc_source"/>
      </node>
      <node id="90670">
        <label>thirdparty/poppler/poppler/Outline.cc</label>
        <link refid="_outline_8cc_source"/>
      </node>
      <node id="90657">
        <label>thirdparty/poppler/qt5/poppler-fontinfo.cc</label>
        <link refid="poppler-fontinfo_8cc_source"/>
      </node>
      <node id="90632">
        <label>thirdparty/poppler/poppler/PDFDocBuilder.h</label>
        <link refid="_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90633" relation="include">
        </childnode>
        <childnode refid="90635" relation="include">
        </childnode>
        <childnode refid="90638" relation="include">
        </childnode>
      </node>
      <node id="90630">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="90674">
        <label>thirdparty/poppler/poppler/XRef.cc</label>
        <link refid="_x_ref_8cc_source"/>
      </node>
      <node id="90673">
        <label>thirdparty/poppler/poppler/Stream.cc</label>
        <link refid="_stream_8cc_source"/>
      </node>
      <node id="90631">
        <label>thirdparty/poppler/poppler/Catalog.cc</label>
        <link refid="_catalog_8cc_source"/>
      </node>
      <node id="90650">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="90668">
        <label>thirdparty/poppler/poppler/Lexer.cc</label>
        <link refid="_lexer_8cc_source"/>
      </node>
      <node id="90639">
        <label>thirdparty/poppler/poppler/StdinPDFDocBuilder.cc</label>
        <link refid="_stdin_p_d_f_doc_builder_8cc_source"/>
      </node>
      <node id="90666">
        <label>thirdparty/poppler/qt5/poppler-textbox.cc</label>
        <link refid="poppler-textbox_8cc_source"/>
      </node>
      <node id="90658">
        <label>thirdparty/poppler/qt5/poppler-form.cc</label>
        <link refid="poppler-form_8cc_source"/>
      </node>
      <node id="90648">
        <label>thirdparty/poppler/poppler/PSOutputDev.cc</label>
        <link refid="_p_s_output_dev_8cc_source"/>
      </node>
      <node id="90646">
        <label>thirdparty/poppler/poppler/Page.cc</label>
        <link refid="_page_8cc_source"/>
      </node>
      <node id="90636">
        <label>thirdparty/poppler/poppler/LocalPDFDocBuilder.cc</label>
        <link refid="_local_p_d_f_doc_builder_8cc_source"/>
      </node>
      <node id="90667">
        <label>thirdparty/poppler/poppler/Dict.cc</label>
        <link refid="_dict_8cc_source"/>
      </node>
      <node id="90627">
        <label>thirdparty/poppler/poppler/Annot.cc</label>
        <link refid="_annot_8cc_source"/>
      </node>
      <node id="90652">
        <label>thirdparty/poppler/poppler/StructTreeRoot.cc</label>
        <link refid="_struct_tree_root_8cc_source"/>
      </node>
      <node id="90635">
        <label>thirdparty/poppler/poppler/LocalPDFDocBuilder.h</label>
        <link refid="_local_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90636" relation="include">
        </childnode>
        <childnode refid="90637" relation="include">
        </childnode>
      </node>
      <node id="90642">
        <label>thirdparty/poppler/poppler/Gfx.cc</label>
        <link refid="_gfx_8cc_source"/>
      </node>
      <node id="90672">
        <label>thirdparty/poppler/poppler/PopplerCache.cc</label>
        <link refid="_poppler_cache_8cc_source"/>
      </node>
      <node id="90656">
        <label>thirdparty/poppler/qt5/poppler-embeddedfile.cc</label>
        <link refid="poppler-embeddedfile_8cc_source"/>
      </node>
      <node id="90649">
        <label>thirdparty/poppler/poppler/SecurityHandler.cc</label>
        <link refid="_security_handler_8cc_source"/>
      </node>
      <node id="90641">
        <label>thirdparty/poppler/poppler/Form.cc</label>
        <link refid="_form_8cc_source"/>
      </node>
      <node id="90628">
        <label>thirdparty/poppler/poppler/CairoFontEngine.h</label>
        <link refid="_cairo_font_engine_8h_source"/>
        <childnode refid="90629" relation="include">
        </childnode>
        <childnode refid="90630" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_x_ref_entry" prot="public">XRefEntry</innerclass>
    <innerclass refid="class_x_ref" prot="public">XRef</innerclass>
    <innerclass refid="class_x_ref_1_1_x_ref_writer" prot="private">XRef::XRefWriter</innerclass>
    <innerclass refid="class_x_ref_1_1_x_ref_table_writer" prot="private">XRef::XRefTableWriter</innerclass>
    <innerclass refid="class_x_ref_1_1_x_ref_stream_writer" prot="private">XRef::XRefStreamWriter</innerclass>
    <innerclass refid="class_x_ref_1_1_x_ref_pre_scan_writer" prot="private">XRef::XRefPreScanWriter</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_x_ref_8h_1a7ae8fd69db72f9a1af5519bc0afba15d" prot="public" static="no">
        <name>XRefEntryType</name>
        <enumvalue id="_x_ref_8h_1a7ae8fd69db72f9a1af5519bc0afba15da0edfff02b719dfceab8937eac6125414" prot="public">
          <name>xrefEntryFree</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_x_ref_8h_1a7ae8fd69db72f9a1af5519bc0afba15da23aa20265ffaff4be9bb53701ecf2626" prot="public">
          <name>xrefEntryUncompressed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_x_ref_8h_1a7ae8fd69db72f9a1af5519bc0afba15daaf94edd5f862f75cd1394c4412d715e1" prot="public">
          <name>xrefEntryCompressed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_x_ref_8h_1a7ae8fd69db72f9a1af5519bc0afba15da42bea4c95d09f4b8059a4850de0ab26c" prot="public">
          <name>xrefEntryNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/XRef.h" line="55" column="1" bodyfile="thirdparty/poppler/poppler/XRef.h" bodystart="55" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XRef.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Brad<sp/>Hards<sp/>&lt;bradh@frogmouth.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006,<sp/>2008,<sp/>2010-2013<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007-2008<sp/>Julien<sp/>Rebetez<sp/>&lt;julienr@svn.gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Ilya<sp/>Gorenbein<sp/>&lt;igorenbein@finjan.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Hib<sp/>Eris<sp/>&lt;hib@hiberis.nl&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012,<sp/>2013,<sp/>2016<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@kabelmail.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012,<sp/>2013<sp/>Fabio<sp/>D&apos;Urso<sp/>&lt;fabiodurso@hotmail.it&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XREF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XREF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooMutex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Stream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dict" kindref="compound">Dict</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stream" kindref="compound">Stream</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_parser" kindref="compound">Parser</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_poppler_cache" kindref="compound">PopplerCache</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XRefEntryType<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>xrefEntryFree,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>xrefEntryUncompressed,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>xrefEntryCompressed,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>xrefEntryNone</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="struct_x_ref_entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x_ref_entry" kindref="compound">XRefEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>Goffset<sp/>offset;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gen;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>XRefEntryType<sp/>type;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj;<sp/></highlight><highlight class="comment">//if<sp/>this<sp/>entry<sp/>was<sp/>updated,<sp/>obj<sp/>will<sp/>contains<sp/>the<sp/>updated<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Flag<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Updated,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entry<sp/>was<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>flags<sp/>--<sp/>available<sp/>only<sp/>after<sp/>xref-&gt;scanSpecialFlags()<sp/>is<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Unencrypted,<sp/></highlight><highlight class="comment">//<sp/>Entry<sp/>is<sp/>stored<sp/>in<sp/>unencrypted<sp/>form<sp/>(meaningless<sp/>in<sp/>unencrypted<sp/>documents)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>DontRewrite<sp/><sp/></highlight><highlight class="comment">//<sp/>Entry<sp/>must<sp/>not<sp/>be<sp/>written<sp/>back<sp/>in<sp/>case<sp/>of<sp/>full<sp/>rewrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>GBool<sp/>getFlag(Flag<sp/>flag)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(int)flag);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>mask)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFlag(Flag<sp/>flag,<sp/>GBool<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(int)flag);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_x_ref" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor,<sp/>create<sp/>an<sp/>empty<sp/>XRef,<sp/>used<sp/>for<sp/>PDF<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor,<sp/>create<sp/>an<sp/>empty<sp/>XRef<sp/>but<sp/>with<sp/>info<sp/>dict,<sp/>used<sp/>for<sp/>PDF<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref>(<ref refid="class_object" kindref="compound">Object</ref><sp/>*trailerDictA);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.<sp/><sp/>Read<sp/>xref<sp/>table<sp/>from<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref>(<ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*strA,<sp/>Goffset<sp/>pos,<sp/>Goffset<sp/>mainXRefEntriesOffsetA<sp/>=<sp/>0,<sp/>GBool<sp/>*wasReconstructed<sp/>=<sp/>NULL,<sp/>GBool<sp/>reconstruct<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>~<ref refid="class_x_ref" kindref="compound">XRef</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>xref<sp/>but<sp/>with<sp/>new<sp/>base<sp/>stream!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>xref<sp/>table<sp/>valid?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>GBool<sp/>isOk()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>last<sp/>XRef<sp/>section<sp/>a<sp/>stream<sp/>or<sp/>a<sp/>table?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>GBool<sp/>isXRefStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xRefStream;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>error<sp/>code<sp/>(if<sp/>isOk()<sp/>returns<sp/>false).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getErrorCode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errCode;<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>encryption<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEncryption(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>permFlagsA,<sp/>GBool<sp/>ownerPasswordOkA,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>*fileKeyA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyLengthA,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encVersionA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encRevisionA,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CryptAlgorithm<sp/>encAlgorithmA);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>Encrypt<sp/>entry<sp/>as<sp/>Unencrypted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markUnencrypted();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getEncryptionParameters(Guchar<sp/>**fileKeyA,<sp/>CryptAlgorithm<sp/>*encAlgorithmA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*keyLengthA);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>file<sp/>encrypted?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>GBool<sp/>isEncrypted()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encrypted;<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>various<sp/>permissions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>GBool<sp/>okToPrint(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>GBool<sp/>okToPrintHighRes(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>GBool<sp/>okToChange(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>GBool<sp/>okToCopy(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>GBool<sp/>okToAddNotes(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>GBool<sp/>okToFillForm(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>GBool<sp/>okToAccessibility(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>GBool<sp/>okToAssemble(GBool<sp/>ignoreOwnerPW<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPermFlags()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>permFlags;<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>catalog<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getCatalog(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>an<sp/>indirect<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*fetch(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gen,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>document&apos;s<sp/>Info<sp/>dictionary<sp/>(if<sp/>any).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getDocInfo(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getDocInfoNF(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>objects<sp/>in<sp/>the<sp/>xref<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumObjects()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>catalog<sp/>object<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRootNum()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rootNum;<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRootGen()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rootGen;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>end<sp/>position<sp/>for<sp/>a<sp/>stream<sp/>in<sp/>a<sp/>damaged<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>unknown<sp/>or<sp/>file<sp/>is<sp/>not<sp/>damaged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>GBool<sp/>getStreamEnd(Goffset<sp/>streamStart,<sp/>Goffset<sp/>*streamEnd);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retuns<sp/>the<sp/>entry<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumEntry(Goffset<sp/>offset);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scans<sp/>the<sp/>document<sp/>and<sp/>sets<sp/>special<sp/>flags<sp/>in<sp/>all<sp/>xref<sp/>entries.<sp/>One<sp/>of<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flags<sp/>is<sp/>Unencrypted,<sp/>which<sp/>affects<sp/>how<sp/>the<sp/>object<sp/>is<sp/>fetched.<sp/>Therefore,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>must<sp/>be<sp/>called<sp/>before<sp/>fetching<sp/>unencrypted<sp/>objects<sp/>(e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Encrypt<sp/>dictionary,<sp/>XRef<sp/>streams).<sp/>Note<sp/>that<sp/>the<sp/>code<sp/>that<sp/>initializes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decryption<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>call<sp/>this<sp/>function,<sp/>because<sp/>it<sp/>runs<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decryption<sp/>is<sp/>enabled,<sp/>and<sp/>therefore<sp/>the<sp/>Unencrypted<sp/>flag<sp/>is<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scanSpecialFlags();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Direct<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="struct_x_ref_entry" kindref="compound">XRefEntry</ref><sp/>*getEntry(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>GBool<sp/>complainIfMissing<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getTrailerDict()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;trailerDict;<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setModifiedObject(<ref refid="class_object" kindref="compound">Object</ref>*<sp/>o,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>r);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>addIndirectObject<sp/>(<ref refid="class_object" kindref="compound">Object</ref>*<sp/>o);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeIndirectObject(<ref refid="struct_ref" kindref="compound">Ref</ref><sp/>r);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gen,<sp/><sp/>Goffset<sp/>offs,<sp/>GBool<sp/>used);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>XRef<sp/>table<sp/>to<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeTableToFile(<ref refid="class_out_stream" kindref="compound">OutStream</ref>*<sp/>outStr,<sp/>GBool<sp/>writeAllEntries);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>XRef<sp/>stream<sp/>contents<sp/>to<sp/>GooString<sp/>and<sp/>fill<sp/>trailerDict<sp/>fields<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeStreamToBuffer(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*stmBuf,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*xrefDict,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>thread<sp/>safe<sp/>during<sp/>write<sp/>where<sp/>changes<sp/>are<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*str;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>Goffset<sp/>start;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>file<sp/>(to<sp/>allow<sp/>for<sp/>garbage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>at<sp/>beginning<sp/>of<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="struct_x_ref_entry" kindref="compound">XRefEntry</ref><sp/>*entries;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xref<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>capacity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>&lt;entries&gt;<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rootNum,<sp/>rootGen;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>catalog<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>GBool<sp/>ok;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>xref<sp/>table<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errCode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>code<sp/>(if<sp/>&lt;ok&gt;<sp/>is<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>GBool<sp/>xrefReconstructed;<sp/><sp/></highlight><highlight class="comment">//<sp/>marker,<sp/>true<sp/>if<sp/>xref<sp/>was<sp/>already<sp/>reconstructed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>trailerDict;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trailer<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>Goffset<sp/>*streamEnds;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;endstream&apos;<sp/>positions<sp/>-<sp/>only<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>damaged<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>streamEndsLen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>valid<sp/>entries<sp/>in<sp/>streamEnds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="class_poppler_cache" kindref="compound">PopplerCache</ref><sp/>*objStrs;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cached<sp/>object<sp/>streams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>GBool<sp/>encrypted;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>file<sp/>is<sp/>encrypted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encRevision;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encVersion;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>encryption<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>CryptAlgorithm<sp/>encAlgorithm;<sp/><sp/></highlight><highlight class="comment">//<sp/>encryption<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyLength;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>key,<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>permFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>permission<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>Guchar<sp/>fileKey[32];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>decryption<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>GBool<sp/>ownerPasswordOk;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>owner<sp/>password<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>Goffset<sp/>prevXRefOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>of<sp/>prev<sp/>XRef<sp/>section<sp/>(=<sp/>next<sp/>to<sp/>read)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>Goffset<sp/>mainXRefEntriesOffset;<sp/></highlight><highlight class="comment">//<sp/>offset<sp/>of<sp/>entries<sp/>in<sp/>main<sp/>XRef<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>GBool<sp/>xRefStream;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>last<sp/>XRef<sp/>section<sp/>is<sp/>a<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>Goffset<sp/>mainXRefOffset;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>of<sp/>the<sp/>main<sp/>XRef<sp/>table/stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>GBool<sp/>scannedSpecialFlags;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>scanSpecialFlags<sp/>has<sp/>been<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>GBool<sp/>strOwner;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>str<sp/>is<sp/>owned<sp/>by<sp/>the<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>GooMutex<sp/>mutex;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newSize);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newSize);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>GBool<sp/>readXRef(Goffset<sp/>*pos,<sp/>std::vector&lt;Goffset&gt;<sp/>*followedXRefStm,<sp/>std::vector&lt;int&gt;<sp/>*xrefStreamObjsNum);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>GBool<sp/>readXRefTable(<ref refid="class_parser" kindref="compound">Parser</ref><sp/>*parser,<sp/>Goffset<sp/>*pos,<sp/>std::vector&lt;Goffset&gt;<sp/>*followedXRefStm,<sp/>std::vector&lt;int&gt;<sp/>*xrefStreamObjsNum);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>GBool<sp/>readXRefStreamSection(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*xrefStr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>GBool<sp/>readXRefStream(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*xrefStr,<sp/>Goffset<sp/>*pos);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>GBool<sp/>constructXRef(GBool<sp/>*wasReconstructed,<sp/>GBool<sp/>needCatalogDict<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>GBool<sp/>parseEntry(Goffset<sp/>offset,<sp/><ref refid="struct_x_ref_entry" kindref="compound">XRefEntry</ref><sp/>*entry);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readXRefUntil(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>untilEntryNum,<sp/>std::vector&lt;int&gt;<sp/>*xrefStreamObjsNum<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markUnencrypted(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">XRefWriter<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startSection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeEntry(Goffset<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gen,<sp/>XRefEntryType<sp/>type)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~XRefWriter()<sp/>{};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>XRefWriter<sp/>subclass<sp/>that<sp/>writes<sp/>a<sp/>XRef<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">XRefTableWriter:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>XRefWriter<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>XRefTableWriter(<ref refid="class_out_stream" kindref="compound">OutStream</ref>*<sp/>outStrA);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startSection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeEntry(Goffset<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gen,<sp/>XRefEntryType<sp/>type);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_out_stream" kindref="compound">OutStream</ref>*<sp/>outStr;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>XRefWriter<sp/>subclass<sp/>that<sp/>writes<sp/>a<sp/>XRef<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">XRefStreamWriter:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>XRefWriter<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>XRefStreamWriter(<ref refid="class_object" kindref="compound">Object</ref><sp/>*index,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*stmBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offsetSize);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startSection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeEntry(Goffset<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gen,<sp/>XRefEntryType<sp/>type);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*index;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*stmBuf;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offsetSize;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dummy<sp/>XRefWriter<sp/>subclass<sp/>that<sp/>only<sp/>checks<sp/>if<sp/>all<sp/>offsets<sp/>fit<sp/>in<sp/>4<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">XRefPreScanWriter:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>XRefWriter<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>XRefPreScanWriter();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startSection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeEntry(Goffset<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gen,<sp/>XRefEntryType<sp/>type);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>GBool<sp/>hasOffsetsBeyond4GB;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeXRef(XRefWriter<sp/>*writer,<sp/>GBool<sp/>writeAllEntries);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/XRef.h"/>
  </compounddef>
</doxygen>
