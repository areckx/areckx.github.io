<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_mxml_support" kind="class" language="C++" prot="public">
    <compoundname>Ms::MxmlSupport</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_mxml_support_1a27aefb8f8b07d4f332931cd2e72f0b9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MxmlSupport::stringToInt</definition>
        <argsstring>(const QString &amp;s, bool *ok)</argsstring>
        <name>stringToInt</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a string in <emphasis>s</emphasis> into an int. Set *ok to true iff conversion was successful. <emphasis>s</emphasis> may end with &quot;.0&quot;, as is generated by Audiveris 3.2 and up, in elements &lt;divisions&gt;, &lt;duration&gt;, &lt;alter&gt; and &lt;sound&gt; attributes dynamics and tempo. In case of error val return a default value of 0. <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> that non-integer values cannot be handled by mscore. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="171" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="267" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_mxml_support_1ac718646c8a30332db7b71603e846917b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::MxmlSupport::durationAsFraction</definition>
        <argsstring>(const int divisions, const QDomElement e)</argsstring>
        <name>durationAsFraction</name>
        <param>
          <type>const int</type>
          <declname>divisions</declname>
        </param>
        <param>
          <type>const QDomElement</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return duration specified in the element e as <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>. Caller must ensure divisions is valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="172" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="286" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_mxml_support_1ab9182c04357874bc351f1e8c30c1a942" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::MxmlSupport::noteTypeToFraction</definition>
        <argsstring>(QString type)</argsstring>
        <name>noteTypeToFraction</name>
        <param>
          <type>QString</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert MusicXML note type to fraction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="173" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="309" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_mxml_support_1a33406f111b2dd2c99a25782ef2e607d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::MxmlSupport::calculateFraction</definition>
        <argsstring>(QString type, int dots, int normalNotes, int actualNotes)</argsstring>
        <name>calculateFraction</name>
        <param>
          <type>QString</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dots</declname>
        </param>
        <param>
          <type>int</type>
          <declname>normalNotes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>actualNotes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert note type, number of dots and actual and normal notes into a duration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="174" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="351" bodyend="369"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="mscore/musicxmlsupport.h" line="169" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="169" bodyend="175"/>
    <listofallmembers>
      <member refid="class_ms_1_1_mxml_support_1a33406f111b2dd2c99a25782ef2e607d9" prot="public" virt="non-virtual"><scope>Ms::MxmlSupport</scope><name>calculateFraction</name></member>
      <member refid="class_ms_1_1_mxml_support_1ac718646c8a30332db7b71603e846917b" prot="public" virt="non-virtual"><scope>Ms::MxmlSupport</scope><name>durationAsFraction</name></member>
      <member refid="class_ms_1_1_mxml_support_1ab9182c04357874bc351f1e8c30c1a942" prot="public" virt="non-virtual"><scope>Ms::MxmlSupport</scope><name>noteTypeToFraction</name></member>
      <member refid="class_ms_1_1_mxml_support_1a27aefb8f8b07d4f332931cd2e72f0b9d" prot="public" virt="non-virtual"><scope>Ms::MxmlSupport</scope><name>stringToInt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
