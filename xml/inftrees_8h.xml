<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="inftrees_8h" kind="file" language="C++">
    <compoundname>inftrees.h</compoundname>
    <includedby refid="infblock_8c" local="yes">thirdparty/freetype/src/gzip/infblock.c</includedby>
    <includedby refid="infcodes_8c" local="yes">thirdparty/freetype/src/gzip/infcodes.c</includedby>
    <includedby refid="inftrees_8c" local="yes">thirdparty/freetype/src/gzip/inftrees.c</includedby>
    <includedby refid="infutil_8c" local="yes">thirdparty/freetype/src/gzip/infutil.c</includedby>
    <invincdepgraph>
      <node id="80089">
        <label>thirdparty/freetype/src/gzip/infblock.c</label>
        <link refid="infblock_8c_source"/>
      </node>
      <node id="80092">
        <label>thirdparty/freetype/src/gzip/infutil.c</label>
        <link refid="infutil_8c_source"/>
      </node>
      <node id="80091">
        <label>thirdparty/freetype/src/gzip/inftrees.c</label>
        <link refid="inftrees_8c_source"/>
      </node>
      <node id="80088">
        <label>thirdparty/freetype/src/gzip/inftrees.h</label>
        <link refid="inftrees_8h"/>
        <childnode refid="80089" relation="include">
        </childnode>
        <childnode refid="80090" relation="include">
        </childnode>
        <childnode refid="80091" relation="include">
        </childnode>
        <childnode refid="80092" relation="include">
        </childnode>
      </node>
      <node id="80090">
        <label>thirdparty/freetype/src/gzip/infcodes.c</label>
        <link refid="infcodes_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structinflate__huft__s" prot="public">inflate_huft_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="inftrees_8h_1ab60949993ea9f8038abf523a1cbd6e21" prot="public" static="no">
        <name>MANY</name>
        <initializer>1440</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/gzip/inftrees.h" line="36" column="9" bodyfile="thirdparty/freetype/src/gzip/inftrees.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="inftrees_8h_1a9ba50d92ac2c40da7c72782af191e2ff" prot="public" static="no">
        <type>struct <ref refid="structinflate__huft__s" kindref="compound">inflate_huft_s</ref> FAR</type>
        <definition>typedef struct inflate_huft_s FAR inflate_huft</definition>
        <argsstring></argsstring>
        <name>inflate_huft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/gzip/inftrees.h" line="409" column="1" bodyfile="thirdparty/freetype/src/gzip/inftrees.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="inftrees_8h_1a302fda77da419bfb025cc94e059e3664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>local int inflate_trees_bits</type>
        <definition>local int inflate_trees_bits OF</definition>
        <argsstring>((uIntf *, uIntf *, inflate_huft *FAR *, inflate_huft *, z_streamp))</argsstring>
        <name>OF</name>
        <param>
          <type>(uIntf *, uIntf *, inflate_huft *FAR *, inflate_huft *, z_streamp)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/gzip/inftrees.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="inftrees_8h_1a9f35868d71d11d3f4348ad2e102918cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>local int inflate_trees_dynamic</type>
        <definition>local int inflate_trees_dynamic OF</definition>
        <argsstring>((uInt, uInt, uIntf *, uIntf *, uIntf *, inflate_huft *FAR *, inflate_huft *FAR *, inflate_huft *, z_streamp))</argsstring>
        <name>OF</name>
        <param>
          <type>(uInt, uInt, uIntf *, uIntf *, uIntf *, inflate_huft *FAR *, inflate_huft *FAR *, inflate_huft *, z_streamp)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/gzip/inftrees.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="inftrees_8h_1a169e0c6bf8578071fa5e00d13d55e99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>local int inflate_trees_fixed</type>
        <definition>local int inflate_trees_fixed OF</definition>
        <argsstring>((uIntf *, uIntf *, const inflate_huft *FAR *, const inflate_huft *FAR *, z_streamp))</argsstring>
        <name>OF</name>
        <param>
          <type>(uIntf *, uIntf *, const inflate_huft *FAR *, const inflate_huft *FAR *, z_streamp)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/gzip/inftrees.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>inftrees.h<sp/>--<sp/>header<sp/>to<sp/>use<sp/>inftrees.c</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1995-2002<sp/>Mark<sp/>Adler</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>copyright<sp/>notice<sp/>in<sp/>zlib.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WARNING:<sp/>this<sp/>file<sp/>should<sp/>*not*<sp/>be<sp/>used<sp/>by<sp/>applications.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>part<sp/>of<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>compression<sp/>library<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>subject<sp/>to<sp/>change.<sp/>Applications<sp/>should<sp/>only<sp/>use<sp/>zlib.h.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Huffman<sp/>code<sp/>lookup<sp/>table<sp/>entry--this<sp/>entry<sp/>is<sp/>four<sp/>bytes<sp/>for<sp/>machines</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>that<sp/>have<sp/>16-bit<sp/>pointers<sp/>(e.g.<sp/>PC&apos;s<sp/>in<sp/>the<sp/>small<sp/>or<sp/>medium<sp/>model).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_INFTREES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_INFTREES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__huft__s" kindref="compound">inflate_huft_s</ref><sp/>FAR<sp/>inflate_huft;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structinflate__huft__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__huft__s" kindref="compound">inflate_huft_s</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>Exop;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>extra<sp/>bits<sp/>or<sp/>operation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>Bits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>this<sp/>code<sp/>or<sp/>subcode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>what;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>uInt<sp/>pad;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pad<sp/>structure<sp/>to<sp/>a<sp/>power<sp/>of<sp/>2<sp/>(4<sp/>bytes<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}<sp/>word;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>16-bit,<sp/>8<sp/>bytes<sp/>for<sp/>32-bit<sp/>int&apos;s)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>uInt<sp/>base;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>literal,<sp/>length<sp/>base,<sp/>distance<sp/>base,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>table<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>size<sp/>of<sp/>dynamic<sp/>tree.<sp/><sp/>The<sp/>maximum<sp/>found<sp/>in<sp/>a<sp/>long<sp/>but<sp/>non-</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>exhaustive<sp/>search<sp/>was<sp/>1004<sp/>huft<sp/>structures<sp/>(850<sp/>for<sp/>length/literals</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/>and<sp/>154<sp/>for<sp/>distances,<sp/>the<sp/>latter<sp/>actually<sp/>the<sp/>result<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/>exhaustive<sp/>search).<sp/><sp/>The<sp/>actual<sp/>maximum<sp/>is<sp/>not<sp/>known,<sp/>but<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>value<sp/>below<sp/>is<sp/>more<sp/>than<sp/>safe.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MANY<sp/>1440</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">local<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inflate_trees_bits<sp/>OF((</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uIntf<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>19<sp/>code<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uIntf<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bits<sp/>tree<sp/>desired/actual<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>inflate_huft<sp/>*<sp/>FAR<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bits<sp/>tree<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>inflate_huft<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>space<sp/>for<sp/>trees<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>z_streamp));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">local<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inflate_trees_dynamic<sp/>OF((</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uInt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>literal/length<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uInt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>distance<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uIntf<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>that<sp/>many<sp/>(total)<sp/>code<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>uIntf<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>literal<sp/>desired/actual<sp/>bit<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>uIntf<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>desired/actual<sp/>bit<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>inflate_huft<sp/>*<sp/>FAR<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>literal/length<sp/>tree<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>inflate_huft<sp/>*<sp/>FAR<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>tree<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>inflate_huft<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>space<sp/>for<sp/>trees<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>z_streamp));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">local<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inflate_trees_fixed<sp/>OF((</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uIntf<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>literal<sp/>desired/actual<sp/>bit<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>uIntf<sp/>*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>desired/actual<sp/>bit<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>inflate_huft<sp/>*<sp/>FAR<sp/>*,<sp/></highlight><highlight class="comment">/*<sp/>literal/length<sp/>tree<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>inflate_huft<sp/>*<sp/>FAR<sp/>*,<sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>tree<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>z_streamp));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>memory<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_INFTREES_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/gzip/inftrees.h"/>
  </compounddef>
</doxygen>
