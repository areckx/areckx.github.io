<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_fluid_s_1_1_fluid" kind="class" language="C++" prot="public">
    <compoundname>FluidS::Fluid</compoundname>
    <basecompoundref refid="class_ms_1_1_synthesizer" prot="public" virt="non-virtual">Ms::Synthesizer</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a5203c004aa76585f5fd879bde0f765f8" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_fluid_s_1_1_s_font" kindref="compound">SFont</ref> * &gt;</type>
        <definition>QList&lt;SFont*&gt; FluidS::Fluid::sfonts</definition>
        <argsstring></argsstring>
        <name>sfonts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="298" column="1" bodyfile="fluid/fluid.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a2d6b7bab83edc7b21f63095b27f30887" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="struct_ms_1_1_midi_patch" kindref="compound">MidiPatch</ref> * &gt;</type>
        <definition>QList&lt;MidiPatch*&gt; FluidS::Fluid::patches</definition>
        <argsstring></argsstring>
        <name>patches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="299" column="1" bodyfile="fluid/fluid.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1ac4aae1d6afb746559c7a255fd7f77ccf" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_fluid_s_1_1_voice" kindref="compound">Voice</ref> * &gt;</type>
        <definition>QList&lt;Voice*&gt; FluidS::Fluid::freeVoices</definition>
        <argsstring></argsstring>
        <name>freeVoices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="301" column="1" bodyfile="fluid/fluid.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a37d89164400c3fadaa879aed6f2f54fe" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_fluid_s_1_1_voice" kindref="compound">Voice</ref> * &gt;</type>
        <definition>QList&lt;Voice*&gt; FluidS::Fluid::activeVoices</definition>
        <argsstring></argsstring>
        <name>activeVoices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="302" column="1" bodyfile="fluid/fluid.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a31f261679809bfbf1b6d1490a1f93877" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString FluidS::Fluid::_error</definition>
        <argsstring></argsstring>
        <name>_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="303" column="1" bodyfile="fluid/fluid.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a3f261ddcaabee6d85462668921213089" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double FluidS::Fluid::sample_rate</definition>
        <argsstring></argsstring>
        <name>sample_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="307" column="1" bodyfile="fluid/fluid.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a0b4b86d4ccc4f6527d933f078cc5e062" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float FluidS::Fluid::_masterTuning</definition>
        <argsstring></argsstring>
        <name>_masterTuning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="308" column="1" bodyfile="fluid/fluid.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1ae95768b9ec77e2bb9eba0186ee21ddf0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double FluidS::Fluid::_tuning[128]</definition>
        <argsstring>[128]</argsstring>
        <name>_tuning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="309" column="1" bodyfile="fluid/fluid.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1ab791392078d3825ebb6128682f504096" prot="private" static="no" mutable="no">
        <type>QMutex</type>
        <definition>QMutex FluidS::Fluid::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="311" column="1" bodyfile="fluid/fluid.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a3594ddd627a37241db42799b4252442b" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool FluidS::Fluid::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="305" column="1" bodyfile="fluid/fluid.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1ad0a0413bb70c8920af1c0968580605a6" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int FluidS::Fluid::_state</definition>
        <argsstring></argsstring>
        <name>_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="315" column="1" bodyfile="fluid/fluid.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1a7db34eab79b341894fd53177e875064e" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int FluidS::Fluid::sfont_id</definition>
        <argsstring></argsstring>
        <name>sfont_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="317" column="1" bodyfile="fluid/fluid.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1af6ac15dd00684c6aa134fac65abd0b46" prot="protected" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_fluid_s_1_1_channel" kindref="compound">Channel</ref> * &gt;</type>
        <definition>QList&lt;Channel*&gt; FluidS::Fluid::channel</definition>
        <argsstring></argsstring>
        <name>channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="319" column="1" bodyfile="fluid/fluid.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fluid_s_1_1_fluid_1abc81ab0f5f679d18d80605eb02b63a57" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int FluidS::Fluid::noteid</definition>
        <argsstring></argsstring>
        <name>noteid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="321" column="1" bodyfile="fluid/fluid.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_fluid_s_1_1_fluid_1a24657954e9f1d12330a031c549e6e850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Voice</definition>
        <argsstring></argsstring>
        <name>Voice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="408" column="1" bodyfile="fluid/fluid.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_fluid_s_1_1_fluid_1ad3f56d18622fd9af0064d524c0b50d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Preset</definition>
        <argsstring></argsstring>
        <name>Preset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="409" column="1" bodyfile="fluid/fluid.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a7fe2163aa48b5ed06ab0b6affaac9152" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::updatePatchList</definition>
        <argsstring>()</argsstring>
        <name>updatePatchList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="312" column="1" bodyfile="fluid/fluid.cpp" bodystart="562" bodyend="588"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1abda7a5006a78d683bc4fbe7a40d169cd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_fluid_s_1_1_s_font" kindref="compound">SFont</ref> *</type>
        <definition>SFont * FluidS::Fluid::get_sfont_by_name</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>get_sfont_by_name</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="323" column="1" bodyfile="fluid/fluid.cpp" bodystart="754" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a044141b557f963cc4c94700f175d2fe1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_fluid_s_1_1_s_font" kindref="compound">SFont</ref> *</type>
        <definition>SFont * FluidS::Fluid::get_sfont_by_id</definition>
        <argsstring>(int id)</argsstring>
        <name>get_sfont_by_id</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="324" column="1" bodyfile="fluid/fluid.cpp" bodystart="741" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1aaf6e3df6ceb39e89b3f688f8a85c6459" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_fluid_s_1_1_s_font" kindref="compound">SFont</ref> *</type>
        <definition>SFont* FluidS::Fluid::get_sfont</definition>
        <argsstring>(int idx) const</argsstring>
        <name>get_sfont</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="325" column="1" bodyfile="fluid/fluid.h" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a0c1621c7fe8e9b3c42417c298f8919bd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FluidS::Fluid::sfunload</definition>
        <argsstring>(int id)</argsstring>
        <name>sfunload</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="326" column="1" bodyfile="fluid/fluid.cpp" bodystart="721" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a35fe3c7e3c3dc99329aee4897d6be066" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FluidS::Fluid::sfload</definition>
        <argsstring>(const QString &amp;filename)</argsstring>
        <name>sfload</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="327" column="1" bodyfile="fluid/fluid.cpp" bodystart="687" bodyend="715"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a7bee0456c2f321a078fe82f8c07adca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FluidS::Fluid::Fluid</definition>
        <argsstring>()</argsstring>
        <name>Fluid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="330" column="1" bodyfile="fluid/fluid.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ad478c429ee197712e6a8bec401d391d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FluidS::Fluid::~Fluid</definition>
        <argsstring>()</argsstring>
        <name>~Fluid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="331" column="1" bodyfile="fluid/fluid.cpp" bodystart="107" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a8febaf7107004c0a418610e453dbd7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::init</definition>
        <argsstring>(float sampleRate)</argsstring>
        <name>init</name>
        <reimplements refid="class_ms_1_1_synthesizer_1afae81b084c72cce68466b9c8631e030e">init</reimplements>
        <param>
          <type>float</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="332" column="1" bodyfile="fluid/fluid.cpp" bodystart="82" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1af48b857c7243e2165b262848e4ef58ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* FluidS::Fluid::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a1a4eb6c510fc211a9e2c95e07712aba6">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="334" column="1" bodyfile="fluid/fluid.h" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1af6e4c1c56a9d4614bf2ae142a8280ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::play</definition>
        <argsstring>(const PlayEvent &amp;)</argsstring>
        <name>play</name>
        <reimplements refid="class_ms_1_1_synthesizer_1ab13152564aa024a7bf8385a44e697633">play</reimplements>
        <param>
          <type>const <ref refid="class_ms_1_1_play_event" kindref="compound">PlayEvent</ref> &amp;</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="336" column="1" bodyfile="fluid/fluid.cpp" bodystart="131" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ab6f123c14590b0de67bd7bb35171f3dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const QList&lt; <ref refid="struct_ms_1_1_midi_patch" kindref="compound">MidiPatch</ref> * &gt; &amp;</type>
        <definition>virtual const QList&lt;MidiPatch*&gt;&amp; FluidS::Fluid::getPatchInfo</definition>
        <argsstring>() const</argsstring>
        <name>getPatchInfo</name>
        <reimplements refid="class_ms_1_1_synthesizer_1aca13e6f1f9d8994cd8c66e8d0c4c95a9">getPatchInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="337" column="1" bodyfile="fluid/fluid.h" bodystart="337" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a0d034484be8e27f2ed03637285a8c1c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_synthesizer_group" kindref="compound">SynthesizerGroup</ref></type>
        <definition>SynthesizerGroup FluidS::Fluid::state</definition>
        <argsstring>() const</argsstring>
        <name>state</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a1794f490f99b4e333bd75145986d51b4">state</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="340" column="1" bodyfile="fluid/fluid.cpp" bodystart="837" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a543672b744cd6d3f28cf7dd6848e3eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool FluidS::Fluid::setState</definition>
        <argsstring>(const SynthesizerGroup &amp;)</argsstring>
        <name>setState</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a2ae475d66c1c500915fe304748e96013">setState</reimplements>
        <param>
          <type>const <ref refid="class_ms_1_1_synthesizer_group" kindref="compound">SynthesizerGroup</ref> &amp;</type>
          <defname>sp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="341" column="1" bodyfile="fluid/fluid.cpp" bodystart="853" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ae69af3c42010de709d5be96927325e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::allSoundsOff</definition>
        <argsstring>(int)</argsstring>
        <name>allSoundsOff</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a0c74a0991b16bb09bf99761389f0eafa">allSoundsOff</reimplements>
        <param>
          <type>int</type>
          <defname>chan</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="343" column="1" bodyfile="fluid/fluid.cpp" bodystart="231" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a48cc85999097abdd9e954843c9329a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::allNotesOff</definition>
        <argsstring>(int)</argsstring>
        <name>allNotesOff</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a6ca4320120f9591c10bb938cb961e10f">allNotesOff</reimplements>
        <param>
          <type>int</type>
          <defname>chan</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="344" column="1" bodyfile="fluid/fluid.cpp" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1af9523be2eca05a6eae4cd9802ed45f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_fluid_s_1_1_preset" kindref="compound">Preset</ref> *</type>
        <definition>Preset * FluidS::Fluid::get_preset</definition>
        <argsstring>(unsigned int sfontnum, unsigned int banknum, unsigned int prognum)</argsstring>
        <name>get_preset</name>
        <param>
          <type>unsigned int</type>
          <declname>sfontnum</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>banknum</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>prognum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="346" column="1" bodyfile="fluid/fluid.cpp" bodystart="303" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ae1621636f932b8210595e504d0a84730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_fluid_s_1_1_preset" kindref="compound">Preset</ref> *</type>
        <definition>Preset * FluidS::Fluid::find_preset</definition>
        <argsstring>(unsigned int banknum, unsigned int prognum)</argsstring>
        <name>find_preset</name>
        <param>
          <type>unsigned int</type>
          <declname>banknum</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>prognum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="347" column="1" bodyfile="fluid/fluid.cpp" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ae5c25f6f09b3c29081bb8ef46ebdc58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::modulate_voices</definition>
        <argsstring>(int chan, bool is_cc, int ctrl)</argsstring>
        <name>modulate_voices</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_cc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="348" column="1" bodyfile="fluid/fluid.cpp" bodystart="260" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a408c0f5925f4ff47adb231e8d6c7670a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::modulate_voices_all</definition>
        <argsstring>(int chan)</argsstring>
        <name>modulate_voices_all</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="349" column="1" bodyfile="fluid/fluid.cpp" bodystart="275" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ac7e63754cd854419aeba2d52820681fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::damp_voices</definition>
        <argsstring>(int chan)</argsstring>
        <name>damp_voices</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="350" column="1" bodyfile="fluid/fluid.cpp" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1acea06512e17b5242f85aacfc75342faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FluidS::Fluid::kill_voice</definition>
        <argsstring>(Voice *voice)</argsstring>
        <name>kill_voice</name>
        <param>
          <type><ref refid="class_fluid_s_1_1_voice" kindref="compound">Voice</ref> *</type>
          <declname>voice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1aa7d68b1dffed5b4e3a8edf646be09d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::print_voice</definition>
        <argsstring>()</argsstring>
        <name>print_voice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1abfefd9b9ccfb4a43148aeca8a5f052f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::update_presets</definition>
        <argsstring>()</argsstring>
        <name>update_presets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function assures that every MIDI channels has a valid preset (NULL is okay). This function is called after a SoundFont is unloaded or reloaded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="357" column="1" bodyfile="fluid/fluid.cpp" bodystart="386" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a39c789e171574833a5218692b985a6d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int FluidS::Fluid::get_cc</definition>
        <argsstring>(int chan, int num) const</argsstring>
        <name>get_cc</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="359" column="1" bodyfile="fluid/fluid.h" bodystart="359" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a7d73e8f588e2dc333e25b0b495ed2492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::system_reset</definition>
        <argsstring>()</argsstring>
        <name>system_reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="361" column="1" bodyfile="fluid/fluid.cpp" bodystart="246" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a5152a3c75f8a4dd0c343af8e9129250e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::program_change</definition>
        <argsstring>(int chan, int prognum)</argsstring>
        <name>program_change</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prognum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="362" column="1" bodyfile="fluid/fluid.cpp" bodystart="332" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a244d9c59f3fb961424d020c0dc666b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::set_gen2</definition>
        <argsstring>(int chan, int param, float value, int absolute, int normalized)</argsstring>
        <name>set_gen2</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>param</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>absolute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>normalized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the value of a generator. This function allows to control all synthesis parameters in real-time. The changes are additive, i.e. they add up to the existing parameter value. This function is similar to sending an NRPN message to the synthesizer. The function accepts a float as the value of the parameter. The parameter numbers and ranges are described in the SoundFont 2.01 specification, paragraph 8.1.3, page 48. See also &apos;fluid_gen_type&apos;.</para><para>Using the fluid_synth_set_gen2() function, it is possible to set the absolute value of a generator. This is an extension to the SoundFont standard. If &apos;absolute&apos; is non-zero, the value of the generator specified in the SoundFont is completely ignored and the generator is fixed to the value passed as argument. To undo this behavior, you must call fluid_synth_set_gen2 again, with &apos;absolute&apos; set to 0 (and possibly &apos;value&apos; set to zero).</para><para>If &apos;normalized&apos; is non-zero, the value is supposed to be normalized between 0 and 1. Before applying the value, it will be scaled and shifted to the range defined in the SoundFont specifications. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="364" column="1" bodyfile="fluid/fluid.cpp" bodystart="813" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a1817eac37d9a715807ca3a8bf987e634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float FluidS::Fluid::get_gen</definition>
        <argsstring>(int chan, int param)</argsstring>
        <name>get_gen</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="365" column="1" bodyfile="fluid/fluid.cpp" bodystart="824" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a04719a83a9bf2567188d6fa8e0d1a016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::set_gen</definition>
        <argsstring>(int chan, int param, float value)</argsstring>
        <name>set_gen</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>param</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="366" column="1" bodyfile="fluid/fluid.cpp" bodystart="781" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a2729f60affee768d2032c632442da0e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::set_interp_method</definition>
        <argsstring>(int chan, int interp_method)</argsstring>
        <name>set_interp_method</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interp_method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="367" column="1" bodyfile="fluid/fluid.cpp" bodystart="769" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a3104d529d5acf3003d575388641e3aca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_fluid_s_1_1_preset" kindref="compound">Preset</ref> *</type>
        <definition>Preset* FluidS::Fluid::get_channel_preset</definition>
        <argsstring>(int chan) const</argsstring>
        <name>get_channel_preset</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="369" column="1" bodyfile="fluid/fluid.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ace56dfc62dcc4392fc929c9402310926" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool FluidS::Fluid::loadSoundFonts</definition>
        <argsstring>(const QStringList &amp;s)</argsstring>
        <name>loadSoundFonts</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a0e524c9a40522a4dd0e4328390bf58ed">loadSoundFonts</reimplements>
        <param>
          <type>const QStringList &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="371" column="1" bodyfile="fluid/fluid.cpp" bodystart="607" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ab309bfbc656043f81f3ddae2e423c41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool FluidS::Fluid::addSoundFont</definition>
        <argsstring>(const QString &amp;s)</argsstring>
        <name>addSoundFont</name>
        <reimplements refid="class_ms_1_1_synthesizer_1ad86caa30e7b390303030c8342a29abda">addSoundFont</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="372" column="1" bodyfile="fluid/fluid.cpp" bodystart="659" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1af0a11f64b5b5e93299a59bf710774214" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool FluidS::Fluid::removeSoundFont</definition>
        <argsstring>(const QString &amp;s)</argsstring>
        <name>removeSoundFont</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a9bbb1200179ce31929693c124d89ed70">removeSoundFont</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="373" column="1" bodyfile="fluid/fluid.cpp" bodystart="672" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ac5aa855bff8f0332163a80113dc1d9f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QStringList</type>
        <definition>QStringList FluidS::Fluid::soundFonts</definition>
        <argsstring>() const</argsstring>
        <name>soundFonts</name>
        <reimplements refid="class_ms_1_1_synthesizer_1ac021121461e98b7eb87d1e9042eb2d96">soundFonts</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="374" column="1" bodyfile="fluid/fluid.cpp" bodystart="594" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a77103198aa6cb4a982178ac575fac1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::start_voice</definition>
        <argsstring>(Voice *voice)</argsstring>
        <name>start_voice</name>
        <param>
          <type><ref refid="class_fluid_s_1_1_voice" kindref="compound">Voice</ref> *</type>
          <declname>voice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Kill all voices on a given channel, which belong into excl_class. This function is called by a SoundFont&apos;s preset in response to a noteon event. If one noteon event results in several voice processes (stereo samples), ignore_ID must name the voice ID of the first generated voice (so that it is not stopped). The first voice uses ignore_ID=-1, which will terminate all voices on a channel belonging into the exclusive class excl_class.</para>        </inbodydescription>
        <location file="fluid/fluid.h" line="376" column="1" bodyfile="fluid/fluid.cpp" bodystart="510" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a7737979cef99551a7223c3d620736ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_fluid_s_1_1_voice" kindref="compound">Voice</ref> *</type>
        <definition>Voice * FluidS::Fluid::alloc_voice</definition>
        <argsstring>(unsigned id, Sample *sample, int chan, int key, int vel, double vt)</argsstring>
        <name>alloc_voice</name>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_fluid_s_1_1_sample" kindref="compound">Sample</ref> *</type>
          <declname>sample</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vel</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="377" column="1" bodyfile="fluid/fluid.cpp" bodystart="478" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1aa4ae1bac80cfed1357b9041a63a39145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::free_voice_by_kill</definition>
        <argsstring>()</argsstring>
        <name>free_voice_by_kill</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="378" column="1" bodyfile="fluid/fluid.cpp" bodystart="412" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ab0f0b2eadf8487febaeb8b44a8b66559" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::process</definition>
        <argsstring>(unsigned len, float *out, float *effect1, float *effect2)</argsstring>
        <name>process</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a2546e6ee088f95151805bbaeca657907">process</reimplements>
        <param>
          <type>unsigned</type>
          <declname>len</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>effect1</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>effect2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="380" column="1" bodyfile="fluid/fluid.cpp" bodystart="396" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a08ef04452f9548aed549638833139daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FluidS::Fluid::program_select</definition>
        <argsstring>(int chan, unsigned sfont_id, unsigned bank_num, unsigned preset_num)</argsstring>
        <name>program_select</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>sfont_id</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>bank_num</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>preset_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="382" column="1" bodyfile="fluid/fluid.cpp" bodystart="365" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a11f451b412679f0821f5775bd07f0096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::get_program</definition>
        <argsstring>(int chan, unsigned *sfont_id, unsigned *bank_num, unsigned *preset_num)</argsstring>
        <name>get_program</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>sfont_id</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>bank_num</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>preset_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="383" column="1" bodyfile="fluid/fluid.cpp" bodystart="353" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a13d62eb8e6ecd24a302d330d5b820660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::get_pitch_wheel_sens</definition>
        <argsstring>(int chan, int *pval)</argsstring>
        <name>get_pitch_wheel_sens</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1abd088a4683eaa8a1fd28453eab076fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::pitch_wheel_sens</definition>
        <argsstring>(int chan, int val)</argsstring>
        <name>pitch_wheel_sens</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="388" column="1" bodyfile="fluid/fluid.cpp" bodystart="294" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1ab2241c859e9ee88676471a0f9bd6eba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::get_pitch_bend</definition>
        <argsstring>(int chan, int *ppitch_bend)</argsstring>
        <name>get_pitch_bend</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ppitch_bend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="389" column="1" bodyfile="fluid/fluid.cpp" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a03a99db27e2acd25c038241efb4951fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FluidS::Fluid::freeVoice</definition>
        <argsstring>(Voice *v)</argsstring>
        <name>freeVoice</name>
        <param>
          <type><ref refid="class_fluid_s_1_1_voice" kindref="compound">Voice</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="391" column="1" bodyfile="fluid/fluid.cpp" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a198db5e3fa698a46dcc54f0c12835c95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double FluidS::Fluid::getPitch</definition>
        <argsstring>(int k) const</argsstring>
        <name>getPitch</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="393" column="1" bodyfile="fluid/fluid.h" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a53489d4ee7de927eefe80e80869cde98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FluidS::Fluid::ct2hz_real</definition>
        <argsstring>(float cents)</argsstring>
        <name>ct2hz_real</name>
        <param>
          <type>float</type>
          <declname>cents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="394" column="1" bodyfile="fluid/fluid.h" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a87229cf909080be663146eeb3a6d8305" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FluidS::Fluid::act2hz</definition>
        <argsstring>(float c)</argsstring>
        <name>act2hz</name>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="396" column="1" bodyfile="fluid/fluid.h" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1adcc610c4c7266d948a988258d08b164f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FluidS::Fluid::ct2hz</definition>
        <argsstring>(float cents)</argsstring>
        <name>ct2hz</name>
        <param>
          <type>float</type>
          <declname>cents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="397" column="1" bodyfile="fluid/fluid.h" bodystart="397" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a28d1fb38f55b442a0002ec08b46a3779" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double FluidS::Fluid::masterTuning</definition>
        <argsstring>() const</argsstring>
        <name>masterTuning</name>
        <reimplements refid="class_ms_1_1_synthesizer_1aecc32dd0f133b6ed79e8a521a9679641">masterTuning</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="399" column="1" bodyfile="fluid/fluid.h" bodystart="399" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a95d8929b59451bd1718dfde34ed1f0d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void FluidS::Fluid::setMasterTuning</definition>
        <argsstring>(double f)</argsstring>
        <name>setMasterTuning</name>
        <reimplements refid="class_ms_1_1_synthesizer_1aa44808c442eb1e860ba6331dd67c77e8">setMasterTuning</reimplements>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="400" column="1" bodyfile="fluid/fluid.h" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a504c7540395b26ddd27abe7121bb625f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString FluidS::Fluid::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="402" column="1" bodyfile="fluid/fluid.h" bodystart="402" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1a16587ab222d897b999ef510d43e40dc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_synthesizer_gui" kindref="compound">SynthesizerGui</ref> *</type>
        <definition>SynthesizerGui * FluidS::Fluid::gui</definition>
        <argsstring>()</argsstring>
        <name>gui</name>
        <reimplements refid="class_ms_1_1_synthesizer_1a633213147959c6bbca8bf120386e2552">gui</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="404" column="1" bodyfile="fluid/fluidgui.cpp" bodystart="67" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_fluid_s_1_1_fluid_1af5d6460d9bcd67a0118e46af7f974790" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QFileInfoList</type>
        <definition>QFileInfoList FluidS::Fluid::sfFiles</definition>
        <argsstring>()</argsstring>
        <name>sfFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fluid/fluid.h" line="406" column="1" bodyfile="fluid/fluid.cpp" bodystart="890" bodyend="904"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4902">
        <label>Ms::Synthesizer</label>
        <link refid="class_ms_1_1_synthesizer"/>
      </node>
      <node id="4901">
        <label>FluidS::Fluid</label>
        <link refid="class_fluid_s_1_1_fluid"/>
        <childnode refid="4902" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4904">
        <label>Ms::Synthesizer</label>
        <link refid="class_ms_1_1_synthesizer"/>
        <childnode refid="4905" relation="usage">
          <edgelabel>_gui</edgelabel>
        </childnode>
      </node>
      <node id="4906">
        <label>QWidget</label>
      </node>
      <node id="4905">
        <label>Ms::SynthesizerGui</label>
        <link refid="class_ms_1_1_synthesizer_gui"/>
        <childnode refid="4906" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4903">
        <label>FluidS::Fluid</label>
        <link refid="class_fluid_s_1_1_fluid"/>
        <childnode refid="4904" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="fluid/fluid.h" line="297" column="1" bodyfile="fluid/fluid.h" bodystart="297" bodyend="410"/>
    <listofallmembers>
      <member refid="class_fluid_s_1_1_fluid_1a31f261679809bfbf1b6d1490a1f93877" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>_error</name></member>
      <member refid="class_ms_1_1_synthesizer_1af6b25c4d3a8e8469c6d66618d0291d3d" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>_gui</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a0b4b86d4ccc4f6527d933f078cc5e062" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>_masterTuning</name></member>
      <member refid="class_ms_1_1_synthesizer_1a9c64d1dd4ba86a5a4f299f6cfd8e6ce1" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>_sampleRate</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ad0a0413bb70c8920af1c0968580605a6" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>_state</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ae95768b9ec77e2bb9eba0186ee21ddf0" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>_tuning</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a87229cf909080be663146eeb3a6d8305" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>act2hz</name></member>
      <member refid="class_ms_1_1_synthesizer_1a1489ca7e0be7e8a82c8f92d19446250a" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>active</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a37d89164400c3fadaa879aed6f2f54fe" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>activeVoices</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ab309bfbc656043f81f3ddae2e423c41d" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>addSoundFont</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a48cc85999097abdd9e954843c9329a08" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>allNotesOff</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a7737979cef99551a7223c3d620736ca6" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>alloc_voice</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ae69af3c42010de709d5be96927325e2a" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>allSoundsOff</name></member>
      <member refid="class_fluid_s_1_1_fluid_1af6ac15dd00684c6aa134fac65abd0b46" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>channel</name></member>
      <member refid="class_fluid_s_1_1_fluid_1adcc610c4c7266d948a988258d08b164f" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>ct2hz</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a53489d4ee7de927eefe80e80869cde98" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>ct2hz_real</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ac7e63754cd854419aeba2d52820681fd" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>damp_voices</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a504c7540395b26ddd27abe7121bb625f" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>error</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ae1621636f932b8210595e504d0a84730" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>find_preset</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a7bee0456c2f321a078fe82f8c07adca3" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>Fluid</name></member>
      <member refid="class_fluid_s_1_1_fluid_1aa4ae1bac80cfed1357b9041a63a39145" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>free_voice_by_kill</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a03a99db27e2acd25c038241efb4951fb" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>freeVoice</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ac4aae1d6afb746559c7a255fd7f77ccf" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>freeVoices</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a39c789e171574833a5218692b985a6d2" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_cc</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a3104d529d5acf3003d575388641e3aca" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_channel_preset</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a1817eac37d9a715807ca3a8bf987e634" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_gen</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ab2241c859e9ee88676471a0f9bd6eba0" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_pitch_bend</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a13d62eb8e6ecd24a302d330d5b820660" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_pitch_wheel_sens</name></member>
      <member refid="class_fluid_s_1_1_fluid_1af9523be2eca05a6eae4cd9802ed45f2d" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_preset</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a11f451b412679f0821f5775bd07f0096" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_program</name></member>
      <member refid="class_fluid_s_1_1_fluid_1aaf6e3df6ceb39e89b3f688f8a85c6459" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_sfont</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a044141b557f963cc4c94700f175d2fe1" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_sfont_by_id</name></member>
      <member refid="class_fluid_s_1_1_fluid_1abda7a5006a78d683bc4fbe7a40d169cd" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>get_sfont_by_name</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ab6f123c14590b0de67bd7bb35171f3dd" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>getPatchInfo</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a198db5e3fa698a46dcc54f0c12835c95" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>getPitch</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a16587ab222d897b999ef510d43e40dc0" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>gui</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a8febaf7107004c0a418610e453dbd7e1" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>init</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a3594ddd627a37241db42799b4252442b" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>initialized</name></member>
      <member refid="class_fluid_s_1_1_fluid_1acea06512e17b5242f85aacfc75342faf" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>kill_voice</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ace56dfc62dcc4392fc929c9402310926" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>loadSoundFonts</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a28d1fb38f55b442a0002ec08b46a3779" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>masterTuning</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ae5c25f6f09b3c29081bb8ef46ebdc58d" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>modulate_voices</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a408c0f5925f4ff47adb231e8d6c7670a" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>modulate_voices_all</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ab791392078d3825ebb6128682f504096" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>mutex</name></member>
      <member refid="class_fluid_s_1_1_fluid_1af48b857c7243e2165b262848e4ef58ce" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>name</name></member>
      <member refid="class_fluid_s_1_1_fluid_1abc81ab0f5f679d18d80605eb02b63a57" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>noteid</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a2d6b7bab83edc7b21f63095b27f30887" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>patches</name></member>
      <member refid="class_fluid_s_1_1_fluid_1abd088a4683eaa8a1fd28453eab076fae" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>pitch_wheel_sens</name></member>
      <member refid="class_fluid_s_1_1_fluid_1af6e4c1c56a9d4614bf2ae142a8280ef2" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>play</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ad3f56d18622fd9af0064d524c0b50d7a" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>Preset</name></member>
      <member refid="class_fluid_s_1_1_fluid_1aa7d68b1dffed5b4e3a8edf646be09d9f" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>print_voice</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ab0f0b2eadf8487febaeb8b44a8b66559" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>process</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a5152a3c75f8a4dd0c343af8e9129250e" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>program_change</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a08ef04452f9548aed549638833139daf" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>program_select</name></member>
      <member refid="class_fluid_s_1_1_fluid_1af0a11f64b5b5e93299a59bf710774214" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>removeSoundFont</name></member>
      <member refid="class_ms_1_1_synthesizer_1aa5975e5c1cd998e67af694117cfa7773" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>reset</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a3f261ddcaabee6d85462668921213089" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>sample_rate</name></member>
      <member refid="class_ms_1_1_synthesizer_1a6d2fd5ec5d5f80696ebc83736943f23d" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>sampleRate</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a04719a83a9bf2567188d6fa8e0d1a016" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>set_gen</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a244d9c59f3fb961424d020c0dc666b7f" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>set_gen2</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a2729f60affee768d2032c632442da0e9" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>set_interp_method</name></member>
      <member refid="class_ms_1_1_synthesizer_1a1b8d4feb8b1497b09502c9141d99f60a" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>setActive</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a95d8929b59451bd1718dfde34ed1f0d4" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>setMasterTuning</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a543672b744cd6d3f28cf7dd6848e3eeb" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>setState</name></member>
      <member refid="class_ms_1_1_synthesizer_1acd7120fde084a24675bc379b23ad9d82" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>setValue</name></member>
      <member refid="class_fluid_s_1_1_fluid_1af5d6460d9bcd67a0118e46af7f974790" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>sfFiles</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a35fe3c7e3c3dc99329aee4897d6be066" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>sfload</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a7db34eab79b341894fd53177e875064e" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>sfont_id</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a5203c004aa76585f5fd879bde0f765f8" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>sfonts</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a0c1621c7fe8e9b3c42417c298f8919bd" prot="protected" virt="non-virtual"><scope>FluidS::Fluid</scope><name>sfunload</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ac5aa855bff8f0332163a80113dc1d9f2" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>soundFonts</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a77103198aa6cb4a982178ac575fac1a7" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>start_voice</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a0d034484be8e27f2ed03637285a8c1c7" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>state</name></member>
      <member refid="class_ms_1_1_synthesizer_1a8494d936ef88180f0f5e2c47b0612870" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>Synthesizer</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a7d73e8f588e2dc333e25b0b495ed2492" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>system_reset</name></member>
      <member refid="class_fluid_s_1_1_fluid_1abfefd9b9ccfb4a43148aeca8a5f052f1" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>update_presets</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a7fe2163aa48b5ed06ab0b6affaac9152" prot="private" virt="non-virtual"><scope>FluidS::Fluid</scope><name>updatePatchList</name></member>
      <member refid="class_ms_1_1_synthesizer_1a8ac899662e2a1ba66d2e071e7db5bc39" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>value</name></member>
      <member refid="class_fluid_s_1_1_fluid_1a24657954e9f1d12330a031c549e6e850" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>Voice</name></member>
      <member refid="class_fluid_s_1_1_fluid_1ad478c429ee197712e6a8bec401d391d2" prot="public" virt="non-virtual"><scope>FluidS::Fluid</scope><name>~Fluid</name></member>
      <member refid="class_ms_1_1_synthesizer_1a6763c77d88596a67f8c1225fd05d8697" prot="public" virt="virtual"><scope>FluidS::Fluid</scope><name>~Synthesizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
