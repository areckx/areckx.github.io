<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_sampled_function" kind="class" language="C++" prot="public">
    <compoundname>SampledFunction</compoundname>
    <basecompoundref refid="class_function" prot="public" virt="non-virtual">Function</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sampled_function_1a482109915080a43d70d8c736dc0a71bb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SampledFunction::sampleSize[funcMaxInputs]</definition>
        <argsstring>[funcMaxInputs]</argsstring>
        <name>sampleSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="149" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1ab66f9c6d4bf106f9f4aa148b4fdb6dda" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SampledFunction::encode[funcMaxInputs][2]</definition>
        <argsstring>[funcMaxInputs][2]</argsstring>
        <name>encode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="151" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1af3465e37a094345a7066b7c1e4e1897c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SampledFunction::decode[funcMaxOutputs][2]</definition>
        <argsstring>[funcMaxOutputs][2]</argsstring>
        <name>decode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="153" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1acb1590350ff1ea11389cb5cec669650c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SampledFunction::inputMul[funcMaxInputs]</definition>
        <argsstring>[funcMaxInputs]</argsstring>
        <name>inputMul</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="155" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1a01092accf540f6c271eda203e8598952" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* SampledFunction::idxOffset</definition>
        <argsstring></argsstring>
        <name>idxOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="156" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1a14179ae1876d296ef5b82992fb31e094" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* SampledFunction::samples</definition>
        <argsstring></argsstring>
        <name>samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="157" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1a3baa6e96ee502bbc11875dd9aedbe85e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SampledFunction::nSamples</definition>
        <argsstring></argsstring>
        <name>nSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="158" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1a919d34deee231869f267b742c09927ef" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* SampledFunction::sBuf</definition>
        <argsstring></argsstring>
        <name>sBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="159" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1aac3e25ecd0fede37e5efbf831c7486b3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SampledFunction::cacheIn[funcMaxInputs]</definition>
        <argsstring>[funcMaxInputs]</argsstring>
        <name>cacheIn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="160" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1a4608ecfbdd56f1472b2b22fc433ee710" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SampledFunction::cacheOut[funcMaxOutputs]</definition>
        <argsstring>[funcMaxOutputs]</argsstring>
        <name>cacheOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="161" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sampled_function_1a09cd953cd2aed0c1f276066b0a797a5a" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SampledFunction::ok</definition>
        <argsstring></argsstring>
        <name>ok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="162" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sampled_function_1a1089869de9728f05e0bf0673532d8a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SampledFunction::SampledFunction</definition>
        <argsstring>(Object *funcObj, Dict *dict)</argsstring>
        <name>SampledFunction</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>funcObj</declname>
        </param>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="128" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="226" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1ab878d6bdead7d16341e671b45dbff8ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SampledFunction::~SampledFunction</definition>
        <argsstring>()</argsstring>
        <name>~SampledFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="129" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="422" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1ad2184da0ae6511fe6a3aab543908a371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_function" kindref="compound">Function</ref> *</type>
        <definition>virtual Function* SampledFunction::copy</definition>
        <argsstring>()</argsstring>
        <name>copy</name>
        <reimplements refid="class_function_1a7124f1598043122cc38639e33e80c97e">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="130" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a8f857af4898fe96f621de4c20bdc4680" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int SampledFunction::getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <reimplements refid="class_function_1a4787a45ad7d946ce4958d3ef5436a34d">getType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="131" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a3c73865ff5c803969f4c320bfadcbd30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SampledFunction::transform</definition>
        <argsstring>(double *in, double *out)</argsstring>
        <name>transform</name>
        <reimplements refid="class_function_1ab1d76848aed832e1919fadf2b57210b6">transform</reimplements>
        <param>
          <type>double *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="132" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="458" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a7afd1ddf1c397a1702bbfeed9e0195ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool SampledFunction::isOk</definition>
        <argsstring>()</argsstring>
        <name>isOk</name>
        <reimplements refid="class_function_1a3f407d8642ffac957855045725477cdd">isOk</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="133" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a54fe686aa38d24ae12b24b55ac911ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SampledFunction::hasDifferentResultSet</definition>
        <argsstring>(Function *func)</argsstring>
        <name>hasDifferentResultSet</name>
        <reimplements refid="class_function_1a45b8cff53bba65523631fc66aa0f9f63">hasDifferentResultSet</reimplements>
        <param>
          <type><ref refid="class_function" kindref="compound">Function</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="134" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="540" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a3629ec0250a943ac803999489cb30e54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SampledFunction::getSampleSize</definition>
        <argsstring>(int i)</argsstring>
        <name>getSampleSize</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="136" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a4f0422df3be738c00523836ba0d28234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SampledFunction::getEncodeMin</definition>
        <argsstring>(int i)</argsstring>
        <name>getEncodeMin</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="137" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1ad351ce404c2465e918de5e6fbe513181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SampledFunction::getEncodeMax</definition>
        <argsstring>(int i)</argsstring>
        <name>getEncodeMax</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="138" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a70db34027887d70d295624be835c3859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SampledFunction::getDecodeMin</definition>
        <argsstring>(int i)</argsstring>
        <name>getDecodeMin</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="139" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a76f6b509758d9569609fe6a94de38b3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SampledFunction::getDecodeMax</definition>
        <argsstring>(int i)</argsstring>
        <name>getDecodeMax</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="140" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a39a45c922451fd75a4adda564073f560" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* SampledFunction::getSamples</definition>
        <argsstring>()</argsstring>
        <name>getSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="141" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_sampled_function_1a0c883b1b6b499becfe49c9fb61269c0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SampledFunction::getSampleNumber</definition>
        <argsstring>()</argsstring>
        <name>getSampleNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="142" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="142" bodyend="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sampled_function_1aa60ddf69dcdfed4aa8669c6f65e79893" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SampledFunction::SampledFunction</definition>
        <argsstring>(const SampledFunction *func)</argsstring>
        <name>SampledFunction</name>
        <param>
          <type>const <ref refid="class_sampled_function" kindref="compound">SampledFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="146" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="434" bodyend="456"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14397">
        <label>Function</label>
        <link refid="class_function"/>
      </node>
      <node id="14396">
        <label>SampledFunction</label>
        <link refid="class_sampled_function"/>
        <childnode refid="14397" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14399">
        <label>Function</label>
        <link refid="class_function"/>
      </node>
      <node id="14398">
        <label>SampledFunction</label>
        <link refid="class_sampled_function"/>
        <childnode refid="14399" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="thirdparty/poppler/poppler/Function.h" line="125" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="125" bodyend="163"/>
    <listofallmembers>
      <member refid="class_sampled_function_1aac3e25ecd0fede37e5efbf831c7486b3" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>cacheIn</name></member>
      <member refid="class_sampled_function_1a4608ecfbdd56f1472b2b22fc433ee710" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>cacheOut</name></member>
      <member refid="class_sampled_function_1ad2184da0ae6511fe6a3aab543908a371" prot="public" virt="virtual"><scope>SampledFunction</scope><name>copy</name></member>
      <member refid="class_sampled_function_1af3465e37a094345a7066b7c1e4e1897c" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>decode</name></member>
      <member refid="class_function_1a3b17b3e90ca1b3cc162f2a79f5a02439" prot="protected" virt="non-virtual"><scope>SampledFunction</scope><name>domain</name></member>
      <member refid="class_sampled_function_1ab66f9c6d4bf106f9f4aa148b4fdb6dda" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>encode</name></member>
      <member refid="class_function_1ae206568fd4fd4c885e3ccff76345c4e6" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>Function</name></member>
      <member refid="class_function_1af5f9fab44f490ec95d06aea99beb528c" prot="protected" virt="non-virtual"><scope>SampledFunction</scope><name>Function</name></member>
      <member refid="class_sampled_function_1a76f6b509758d9569609fe6a94de38b3e" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getDecodeMax</name></member>
      <member refid="class_sampled_function_1a70db34027887d70d295624be835c3859" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getDecodeMin</name></member>
      <member refid="class_function_1a3168767848a2a073835841640a84f754" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getDomainMax</name></member>
      <member refid="class_function_1a57c4c3228159a304c175324faa52ce28" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getDomainMin</name></member>
      <member refid="class_sampled_function_1ad351ce404c2465e918de5e6fbe513181" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getEncodeMax</name></member>
      <member refid="class_sampled_function_1a4f0422df3be738c00523836ba0d28234" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getEncodeMin</name></member>
      <member refid="class_function_1a2382b79f8c097baea7961cd51e4f292a" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getHasRange</name></member>
      <member refid="class_function_1ad2541961d470c65a468d9a5be1238cd9" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getInputSize</name></member>
      <member refid="class_function_1a5d8d90a099b865aa42c7f90ae076521f" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getOutputSize</name></member>
      <member refid="class_function_1a713fb58959968a9653b170d17ef93129" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getRangeMax</name></member>
      <member refid="class_function_1a08d9a249f6dea2bde2da3ed0bc17ee18" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getRangeMin</name></member>
      <member refid="class_sampled_function_1a0c883b1b6b499becfe49c9fb61269c0e" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getSampleNumber</name></member>
      <member refid="class_sampled_function_1a39a45c922451fd75a4adda564073f560" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getSamples</name></member>
      <member refid="class_sampled_function_1a3629ec0250a943ac803999489cb30e54" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>getSampleSize</name></member>
      <member refid="class_sampled_function_1a8f857af4898fe96f621de4c20bdc4680" prot="public" virt="virtual"><scope>SampledFunction</scope><name>getType</name></member>
      <member refid="class_sampled_function_1a54fe686aa38d24ae12b24b55ac911ff8" prot="public" virt="virtual"><scope>SampledFunction</scope><name>hasDifferentResultSet</name></member>
      <member refid="class_function_1abf8f6a3b30732bbc1ecef56d28b3f4e2" prot="protected" virt="non-virtual"><scope>SampledFunction</scope><name>hasRange</name></member>
      <member refid="class_sampled_function_1a01092accf540f6c271eda203e8598952" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>idxOffset</name></member>
      <member refid="class_function_1ad0636679b03ed395ebda1332d20db149" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>init</name></member>
      <member refid="class_sampled_function_1acb1590350ff1ea11389cb5cec669650c" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>inputMul</name></member>
      <member refid="class_sampled_function_1a7afd1ddf1c397a1702bbfeed9e0195ce" prot="public" virt="virtual"><scope>SampledFunction</scope><name>isOk</name></member>
      <member refid="class_function_1ace602300f2adca1fcc07fc25326ce301" prot="protected" virt="non-virtual"><scope>SampledFunction</scope><name>m</name></member>
      <member refid="class_function_1a2f582d2da9cb2af5507a55e17bc44083" prot="protected" virt="non-virtual"><scope>SampledFunction</scope><name>n</name></member>
      <member refid="class_sampled_function_1a3baa6e96ee502bbc11875dd9aedbe85e" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>nSamples</name></member>
      <member refid="class_sampled_function_1a09cd953cd2aed0c1f276066b0a797a5a" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>ok</name></member>
      <member refid="class_function_1aa43a8ea82c3573a7c0c7b40ea58ea128" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>parse</name></member>
      <member refid="class_function_1a1ed4753bf0905efc7c1b1e15d7b1e4bf" prot="protected" virt="non-virtual"><scope>SampledFunction</scope><name>parse</name></member>
      <member refid="class_function_1aae39c230b68a5b8e96145635b1831038" prot="protected" virt="non-virtual"><scope>SampledFunction</scope><name>range</name></member>
      <member refid="class_sampled_function_1a1089869de9728f05e0bf0673532d8a5a" prot="public" virt="non-virtual"><scope>SampledFunction</scope><name>SampledFunction</name></member>
      <member refid="class_sampled_function_1aa60ddf69dcdfed4aa8669c6f65e79893" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>SampledFunction</name></member>
      <member refid="class_sampled_function_1a14179ae1876d296ef5b82992fb31e094" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>samples</name></member>
      <member refid="class_sampled_function_1a482109915080a43d70d8c736dc0a71bb" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>sampleSize</name></member>
      <member refid="class_sampled_function_1a919d34deee231869f267b742c09927ef" prot="private" virt="non-virtual"><scope>SampledFunction</scope><name>sBuf</name></member>
      <member refid="class_sampled_function_1a3c73865ff5c803969f4c320bfadcbd30" prot="public" virt="virtual"><scope>SampledFunction</scope><name>transform</name></member>
      <member refid="class_function_1a3b03f7cf0b75d16edebdda1dee1db6fd" prot="public" virt="virtual"><scope>SampledFunction</scope><name>~Function</name></member>
      <member refid="class_sampled_function_1ab878d6bdead7d16341e671b45dbff8ab" prot="public" virt="virtual"><scope>SampledFunction</scope><name>~SampledFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
