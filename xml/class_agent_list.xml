<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_agent_list" kind="class" language="C++" prot="public">
    <compoundname>AgentList</compoundname>
    <includes refid="_agent_list_8h" local="no">AgentList.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_agent_list_1a631c10e4f7044e77d7927f1d543da7da" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_agent" kindref="compound">Agent</ref> * &gt;</type>
        <definition>typedef std::vector&lt;Agent *&gt; AgentList::Container</definition>
        <argsstring></argsstring>
        <name>Container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="33" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_agent_list_1af8a18adbf172b9e8782b7bb1367a49c1" prot="public" static="no">
        <type>Container::iterator</type>
        <definition>typedef Container::iterator AgentList::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="34" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_agent_list_1a0c56c3377c849c460e5a74c835d4f635" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool AgentList::useAverageSalience</definition>
        <argsstring></argsstring>
        <name>useAverageSalience</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag for choice between sum and average beat salience values for <ref refid="class_agent" kindref="compound">Agent</ref> scores. The use of summed saliences favours faster tempi or lower metrical levels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="45" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_agent_list_1a8da51527cedc40ee03bec9d9b4db0a2d" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double AgentList::DEFAULT_BI</definition>
        <argsstring></argsstring>
        <name>DEFAULT_BI</name>
        <initializer>= 0.02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For the purpose of removing duplicate agents, the default JND of IBI </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="48" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_agent_list_1aa06e5fc242ea1f390252c4e2a03ce163" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double AgentList::DEFAULT_BT</definition>
        <argsstring></argsstring>
        <name>DEFAULT_BT</name>
        <initializer>= 0.04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For the purpose of removing duplicate agents, the default JND of phase </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="51" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_agent_list_1af7f67b8f35a9cd23557c070e34fb361d" prot="private" static="no" mutable="no">
        <type>Container</type>
        <definition>Container AgentList::list</definition>
        <argsstring></argsstring>
        <name>list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="91" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_agent_list_1a39c87b05a95fab15702297610aa538e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool AgentList::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="36" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1af53de5a34a37f538f91cea23622b3ef2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Container::iterator</type>
        <definition>Container::iterator AgentList::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="37" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1ae1c8a6806e5d3243895a57324067fb4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Container::iterator</type>
        <definition>Container::iterator AgentList::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="38" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1a2096c9ef7e7f6bb6b0de028b89951c83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t AgentList::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="39" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1a1d269d101495d0c6fdbccd67a28edbfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::push_back</definition>
        <argsstring>(Agent *a)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="class_agent" kindref="compound">Agent</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="41" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1ab87ca56331120c2dd7174464879acad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::add</definition>
        <argsstring>(Agent *a)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="class_agent" kindref="compound">Agent</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts newAgent into the list in ascending order of beatInterval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="54" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1abe2ceeb7ffcf4d07375677d6f238afc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::add</definition>
        <argsstring>(Agent *newAgent, bool sort)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="class_agent" kindref="compound">Agent</ref> *</type>
          <declname>newAgent</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Appends newAgent to list (sort==false), or inserts newAgent into the list in ascending order of beatInterval <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newAgent</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent to be added to the list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the list is sorted or not </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="61" column="1" bodyfile="thirdparty/beatroot/AgentList.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1a70c1d9daa4e814f6ebfd45f84f9ce73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::sort</definition>
        <argsstring>()</argsstring>
        <name>sort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sorts the <ref refid="class_agent_list" kindref="compound">AgentList</ref> by increasing beatInterval. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="64" column="1" bodyfile="thirdparty/beatroot/AgentList.cpp" bodystart="35" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1af44adc7160efd1062dd9c631f2349aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::remove</definition>
        <argsstring>(const iterator &amp;itr)</argsstring>
        <name>remove</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>itr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the given item from the list. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the <ref refid="class_agent" kindref="compound">Agent</ref> which is removed from the list </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="69" column="1" bodyfile="thirdparty/beatroot/AgentList.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1a671100a72e0990f371c6ca892b020498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::beatTrack</definition>
        <argsstring>(const EventList &amp;el, const AgentParameters &amp;params)</argsstring>
        <name>beatTrack</name>
        <param>
          <type>const EventList &amp;</type>
          <declname>el</declname>
        </param>
        <param>
          <type>const <ref refid="class_agent_parameters" kindref="compound">AgentParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform beat tracking on a list of events (onsets). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>el</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of onsets (or events or peaks) to beat track </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="74" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1a74c40095f26a193e815ae2c7e8f8269d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::beatTrack</definition>
        <argsstring>(const EventList &amp;el, const AgentParameters &amp;params, double stop)</argsstring>
        <name>beatTrack</name>
        <param>
          <type>const EventList &amp;</type>
          <declname>el</declname>
        </param>
        <param>
          <type>const <ref refid="class_agent_parameters" kindref="compound">AgentParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform beat tracking on a list of events (onsets). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>el</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of onsets (or events or peaks) to beat track. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop</parametername>
</parameternamelist>
<parameterdescription>
<para>Do not find beats after <computeroutput>stop</computeroutput> seconds. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="82" column="1" bodyfile="thirdparty/beatroot/AgentList.cpp" bodystart="89" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_agent_list_1af9d27edccc5f7915d4d3f554778e108c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_agent" kindref="compound">Agent</ref> *</type>
        <definition>Agent * AgentList::bestAgent</definition>
        <argsstring>()</argsstring>
        <name>bestAgent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the <ref refid="class_agent" kindref="compound">Agent</ref> with the highest score in the list, or NULL if beat tracking has failed. <simplesect kind="return"><para>The <ref refid="class_agent" kindref="compound">Agent</ref> with the highest score </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="88" column="1" bodyfile="thirdparty/beatroot/AgentList.cpp" bodystart="131" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_agent_list_1ae9ce7db81f97bf9d329784497dc41fbe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AgentList::removeDuplicates</definition>
        <argsstring>()</argsstring>
        <name>removeDuplicates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes Agents from the list which are duplicates of other Agents. A duplicate is defined by the tempo and phase thresholds thresholdBI and thresholdBT respectively. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/AgentList.h" line="97" column="1" bodyfile="thirdparty/beatroot/AgentList.cpp" bodystart="54" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_class" kindref="compound">Class</ref> for maintaining the set of all Agents involved in beat tracking a piece of music. </para>    </detaileddescription>
    <location file="thirdparty/beatroot/AgentList.h" line="31" column="1" bodyfile="thirdparty/beatroot/AgentList.h" bodystart="30" bodyend="98"/>
    <listofallmembers>
      <member refid="class_agent_list_1ab87ca56331120c2dd7174464879acad7" prot="public" virt="non-virtual"><scope>AgentList</scope><name>add</name></member>
      <member refid="class_agent_list_1abe2ceeb7ffcf4d07375677d6f238afc1" prot="public" virt="non-virtual"><scope>AgentList</scope><name>add</name></member>
      <member refid="class_agent_list_1a671100a72e0990f371c6ca892b020498" prot="public" virt="non-virtual"><scope>AgentList</scope><name>beatTrack</name></member>
      <member refid="class_agent_list_1a74c40095f26a193e815ae2c7e8f8269d" prot="public" virt="non-virtual"><scope>AgentList</scope><name>beatTrack</name></member>
      <member refid="class_agent_list_1af53de5a34a37f538f91cea23622b3ef2" prot="public" virt="non-virtual"><scope>AgentList</scope><name>begin</name></member>
      <member refid="class_agent_list_1af9d27edccc5f7915d4d3f554778e108c" prot="public" virt="non-virtual"><scope>AgentList</scope><name>bestAgent</name></member>
      <member refid="class_agent_list_1a631c10e4f7044e77d7927f1d543da7da" prot="public" virt="non-virtual"><scope>AgentList</scope><name>Container</name></member>
      <member refid="class_agent_list_1a8da51527cedc40ee03bec9d9b4db0a2d" prot="public" virt="non-virtual"><scope>AgentList</scope><name>DEFAULT_BI</name></member>
      <member refid="class_agent_list_1aa06e5fc242ea1f390252c4e2a03ce163" prot="public" virt="non-virtual"><scope>AgentList</scope><name>DEFAULT_BT</name></member>
      <member refid="class_agent_list_1a39c87b05a95fab15702297610aa538e9" prot="public" virt="non-virtual"><scope>AgentList</scope><name>empty</name></member>
      <member refid="class_agent_list_1ae1c8a6806e5d3243895a57324067fb4c" prot="public" virt="non-virtual"><scope>AgentList</scope><name>end</name></member>
      <member refid="class_agent_list_1af8a18adbf172b9e8782b7bb1367a49c1" prot="public" virt="non-virtual"><scope>AgentList</scope><name>iterator</name></member>
      <member refid="class_agent_list_1af7f67b8f35a9cd23557c070e34fb361d" prot="private" virt="non-virtual"><scope>AgentList</scope><name>list</name></member>
      <member refid="class_agent_list_1a1d269d101495d0c6fdbccd67a28edbfb" prot="public" virt="non-virtual"><scope>AgentList</scope><name>push_back</name></member>
      <member refid="class_agent_list_1af44adc7160efd1062dd9c631f2349aa7" prot="public" virt="non-virtual"><scope>AgentList</scope><name>remove</name></member>
      <member refid="class_agent_list_1ae9ce7db81f97bf9d329784497dc41fbe" prot="private" virt="non-virtual"><scope>AgentList</scope><name>removeDuplicates</name></member>
      <member refid="class_agent_list_1a2096c9ef7e7f6bb6b0de028b89951c83" prot="public" virt="non-virtual"><scope>AgentList</scope><name>size</name></member>
      <member refid="class_agent_list_1a70c1d9daa4e814f6ebfd45f84f9ce73f" prot="public" virt="non-virtual"><scope>AgentList</scope><name>sort</name></member>
      <member refid="class_agent_list_1a0c56c3377c849c460e5a74c835d4f635" prot="public" virt="non-virtual"><scope>AgentList</scope><name>useAverageSalience</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
