<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_cairo_output_dev_8h" kind="file" language="C++">
    <compoundname>CairoOutputDev.h</compoundname>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes local="no">cairo-ft.h</includes>
    <includes refid="_output_dev_8h" local="yes">OutputDev.h</includes>
    <includes refid="_text_output_dev_8h" local="yes">TextOutputDev.h</includes>
    <includes refid="_gfx_state_8h" local="yes">GfxState.h</includes>
    <includedby refid="_cairo_font_engine_8cc" local="yes">thirdparty/poppler/poppler/CairoFontEngine.cc</includedby>
    <includedby refid="_cairo_output_dev_8cc" local="yes">thirdparty/poppler/poppler/CairoOutputDev.cc</includedby>
    <incdepgraph>
      <node id="85792">
        <label>TextOutputDev.h</label>
        <link refid="_text_output_dev_8h_source"/>
        <childnode refid="85771" relation="include">
        </childnode>
        <childnode refid="85772" relation="include">
        </childnode>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85793" relation="include">
        </childnode>
        <childnode refid="85794" relation="include">
        </childnode>
        <childnode refid="85774" relation="include">
        </childnode>
      </node>
      <node id="85782">
        <label>stdarg.h</label>
      </node>
      <node id="85795">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85776" relation="include">
        </childnode>
        <childnode refid="85777" relation="include">
        </childnode>
      </node>
      <node id="85796">
        <label>assert.h</label>
      </node>
      <node id="85794">
        <label>GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="85771" relation="include">
        </childnode>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85776" relation="include">
        </childnode>
        <childnode refid="85795" relation="include">
        </childnode>
        <childnode refid="85796" relation="include">
        </childnode>
        <childnode refid="85797" relation="include">
        </childnode>
      </node>
      <node id="85793">
        <label>GfxFont.h</label>
        <link refid="_gfx_font_8h_source"/>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85780" relation="include">
        </childnode>
        <childnode refid="85776" relation="include">
        </childnode>
        <childnode refid="85775" relation="include">
        </childnode>
      </node>
      <node id="85783">
        <label>stdlib.h</label>
      </node>
      <node id="85779">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="85772" relation="include">
        </childnode>
        <childnode refid="85771" relation="include">
        </childnode>
      </node>
      <node id="85786">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="85771" relation="include">
        </childnode>
        <childnode refid="85776" relation="include">
        </childnode>
        <childnode refid="85787" relation="include">
        </childnode>
      </node>
      <node id="85797">
        <label>map</label>
      </node>
      <node id="85785">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="85782" relation="include">
        </childnode>
        <childnode refid="85771" relation="include">
        </childnode>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85780" relation="include">
        </childnode>
      </node>
      <node id="85789">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="85771" relation="include">
        </childnode>
        <childnode refid="85776" relation="include">
        </childnode>
        <childnode refid="85787" relation="include">
        </childnode>
      </node>
      <node id="85781">
        <label>limits.h</label>
      </node>
      <node id="85773">
        <label>cairo-ft.h</label>
      </node>
      <node id="85771">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="85772" relation="include">
        </childnode>
      </node>
      <node id="85784">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="85790">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="85771" relation="include">
        </childnode>
        <childnode refid="85772" relation="include">
        </childnode>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85776" relation="include">
        </childnode>
        <childnode refid="85787" relation="include">
        </childnode>
      </node>
      <node id="85788">
        <label>pthread.h</label>
      </node>
      <node id="85791">
        <label>PopplerCache.h</label>
        <link refid="_poppler_cache_8h_source"/>
        <childnode refid="85776" relation="include">
        </childnode>
      </node>
      <node id="85778">
        <label>string.h</label>
      </node>
      <node id="85780">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="85781" relation="include">
        </childnode>
        <childnode refid="85782" relation="include">
        </childnode>
        <childnode refid="85783" relation="include">
        </childnode>
        <childnode refid="85770" relation="include">
        </childnode>
      </node>
      <node id="85776">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="85777" relation="include">
        </childnode>
        <childnode refid="85772" relation="include">
        </childnode>
        <childnode refid="85778" relation="include">
        </childnode>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85779" relation="include">
        </childnode>
        <childnode refid="85780" relation="include">
        </childnode>
        <childnode refid="85784" relation="include">
        </childnode>
        <childnode refid="85785" relation="include">
        </childnode>
        <childnode refid="85786" relation="include">
        </childnode>
        <childnode refid="85789" relation="include">
        </childnode>
        <childnode refid="85790" relation="include">
        </childnode>
      </node>
      <node id="85769">
        <label>thirdparty/poppler/poppler/CairoOutputDev.h</label>
        <link refid="_cairo_output_dev_8h"/>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85773" relation="include">
        </childnode>
        <childnode refid="85774" relation="include">
        </childnode>
        <childnode refid="85792" relation="include">
        </childnode>
        <childnode refid="85794" relation="include">
        </childnode>
      </node>
      <node id="85774">
        <label>OutputDev.h</label>
        <link refid="_output_dev_8h_source"/>
        <childnode refid="85771" relation="include">
        </childnode>
        <childnode refid="85770" relation="include">
        </childnode>
        <childnode refid="85775" relation="include">
        </childnode>
        <childnode refid="85776" relation="include">
        </childnode>
        <childnode refid="85791" relation="include">
        </childnode>
      </node>
      <node id="85787">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="85788" relation="include">
        </childnode>
      </node>
      <node id="85775">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="85770">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="85771" relation="include">
        </childnode>
      </node>
      <node id="85777">
        <label>set</label>
      </node>
      <node id="85772">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="85799">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="85800">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="85798">
        <label>thirdparty/poppler/poppler/CairoOutputDev.h</label>
        <link refid="_cairo_output_dev_8h"/>
        <childnode refid="85799" relation="include">
        </childnode>
        <childnode refid="85800" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_cairo_image" prot="public">CairoImage</innerclass>
    <innerclass refid="class_cairo_output_dev" prot="public">CairoOutputDev</innerclass>
    <innerclass refid="struct_cairo_output_dev_1_1_stroke_path_clip" prot="protected">CairoOutputDev::StrokePathClip</innerclass>
    <innerclass refid="struct_cairo_output_dev_1_1_color_space_stack" prot="protected">CairoOutputDev::ColorSpaceStack</innerclass>
    <innerclass refid="struct_cairo_output_dev_1_1_mask_stack" prot="protected">CairoOutputDev::MaskStack</innerclass>
    <innerclass refid="class_cairo_image_output_dev" prot="public">CairoImageOutputDev</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CairoOutputDev.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2004<sp/>Red<sp/>Hat,<sp/>INC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005-2008<sp/>Jeff<sp/>Muizelaar<sp/>&lt;jeff@infidigm.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005,<sp/>2006<sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Nickolay<sp/>V.<sp/>Shmyrev<sp/>&lt;nshmyrev@yandex.ru&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006-2011,<sp/>2013<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008,<sp/>2009,<sp/>2011-2015<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Michael<sp/>Vrable<sp/>&lt;mvrable@cs.ucsd.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010-2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>Suzuki<sp/>Toshiya<sp/>&lt;mpsuzuki@hiroshima-u.ac.jp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2016<sp/>Jason<sp/>Crain<sp/>&lt;jason@aquaticape.us&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CAIROOUTPUTDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAIROOUTPUTDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cairo-ft.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;OutputDev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TextOutputDev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxState.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_state" kindref="compound">GfxState</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_path" kindref="compound">GfxPath</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx8_bit_font" kindref="compound">Gfx8BitFont</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cairo_font_engine" kindref="compound">CairoFontEngine</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cairo_font" kindref="compound">CairoFont</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CairoImage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_cairo_image" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cairo_image" kindref="compound">CairoImage</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="class_cairo_image" kindref="compound">CairoImage</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>~<ref refid="class_cairo_image" kindref="compound">CairoImage</ref><sp/>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>image<sp/>cairo<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setImage<sp/>(cairo_surface_t<sp/>*image);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>image<sp/>cairo<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>cairo_surface_t<sp/>*getImage<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>image;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>image<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRect<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xa1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ya1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xa2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ya2)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>*xa1<sp/>=<sp/>x1;<sp/>*ya1<sp/>=<sp/>y1;<sp/>*xa2<sp/>=<sp/>x2;<sp/>*ya2<sp/>=<sp/>y2;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>cairo_surface_t<sp/>*image;<sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>cairo<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/>y1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>upper<sp/>left<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/>y2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lower<sp/>right<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CairoOutputDev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_cairo_output_dev" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cairo_output_dev" kindref="compound">CairoOutputDev</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="class_cairo_output_dev" kindref="compound">CairoOutputDev</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_cairo_output_dev" kindref="compound">CairoOutputDev</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>get<sp/>info<sp/>about<sp/>output<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>upside-down<sp/>coordinates?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(Upside-down<sp/>means<sp/>(0,0)<sp/>is<sp/>the<sp/>top<sp/>left<sp/>corner<sp/>of<sp/>the<sp/>page.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>upsideDown()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>drawChar()<sp/>or<sp/>drawString()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useDrawChar()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>tilingPatternFill()?<sp/><sp/>If<sp/>this<sp/>returns<sp/>false,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tiling<sp/>pattern<sp/>fills<sp/>will<sp/>be<sp/>reduced<sp/>to<sp/>a<sp/>series<sp/>of<sp/>other<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useTilingPatternFill()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>functionShadedFill(),<sp/>axialShadedFill(),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>radialShadedFill()?<sp/><sp/>If<sp/>this<sp/>returns<sp/>false,<sp/>these<sp/>shaded<sp/>fills</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>reduced<sp/>to<sp/>a<sp/>series<sp/>of<sp/>other<sp/>drawing<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CAIRO_VERSION<sp/>&gt;=<sp/>CAIRO_VERSION_ENCODE(1,<sp/>12,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useShadedFills(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>&lt;=<sp/>7;<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useShadedFills(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>type<sp/>&lt;<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>FillColorStop()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useFillColorStop()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>beginType3Char/endType3Char?<sp/><sp/>Otherwise,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>in<sp/>Type<sp/>3<sp/>fonts<sp/>will<sp/>be<sp/>drawn<sp/>with<sp/>drawChar/drawString.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>interpretType3Chars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>need<sp/>to<sp/>clip<sp/>pages<sp/>to<sp/>the<sp/>crop<sp/>box<sp/>even<sp/>when<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>box<sp/>is<sp/>the<sp/>crop<sp/>box?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>needClipToCropBox()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>initialization<sp/>and<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPage(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNum,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>a<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endPage();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>save/restore<sp/>graphics<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveState(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restoreState(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>update<sp/>graphics<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAll(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDefaultCTM(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ctm);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateCTM(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m11,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m12,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m21,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m22,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m31,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m32);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineDash(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFlatness(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineJoin(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineCap(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateMiterLimit(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineWidth(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFillColor(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateStrokeColor(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFillOpacity(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateStrokeOpacity(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFillColorStop(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateBlendMode(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>update<sp/>text<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFont(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>path<sp/>painting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stroke(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eoFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clipToStrokePath(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>tilingPatternFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>*gfx,<sp/><ref refid="class_catalog" kindref="compound">Catalog</ref><sp/>*cat,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*str,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pmat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paintType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tilingType,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bbox,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xStep,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yStep);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CAIRO_VERSION<sp/>&gt;=<sp/>CAIRO_VERSION_ENCODE(1,<sp/>12,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>functionShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>axialShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref><sp/>*shading,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMax);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>axialShadedSupportExtend(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>radialShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref><sp/>*shading,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sMax);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>radialShadedSupportExtend(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CAIRO_VERSION<sp/>&gt;=<sp/>CAIRO_VERSION_ENCODE(1,<sp/>12,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>gouraudTriangleShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>patchMeshShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>path<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clip(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eoClip(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>text<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginString(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*s);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endString(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawChar(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originY,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytes,<sp/>Unicode<sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uLen);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginActualText(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*text);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endActualText(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>beginType3Char(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>code,<sp/>Unicode<sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uLen);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endType3Char(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginTextObject(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endTextObject(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>image<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImageMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>invert,<sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSoftMaskFromImageMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>invert,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>inlineImg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*baseMatrix);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unsetSoftMaskFromImageMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*baseMatrix);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImageMaskPrescaled(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>invert,<sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImageMaskRegular(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>invert,<sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*maskColors,<sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawSoftMaskedImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*maskStr,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskHeight,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*maskColorMap,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>maskInterpolate);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawMaskedImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*maskStr,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskHeight,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>maskInvert,<sp/>GBool<sp/>maskInterpolate);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>transparency<sp/>groups<sp/>and<sp/>soft<sp/>masks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*bbox*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*<sp/></highlight><highlight class="comment">/*blendingColorSpace*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/></highlight><highlight class="comment">/*isolated*/</highlight><highlight class="normal">,<sp/>GBool<sp/></highlight><highlight class="comment">/*knockout*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/></highlight><highlight class="comment">/*forSoftMask*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>popTransparencyGroup();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*bbox*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSoftMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*bbox*/</highlight><highlight class="normal">,<sp/>GBool<sp/></highlight><highlight class="comment">/*alpha*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*<sp/></highlight><highlight class="comment">/*transferFunc*/</highlight><highlight class="normal">,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<sp/></highlight><highlight class="comment">/*backdropColor*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearSoftMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>Type<sp/>3<sp/>font<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>type3D0(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wy);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>type3D1(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wy,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>llx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>urx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ury);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>special<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>to<sp/>indicate<sp/>that<sp/>a<sp/>new<sp/>PDF<sp/>document<sp/>has<sp/>been<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startDoc(<ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*docA,<sp/><ref refid="class_cairo_font_engine" kindref="compound">CairoFontEngine</ref><sp/>*fontEngine<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>GBool<sp/>isReverseVideo()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCairo<sp/>(cairo_t<sp/>*cr);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTextPage<sp/>(<ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*text);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPrinting<sp/>(GBool<sp/>printing)<sp/>{<sp/>this-&gt;printing<sp/>=<sp/>printing;<sp/>needFontUpdate<sp/>=<sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialias(cairo_antialias_t<sp/>antialias);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInType3Char(GBool<sp/>inType3Char)<sp/>{<sp/>this-&gt;inType3Char<sp/>=<sp/>inType3Char;<sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getType3GlyphWidth<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*wx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*wy)<sp/>{<sp/>*wx<sp/>=<sp/>t3_glyph_wx;<sp/>*wy<sp/>=<sp/>t3_glyph_wy;<sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>GBool<sp/>hasType3GlyphBBox<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t3_glyph_has_bbox;<sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getType3GlyphBBox<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t3_glyph_bbox;<sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPath(cairo_t<sp/>*cairo,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*path);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>cairo_surface_t<sp/>*downscaleSurface(cairo_surface_t<sp/>*orig_surface);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getScaledSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cairo_matrix_t<sp/>*matrix,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_height,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*scaledHeight);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>cairo_filter_t<sp/>getFilterForSurface(cairo_surface_t<sp/>*image,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>GBool<sp/>getStreamData<sp/>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*length);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMimeData(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,<sp/>cairo_surface_t<sp/>*image);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillToStrokePathClip(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>alignStrokeCoords(<ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>*subpath,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CAIRO_VERSION<sp/>&gt;=<sp/>CAIRO_VERSION_ENCODE(1,<sp/>14,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>GBool<sp/>setMimeDataForJBIG2Globals<sp/>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/>cairo_surface_t<sp/>*image);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAntialias(cairo_t<sp/>*cr,<sp/>cairo_antialias_t<sp/>antialias);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>fill_color,<sp/>stroke_color;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>cairo_pattern_t<sp/>*fill_pattern,<sp/>*stroke_pattern;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fill_opacity;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stroke_opacity;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>GBool<sp/>stroke_adjust;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>GBool<sp/>adjusted_stroke_width;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>GBool<sp/>align_stroke_coords;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="class_cairo_font" kindref="compound">CairoFont</ref><sp/>*currentFont;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="struct_cairo_output_dev_1_1_stroke_path_clip" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cairo_output_dev_1_1_stroke_path_clip" kindref="compound">StrokePathClip</ref><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*path;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>cairo_matrix_t<sp/>ctm;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_width;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dashes;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dash_count;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dash_offset;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>cairo_line_cap_t<sp/>cap;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>cairo_line_join_t<sp/>join;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>miter;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref_count;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}<sp/>*strokePathClip;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*doc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___library_rec__" kindref="compound">FT_Library</ref><sp/>ft_lib;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GBool<sp/>ft_lib_initialized;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="class_cairo_font_engine" kindref="compound">CairoFontEngine</ref><sp/>*fontEngine;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>GBool<sp/>fontEngine_owner;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>cairo_t<sp/>*cairo;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>cairo_matrix_t<sp/>orig_matrix;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>GBool<sp/>needFontUpdate;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>when<sp/>the<sp/>font<sp/>needs<sp/>to<sp/>be<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>GBool<sp/>printing;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>GBool<sp/>use_show_text_glyphs;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>GBool<sp/>text_matrix_valid;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>cairo_surface_t<sp/>*surface;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>cairo_glyph_t<sp/>*glyphs;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyphCount;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>cairo_text_cluster_t<sp/>*clusters;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterCount;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*utf8;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8Count;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8Max;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>cairo_path_t<sp/>*textClipPath;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>GBool<sp/>inUncoloredPattern;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inside<sp/>a<sp/>uncolored<sp/>pattern<sp/>(PaintType<sp/>=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>GBool<sp/>inType3Char;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inside<sp/>a<sp/>Type<sp/>3<sp/>CharProc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t3_glyph_wx,<sp/>t3_glyph_wy;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>GBool<sp/>t3_glyph_has_bbox;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t3_glyph_bbox[4];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>cairo_antialias_t<sp/>antialias;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>GBool<sp/>prescaleImages;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>for<sp/>the<sp/>current<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="class_actual_text" kindref="compound">ActualText</ref><sp/>*actualText;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>cairo_pattern_t<sp/>*group;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>cairo_pattern_t<sp/>*shape;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>cairo_pattern_t<sp/>*mask;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>cairo_matrix_t<sp/>mask_matrix;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>cairo_surface_t<sp/>*cairo_shape_surface;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>cairo_t<sp/>*cairo_shape;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>knockoutCount;</highlight></codeline>
<codeline lineno="358" refid="struct_cairo_output_dev_1_1_color_space_stack" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cairo_output_dev_1_1_color_space_stack" kindref="compound">ColorSpaceStack</ref><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>GBool<sp/>knockout;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*cs;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>cairo_matrix_t<sp/>group_matrix;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cairo_output_dev_1_1_color_space_stack" kindref="compound">ColorSpaceStack</ref><sp/>*next;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}<sp/>*<sp/>groupColorSpaceStack;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="struct_cairo_output_dev_1_1_mask_stack" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cairo_output_dev_1_1_mask_stack" kindref="compound">MaskStack</ref><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>cairo_pattern_t<sp/>*mask;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>cairo_matrix_t<sp/>mask_matrix;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cairo_output_dev_1_1_mask_stack" kindref="compound">MaskStack</ref><sp/>*next;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}<sp/>*maskStack;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">};</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CairoImageOutputDev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//XXX:<sp/>this<sp/>should<sp/>ideally<sp/>not<sp/>inherit<sp/>from<sp/>CairoOutputDev<sp/>but<sp/>use<sp/>it<sp/>instead<sp/>perhaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="class_cairo_image_output_dev" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cairo_image_output_dev" kindref="compound">CairoImageOutputDev</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_cairo_output_dev" kindref="compound">CairoOutputDev</ref><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="class_cairo_image_output_dev" kindref="compound">CairoImageOutputDev</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_cairo_image_output_dev" kindref="compound">CairoImageOutputDev</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>get<sp/>info<sp/>about<sp/>output<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>upside-down<sp/>coordinates?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(Upside-down<sp/>means<sp/>(0,0)<sp/>is<sp/>the<sp/>top<sp/>left<sp/>corner<sp/>of<sp/>the<sp/>page.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>upsideDown()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>drawChar()<sp/>or<sp/>drawString()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useDrawChar()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>tilingPatternFill()?<sp/><sp/>If<sp/>this<sp/>returns<sp/>false,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tiling<sp/>pattern<sp/>fills<sp/>will<sp/>be<sp/>reduced<sp/>to<sp/>a<sp/>series<sp/>of<sp/>other<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useTilingPatternFill()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>functionShadedFill(),<sp/>axialShadedFill(),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>radialShadedFill()?<sp/><sp/>If<sp/>this<sp/>returns<sp/>false,<sp/>these<sp/>shaded<sp/>fills</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>reduced<sp/>to<sp/>a<sp/>series<sp/>of<sp/>other<sp/>drawing<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CAIRO_VERSION<sp/>&gt;=<sp/>CAIRO_VERSION_ENCODE(1,<sp/>11,<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useShadedFills(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>&lt;=<sp/>7;<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useShadedFills(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>&lt;<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>FillColorStop()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useFillColorStop()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>beginType3Char/endType3Char?<sp/><sp/>Otherwise,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>in<sp/>Type<sp/>3<sp/>fonts<sp/>will<sp/>be<sp/>drawn<sp/>with<sp/>drawChar/drawString.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>interpretType3Chars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>need<sp/>non-text<sp/>content?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>needNonText()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>save/restore<sp/>graphics<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveState(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restoreState(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>update<sp/>graphics<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAll(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDefaultCTM(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ctm)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateCTM(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m11,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m12,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m21,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m22,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m31,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m32)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineDash(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFlatness(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineJoin(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineCap(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateMiterLimit(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLineWidth(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFillColor(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateStrokeColor(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFillOpacity(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateStrokeOpacity(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateBlendMode(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>update<sp/>text<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFont(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>path<sp/>painting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stroke(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eoFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clipToStrokePath(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>tilingPatternFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>*gfx,<sp/><ref refid="class_catalog" kindref="compound">Catalog</ref><sp/>*cat,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*str,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pmat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paintType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tilingType,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bbox,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xStep,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yStep)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>axialShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref><sp/>*shading,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMax)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>radialShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref><sp/>*shading,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sMax)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>path<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clip(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eoClip(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>image<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImageMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>invert,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,<sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*maskColors,<sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawSoftMaskedImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*maskStr,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskHeight,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*maskColorMap,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>maskInterpolate);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawMaskedImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*maskStr,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskHeight,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>maskInvert,<sp/>GBool<sp/>maskInterpolate);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSoftMaskFromImageMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>invert,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>inlineImg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*baseMatrix);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unsetSoftMaskFromImageMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*baseMatrix)<sp/>{}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>transparency<sp/>groups<sp/>and<sp/>soft<sp/>masks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*bbox*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*<sp/></highlight><highlight class="comment">/*blendingColorSpace*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/></highlight><highlight class="comment">/*isolated*/</highlight><highlight class="normal">,<sp/>GBool<sp/></highlight><highlight class="comment">/*knockout*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/></highlight><highlight class="comment">/*forSoftMask*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*bbox*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSoftMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*bbox*/</highlight><highlight class="normal">,<sp/>GBool<sp/></highlight><highlight class="comment">/*alpha*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*<sp/></highlight><highlight class="comment">/*transferFunc*/</highlight><highlight class="normal">,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<sp/></highlight><highlight class="comment">/*backdropColor*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearSoftMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*<sp/></highlight><highlight class="comment">/*state*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>Image<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>images<sp/>are<sp/>not<sp/>rendred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setImageDrawDecideCbk(GBool<sp/>(*cbk)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data),</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{<sp/>imgDrawCbk<sp/>=<sp/>cbk;<sp/>imgDrawCbkData<sp/>=<sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>list<sp/>of<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumImages()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numImages;<sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><ref refid="class_cairo_image" kindref="compound">CairoImage</ref><sp/>*getImage(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>images[i];<sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveImage(<ref refid="class_cairo_image" kindref="compound">CairoImage</ref><sp/>*image);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBBox(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y2);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><ref refid="class_cairo_image" kindref="compound">CairoImage</ref><sp/>**images;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>GBool<sp/>(*imgDrawCbk)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*imgDrawCbkData;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">};</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/CairoOutputDev.h"/>
  </compounddef>
</doxygen>
