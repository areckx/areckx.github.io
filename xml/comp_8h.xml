<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="comp_8h" kind="file" language="C++">
    <compoundname>comp.h</compoundname>
    <includes refid="crypto_8h" local="no">openssl/crypto.h</includes>
    <includedby refid="ssl_8h" local="no">thirdparty/openssl/include/openssl/ssl.h</includedby>
    <includedby refid="ssl3_8h" local="no">thirdparty/openssl/include/openssl/ssl3.h</includedby>
    <incdepgraph>
      <node id="82405">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82399">
        <label>stdlib.h</label>
      </node>
      <node id="82403">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82397">
        <label>thirdparty/openssl/include/openssl/comp.h</label>
        <link refid="comp_8h"/>
        <childnode refid="82398" relation="include">
        </childnode>
      </node>
      <node id="82407">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82400" relation="include">
        </childnode>
      </node>
      <node id="82404">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82403" relation="include">
        </childnode>
      </node>
      <node id="82401">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82400">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82401" relation="include">
        </childnode>
      </node>
      <node id="82402">
        <label>stdio.h</label>
      </node>
      <node id="82406">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82400" relation="include">
        </childnode>
      </node>
      <node id="82398">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82399" relation="include">
        </childnode>
        <childnode refid="82400" relation="include">
        </childnode>
        <childnode refid="82402" relation="include">
        </childnode>
        <childnode refid="82403" relation="include">
        </childnode>
        <childnode refid="82404" relation="include">
        </childnode>
        <childnode refid="82405" relation="include">
        </childnode>
        <childnode refid="82406" relation="include">
        </childnode>
        <childnode refid="82407" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="82408">
        <label>thirdparty/openssl/include/openssl/comp.h</label>
        <link refid="comp_8h"/>
        <childnode refid="82409" relation="include">
        </childnode>
        <childnode refid="82411" relation="include">
        </childnode>
      </node>
      <node id="82410">
        <label>thirdparty/kQOAuth/kqoauthutils.cpp</label>
        <link refid="kqoauthutils_8cpp_source"/>
      </node>
      <node id="82411">
        <label>thirdparty/openssl/include/openssl/ssl3.h</label>
        <link refid="ssl3_8h_source"/>
        <childnode refid="82409" relation="include">
        </childnode>
      </node>
      <node id="82409">
        <label>thirdparty/openssl/include/openssl/ssl.h</label>
        <link refid="ssl_8h_source"/>
        <childnode refid="82410" relation="include">
        </childnode>
        <childnode refid="82411" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcomp__method__st" prot="public">comp_method_st</innerclass>
    <innerclass refid="structcomp__ctx__st" prot="public">comp_ctx_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="comp_8h_1a28cab9475a3be31ad9df28df22f1bc04" prot="public" static="no">
        <name>COMP_F_BIO_ZLIB_FLUSH</name>
        <initializer>99</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="67" column="9" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comp_8h_1a4962b4f51c6ed48bff60206bf38f0c0a" prot="public" static="no">
        <name>COMP_F_BIO_ZLIB_NEW</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="68" column="9" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comp_8h_1a7710465c9f9e7537bb8d9891d4d0b235" prot="public" static="no">
        <name>COMP_F_BIO_ZLIB_READ</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="69" column="9" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comp_8h_1ab3dfd0fbebe2601bf6b19442b531b17b" prot="public" static="no">
        <name>COMP_F_BIO_ZLIB_WRITE</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="70" column="9" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comp_8h_1adf0d035f7f9bcd2fc6f2e42e030eacc3" prot="public" static="no">
        <name>COMP_R_ZLIB_DEFLATE_ERROR</name>
        <initializer>99</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="73" column="9" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comp_8h_1ae9f73af3ff950474a0982c09e996dc26" prot="public" static="no">
        <name>COMP_R_ZLIB_INFLATE_ERROR</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="74" column="9" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comp_8h_1afb07c5ec60f24bb922c45cecf2d0d819" prot="public" static="no">
        <name>COMP_R_ZLIB_NOT_SUPPORTED</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="75" column="9" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="comp_8h_1a9aa3298bb113c7c8e26a4f5cb9efb6d5" prot="public" static="no">
        <type>struct <ref refid="structcomp__ctx__st" kindref="compound">comp_ctx_st</ref></type>
        <definition>typedef struct comp_ctx_st COMP_CTX</definition>
        <argsstring></argsstring>
        <name>COMP_CTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="338" column="1" bodyfile="thirdparty/openssl/include/openssl/comp.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="comp_8h_1accb14d1335a2b0001abce2642d45f353" prot="public" static="no">
        <type>struct <ref refid="structcomp__method__st" kindref="compound">comp_method_st</ref></type>
        <definition>typedef struct comp_method_st  COMP_METHOD</definition>
        <argsstring></argsstring>
        <name>COMP_METHOD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="28" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="comp_8h_1a91a0a729e26c982c692254d1e8e4bf3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref> *</type>
        <definition>COMP_CTX* COMP_CTX_new</definition>
        <argsstring>(COMP_METHOD *meth)</argsstring>
        <name>COMP_CTX_new</name>
        <param>
          <type><ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref> *</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="comp_8h_1ac306ccbc00bd7cd0332ede7103b460fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void COMP_CTX_free</definition>
        <argsstring>(COMP_CTX *ctx)</argsstring>
        <name>COMP_CTX_free</name>
        <param>
          <type><ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="comp_8h_1a4a5e596f577650d0b4fa1699c796385a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int COMP_compress_block</definition>
        <argsstring>(COMP_CTX *ctx, unsigned char *out, int olen, unsigned char *in, int ilen)</argsstring>
        <name>COMP_compress_block</name>
        <param>
          <type><ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="comp_8h_1a09b6275d7e7ae5a2b9f479614cfd2267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int COMP_expand_block</definition>
        <argsstring>(COMP_CTX *ctx, unsigned char *out, int olen, unsigned char *in, int ilen)</argsstring>
        <name>COMP_expand_block</name>
        <param>
          <type><ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="comp_8h_1a15208fc7fea6d8d6e4cb4d41630ec9a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref> *</type>
        <definition>COMP_METHOD* COMP_rle</definition>
        <argsstring>(void)</argsstring>
        <name>COMP_rle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="comp_8h_1a57901e0d7462f1828f4bc7b665555346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref> *</type>
        <definition>COMP_METHOD* COMP_zlib</definition>
        <argsstring>(void)</argsstring>
        <name>COMP_zlib</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="comp_8h_1a39cccc0f98c0b03ea0fc4ec91279c96c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void COMP_zlib_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>COMP_zlib_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="comp_8h_1a8524bb91408fbc56022fdadec6fbf7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_COMP_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_COMP_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/comp.h" line="62" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_COMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_COMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomp__ctx__st" kindref="compound">comp_ctx_st</ref><sp/><ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structcomp__method__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomp__method__st" kindref="compound">comp_method_st</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NID<sp/>for<sp/>compression<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>text<sp/>string<sp/>to<sp/>identify<sp/>the<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*init)(<ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*finish)(<ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*compress)(<ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*expand)(<ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>two<sp/>do<sp/>NOTHING,<sp/>but<sp/>are<sp/>kept<sp/>for<sp/>backward<sp/>compatibility<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>(*ctrl)(void);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>(*callback_ctrl)(void);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structcomp__ctx__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomp__ctx__st" kindref="compound">comp_ctx_st</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref><sp/>*meth;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>compress_in;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>compress_out;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expand_in;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expand_out;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcrypto__ex__data__st" kindref="compound">CRYPTO_EX_DATA</ref><sp/><sp/>ex_data;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*COMP_CTX_new(<ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref><sp/>*meth);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>COMP_CTX_free(<ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMP_compress_block(<ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMP_expand_block(<ref refid="structcomp__ctx__st" kindref="compound">COMP_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref><sp/>*COMP_rle(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="structcomp__method__st" kindref="compound">COMP_METHOD</ref><sp/>*COMP_zlib(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>COMP_zlib_cleanup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HEADER_BIO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZLIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="structbio__method__st" kindref="compound">BIO_METHOD</ref><sp/>*BIO_f_zlib(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_COMP_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>COMP<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP_F_BIO_ZLIB_FLUSH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP_F_BIO_ZLIB_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP_F_BIO_ZLIB_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP_F_BIO_ZLIB_WRITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP_R_ZLIB_DEFLATE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP_R_ZLIB_INFLATE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMP_R_ZLIB_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/comp.h"/>
  </compounddef>
</doxygen>
