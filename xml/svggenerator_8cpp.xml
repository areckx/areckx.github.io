<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="svggenerator_8cpp" kind="file" language="C++">
    <compoundname>svggenerator.cpp</compoundname>
    <includes refid="svggenerator_8h" local="yes">svggenerator.h</includes>
    <includes refid="paintengine__p_8h" local="yes">paintengine_p.h</includes>
    <includes refid="mscore_8h" local="yes">libmscore/mscore.h</includes>
    <incdepgraph>
      <node id="68051">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="68055">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="68043">
        <label>QtCore/qiodevice.h</label>
      </node>
      <node id="68044">
        <label>QtCore/qobjectdefs.h</label>
      </node>
      <node id="68047">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="68048">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="68049" relation="include">
        </childnode>
      </node>
      <node id="68054">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="68055" relation="include">
        </childnode>
      </node>
      <node id="68046">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="68047" relation="include">
        </childnode>
        <childnode refid="68048" relation="include">
        </childnode>
        <childnode refid="68050" relation="include">
        </childnode>
        <childnode refid="68051" relation="include">
        </childnode>
      </node>
      <node id="68053">
        <label>libmscore/mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="68049" relation="include">
        </childnode>
        <childnode refid="68054" relation="include">
        </childnode>
      </node>
      <node id="68041">
        <label>QtGui/qpaintdevice.h</label>
      </node>
      <node id="68039">
        <label>mscore/svggenerator.cpp</label>
        <link refid="svggenerator_8cpp"/>
        <childnode refid="68040" relation="include">
        </childnode>
        <childnode refid="68052" relation="include">
        </childnode>
        <childnode refid="68053" relation="include">
        </childnode>
      </node>
      <node id="68042">
        <label>QtCore/qnamespace.h</label>
      </node>
      <node id="68045">
        <label>QtCore/qscopedpointer.h</label>
      </node>
      <node id="68052">
        <label>paintengine_p.h</label>
        <link refid="paintengine__p_8h_source"/>
      </node>
      <node id="68049">
        <label>config.h</label>
      </node>
      <node id="68040">
        <label>svggenerator.h</label>
        <link refid="svggenerator_8h_source"/>
        <childnode refid="68041" relation="include">
        </childnode>
        <childnode refid="68042" relation="include">
        </childnode>
        <childnode refid="68043" relation="include">
        </childnode>
        <childnode refid="68044" relation="include">
        </childnode>
        <childnode refid="68045" relation="include">
        </childnode>
        <childnode refid="68046" relation="include">
        </childnode>
      </node>
      <node id="68050">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
    </incdepgraph>
    <innerclass refid="class_svg_paint_engine_private" prot="public">SvgPaintEnginePrivate</innerclass>
    <innerclass refid="struct_svg_paint_engine_private_1_1__attributes" prot="public">SvgPaintEnginePrivate::_attributes</innerclass>
    <innerclass refid="class_svg_paint_engine" prot="public">SvgPaintEngine</innerclass>
    <innerclass refid="class_svg_generator_private" prot="public">SvgGeneratorPrivate</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="svggenerator_8cpp_1a2a14808d29d7a5642ac06679201cb085" prot="public" static="no">
        <name>SVG_SPACE</name>
        <initializer>&apos; &apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="245" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a1715f1ceeacdc32ff75570240664f754" prot="public" static="no">
        <name>SVG_QUOTE</name>
        <initializer>&quot;\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="246" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a54184aa5f04cf6929fb9c117dfae54fa" prot="public" static="no">
        <name>SVG_COMMA</name>
        <initializer>&quot;,&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="247" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a13cd5e933a9dff96f2b4d3d670be340b" prot="public" static="no">
        <name>SVG_GT</name>
        <initializer>&quot;&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="248" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ab84d2f887a54c009566b3c6a71d99fe8" prot="public" static="no">
        <name>SVG_PX</name>
        <initializer>&quot;px&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="249" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1acd5b73582ba394053221aaf3c9724ea0" prot="public" static="no">
        <name>SVG_NONE</name>
        <initializer>&quot;none&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="250" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1af5ecc1ef0e1dd48292f829d76289b0a0" prot="public" static="no">
        <name>SVG_EVENODD</name>
        <initializer>&quot;evenodd&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="251" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a5d2f0837b778f7a7e106db63e7fdaed7" prot="public" static="no">
        <name>SVG_BUTT</name>
        <initializer>&quot;butt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="252" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a62dd03ddffdb01f3a9a99a855b0fadfa" prot="public" static="no">
        <name>SVG_SQUARE</name>
        <initializer>&quot;square&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="253" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a8af40a22c2181327a839edbcfd581f28" prot="public" static="no">
        <name>SVG_ROUND</name>
        <initializer>&quot;round&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="254" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ae31fb7f9452b00c52eb85b1a26f0fad3" prot="public" static="no">
        <name>SVG_MITER</name>
        <initializer>&quot;miter&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="255" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ae855c02c1a7ebc6a3e798218a3750c4b" prot="public" static="no">
        <name>SVG_BEVEL</name>
        <initializer>&quot;bevel&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="256" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1abbc49030930f2752bf5a3885e7e7d531" prot="public" static="no">
        <name>SVG_ONE</name>
        <initializer>&quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="257" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ac9d73d554ed0b5e598b75edfbf36c953" prot="public" static="no">
        <name>SVG_BLACK</name>
        <initializer>&quot;#000000&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="258" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ab4ca3060642a6212c0eae0132826ed79" prot="public" static="no">
        <name>SVG_BEGIN</name>
        <initializer>&quot;&lt;svg&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="260" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ac25f941a4ef8227d9f1d0dcbd1055950" prot="public" static="no">
        <name>SVG_END</name>
        <initializer>&quot;&lt;/svg&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="261" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a93b2a8ec220a5a4b0531c19da8a13d51" prot="public" static="no">
        <name>SVG_WIDTH</name>
        <initializer>&quot; width=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="263" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a88a19dc9ce0c7d1344bc3170af6816fc" prot="public" static="no">
        <name>SVG_HEIGHT</name>
        <initializer>&quot; height=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="264" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a1f1a76abaeb1e2a9a4065cec91758b54" prot="public" static="no">
        <name>SVG_VIEW_BOX</name>
        <initializer>&quot; viewBox=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="265" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a8907a9ca170e9d52d01b3bfd090a24a1" prot="public" static="no">
        <name>SVG_X</name>
        <initializer>&quot; x=&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="267" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a6591bcfceb07d098e5ee7dcfa99762c8" prot="public" static="no">
        <name>SVG_Y</name>
        <initializer>&quot; y=&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="268" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a49443b5abad30ad9fec9ab02a5bf9332" prot="public" static="no">
        <name>SVG_POINTS</name>
        <initializer>&quot; points=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="270" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a98d393bd5a9d4a9a04cd4588ed78bdb5" prot="public" static="no">
        <name>SVG_D</name>
        <initializer>&quot; d=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="271" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1aadc9920056a640001fc1dce97baa860c" prot="public" static="no">
        <name>SVG_MOVE</name>
        <initializer>&apos;M&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="272" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a492d55003c3430a130fbc7ab453c31e7" prot="public" static="no">
        <name>SVG_LINE</name>
        <initializer>&apos;L&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="273" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1af37d6d9655b2873c5146bba560215ed5" prot="public" static="no">
        <name>SVG_CURVE</name>
        <initializer>&apos;C&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="274" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ac16bda761a4d49b14492ba51c8462fb4" prot="public" static="no">
        <name>SVG_CLASS</name>
        <initializer>&quot; class=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="276" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a772568f2145c36675919613bcc19bfc5" prot="public" static="no">
        <name>SVG_ELEMENT_END</name>
        <initializer>&quot;/&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="278" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a1b1d04dff8738e26c1dcc572ca5fb5ea" prot="public" static="no">
        <name>SVG_RPAREN_QUOTE</name>
        <initializer>&quot;)\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="279" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a25819c69bd1a55f336bd1eaf290e6595" prot="public" static="no">
        <name>SVG_TITLE_BEGIN</name>
        <initializer>&quot;&lt;title&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="281" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a6d2e3ae9ed6834097ada17a20ef6cf20" prot="public" static="no">
        <name>SVG_TITLE_END</name>
        <initializer>&quot;&lt;/title&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="282" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1aeb687d0d90a9dcf2b15b9ab198690689" prot="public" static="no">
        <name>SVG_DESC_BEGIN</name>
        <initializer>&quot;&lt;desc&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="283" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a38e4f91fc1c1767be192c5e0bebbd6fc" prot="public" static="no">
        <name>SVG_DESC_END</name>
        <initializer>&quot;&lt;/desc&gt;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="284" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1abb9cd25d6c90313caee92daa65400b0f" prot="public" static="no">
        <name>SVG_IMAGE</name>
        <initializer>&quot;&lt;image&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="286" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a4c8ecaba803b5312e2ad524791ed6181" prot="public" static="no">
        <name>SVG_PATH</name>
        <initializer>&quot;&lt;path&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="287" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1abef7243fc2a77222f1f79cc3d70d7709" prot="public" static="no">
        <name>SVG_POLYLINE</name>
        <initializer>&quot;&lt;polyline&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="288" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a047b28a82f08481dd1c5f21ff80c6e73" prot="public" static="no">
        <name>SVG_PRESERVE_ASPECT</name>
        <initializer>&quot; preserveAspectRatio=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="290" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a866bbf9c5f5ea8ad0e1005d6a0ce574d" prot="public" static="no">
        <name>SVG_FILL</name>
        <initializer>&quot; fill=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="292" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a9f03df0188c6ce5814663d50702628d2" prot="public" static="no">
        <name>SVG_STROKE</name>
        <initializer>&quot; stroke=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="293" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1aba5fa50eb564b1e072d7b5ee23f21572" prot="public" static="no">
        <name>SVG_STROKE_WIDTH</name>
        <initializer>&quot; stroke-width=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="294" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a71ec518d1fdd5ba2519a890df25b1d9f" prot="public" static="no">
        <name>SVG_STROKE_LINECAP</name>
        <initializer>&quot; stroke-linecap=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="295" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1add64527e57a910ed66990802c5321bd1" prot="public" static="no">
        <name>SVG_STROKE_LINEJOIN</name>
        <initializer>&quot; stroke-linejoin=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="296" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a21148627b22626ccee5589725e2b54fc" prot="public" static="no">
        <name>SVG_STROKE_DASHARRAY</name>
        <initializer>&quot; stroke-dasharray=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="297" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ad06a920ce7248afe27268ba1b32cc011" prot="public" static="no">
        <name>SVG_STROKE_DASHOFFSET</name>
        <initializer>&quot; stroke-dashoffset=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="298" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a0d620cdc6fd0c0d228f9fa90f3afc42b" prot="public" static="no">
        <name>SVG_STROKE_MITERLIMIT</name>
        <initializer>&quot; stroke-miterlimit=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="299" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a97c165554721284b391fd346cbddcb65" prot="public" static="no">
        <name>SVG_OPACITY</name>
        <initializer>&quot; opacity=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="301" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a3709105780b8b0ab50034c214c20affa" prot="public" static="no">
        <name>SVG_FILL_OPACITY</name>
        <initializer>&quot; fill-opacity=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="302" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a1e0d8a0dabc84db023df9593f6cec52d" prot="public" static="no">
        <name>SVG_STROKE_OPACITY</name>
        <initializer>&quot; stroke-opacity=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="303" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ae1057895ce28b966b7aed0a784bd2e84" prot="public" static="no">
        <name>SVG_FONT_FAMILY</name>
        <initializer>&quot; font-family=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="305" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ad591a95c7b368cf53c694fb06298ea07" prot="public" static="no">
        <name>SVG_FONT_SIZE</name>
        <initializer>&quot; font-size=\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="306" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1aab75e3ad0320efb596d935b726750126" prot="public" static="no">
        <name>SVG_FILL_RULE</name>
        <initializer>&quot; fill-rule=\&quot;evenodd\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="308" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1a14fd9417615e5952e9ff138fad4e5521" prot="public" static="no">
        <name>SVG_VECTOR_EFFECT</name>
        <initializer>&quot; vector-effect=\&quot;non-scaling-stroke\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="309" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svggenerator_8cpp_1ac59788a3ca8e87f21b22874e78735b38" prot="public" static="no">
        <name>SVG_MATRIX</name>
        <initializer>&quot; transform=\&quot;matrix(&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="311" column="9" bodyfile="mscore/svggenerator.cpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="svggenerator_8cpp_1a64663f58cd681229a5d5a21e104b844c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void translate_color</definition>
        <argsstring>(const QColor &amp;color, QString *color_string, QString *opacity_string)</argsstring>
        <name>translate_color</name>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>color_string</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>opacity_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="113" column="1" bodyfile="mscore/svggenerator.cpp" bodystart="113" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="svggenerator_8cpp_1a6146bdae1508b9fdd84499ce4db9d273" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void translate_dashPattern</definition>
        <argsstring>(QVector&lt; qreal &gt; pattern, const qreal &amp;width, QString *pattern_string)</argsstring>
        <name>translate_dashPattern</name>
        <param>
          <type>QVector&lt; qreal &gt;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const qreal &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>pattern_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="127" column="1" bodyfile="mscore/svggenerator.cpp" bodystart="127" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="svggenerator_8cpp_1a8ca9a9672252307d2f64276e4d7b7654" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>static QString getClass</definition>
        <argsstring>(const Ms::Element *e)</argsstring>
        <name>getClass</name>
        <param>
          <type>const <ref refid="class_ms_1_1_element" kindref="compound">Ms::Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="139" column="1" bodyfile="mscore/svggenerator.cpp" bodystart="139" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="svggenerator_8cpp_1a729f20bd8f0a91bfd800f67f67c42bcc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QPaintEngine::PaintEngineFeatures</type>
        <definition>static QPaintEngine::PaintEngineFeatures svgEngineFeatures</definition>
        <argsstring>()</argsstring>
        <name>svgEngineFeatures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/svggenerator.cpp" line="216" column="1" bodyfile="mscore/svggenerator.cpp" bodystart="216" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Nokia<sp/>Corporation<sp/>and/or<sp/>its<sp/>subsidiary(-ies).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Contact:<sp/>Nokia<sp/>Corporation<sp/>(qt-info@nokia.com)</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>QtSvg<sp/>module<sp/>of<sp/>the<sp/>Qt<sp/>Toolkit.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>$QT_BEGIN_LICENSE:LGPL$</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>Usage</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>This<sp/>file<sp/>may<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>License<sp/>version<sp/>2.1<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/>appearing<sp/>in<sp/>the<sp/>file<sp/>LICENSE.LGPL<sp/>included<sp/>in<sp/>the<sp/>packaging<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>file.<sp/>Please<sp/>review<sp/>the<sp/>following<sp/>information<sp/>to<sp/>ensure<sp/>the<sp/>GNU<sp/>Lesser</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2.1<sp/>requirements<sp/>will<sp/>be<sp/>met:</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/>In<sp/>addition,<sp/>as<sp/>a<sp/>special<sp/>exception,<sp/>Nokia<sp/>gives<sp/>you<sp/>certain<sp/>additional</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**<sp/>rights.<sp/>These<sp/>rights<sp/>are<sp/>described<sp/>in<sp/>the<sp/>Nokia<sp/>Qt<sp/>LGPL<sp/>Exception</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>version<sp/>1.1,<sp/>included<sp/>in<sp/>the<sp/>file<sp/>LGPL_EXCEPTION.txt<sp/>in<sp/>this<sp/>package.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>Usage</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/>Alternatively,<sp/>this<sp/>file<sp/>may<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General</highlight></codeline>
<codeline lineno="24"><highlight class="comment">**<sp/>Public<sp/>License<sp/>version<sp/>3.0<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/>and<sp/>appearing<sp/>in<sp/>the<sp/>file<sp/>LICENSE.GPL<sp/>included<sp/>in<sp/>the<sp/>packaging<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/>file.<sp/>Please<sp/>review<sp/>the<sp/>following<sp/>information<sp/>to<sp/>ensure<sp/>the<sp/>GNU<sp/>General</highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/>Public<sp/>License<sp/>version<sp/>3.0<sp/>requirements<sp/>will<sp/>be<sp/>met:</highlight></codeline>
<codeline lineno="28"><highlight class="comment">**<sp/>http://www.gnu.org/copyleft/gpl.html.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/>Other<sp/>Usage</highlight></codeline>
<codeline lineno="31"><highlight class="comment">**<sp/>Alternatively,<sp/>this<sp/>file<sp/>may<sp/>be<sp/>used<sp/>in<sp/>accordance<sp/>with<sp/>the<sp/>terms<sp/>and</highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/>conditions<sp/>contained<sp/>in<sp/>a<sp/>signed<sp/>written<sp/>agreement<sp/>between<sp/>you<sp/>and<sp/>Nokia.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">**</highlight></codeline>
<codeline lineno="34"><highlight class="comment">**</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**</highlight></codeline>
<codeline lineno="37"><highlight class="comment">**</highlight></codeline>
<codeline lineno="38"><highlight class="comment">**<sp/>$QT_END_LICENSE$</highlight></codeline>
<codeline lineno="39"><highlight class="comment">**</highlight></codeline>
<codeline lineno="40"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;svggenerator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;paintengine_p.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/mscore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">//<sp/>FOR<sp/>GRADIENT<sp/>FUNCTIONALITY<sp/>THAT<sp/>IS<sp/>NOT<sp/>IMPLEMENTED<sp/>(YET):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>QT_POINTER_SIZE<sp/>==<sp/>8<sp/>//<sp/>64-bit<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>uint<sp/>INTERPOLATE_PIXEL_256(uint<sp/>x,<sp/>uint<sp/>a,<sp/>uint<sp/>y,<sp/>uint<sp/>b)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>quint64<sp/>t<sp/>=<sp/>(((quint64(x))<sp/>|<sp/>((quint64(x))<sp/>&lt;&lt;<sp/>24))<sp/>&amp;<sp/>0x00ff00ff00ff00ff)<sp/>*<sp/>a;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(((quint64(y))<sp/>|<sp/>((quint64(y))<sp/>&lt;&lt;<sp/>24))<sp/>&amp;<sp/>0x00ff00ff00ff00ff)<sp/>*<sp/>b;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&gt;&gt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&amp;=<sp/>0x00ff00ff00ff00ff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>(uint(t))<sp/>|<sp/>(uint(t<sp/>&gt;&gt;<sp/>24));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>uint<sp/>PREMUL(uint<sp/>x)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint<sp/>a<sp/>=<sp/>x<sp/>&gt;&gt;<sp/>24;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>quint64<sp/>t<sp/>=<sp/>(((quint64(x))<sp/>|<sp/>((quint64(x))<sp/>&lt;&lt;<sp/>24))<sp/>&amp;<sp/>0x00ff00ff00ff00ff)<sp/>*<sp/>a;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>=<sp/>(t<sp/>+<sp/>((t<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff00ff00ff00ff)<sp/>+<sp/>0x80008000800080)<sp/>&gt;&gt;<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&amp;=<sp/>0x000000ff00ff00ff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>(uint(t))<sp/>|<sp/>(uint(t<sp/>&gt;&gt;<sp/>24))<sp/>|<sp/>(a<sp/>&lt;&lt;<sp/>24);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//#else<sp/>//<sp/>32-bit<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>uint<sp/>INTERPOLATE_PIXEL_256(uint<sp/>x,<sp/>uint<sp/>a,<sp/>uint<sp/>y,<sp/>uint<sp/>b)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint<sp/>t<sp/>=<sp/>(x<sp/>&amp;<sp/>0xff00ff)<sp/>*<sp/>a<sp/>+<sp/>(y<sp/>&amp;<sp/>0xff00ff)<sp/>*<sp/>b;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&gt;&gt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&amp;=<sp/>0xff00ff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x<sp/>=<sp/>((x<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff00ff)<sp/>*<sp/>a<sp/>+<sp/>((y<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff00ff)<sp/>*<sp/>b;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x<sp/>&amp;=<sp/>0xff00ff00;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x<sp/>|=<sp/>t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>defined(Q_CC_RVCT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/>pragma<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/>pragma<sp/>arm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>defined(Q_CC_RVCT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/>pragma<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>uint<sp/>PREMUL(uint<sp/>x)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint<sp/>a<sp/>=<sp/>x<sp/>&gt;&gt;<sp/>24;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint<sp/>t<sp/>=<sp/>(x<sp/>&amp;<sp/>0xff00ff)<sp/>*<sp/>a;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>=<sp/>(t<sp/>+<sp/>((t<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff00ff)<sp/>+<sp/>0x800080)<sp/>&gt;&gt;<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&amp;=<sp/>0xff00ff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x<sp/>=<sp/>((x<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff)<sp/>*<sp/>a;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>+<sp/>((x<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff)<sp/>+<sp/>0x80);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x<sp/>&amp;=<sp/>0xff00;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>x<sp/>|=<sp/>t<sp/>|<sp/>(a<sp/>&lt;&lt;<sp/>24);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>INV_PREMUL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>(qAlpha(p)<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>((qAlpha(p)<sp/>&lt;&lt;<sp/>24)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>|<sp/>(((255*qRed(p))/<sp/>qAlpha(p))<sp/>&lt;&lt;<sp/>16)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>|<sp/>(((255*qGreen(p))<sp/>/<sp/>qAlpha(p))<sp/><sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>|<sp/>((255*qBlue(p))<sp/>/<sp/>qAlpha(p))))</highlight></codeline>
<codeline lineno="109"><highlight class="comment">*/</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>translate_color(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;<ref refid="structcolor" kindref="compound">color</ref>,<sp/>QString<sp/>*color_string,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>*opacity_string)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(color_string);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(opacity_string);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>*color_string<sp/>=</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString::fromLatin1(</highlight><highlight class="stringliteral">&quot;#%1%2%3&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg(color.red(),<sp/>2,<sp/>16,<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg(color.green(),<sp/>2,<sp/>16,<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg(color.blue(),<sp/>2,<sp/>16,<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>*opacity_string<sp/>=<sp/>QString::number(color.alphaF());</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>translate_dashPattern(QVector&lt;qreal&gt;<sp/>pattern,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal&amp;<sp/>width,<sp/>QString<sp/>*pattern_string)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(pattern_string);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>SVG<sp/>operates<sp/>in<sp/>absolute<sp/>lengths,<sp/>whereas<sp/>Qt<sp/>uses<sp/>a<sp/>length/width<sp/>ratio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(qreal<sp/>entry,<sp/>pattern)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pattern_string<sp/>+=<sp/>QString::fromLatin1(</highlight><highlight class="stringliteral">&quot;%1,&quot;</highlight><highlight class="normal">).arg(entry<sp/>*<sp/>width);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern_string-&gt;chop(1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>SVG<sp/>class<sp/>attribute,<sp/>based<sp/>on<sp/>element<sp/>type/name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QString<sp/>getClass(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_element" kindref="compound">Ms::Element</ref><sp/>*e)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Ms::ElementType<sp/>eType;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>eName;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>element<sp/>type<sp/>as<sp/>&quot;class&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eName;<sp/></highlight><highlight class="comment">//<sp/>e<sp/>should<sp/>never<sp/>be<sp/>null,<sp/>this<sp/>is<sp/>extra-cautious</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>eType<sp/>=<sp/>e-&gt;type();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>eName<sp/>=<sp/>e-&gt;name(eType);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Future<sp/>sub-typing<sp/>code<sp/>goes<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eName;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_svg_paint_engine_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_svg_paint_engine_private" kindref="compound">SvgPaintEnginePrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_q_paint_engine_private" kindref="compound">QPaintEnginePrivate</ref></highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_svg_paint_engine_private" kindref="compound">SvgPaintEnginePrivate</ref>()</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>QSize();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewBox<sp/>=<sp/>QRectF();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputDevice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolution<sp/>=<sp/>Ms::DPI;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes.title<sp/>=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;MuseScore<sp/>SVG<sp/>Document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes.description<sp/>=<sp/>QString(</highlight><highlight class="stringliteral">&quot;Generated<sp/>by<sp/>MuseScore<sp/>%1&quot;</highlight><highlight class="normal">).arg(VERSION);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes.font_family<sp/>=<sp/>QLatin1String(&quot;serif&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes.font_size<sp/>=<sp/>QLatin1String(&quot;10pt&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes.font_style<sp/>=<sp/>QLatin1String(&quot;normal&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes.font_weight<sp/>=<sp/>QLatin1String(&quot;normal&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numGradients<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>size;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>viewBox;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>QIODevice<sp/>*outputDevice;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>QTextStream<sp/>*stream;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>header;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>QString<sp/>defs;<sp/>//<sp/>NEEDED<sp/>FOR<sp/>GRADIENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>body;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>QBrush<sp/>brush;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>pen;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix<sp/>matrix;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>QFont<sp/>font;<sp/><sp/>//<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GRADIENTS<sp/>NOT<sp/>IMPLEMENTED<sp/>(YET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>QString<sp/>generateGradientName()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numGradients;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentGradientName<sp/>=<sp/>QString::fromLatin1(&quot;gradient%1&quot;).arg(numGradients);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>currentGradientName;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>QString<sp/>currentGradientName;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>numGradients;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="struct_svg_paint_engine_private_1_1__attributes" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_svg_paint_engine_private_1_1__attributes" kindref="compound">_attributes</ref><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>title;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>description;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UNUSED<sp/>STRUCT<sp/>MEMBERS:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>font_weight;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>font_size;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>font_family;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>font_style;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>stroke,<sp/>strokeOpacity;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>dashPattern,<sp/>dashOffset;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>fill,<sp/>fillOpacity;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>attributes;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QPaintEngine::PaintEngineFeatures<sp/>svgEngineFeatures()</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPaintEngine::PaintEngineFeatures(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPaintEngine::AllFeatures</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>~QPaintEngine::PatternBrush</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>~QPaintEngine::PerspectiveTransform</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>~QPaintEngine::ConicalGradientFill</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>~QPaintEngine::PorterDuff);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_svg_paint_engine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QPaintEngine</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>setElement()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_DECLARE_PRIVATE(<ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><sp/><sp/><sp/><sp/>stateString;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>QTextStream<sp/>stateStream;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt<sp/>translates<sp/>everything.<sp/>These<sp/>help<sp/>avoid<sp/>SVG<sp/>transform=&quot;translate()&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>_dx;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>_dy;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Ms::Element<sp/>being<sp/>generated<sp/>right<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_element" kindref="compound">Ms::Element</ref>*<sp/>_element<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SVG<sp/>strings<sp/>as<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_SPACE<sp/><sp/><sp/><sp/>&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_QUOTE<sp/><sp/><sp/><sp/>&quot;\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_COMMA<sp/><sp/><sp/><sp/>&quot;,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_GT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_PX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;px&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_NONE<sp/><sp/><sp/><sp/><sp/>&quot;none&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_EVENODD<sp/><sp/>&quot;evenodd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_BUTT<sp/><sp/><sp/><sp/><sp/>&quot;butt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_SQUARE<sp/><sp/><sp/>&quot;square&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_ROUND<sp/><sp/><sp/><sp/>&quot;round&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_MITER<sp/><sp/><sp/><sp/>&quot;miter&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_BEVEL<sp/><sp/><sp/><sp/>&quot;bevel&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_ONE<sp/><sp/><sp/><sp/><sp/><sp/>&quot;1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_BLACK<sp/><sp/><sp/><sp/>&quot;#000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_BEGIN<sp/><sp/><sp/><sp/>&quot;&lt;svg&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_END<sp/><sp/><sp/><sp/><sp/><sp/>&quot;&lt;/svg&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_WIDTH<sp/><sp/><sp/><sp/>&quot;<sp/>width=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_HEIGHT<sp/><sp/><sp/>&quot;<sp/>height=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_VIEW_BOX<sp/>&quot;<sp/>viewBox=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>x=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>y=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_POINTS<sp/><sp/><sp/>&quot;<sp/>points=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>d=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_MOVE<sp/><sp/><sp/><sp/><sp/>&apos;M&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_LINE<sp/><sp/><sp/><sp/><sp/>&apos;L&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_CURVE<sp/><sp/><sp/><sp/>&apos;C&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_CLASS<sp/><sp/><sp/><sp/>&quot;<sp/>class=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_ELEMENT_END<sp/><sp/>&quot;/&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_RPAREN_QUOTE<sp/>&quot;)\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_TITLE_BEGIN<sp/>&quot;&lt;title&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_TITLE_END<sp/><sp/><sp/>&quot;&lt;/title&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_DESC_BEGIN<sp/><sp/>&quot;&lt;desc&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_DESC_END<sp/><sp/><sp/><sp/>&quot;&lt;/desc&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_IMAGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&lt;image&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_PATH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&lt;path&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_POLYLINE<sp/><sp/><sp/><sp/>&quot;&lt;polyline&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_PRESERVE_ASPECT<sp/>&quot;<sp/>preserveAspectRatio=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_FILL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>fill=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>stroke=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE_WIDTH<sp/><sp/><sp/><sp/>&quot;<sp/>stroke-width=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE_LINECAP<sp/><sp/>&quot;<sp/>stroke-linecap=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE_LINEJOIN<sp/>&quot;<sp/>stroke-linejoin=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE_DASHARRAY<sp/>&quot;<sp/>stroke-dasharray=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE_DASHOFFSET<sp/>&quot;<sp/>stroke-dashoffset=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE_MITERLIMIT<sp/>&quot;<sp/>stroke-miterlimit=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_OPACITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>opacity=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_FILL_OPACITY<sp/><sp/><sp/><sp/>&quot;<sp/>fill-opacity=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_STROKE_OPACITY<sp/><sp/>&quot;<sp/>stroke-opacity=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_FONT_FAMILY<sp/><sp/><sp/><sp/><sp/>&quot;<sp/>font-family=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_FONT_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>font-size=\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_FILL_RULE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>fill-rule=\&quot;evenodd\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_VECTOR_EFFECT<sp/><sp/><sp/>&quot;<sp/>vector-effect=\&quot;non-scaling-stroke\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVG_MATRIX<sp/><sp/><sp/><sp/>&quot;<sp/>transform=\&quot;matrix(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref>()</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QPaintEngine(*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_svg_paint_engine_private" kindref="compound">SvgPaintEnginePrivate</ref>,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svgEngineFeatures()),</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream(&amp;stateString)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>begin(QPaintDevice<sp/>*device);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>end();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateState(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPaintEngineState<sp/>&amp;state);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>popGroup();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawPixmap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;sr);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawPolygon(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>*points,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointCount,<sp/>PolygonDrawMode<sp/>mode);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;pm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;sr,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::ImageConversionFlag<sp/>=<sp/>Qt::AutoColor);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>QPaintEngine::Type<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPaintEngine::SVG;<sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_func()-&gt;size;<sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!isActive());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>viewBox()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_func()-&gt;viewBox;<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setViewBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;viewBox)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!isActive());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;viewBox<sp/>=<sp/>viewBox;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>documentTitle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_func()-&gt;attributes.title;<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDocumentTitle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;title)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.title<sp/>=<sp/>title;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>documentDescription()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_func()-&gt;attributes.description;<sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDocumentDescription(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;description)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.description<sp/>=<sp/>description;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>QIODevice<sp/>*outputDevice()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_func()-&gt;outputDevice;<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOutputDevice(QIODevice<sp/>*device)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!isActive());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;outputDevice<sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_func()-&gt;resolution;<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setResolution(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!isActive());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;resolution<sp/>=<sp/>resolution;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="comment">//<sp/>UNUSED<sp/>GRADIENT<sp/>CODE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>saveLinearGradientBrush(const<sp/>QGradient<sp/>*g)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>str(&amp;d_func()-&gt;defs,<sp/>QIODevice::Append);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>QLinearGradient<sp/>*grad<sp/>=<sp/>static_cast&lt;const<sp/>QLinearGradient*&gt;(g);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;&lt;linearGradient<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveGradientUnits(str,<sp/>g);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(grad)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;x1=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;start().x()&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;y1=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;start().y()&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;x2=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;finalStop().x()<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;y2=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;finalStop().y()<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;id=\&quot;&quot;)<sp/>&lt;&lt;<sp/>d_func()-&gt;generateGradientName()<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;&gt;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveGradientStops(str,<sp/>g);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;&lt;/linearGradient&gt;&quot;)<sp/>&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>saveRadialGradientBrush(const<sp/>QGradient<sp/>*g)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>str(&amp;d_func()-&gt;defs,<sp/>QIODevice::Append);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>QRadialGradient<sp/>*grad<sp/>=<sp/>static_cast&lt;const<sp/>QRadialGradient*&gt;(g);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;&lt;radialGradient<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveGradientUnits(str,<sp/>g);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(grad)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;cx=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;center().x()&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;cy=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;center().y()&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;r=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;radius()<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;fx=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;focalPoint().x()<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;fy=\&quot;&quot;)<sp/>&lt;&lt;grad-&gt;focalPoint().y()<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;xml:id=\&quot;&quot;)<sp/>&lt;&lt;d_func()-&gt;generateGradientName()&lt;&lt;<sp/>QLatin1String(&quot;\&quot;&gt;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveGradientStops(str,<sp/>g);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;&lt;/radialGradient&gt;&quot;)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>saveConicalGradientBrush(const<sp/>QGradient<sp/>*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(&quot;svg&apos;s<sp/>don&apos;t<sp/>support<sp/>conical<sp/>gradients!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>saveGradientStops(QTextStream<sp/>&amp;str,<sp/>const<sp/>QGradient<sp/>*g)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QGradientStops<sp/>stops<sp/>=<sp/>g-&gt;stops();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(g-&gt;interpolationMode()<sp/>==<sp/>QGradient::ColorInterpolation)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>constantAlpha<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>alpha<sp/>=<sp/>stops.at(0).second.alpha();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>stops.size();<sp/>++i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constantAlpha<sp/>&amp;=<sp/>(stops.at(i).second.alpha()<sp/>==<sp/>alpha);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!constantAlpha)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>qreal<sp/>spacing<sp/>=<sp/>qreal(0.02);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QGradientStops<sp/>newStops;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRgb<sp/>fromColor<sp/>=<sp/>PREMUL(stops.at(0).second.rgba());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRgb<sp/>toColor;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>+<sp/>1<sp/>&lt;<sp/>stops.size();<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>parts<sp/>=<sp/>qCeil((stops.at(i<sp/>+<sp/>1).first<sp/>-<sp/>stops.at(i).first)<sp/>/<sp/>spacing);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newStops.append(stops.at(i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toColor<sp/>=<sp/>PREMUL(stops.at(i<sp/>+<sp/>1).second.rgba());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(parts<sp/>&gt;<sp/>1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>step<sp/>=<sp/>(stops.at(i<sp/>+<sp/>1).first<sp/>-<sp/>stops.at(i).first)<sp/>/<sp/>parts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>parts;<sp/>++j)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRgb<sp/>color<sp/>=<sp/>INV_PREMUL(INTERPOLATE_PIXEL_256(fromColor,<sp/>256<sp/>-<sp/>256<sp/>*<sp/>j<sp/>/<sp/>parts,<sp/>toColor,<sp/>256<sp/>*<sp/>j<sp/>/<sp/>parts));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newStops.append(QGradientStop(stops.at(i).first<sp/>+<sp/>j<sp/>*<sp/>step,<sp/>QColor::fromRgba(color)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromColor<sp/>=<sp/>toColor;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newStops.append(stops.back());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stops<sp/>=<sp/>newStops;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foreach(QGradientStop<sp/>stop,<sp/>stops)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>color<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString::fromLatin1(&quot;#%1%2%3&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg(stop.second.red(),<sp/>2,<sp/>16,<sp/>QLatin1Char(&apos;0&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg(stop.second.green(),<sp/>2,<sp/>16,<sp/>QLatin1Char(&apos;0&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg(stop.second.blue(),<sp/>2,<sp/>16,<sp/>QLatin1Char(&apos;0&apos;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;<sp/><sp/><sp/><sp/>&lt;stop<sp/>offset=\&quot;&quot;)&lt;&lt;<sp/>stop.first<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;stop-color=\&quot;&quot;)<sp/>&lt;&lt;<sp/>color<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLatin1String(&quot;stop-opacity=\&quot;&quot;)<sp/>&lt;&lt;<sp/>stop.second.alphaF()<sp/>&lt;&lt;QLatin1String(&quot;\&quot;<sp/>/&gt;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>saveGradientUnits(QTextStream<sp/>&amp;str,<sp/>const<sp/>QGradient<sp/>*gradient)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;gradientUnits=\&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gradient<sp/>&amp;&amp;<sp/>gradient-&gt;coordinateMode()<sp/>==<sp/>QGradient::ObjectBoundingMode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;objectBoundingBox&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;userSpaceOnUse&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>QLatin1String(&quot;\&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>UNUSED<sp/>GRADIENT<sp/>CODE</highlight></codeline>
<codeline lineno="466"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QTextStream<sp/>&amp;stream()</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*d_func()-&gt;stream;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SvgPaintEngine::qpenToSVG()</highlight></codeline>
<codeline lineno="475"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>qpenToSvg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;spen)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/><sp/><sp/><sp/><sp/>qs;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>qts(&amp;qs);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>color,<sp/>colorOpacity;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>stroke,<sp/>stroke-dasharray,<sp/>stroke-dashoffset<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(spen.style())<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::NoPen:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qs;<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>value<sp/>for<sp/>stroke<sp/>=<sp/>&quot;none&quot;<sp/>=<sp/>Qt::NoPen<sp/>=<sp/>NOOP;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::SolidLine:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::DashLine:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::DotLine:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::DashDotLine:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::DashDotDotLine:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::CustomDashLine:<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>are<sp/>class<sp/>variables<sp/>because<sp/>they<sp/>are<sp/>needed<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drawTextItem().<sp/>This<sp/>is<sp/>the<sp/>fill<sp/>color/opacity<sp/>for<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>translate_color(spen.color(),<sp/>&amp;color,<sp/>&amp;colorOpacity);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>stroke=&quot;none&quot;<sp/>is<sp/>handled<sp/>by<sp/>case<sp/>Qt::NoPen<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE<sp/>&lt;&lt;<sp/>color<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stroke-opacity<sp/>is<sp/>seldom<sp/>used,<sp/>usually<sp/>set<sp/>to<sp/>default<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colorOpacity<sp/>!=<sp/>SVG_ONE)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_OPACITY<sp/>&lt;&lt;<sp/>colorOpacity<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>a<sp/>solid<sp/>line,<sp/>were<sp/>done<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spen.style()<sp/>==<sp/>Qt::SolidLine)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>a<sp/>dashed<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>penWidth<sp/>=<sp/>spen.width()<sp/>==<sp/>0<sp/>?<sp/>qreal(1)<sp/>:<sp/>spen.widthF();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>dashPattern,<sp/>dashOffset;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>translate_dashPattern(spen.dashPattern(),<sp/>penWidth,<sp/>&amp;dashPattern);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dashOffset<sp/>=<sp/>QString::number(spen.dashOffset()<sp/>*<sp/>penWidth);<sp/></highlight><highlight class="comment">//<sp/>SVG<sp/>uses<sp/>absolute<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_DASHARRAY<sp/><sp/>&lt;&lt;<sp/>dashPattern<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_DASHOFFSET<sp/>&lt;&lt;<sp/>dashOffset<sp/><sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>pen<sp/>style&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>stroke-width<sp/>attribute,<sp/>unless<sp/>it&apos;s<sp/>zero<sp/>or<sp/>1<sp/>(default<sp/>is<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spen.widthF()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>spen.widthF()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Formatting<sp/>for<sp/>vertical<sp/>alignment<sp/>of<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts.setRealNumberPrecision(2);<sp/></highlight><highlight class="comment">//<sp/>with<sp/>DPI=72<sp/>only<sp/>2<sp/>decimals<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts.setRealNumberNotation(QTextStream::FixedNotation);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_WIDTH<sp/>&lt;&lt;<sp/>spen.widthF()<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts.setRealNumberNotation(QTextStream::SmartNotation);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>stroke-linecap<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(spen.capStyle())<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::FlatCap:</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>default<sp/>stroke-linecap<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qts<sp/>&lt;&lt;<sp/>SVG_STROKE_LINECAP<sp/>&lt;&lt;<sp/>SVG_BUTT<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::SquareCap:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_LINECAP<sp/>&lt;&lt;<sp/>SVG_SQUARE<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::RoundCap:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_LINECAP<sp/>&lt;&lt;<sp/>SVG_ROUND<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;Unhandled<sp/>cap<sp/>style&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>stroke-linejoin,<sp/>stroke-miterlimit<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(spen.joinStyle())<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::MiterJoin:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::SvgMiterJoin:</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_LINEJOIN<sp/><sp/><sp/>&lt;&lt;<sp/>SVG_MITER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_QUOTE</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_STROKE_MITERLIMIT<sp/>&lt;&lt;<sp/>spen.miterLimit()<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::BevelJoin:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_LINEJOIN<sp/><sp/><sp/>&lt;&lt;<sp/>SVG_BEVEL<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::RoundJoin:</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_STROKE_LINEJOIN<sp/><sp/><sp/>&lt;&lt;<sp/>SVG_ROUND<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;Unhandled<sp/>join<sp/>style&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>uncommon,<sp/>possibly<sp/>non-existent<sp/>in<sp/>MuseScore,<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spen.isCosmetic())</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_VECTOR_EFFECT;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qs;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SvgPaintEngine::qbrushToSVG()</highlight></codeline>
<codeline lineno="574"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/><sp/>qbrushToSvg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;sbrush)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/><sp/><sp/><sp/><sp/>qs;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>qts(&amp;qs);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>color,<sp/>colorOpacity;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sbrush.style())<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::SolidPattern:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>translate_color(sbrush.color(),<sp/>&amp;color,<sp/>&amp;colorOpacity);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>fill<sp/>color<sp/>is<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>!=<sp/>SVG_BLACK)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_FILL<sp/>&lt;&lt;<sp/>color<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>fill-opacity<sp/>is<sp/>100%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colorOpacity<sp/>!=<sp/>SVG_ONE)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_FILL_OPACITY<sp/>&lt;&lt;<sp/>colorOpacity<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::NoBrush:</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qts<sp/>&lt;&lt;<sp/>SVG_FILL<sp/>&lt;&lt;<sp/>SVG_NONE<sp/>&lt;&lt;<sp/><sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="comment">//<sp/>OLD<sp/>GRADIENT<sp/>CODE:<sp/>MuseScore<sp/>does<sp/>not<sp/>support<sp/>gradients<sp/>(yet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Qt::LinearGradientPattern:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveLinearGradientBrush(sbrush.gradient());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fill<sp/>=<sp/>QString::fromLatin1(&quot;url(#%1)&quot;).arg(d_func()-&gt;currentGradientName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fillOpacity<sp/>=<sp/>QString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>QLatin1String(&quot;fill=\&quot;url(#&quot;)<sp/>&lt;&lt;<sp/>d_func()-&gt;currentGradientName<sp/>&lt;&lt;<sp/>QLatin1String(&quot;)\&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Qt::RadialGradientPattern:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveRadialGradientBrush(sbrush.gradient());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fill<sp/>=<sp/>QString::fromLatin1(&quot;url(#%1)&quot;).arg(d_func()-&gt;currentGradientName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fillOpacity<sp/>=<sp/>QString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>QLatin1String(&quot;fill=\&quot;url(#&quot;)<sp/>&lt;&lt;<sp/>d_func()-&gt;currentGradientName<sp/>&lt;&lt;<sp/>QLatin1String(&quot;)\&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Qt::ConicalGradientPattern:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saveConicalGradientBrush(sbrush.gradient());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fill<sp/>=<sp/>QString::fromLatin1(&quot;url(#%1)&quot;).arg(d_func()-&gt;currentGradientName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fillOpacity<sp/>=<sp/>QString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>QLatin1String(&quot;fill=\&quot;url(#&quot;)<sp/>&lt;&lt;<sp/>d_func()-&gt;currentGradientName<sp/>&lt;&lt;<sp/>QLatin1String(&quot;)\&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Qt::NoBrush:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>QLatin1String(&quot;fill=\&quot;none\&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fill<sp/>=<sp/>QLatin1String(&quot;none&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_func()-&gt;attributes.fillOpacity<sp/>=<sp/>QString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="627"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qs;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="comment">//<sp/>THIS<sp/>FUNCTION<sp/>IS<sp/>NEVER<sp/>USED<sp/>and<sp/>in<sp/>the<sp/>future<sp/>should<sp/>probably<sp/>be<sp/>replaced<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>drawTextItem()<sp/>override<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>qfontToSvg(const<sp/>QFont<sp/>&amp;sfont)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_D(SvgPaintEngine);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;font<sp/>=<sp/>sfont;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(d-&gt;font.pixelSize()<sp/>==<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attributes.font_size<sp/>=<sp/>QString::number(d-&gt;font.pointSizeF()<sp/>*<sp/>d-&gt;resolution<sp/>/<sp/>72);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attributes.font_size<sp/>=<sp/>QString::number(d-&gt;font.pixelSize());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>svgWeight<sp/>=<sp/>d-&gt;font.weight();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(svgWeight)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>QFont::Light:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svgWeight<sp/>=<sp/>100;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>QFont::Normal:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svgWeight<sp/>=<sp/>400;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>QFont::Bold:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svgWeight<sp/>=<sp/>700;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svgWeight<sp/>*=<sp/>10;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attributes.font_weight<sp/>=<sp/>QString::number(svgWeight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attributes.font_family<sp/>=<sp/>d-&gt;font.family();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;attributes.font_style<sp/>=<sp/>d-&gt;font.italic()<sp/>?<sp/>QLatin1String(&quot;italic&quot;)<sp/>:<sp/>QLatin1String(&quot;normal&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>&quot;font-family=\&quot;&quot;<sp/>&lt;&lt;<sp/>d-&gt;attributes.font_family<sp/>&lt;&lt;<sp/>&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;font-size=\&quot;&quot;<sp/>&lt;&lt;<sp/>d-&gt;attributes.font_size<sp/>&lt;&lt;<sp/>&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;font-weight=\&quot;&quot;<sp/>&lt;&lt;<sp/>d-&gt;attributes.font_weight<sp/>&lt;&lt;<sp/>&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;font-style=\&quot;&quot;<sp/>&lt;&lt;<sp/>d-&gt;attributes.font_style<sp/>&lt;&lt;<sp/>&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="comment"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="class_svg_generator_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_svg_generator_private" kindref="compound">SvgGeneratorPrivate</ref></highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref><sp/>*engine;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>owns_iodevice<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>fileName;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">};</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="class_svg_generator_1a5e05e4c387fe37c16a70e8679f29ae35" refkind="member"><highlight class="normal"><ref refid="class_svg_generator_1a5e05e4c387fe37c16a70e8679f29ae35" kindref="member">SvgGenerator::SvgGenerator</ref>()</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_svg_generator_private" kindref="compound">SvgGeneratorPrivate</ref>)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;owns_iodevice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="class_svg_generator_1a3692f9cf5bfad1ba4e34048ce92cef83" refkind="member"><highlight class="normal"><ref refid="class_svg_generator_1a3692f9cf5bfad1ba4e34048ce92cef83" kindref="member">SvgGenerator::~SvgGenerator</ref>()</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;owns_iodevice)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;outputDevice();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;engine;</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal">QString<sp/><ref refid="class_svg_generator_1abe9c2cd9446061e16cfdea2fa7eb777d" kindref="member">SvgGenerator::title</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="753"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;documentTitle();</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setTitle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_svg_generator_1abe9c2cd9446061e16cfdea2fa7eb777d" kindref="member">title</ref>)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine-&gt;setDocumentTitle(title);</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal">QString<sp/><ref refid="class_svg_generator_1ad59f1e13a42ee64b2d354f29a5255cea" kindref="member">SvgGenerator::description</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="773"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;documentDescription();</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setDescription(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_svg_generator_1ad59f1e13a42ee64b2d354f29a5255cea" kindref="member">description</ref>)</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine-&gt;setDocumentDescription(description);</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal">QSize<sp/><ref refid="class_svg_generator_1acc6cf7b4596fb1c19ce95d45aac00124" kindref="member">SvgGenerator::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="801"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;size();</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_svg_generator_1acc6cf7b4596fb1c19ce95d45aac00124" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;engine-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgGenerator::setSize(),<sp/>cannot<sp/>set<sp/>size<sp/>while<sp/>SVG<sp/>is<sp/>being<sp/>generated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine-&gt;setSize(size);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">QRectF<sp/>SvgGenerator::viewBoxF()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="831"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;viewBox();</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal">QRect<sp/><ref refid="class_svg_generator_1a4a56c80b10833a8ded8715652d67afe2" kindref="member">SvgGenerator::viewBox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="844"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;viewBox().toRect();</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setViewBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;<ref refid="class_svg_generator_1a4a56c80b10833a8ded8715652d67afe2" kindref="member">viewBox</ref>)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;engine-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgGenerator::setViewBox(),<sp/>cannot<sp/>set<sp/>viewBox<sp/>while<sp/>SVG<sp/>is<sp/>being<sp/>generated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine-&gt;setViewBox(viewBox);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setViewBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;viewBox)</highlight></codeline>
<codeline lineno="860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>setViewBox(QRectF(viewBox));</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal">QString<sp/><ref refid="class_svg_generator_1a4f72398a28e315c9192a611e16f8b693" kindref="member">SvgGenerator::fileName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="872"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;fileName;</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setFileName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_svg_generator_1a4f72398a28e315c9192a611e16f8b693" kindref="member">fileName</ref>)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;engine-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgGenerator::setFileName(),<sp/>cannot<sp/>set<sp/>file<sp/>name<sp/>while<sp/>SVG<sp/>is<sp/>being<sp/>generated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;owns_iodevice)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;outputDevice();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;owns_iodevice<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;fileName<sp/>=<sp/>fileName;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>*file<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QFile(fileName);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine-&gt;setOutputDevice(file);</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal">QIODevice<sp/>*<ref refid="class_svg_generator_1aa03e26c21b02f54f2e318633db8496de" kindref="member">SvgGenerator::outputDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="906"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;outputDevice();</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setOutputDevice(QIODevice<sp/>*<ref refid="class_svg_generator_1aa03e26c21b02f54f2e318633db8496de" kindref="member">outputDevice</ref>)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;engine-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgGenerator::setOutputDevice(),<sp/>cannot<sp/>set<sp/>output<sp/>device<sp/>while<sp/>SVG<sp/>is<sp/>being<sp/>generated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;owns_iodevice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine-&gt;setOutputDevice(outputDevice);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;fileName<sp/>=<sp/>QString();</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator_1a3d8c9548b882f99b74b011e965b01a2e" kindref="member">SvgGenerator::resolution</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="934"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;resolution();</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgGenerator::setResolution(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dpi)</highlight></codeline>
<codeline lineno="940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;engine-&gt;setResolution(dpi);</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="949" refid="class_svg_generator_1aaf46976acd7ff8b9544e613d7ecd4887" refkind="member"><highlight class="normal">QPaintEngine<sp/>*<ref refid="class_svg_generator_1aaf46976acd7ff8b9544e613d7ecd4887" kindref="member">SvgGenerator::paintEngine</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="950"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine;</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="class_svg_generator_1a04c1a05554a1fd618da5928049167c98" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator_1a04c1a05554a1fd618da5928049167c98" kindref="member">SvgGenerator::metric</ref>(QPaintDevice::PaintDeviceMetric<sp/><ref refid="class_svg_generator_1a04c1a05554a1fd618da5928049167c98" kindref="member">metric</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="959"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator" kindref="compound">SvgGenerator</ref>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(metric)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmDepth:</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>32;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmWidth:</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;size().width();</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmHeight:</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;size().height();</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmDpiX:</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;resolution();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmDpiY:</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;resolution();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmHeightMM:</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qRound(d-&gt;engine-&gt;size().height()<sp/>/<sp/>Ms::DPMM);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmWidthMM:</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qRound(d-&gt;engine-&gt;size().width()<sp/><sp/>/<sp/>Ms::DPMM);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmNumColors:</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0xffffffff;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmPhysicalDpiX:</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;resolution();</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmPhysicalDpiY:</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;engine-&gt;resolution();</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmDevicePixelRatio:</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPaintDevice::PdmDevicePixelRatioScaled:</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgGenerator::metric(),<sp/>unhandled<sp/>metric<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>metric);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="997" refid="class_svg_generator_1ad9b70ed3efcb850d93d88e8f7b1a697e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_svg_generator_1ad9b70ed3efcb850d93d88e8f7b1a697e" kindref="member">SvgGenerator::setElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_element" kindref="compound">Ms::Element</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_svg_generator_1aaf46976acd7ff8b9544e613d7ecd4887" kindref="member">paintEngine</ref>())-&gt;_element<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/>*<sp/>class<sp/>SvgPaintEngine</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SvgPaintEngine::begin(QPaintDevice<sp/>*)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;outputDevice)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgPaintEngine::begin(),<sp/>no<sp/>output<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;outputDevice-&gt;isOpen())<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;outputDevice-&gt;open(QIODevice::WriteOnly<sp/>|<sp/>QIODevice::Text))<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgPaintEngine::begin(),<sp/>could<sp/>not<sp/>open<sp/>output<sp/>device:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(d-&gt;outputDevice-&gt;errorString()));</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;outputDevice-&gt;isWritable())<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;SvgPaintEngine::begin(),<sp/>could<sp/>not<sp/>write<sp/>to<sp/>read-only<sp/>output<sp/>device:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(d-&gt;outputDevice-&gt;errorString()));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>the<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;stream<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTextStream(&amp;d-&gt;header);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>version=\&quot;1.0\&quot;<sp/>encoding=\&quot;UTF-8\&quot;<sp/>standalone=\&quot;no\&quot;?&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>SVG_BEGIN;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;viewBox.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>viewBox<sp/>has<sp/>floating<sp/>point<sp/>values,<sp/>size<sp/>width/height<sp/>is<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_WIDTH<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d-&gt;viewBox.width()<sp/><sp/>&lt;&lt;<sp/>SVG_PX<sp/>&lt;&lt;<sp/>SVG_QUOTE</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_HEIGHT<sp/><sp/><sp/>&lt;&lt;<sp/>d-&gt;viewBox.height()<sp/>&lt;&lt;<sp/>SVG_PX<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_VIEW_BOX<sp/>&lt;&lt;<sp/>d-&gt;viewBox.left()</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_SPACE<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d-&gt;viewBox.top()</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_SPACE<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d-&gt;viewBox.width()</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_SPACE<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d-&gt;viewBox.height()<sp/>&lt;&lt;<sp/>SVG_QUOTE<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>xmlns=\&quot;http://www.w3.org/2000/svg\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>version=\&quot;1.2\&quot;<sp/>baseProfile=\&quot;tiny\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;attributes.title.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_TITLE_BEGIN<sp/>&lt;&lt;<sp/>d-&gt;attributes.title.toHtmlEscaped()<sp/>&lt;&lt;<sp/>SVG_TITLE_END<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;attributes.description.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_DESC_BEGIN<sp/><sp/>&lt;&lt;<sp/>d-&gt;attributes.description.toHtmlEscaped()<sp/>&lt;&lt;<sp/>SVG_DESC_END<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;defs&gt;<sp/>is<sp/>currently<sp/>empty.<sp/>It&apos;s<sp/>necessary<sp/>for<sp/>gradients.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>d-&gt;stream-&gt;setString(&amp;d-&gt;defs);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*d-&gt;stream<sp/>&lt;&lt;<sp/>&quot;&lt;defs&gt;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>the<sp/>stream<sp/>at<sp/>the<sp/>body<sp/>string,<sp/>for<sp/>other<sp/>functions<sp/>to<sp/>populate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;stream-&gt;setString(&amp;d-&gt;body);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SvgPaintEngine::end()</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_svg_paint_engine" kindref="compound">SvgPaintEngine</ref>);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;defs&gt;<sp/>is<sp/>currently<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>d-&gt;stream-&gt;setString(&amp;d-&gt;defs);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>&quot;&lt;/defs&gt;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>the<sp/>stream<sp/>at<sp/>the<sp/>real<sp/>output<sp/>device<sp/>(the<sp/>.svg<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;stream-&gt;setDevice(d-&gt;outputDevice);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;stream-&gt;setCodec(QTextCodec::codecForName(</highlight><highlight class="stringliteral">&quot;UTF-8&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>our<sp/>strings<sp/>out<sp/>to<sp/>the<sp/>device,<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>d-&gt;header;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>d-&gt;defs;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>d-&gt;body;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_END<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;stream;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgPaintEngine::drawPixmap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;sr)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>drawImage(r,<sp/>pm.toImage(),<sp/>sr);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgPaintEngine::drawImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/><sp/>&amp;r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;image,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;sr,<sp/>Qt::ImageConversionFlag<sp/>flags)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(sr);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(flags);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_IMAGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>stateString</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_X<sp/>&lt;&lt;<sp/>SVG_QUOTE<sp/><sp/>&lt;&lt;<sp/>r.x()<sp/>+<sp/>_dx<sp/>&lt;&lt;<sp/>SVG_QUOTE</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_Y<sp/>&lt;&lt;<sp/>SVG_QUOTE<sp/><sp/>&lt;&lt;<sp/>r.y()<sp/>+<sp/>_dy<sp/>&lt;&lt;<sp/>SVG_QUOTE</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>r.width()<sp/><sp/><sp/>&lt;&lt;<sp/>SVG_QUOTE</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>r.height()<sp/><sp/>&lt;&lt;<sp/>SVG_QUOTE</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_PRESERVE_ASPECT<sp/>&lt;&lt;<sp/>SVG_NONE<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/><sp/><sp/><sp/><sp/><sp/>data;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>QBuffer<sp/>buffer(&amp;data);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.open(QBuffer::ReadWrite);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>image.save(&amp;buffer,<sp/></highlight><highlight class="stringliteral">&quot;PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.close();</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>xlink:href=\&quot;data:image/png;base64,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>data.toBase64()<sp/>&lt;&lt;<sp/>SVG_QUOTE<sp/>&lt;&lt;<sp/>SVG_ELEMENT_END<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgPaintEngine::updateState(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPaintEngineState<sp/>&amp;state)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>start<sp/>fresh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>stateString.clear();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stateString<sp/>=<sp/>Attribute<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SVG<sp/>class<sp/>attribute,<sp/>based<sp/>on<sp/>Ms::ElementType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>SVG_CLASS<sp/>&lt;&lt;<sp/>getClass(_element)<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Brush<sp/>and<sp/>Pen<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>qbrushToSvg(state.brush());</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/><sp/><sp/>qpenToSvg(state.pen());</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TBD:<sp/><sp/>&quot;opacity&quot;<sp/>attribute:<sp/>Is<sp/>it<sp/>ever<sp/>used?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Or<sp/>is<sp/>opacity<sp/>determined<sp/>by<sp/>fill-opacity<sp/>&amp;<sp/>stroke-opacity<sp/>instead?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PLUS:<sp/>qFuzzyIsNull()<sp/>is<sp/>not<sp/>officially<sp/>supported<sp/>in<sp/>Qt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Should<sp/>probably<sp/>use<sp/>QFuzzyCompare()<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(state.opacity()<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>SVG_OPACITY<sp/>&lt;&lt;<sp/>state.opacity()<sp/>&lt;&lt;<sp/>SVG_QUOTE;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translations,<sp/>SVG<sp/>transform=&quot;translate()&quot;,<sp/>are<sp/>handled<sp/>separately<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>transformations<sp/>such<sp/>as<sp/>rotation.<sp/>Qt<sp/>translates<sp/>everything,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>transformations<sp/>do<sp/>occur,<sp/>and<sp/>must<sp/>be<sp/>handled<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>QTransform<sp/>t<sp/>=<sp/>state.transform();</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tablature<sp/>Note<sp/>Text:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m11<sp/>and<sp/>m22<sp/>have<sp/>floating<sp/>point<sp/>flotsam,<sp/>for<sp/>example:<sp/>1.000000629</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>values<sp/>should<sp/>be<sp/>==<sp/>integer<sp/>1,<sp/>because<sp/>no<sp/>scaling<sp/>is<sp/>intended.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>round<sp/>them<sp/>to<sp/>three<sp/>decimal<sp/>places,<sp/>as<sp/>MuseScore<sp/>does<sp/>elsewhere.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>m11<sp/>=<sp/>qRound(t.m11()<sp/>*<sp/>1000)<sp/>/<sp/>1000.0;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>m22<sp/>=<sp/>qRound(t.m22()<sp/>*<sp/>1000)<sp/>/<sp/>1000.0;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m11<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>m22<sp/>==<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>scaling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>t.m12()<sp/>==<sp/>t.m21())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>No<sp/>rotation,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>transformation<sp/>except<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dx<sp/>=<sp/>t.m31();</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dy<sp/>=<sp/>t.m32();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>transformations<sp/>are<sp/>more<sp/>straightforward<sp/>with<sp/>a<sp/>full<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateStream<sp/>&lt;&lt;<sp/>SVG_MATRIX<sp/>&lt;&lt;<sp/>t.m11()<sp/>&lt;&lt;<sp/>SVG_COMMA</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.m12()<sp/>&lt;&lt;<sp/>SVG_COMMA</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.m21()<sp/>&lt;&lt;<sp/>SVG_COMMA</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.m22()<sp/>&lt;&lt;<sp/>SVG_COMMA</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.m31()<sp/>&lt;&lt;<sp/>SVG_COMMA</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.m32()<sp/>&lt;&lt;<sp/>SVG_RPAREN_QUOTE;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgPaintEngine::drawPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath<sp/>&amp;p)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_PATH<sp/>&lt;&lt;<sp/>stateString;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill-rule<sp/>is<sp/>here<sp/>because<sp/>UpdateState()<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>QPainterPath<sp/>arg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Majority<sp/>of<sp/>&lt;path&gt;s<sp/>use<sp/>the<sp/>default<sp/>value:<sp/>fill-rule=&quot;nonzero&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.fillRule()<sp/>==<sp/>Qt::OddEvenFill)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_FILL_RULE;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_D;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p.elementCount();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath::Element<sp/>&amp;e<sp/>=<sp/>p.elementAt(i);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>x<sp/>=<sp/>e.x<sp/>+<sp/>_dx;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>y<sp/>=<sp/>e.y<sp/>+<sp/>_dy;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(e.type)<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPainterPath::MoveToElement:</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_MOVE<sp/><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>SVG_COMMA<sp/>&lt;&lt;<sp/>y;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPainterPath::LineToElement:</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_LINE<sp/><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>SVG_COMMA<sp/>&lt;&lt;<sp/>y;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>QPainterPath::CurveToElement:</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_CURVE<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>SVG_COMMA<sp/>&lt;&lt;<sp/>y;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>p.elementCount())<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath::Element<sp/>&amp;e<sp/>=<sp/>p.elementAt(i);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.type<sp/>==<sp/>QPainterPath::CurveToDataElement)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_SPACE<sp/>&lt;&lt;<sp/>e.x<sp/>+<sp/>_dx</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_COMMA<sp/>&lt;&lt;<sp/>e.y<sp/>+<sp/>_dy;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>p.elementCount()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_SPACE;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_QUOTE<sp/>&lt;&lt;<sp/>SVG_ELEMENT_END<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SvgPaintEngine::drawPolygon(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>*points,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointCount,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PolygonDrawMode<sp/>mode)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(pointCount<sp/>&gt;=<sp/>2);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainterPath<sp/>path(points[0]);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;pointCount;<sp/>++i)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.lineTo(points[i]);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>PolylineMode)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_POLYLINE<sp/>&lt;&lt;<sp/>stateString</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SVG_POINTS;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pointCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pt<sp/>=<sp/>points[i];</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>pt.x()<sp/>+<sp/>_dx<sp/>&lt;&lt;<sp/>SVG_COMMA<sp/>&lt;&lt;<sp/>pt.y()<sp/>+<sp/>_dy;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>pointCount<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_SPACE;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream()<sp/>&lt;&lt;<sp/>SVG_QUOTE<sp/>&lt;&lt;<sp/>SVG_ELEMENT_END<sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.closeSubpath();</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawPath(path);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="mscore/svggenerator.cpp"/>
  </compounddef>
</doxygen>
