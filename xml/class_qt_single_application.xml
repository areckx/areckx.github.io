<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_qt_single_application" kind="class" language="C++" prot="public">
    <compoundname>QtSingleApplication</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QApplication</basecompoundref>
    <derivedcompoundref refid="class_ms_1_1_muse_score_application" prot="public" virt="non-virtual">Ms::MuseScoreApplication</derivedcompoundref>
    <includes refid="qtsingleapplication_8h" local="no">qtsingleapplication.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_qt_single_application_1af8275446601ed88271bd4b05fc2325b6" prot="private" static="no" mutable="no">
        <type><ref refid="class_qt_local_peer" kindref="compound">QtLocalPeer</ref> *</type>
        <definition>QtLocalPeer* QtSingleApplication::peer</definition>
        <argsstring></argsstring>
        <name>peer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="101" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_qt_single_application_1a0ee976b2f02cd8998f5725e6848628c6" prot="private" static="no" mutable="no">
        <type>QWidget *</type>
        <definition>QWidget* QtSingleApplication::actWin</definition>
        <argsstring></argsstring>
        <name>actWin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="102" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_qt_single_application_1afe5e96d236e42949e65669eca282acbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtSingleApplication::QtSingleApplication</definition>
        <argsstring>(int &amp;argc, char **argv, bool GUIenabled=true)</argsstring>
        <name>QtSingleApplication</name>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>GUIenabled</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> object. The application identifier will be QCoreApplication::applicationFilePath(). <emphasis>argc</emphasis>, <emphasis>argv</emphasis>, and <emphasis>GUIenabled</emphasis> are passed on to the QAppliation constructor.</para><para>If you are creating a console application (i.e. setting <emphasis>GUIenabled</emphasis> to false), you may consider using <ref refid="class_qt_single_core_application" kindref="compound">QtSingleCoreApplication</ref> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="69" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_application_1a746192779985e28f22fd17766884518e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtSingleApplication::QtSingleApplication</definition>
        <argsstring>(const QString &amp;id, int &amp;argc, char **argv)</argsstring>
        <name>QtSingleApplication</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
          <defname>appId</defname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> object with the application identifier <emphasis>appId</emphasis>. <emphasis>argc</emphasis> and <emphasis>argv</emphasis> are passed on to the QAppliation constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="70" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_application_1adcb7a28eec3eef34c6474fb419509895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtSingleApplication::QtSingleApplication</definition>
        <argsstring>(int &amp;argc, char **argv, Type type)</argsstring>
        <name>QtSingleApplication</name>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> object. The application identifier will be QCoreApplication::applicationFilePath(). <emphasis>argc</emphasis>, <emphasis>argv</emphasis>, and <emphasis>type</emphasis> are passed on to the QAppliation constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="72" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtSingleApplication::isRunning</definition>
        <argsstring>()</argsstring>
        <name>isRunning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if another instance of this application is running; otherwise false.</para><para>This function does not find instances of this application that are being run by a different user (on Windows: that are running in another session).</para><para><simplesect kind="see"><para><ref refid="class_qt_single_application_1a0e2f3900f0290913c738ec6b4b959922" kindref="member">sendMessage()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="80" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_application_1a025290493ba51d3eba54d0041502a380" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QtSingleApplication::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the application identifier. Two processes with the same identifier will be regarded as instances of the same application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="81" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_application_1acb5347f6dc6822dbe4d6a78804043528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QtSingleApplication::setActivationWindow</definition>
        <argsstring>(QWidget *aw, bool activateOnMessage=true)</argsstring>
        <name>setActivationWindow</name>
        <param>
          <type>QWidget *</type>
          <declname>aw</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>activateOnMessage</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the activation window of this application to <emphasis>aw</emphasis>. The activation window is the widget that will be activated by <ref refid="class_qt_single_application_1a0881b32c76132b499f3180064006abc1" kindref="member">activateWindow()</ref>. This is typically the application&apos;s main window.</para><para>If <emphasis>activateOnMessage</emphasis> is true (the default), the window will be activated automatically every time a message is received, just prior to the <ref refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" kindref="member">messageReceived()</ref> signal being emitted.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_application_1a0881b32c76132b499f3180064006abc1" kindref="member">activateWindow()</ref>, <ref refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" kindref="member">messageReceived()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="83" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="287" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_application_1ab3102811d7d4c84f355300873abdff2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QWidget *</type>
        <definition>QWidget * QtSingleApplication::activationWindow</definition>
        <argsstring>() const</argsstring>
        <name>activationWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the applications activation window if one has been set by calling <ref refid="class_qt_single_application_1acb5347f6dc6822dbe4d6a78804043528" kindref="member">setActivationWindow()</ref>, otherwise returns 0.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_application_1acb5347f6dc6822dbe4d6a78804043528" kindref="member">setActivationWindow()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="84" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_application_1a622807c60657c1a1fadec15ea5903b47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QtSingleApplication::initialize</definition>
        <argsstring>(bool dummy=true)</argsstring>
        <name>initialize</name>
        <param>
          <type>bool</type>
          <declname>dummy</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="87" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.h" bodystart="87" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_qt_single_application_1a0e2f3900f0290913c738ec6b4b959922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtSingleApplication::sendMessage</definition>
        <argsstring>(const QString &amp;message, int timeout=5000)</argsstring>
        <name>sendMessage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
          <defval>5000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to send the text <emphasis>message</emphasis> to the currently running instance. The <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> object in the running instance will emit the <ref refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" kindref="member">messageReceived()</ref> signal when it receives the message.</para><para>This function returns true if the message has been sent to, and processed by, the current instance. If there is no instance currently running, or if the running instance fails to process the message within <emphasis>timeout</emphasis> milliseconds, this function return false.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" kindref="member">isRunning()</ref>, <ref refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" kindref="member">messageReceived()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="91" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="slot" id="class_qt_single_application_1a0881b32c76132b499f3180064006abc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QtSingleApplication::activateWindow</definition>
        <argsstring>()</argsstring>
        <name>activateWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>De-minimizes, raises, and activates this application&apos;s activation window. This function does nothing if no activation window has been set.</para><para>This is a convenience function to show the user that this application instance has been activated when he has tried to start another instance.</para><para>This function should typically be called in response to the <ref refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" kindref="member">messageReceived()</ref> signal. By default, that will happen automatically, if an activation window has been set.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_application_1acb5347f6dc6822dbe4d6a78804043528" kindref="member">setActivationWindow()</ref>, <ref refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" kindref="member">messageReceived()</ref>, <ref refid="class_qt_single_application_1a622807c60657c1a1fadec15ea5903b47" kindref="member">initialize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="92" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="323" bodyend="330"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QtSingleApplication::messageReceived</definition>
        <argsstring>(const QString &amp;message)</argsstring>
        <name>messageReceived</name>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the current instance receives a <emphasis>message</emphasis> from another instance of this application.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_application_1a0e2f3900f0290913c738ec6b4b959922" kindref="member">sendMessage()</ref>, <ref refid="class_qt_single_application_1acb5347f6dc6822dbe4d6a78804043528" kindref="member">setActivationWindow()</ref>, <ref refid="class_qt_single_application_1a0881b32c76132b499f3180064006abc1" kindref="member">activateWindow()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="96" column="1" bodyfile="build.release/thirdparty/singleapp/src/qtsingleapp_autogen/EWIEGA46WW/moc_qtsingleapplication.cpp" bodystart="145" bodyend="149"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_qt_single_application_1a5cab06dc1305120f8cd6ddfdf05ea1fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QtSingleApplication::sysInit</definition>
        <argsstring>(const QString &amp;appId=QString())</argsstring>
        <name>sysInit</name>
        <param>
          <type>const QString &amp;</type>
          <declname>appId</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="100" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> class provides an API to detect and communicate with running instances of an application. </para>    </briefdescription>
    <detaileddescription>
<para>This class allows you to create applications where only one instance should be running at a time. I.e., if the user tries to launch another instance, the already running instance will be activated instead. Another usecase is a client-server system, where the first started instance will assume the role of server, and the later instances will act as clients of that server.</para><para>By default, the full path of the executable file is used to determine whether two processes are instances of the same application. You can also provide an explicit identifier string that will be compared instead.</para><para>The application should create the <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> object early in the startup phase, and call <ref refid="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" kindref="member">isRunning()</ref> to find out if another instance of this application is already running. If <ref refid="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" kindref="member">isRunning()</ref> returns false, it means that no other instance is running, and this instance has assumed the role as the running instance. In this case, the application should continue with the initialization of the application user interface before entering the event loop with exec(), as normal.</para><para>The <ref refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" kindref="member">messageReceived()</ref> signal will be emitted when the running application receives messages from another instance of the same application. When a message is received it might be helpful to the user to raise the application so that it becomes visible. To facilitate this, <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> provides the <ref refid="class_qt_single_application_1acb5347f6dc6822dbe4d6a78804043528" kindref="member">setActivationWindow()</ref> function and the <ref refid="class_qt_single_application_1a0881b32c76132b499f3180064006abc1" kindref="member">activateWindow()</ref> slot.</para><para>If <ref refid="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" kindref="member">isRunning()</ref> returns true, another instance is already running. It may be alerted to the fact that another instance has started by using the <ref refid="class_qt_single_application_1a0e2f3900f0290913c738ec6b4b959922" kindref="member">sendMessage()</ref> function. Also data such as startup parameters (e.g. the name of the file the user wanted this new instance to open) can be passed to the running instance with this function. Then, the application should terminate (or enter client mode).</para><para>If <ref refid="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" kindref="member">isRunning()</ref> returns true, but <ref refid="class_qt_single_application_1a0e2f3900f0290913c738ec6b4b959922" kindref="member">sendMessage()</ref> fails, that is an indication that the running instance is frozen.</para><para>Here&apos;s an example that shows how to convert an existing application to use <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref>. It is very simple and does not make use of all <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref>&apos;s functionality (see the examples for that).</para><para><programlisting><codeline><highlight class="normal">//<sp/>Original</highlight></codeline>
<codeline><highlight class="normal">int<sp/>main(int<sp/>argc,<sp/>char<sp/>**argv)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication<sp/>app(argc,<sp/>argv);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyMainWidget<sp/>mmw;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mmw.show();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>app.exec();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Single<sp/>instance</highlight></codeline>
<codeline><highlight class="normal">int<sp/>main(int<sp/>argc,<sp/>char<sp/>**argv)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>QtSingleApplication<sp/>app(argc,<sp/>argv);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(app.isRunning())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>!app.sendMessage(someDataString);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyMainWidget<sp/>mmw;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>app.setActivationWindow(&amp;mmw);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mmw.show();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>app.exec();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>Once this <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> instance is destroyed (normally when the process exits or crashes), when the user next attempts to run the application this instance will not, of course, be encountered. The next instance to call <ref refid="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" kindref="member">isRunning()</ref> or <ref refid="class_qt_single_application_1a0e2f3900f0290913c738ec6b4b959922" kindref="member">sendMessage()</ref> will assume the role as the new running instance.</para><para>For console (non-GUI) applications, <ref refid="class_qt_single_core_application" kindref="compound">QtSingleCoreApplication</ref> may be used instead of this class, to avoid the dependency on the QtGui library.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_core_application" kindref="compound">QtSingleCoreApplication</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="14081">
        <label>Ms::MuseScoreApplication</label>
        <link refid="class_ms_1_1_muse_score_application"/>
        <childnode refid="14079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14080">
        <label>QApplication</label>
      </node>
      <node id="14079">
        <label>QtSingleApplication</label>
        <link refid="class_qt_single_application"/>
        <childnode refid="14080" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14083">
        <label>QApplication</label>
      </node>
      <node id="14082">
        <label>QtSingleApplication</label>
        <link refid="class_qt_single_application"/>
        <childnode refid="14083" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="thirdparty/singleapp/src/qtsingleapplication.h" line="65" column="1" bodyfile="thirdparty/singleapp/src/qtsingleapplication.h" bodystart="64" bodyend="103"/>
    <listofallmembers>
      <member refid="class_qt_single_application_1a0881b32c76132b499f3180064006abc1" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>activateWindow</name></member>
      <member refid="class_qt_single_application_1ab3102811d7d4c84f355300873abdff2b" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>activationWindow</name></member>
      <member refid="class_qt_single_application_1a0ee976b2f02cd8998f5725e6848628c6" prot="private" virt="non-virtual"><scope>QtSingleApplication</scope><name>actWin</name></member>
      <member refid="class_qt_single_application_1a025290493ba51d3eba54d0041502a380" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>id</name></member>
      <member refid="class_qt_single_application_1a622807c60657c1a1fadec15ea5903b47" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>initialize</name></member>
      <member refid="class_qt_single_application_1aa9f0e6e4f18ac79bbb7a955cd860894d" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>isRunning</name></member>
      <member refid="class_qt_single_application_1a69340cef3d26d026e11424930e5a5866" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>messageReceived</name></member>
      <member refid="class_qt_single_application_1af8275446601ed88271bd4b05fc2325b6" prot="private" virt="non-virtual"><scope>QtSingleApplication</scope><name>peer</name></member>
      <member refid="class_qt_single_application_1afe5e96d236e42949e65669eca282acbd" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>QtSingleApplication</name></member>
      <member refid="class_qt_single_application_1a746192779985e28f22fd17766884518e" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>QtSingleApplication</name></member>
      <member refid="class_qt_single_application_1adcb7a28eec3eef34c6474fb419509895" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>QtSingleApplication</name></member>
      <member refid="class_qt_single_application_1a0e2f3900f0290913c738ec6b4b959922" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>sendMessage</name></member>
      <member refid="class_qt_single_application_1acb5347f6dc6822dbe4d6a78804043528" prot="public" virt="non-virtual"><scope>QtSingleApplication</scope><name>setActivationWindow</name></member>
      <member refid="class_qt_single_application_1a5cab06dc1305120f8cd6ddfdf05ea1fe" prot="private" virt="non-virtual"><scope>QtSingleApplication</scope><name>sysInit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
