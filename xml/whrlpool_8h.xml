<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="whrlpool_8h" kind="file" language="C++">
    <compoundname>whrlpool.h</compoundname>
    <includes refid="e__os2_8h" local="no">openssl/e_os2.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="83794">
        <label>stddef.h</label>
      </node>
      <node id="83791">
        <label>thirdparty/openssl/include/openssl/whrlpool.h</label>
        <link refid="whrlpool_8h"/>
        <childnode refid="83792" relation="include">
        </childnode>
        <childnode refid="83794" relation="include">
        </childnode>
      </node>
      <node id="83793">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="83792">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="83793" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_w_h_i_r_l_p_o_o_l___c_t_x" prot="public">WHIRLPOOL_CTX</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="whrlpool_8h_1addcbb5b0b778aef896b9eccd0c08e18e" prot="public" static="no">
        <name>WHIRLPOOL_DIGEST_LENGTH</name>
        <initializer>(512/8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="11" column="9" bodyfile="thirdparty/openssl/include/openssl/whrlpool.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="whrlpool_8h_1a65ca1c8d3e51542563a11fa1ebaaa095" prot="public" static="no">
        <name>WHIRLPOOL_BBLOCK</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="12" column="9" bodyfile="thirdparty/openssl/include/openssl/whrlpool.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="whrlpool_8h_1a29662900a78ba844a98b6119ea32975f" prot="public" static="no">
        <name>WHIRLPOOL_COUNTER</name>
        <initializer>(256/8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="13" column="9" bodyfile="thirdparty/openssl/include/openssl/whrlpool.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="whrlpool_8h_1a6328a6e926ac12c50365911a8ae22c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WHIRLPOOL_Init</definition>
        <argsstring>(WHIRLPOOL_CTX *c)</argsstring>
        <name>WHIRLPOOL_Init</name>
        <param>
          <type><ref refid="struct_w_h_i_r_l_p_o_o_l___c_t_x" kindref="compound">WHIRLPOOL_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="whrlpool_8h_1a97dd3c7b5b04afb4f37e42204d207de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WHIRLPOOL_Update</definition>
        <argsstring>(WHIRLPOOL_CTX *c, const void *inp, size_t bytes)</argsstring>
        <name>WHIRLPOOL_Update</name>
        <param>
          <type><ref refid="struct_w_h_i_r_l_p_o_o_l___c_t_x" kindref="compound">WHIRLPOOL_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="whrlpool_8h_1a2f4f489193ec4616b90a06fae01eb9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WHIRLPOOL_BitUpdate</definition>
        <argsstring>(WHIRLPOOL_CTX *c, const void *inp, size_t bits)</argsstring>
        <name>WHIRLPOOL_BitUpdate</name>
        <param>
          <type><ref refid="struct_w_h_i_r_l_p_o_o_l___c_t_x" kindref="compound">WHIRLPOOL_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="whrlpool_8h_1a07b4be19540f4979d2ee839461aecd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WHIRLPOOL_Final</definition>
        <argsstring>(unsigned char *md, WHIRLPOOL_CTX *c)</argsstring>
        <name>WHIRLPOOL_Final</name>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type><ref refid="struct_w_h_i_r_l_p_o_o_l___c_t_x" kindref="compound">WHIRLPOOL_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="whrlpool_8h_1a8fd99972bc34cd0ccf08e0193ee2907d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* WHIRLPOOL</definition>
        <argsstring>(const void *inp, size_t bytes, unsigned char *md)</argsstring>
        <name>WHIRLPOOL</name>
        <param>
          <type>const void *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/whrlpool.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>HEADER_WHRLPOOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_WHRLPOOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/e_os2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHIRLPOOL_DIGEST_LENGTH<sp/>(512/8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHIRLPOOL_BBLOCK<sp/><sp/><sp/><sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHIRLPOOL_COUNTER<sp/><sp/><sp/>(256/8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_w_h_i_r_l_p_o_o_l___c_t_x" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>c[WHIRLPOOL_DIGEST_LENGTH];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>double<sp/>q<sp/>is<sp/>here<sp/>to<sp/>ensure<sp/>64-bit<sp/>alignment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q[WHIRLPOOL_DIGEST_LENGTH/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double)];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>H;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>data[WHIRLPOOL_BBLOCK/8];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>bitoff;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitlen[WHIRLPOOL_COUNTER/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_t)];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_w_h_i_r_l_p_o_o_l___c_t_x" kindref="compound">WHIRLPOOL_CTX</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_WHIRLPOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_FIPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>private_WHIRLPOOL_Init(WHIRLPOOL_CTX<sp/>*c);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WHIRLPOOL_Init<sp/><sp/>(WHIRLPOOL_CTX<sp/>*c);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WHIRLPOOL_Update<sp/><sp/><sp/><sp/>(WHIRLPOOL_CTX<sp/>*c,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inp,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WHIRLPOOL_BitUpdate(WHIRLPOOL_CTX<sp/>*c,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inp,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bits);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WHIRLPOOL_Final<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,WHIRLPOOL_CTX<sp/>*c);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*WHIRLPOOL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inp,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/whrlpool.h"/>
  </compounddef>
</doxygen>
