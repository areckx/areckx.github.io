<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__join_8cpp" kind="file" language="C++">
    <compoundname>tst_join.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="segment_8h" local="yes">libmscore/segment.h</includes>
    <includes refid="chordrest_8h" local="yes">libmscore/chordrest.h</includes>
    <includes refid="chord_8h" local="yes">libmscore/chord.h</includes>
    <includes local="yes">tst_join.moc</includes>
    <incdepgraph>
      <node id="73081">
        <label>list</label>
      </node>
      <node id="73075">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="73066" relation="include">
        </childnode>
      </node>
      <node id="73077">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="73095">
        <label>functional</label>
      </node>
      <node id="73096">
        <label>duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="73061" relation="include">
        </childnode>
        <childnode refid="73058" relation="include">
        </childnode>
        <childnode refid="73069" relation="include">
        </childnode>
      </node>
      <node id="73092">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="73093" relation="include">
        </childnode>
      </node>
      <node id="73090">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="73091" relation="include">
        </childnode>
        <childnode refid="73060" relation="include">
        </childnode>
        <childnode refid="73092" relation="include">
        </childnode>
      </node>
      <node id="73063">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="73082">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="73093">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="73058" relation="include">
        </childnode>
        <childnode refid="73063" relation="include">
        </childnode>
        <childnode refid="73066" relation="include">
        </childnode>
      </node>
      <node id="73068">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="73098">
        <label>tst_join.moc</label>
      </node>
      <node id="73072">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="73058" relation="include">
        </childnode>
        <childnode refid="73073" relation="include">
        </childnode>
      </node>
      <node id="73069">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="73060" relation="include">
        </childnode>
        <childnode refid="73070" relation="include">
        </childnode>
      </node>
      <node id="73083">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="73084" relation="include">
        </childnode>
      </node>
      <node id="73084">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="73085" relation="include">
        </childnode>
        <childnode refid="73086" relation="include">
        </childnode>
        <childnode refid="73087" relation="include">
        </childnode>
      </node>
      <node id="73097">
        <label>libmscore/chord.h</label>
        <link refid="chord_8h"/>
        <childnode refid="73095" relation="include">
        </childnode>
        <childnode refid="73094" relation="include">
        </childnode>
      </node>
      <node id="73091">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="73058" relation="include">
        </childnode>
        <childnode refid="73088" relation="include">
        </childnode>
      </node>
      <node id="73076">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="73071" relation="include">
        </childnode>
      </node>
      <node id="73057">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="73058" relation="include">
        </childnode>
      </node>
      <node id="73085">
        <label>vector</label>
      </node>
      <node id="73073">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="73059">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="73089">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="73060">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="73061" relation="include">
        </childnode>
      </node>
      <node id="73071">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="73072" relation="include">
        </childnode>
      </node>
      <node id="73067">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="73068" relation="include">
        </childnode>
      </node>
      <node id="73055">
        <label>mtest/libmscore/join/tst_join.cpp</label>
        <link refid="tst__join_8cpp"/>
        <childnode refid="73056" relation="include">
        </childnode>
        <childnode refid="73057" relation="include">
        </childnode>
        <childnode refid="73064" relation="include">
        </childnode>
        <childnode refid="73090" relation="include">
        </childnode>
        <childnode refid="73093" relation="include">
        </childnode>
        <childnode refid="73094" relation="include">
        </childnode>
        <childnode refid="73097" relation="include">
        </childnode>
        <childnode refid="73098" relation="include">
        </childnode>
      </node>
      <node id="73078">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="73058" relation="include">
        </childnode>
        <childnode refid="73069" relation="include">
        </childnode>
      </node>
      <node id="73088">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="73058" relation="include">
        </childnode>
      </node>
      <node id="73058">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="73059" relation="include">
        </childnode>
        <childnode refid="73060" relation="include">
        </childnode>
        <childnode refid="73062" relation="include">
        </childnode>
        <childnode refid="73063" relation="include">
        </childnode>
      </node>
      <node id="73080">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="73081" relation="include">
        </childnode>
      </node>
      <node id="73087">
        <label>iostream</label>
      </node>
      <node id="73066">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="73061" relation="include">
        </childnode>
        <childnode refid="73067" relation="include">
        </childnode>
      </node>
      <node id="73065">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="73066" relation="include">
        </childnode>
        <childnode refid="73069" relation="include">
        </childnode>
        <childnode refid="73078" relation="include">
        </childnode>
      </node>
      <node id="73074">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="73094">
        <label>libmscore/chordrest.h</label>
        <link refid="chordrest_8h_source"/>
        <childnode refid="73095" relation="include">
        </childnode>
        <childnode refid="73071" relation="include">
        </childnode>
        <childnode refid="73096" relation="include">
        </childnode>
        <childnode refid="73078" relation="include">
        </childnode>
        <childnode refid="73063" relation="include">
        </childnode>
      </node>
      <node id="73061">
        <label>config.h</label>
      </node>
      <node id="73086">
        <label>algorithm</label>
      </node>
      <node id="73064">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="73061" relation="include">
        </childnode>
        <childnode refid="73065" relation="include">
        </childnode>
        <childnode refid="73079" relation="include">
        </childnode>
        <childnode refid="73080" relation="include">
        </childnode>
        <childnode refid="73082" relation="include">
        </childnode>
        <childnode refid="73083" relation="include">
        </childnode>
        <childnode refid="73088" relation="include">
        </childnode>
        <childnode refid="73089" relation="include">
        </childnode>
      </node>
      <node id="73062">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="73079">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="73075" relation="include">
        </childnode>
        <childnode refid="73066" relation="include">
        </childnode>
        <childnode refid="73069" relation="include">
        </childnode>
      </node>
      <node id="73070">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="73058" relation="include">
        </childnode>
        <childnode refid="73071" relation="include">
        </childnode>
        <childnode refid="73074" relation="include">
        </childnode>
        <childnode refid="73075" relation="include">
        </childnode>
        <childnode refid="73063" relation="include">
        </childnode>
        <childnode refid="73076" relation="include">
        </childnode>
        <childnode refid="73077" relation="include">
        </childnode>
      </node>
      <node id="73056">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_join" prot="public">TestJoin</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__join_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;libmscore/join/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="22" column="9" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/segment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/chordrest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chord_8h" kindref="compound">libmscore/chord.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;libmscore/join/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestJoin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_test_join" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_join" kindref="compound">TestJoin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p2);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join01()<sp/>{<sp/>join(</highlight><highlight class="stringliteral">&quot;join01.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;join01-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join02()<sp/>{<sp/>join(</highlight><highlight class="stringliteral">&quot;join02.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;join02-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join03()<sp/>{<sp/>join(</highlight><highlight class="stringliteral">&quot;join03.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;join03-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join04()<sp/>{<sp/>join(</highlight><highlight class="stringliteral">&quot;join04.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;join04-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join05()<sp/>{<sp/>join(</highlight><highlight class="stringliteral">&quot;join05.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;join05-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join06()<sp/>{<sp/>join(</highlight><highlight class="stringliteral">&quot;join06.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;join06-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join07()<sp/>{<sp/>join(</highlight><highlight class="stringliteral">&quot;join07.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;join07-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>join08()<sp/>{<sp/>join1(</highlight><highlight class="stringliteral">&quot;join08.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestJoin::initTestCase()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>join</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestJoin::join(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p2)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>p1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>m2);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdJoinMeasure(m1,<sp/>m2);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>p1,<sp/>DIR<sp/>+<sp/>p2));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestJoin::join(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>p1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>index;<sp/>++i)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>m2);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdJoinMeasure(m1,<sp/>m2);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>p1,<sp/>DIR<sp/>+<sp/>p2));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestJoin::join1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p1)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>p1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>m2);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdJoinMeasure(m1,<sp/>m2);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>notes<sp/>are<sp/>still<sp/>on<sp/>line<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>score-&gt;firstSegment(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_note" kindref="compound">Note</ref>*<sp/>note<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_chord" kindref="compound">Ms::Chord</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(s-&gt;element(0))-&gt;upNote();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(note-&gt;line()<sp/>==<sp/>6);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_join" kindref="compound">TestJoin</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_join.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/libmscore/join/tst_join.cpp"/>
  </compounddef>
</doxygen>
