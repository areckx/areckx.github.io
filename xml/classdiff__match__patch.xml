<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classdiff__match__patch" kind="class" language="C++" prot="public">
    <compoundname>diff_match_patch</compoundname>
    <includes refid="diff__match__patch_8h" local="no">diff_match_patch.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdiff__match__patch_1ab85b721264b16d0a4d42230097d485ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class diff_match_patch_test</definition>
        <argsstring></argsstring>
        <name>diff_match_patch_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="131" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdiff__match__patch_1aaa544a91d8555a780ab261fc1c15b3f9" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float diff_match_patch::Diff_Timeout</definition>
        <argsstring></argsstring>
        <name>Diff_Timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="138" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdiff__match__patch_1a3a7134ca63b7e4cb44a2432ef4c34121" prot="public" static="no" mutable="no">
        <type>short</type>
        <definition>short diff_match_patch::Diff_EditCost</definition>
        <argsstring></argsstring>
        <name>Diff_EditCost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="140" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdiff__match__patch_1a4e7c966c7c2a930a578cf7ac8edc0e86" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float diff_match_patch::Match_Threshold</definition>
        <argsstring></argsstring>
        <name>Match_Threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="142" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdiff__match__patch_1a57c49d8f3692157431ecd74fe6cd3f8f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int diff_match_patch::Match_Distance</definition>
        <argsstring></argsstring>
        <name>Match_Distance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="146" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdiff__match__patch_1a45ecc3f1f3d865c8b1d1b2eb4f40ab33" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float diff_match_patch::Patch_DeleteThreshold</definition>
        <argsstring></argsstring>
        <name>Patch_DeleteThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="151" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdiff__match__patch_1a798d3ee5eb9bf60ed679f50fa9a42d9b" prot="public" static="no" mutable="no">
        <type>short</type>
        <definition>short diff_match_patch::Patch_Margin</definition>
        <argsstring></argsstring>
        <name>Patch_Margin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="153" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdiff__match__patch_1aa99b26cfb171f9ca3d558db26c76346c" prot="public" static="no" mutable="no">
        <type>short</type>
        <definition>short diff_match_patch::Match_MaxBits</definition>
        <argsstring></argsstring>
        <name>Match_MaxBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="156" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdiff__match__patch_1a0c839cb3f22ff25e4d89f09554a2dd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>diff_match_patch::diff_match_patch</definition>
        <argsstring>()</argsstring>
        <name>diff_match_patch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="161" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="166" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_main</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2)</argsstring>
        <name>diff_main</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the differences between two texts. Run a faster slightly less optimal diff. This method allows the &apos;checklines&apos; of <ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main()</ref> to be optional. Most of the time checklines is wanted, so default to true. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New string to be diffed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Linked List of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="175" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a106a1cb355978e1d2c60fb6487667fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_main</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2, bool checklines)</argsstring>
        <name>diff_main</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the differences between two texts. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checklines</parametername>
</parameternamelist>
<parameterdescription>
<para>Speedup flag. If false, then don&apos;t run a line-level diff first to identify the changed areas. If true, then run a faster slightly less optimal diff. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Linked List of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="186" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="182" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a6139ad292f602b8b9295fe0c48709e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::diff_commonPrefix</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2)</argsstring>
        <name>diff_commonPrefix</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the common prefix of two strings. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>First string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of characters common to the start of each string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="293" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="571" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1aed765d65d9e6fb78de3725416a262586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::diff_commonSuffix</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2)</argsstring>
        <name>diff_commonSuffix</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the common suffix of two strings. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>First string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of characters common to the end of each string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="302" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="584" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff_match_patch::diff_cleanupSemantic</definition>
        <argsstring>(QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_cleanupSemantic</name>
        <param>
          <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reduce the number of edits by eliminating semantically trivial equalities. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="345" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="715" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff_match_patch::diff_cleanupSemanticLossless</definition>
        <argsstring>(QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_cleanupSemanticLossless</name>
        <param>
          <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look for single edits surrounded on both sides by equalities which can be shifted sideways to align the edit to a word boundary. e.g: The c&lt;ins&gt;at c&lt;/ins&gt;ame. -&gt; The &lt;ins&gt;cat &lt;/ins&gt;came. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="354" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="834" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff_match_patch::diff_cleanupEfficiency</definition>
        <argsstring>(QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_cleanupEfficiency</name>
        <param>
          <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reduce the number of edits by eliminating operationally trivial equalities. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="372" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="953" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff_match_patch::diff_cleanupMerge</definition>
        <argsstring>(QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_cleanupMerge</name>
        <param>
          <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reorder and merge like edit sections. Merge equalities. Any edit section can move as long as it doesn&apos;t cross an equality. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="380" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1061" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a91474da17c89bab2ca34efa207fe85b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::diff_xIndex</definition>
        <argsstring>(const QList&lt; Diff &gt; &amp;diffs, int loc)</argsstring>
        <name>diff_xIndex</name>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loc is a location in text1, compute and return the equivalent location in text2. e.g. &quot;The cat&quot; vs &quot;The big cat&quot;, 1-&gt;1, 5-&gt;8 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>Location within text1. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Location within text2. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="391" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1209" bodyend="1238"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a3eeaf8a99e5d6f53e8994128d64f57f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString diff_match_patch::diff_prettyHtml</definition>
        <argsstring>(const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_prettyHtml</name>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="class_diff" kindref="compound">Diff</ref> list into a pretty HTML report. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HTML representation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="399" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1241" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a6a1995ece702b50091f3883518864ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString diff_match_patch::diff_text1</definition>
        <argsstring>(const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_text1</name>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute and return the source text (all equalities and deletions). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Source text. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="407" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1270" bodyend="1278"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a9d3e1424496704a7e1d1f7995d465f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString diff_match_patch::diff_text2</definition>
        <argsstring>(const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_text2</name>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute and return the destination text (all equalities and insertions). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Destination text. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="415" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1281" bodyend="1289"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a5183e0300c4fbe6b993cae9844f57c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::diff_levenshtein</definition>
        <argsstring>(const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_levenshtein</name>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the Levenshtein distance; the number of inserted, deleted or substituted characters. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of changes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="424" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1292" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1acc6b4e2d43c1be99c291049810bfc654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString diff_match_patch::diff_toDelta</definition>
        <argsstring>(const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>diff_toDelta</name>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Crush the diff into an encoded string which describes the operations required to transform text1 into text2. E.g. =3-2+ing -&gt; Keep 3 chars, delete 2 chars, insert &apos;ing&apos;. Operations are tab-separated. Inserted text is escaped using xx notation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_array" kindref="compound">Array</ref> of diff tuples. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Delta text. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="435" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1317" bodyend="1342"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a70e244439ed3261a2a2c2ce092c45bc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_fromDelta</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;delta)</argsstring>
        <name>diff_fromDelta</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given the original text1, and an encoded string which describes the operations required to transform text1 into text2, compute the full diff. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Source string for the diff. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Delta text. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_array" kindref="compound">Array</ref> of diff tuples or null if invalid. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>QString</parametername>
</parameternamelist>
<parameterdescription>
<para>If invalid input. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="446" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1345" bodyend="1391"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::match_main</definition>
        <argsstring>(const QString &amp;text, const QString &amp;pattern, int loc)</argsstring>
        <name>match_main</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Locate the best instance of &apos;pattern&apos; in &apos;text&apos; near &apos;loc&apos;. Returns -1 if no match found. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>The location to search around. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Best match index or -1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="461" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1397" bodyend="1419"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt;</type>
        <definition>QList&lt; Patch &gt; diff_match_patch::patch_make</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2)</argsstring>
        <name>patch_make</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute a list of patches to turn text1 into text2. A set of diffs will be computed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old text. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New text. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LinkedList of <ref refid="class_patch" kindref="compound">Patch</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="514" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1596" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1ac5992f58192fc44530f33dd40202c165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt;</type>
        <definition>QList&lt; Patch &gt; diff_match_patch::patch_make</definition>
        <argsstring>(const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>patch_make</name>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute a list of patches to turn text1 into text2. text1 will be derived from the provided diffs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_array" kindref="compound">Array</ref> of diff tuples for text1 to text2. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LinkedList of <ref refid="class_patch" kindref="compound">Patch</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="523" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1614" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1aaf3ea8fa0cd411d87dc465544fa68ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt;</type>
        <definition>QList&lt; Patch &gt; diff_match_patch::patch_make</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2, const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>patch_make</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute a list of patches to turn text1 into text2. text2 is ignored, diffs are the delta between text1 and text2. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old text. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_array" kindref="compound">Array</ref> of diff tuples for text1 to text2. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LinkedList of <ref refid="class_patch" kindref="compound">Patch</ref> objects. </para></simplesect>
<xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Prefer <ref refid="classdiff__match__patch_1a7fe185270bdffc221bd36f3f72635298" kindref="member">patch_make(const QString &amp;text1, const QList&lt;Diff&gt; &amp;diffs)</ref>. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="535" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1621" bodyend="1628"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a7fe185270bdffc221bd36f3f72635298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt;</type>
        <definition>QList&lt; Patch &gt; diff_match_patch::patch_make</definition>
        <argsstring>(const QString &amp;text1, const QList&lt; Diff &gt; &amp;diffs)</argsstring>
        <name>patch_make</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute a list of patches to turn text1 into text2. text2 is not provided, diffs are the delta between text1 and text2. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old text. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_array" kindref="compound">Array</ref> of diff tuples for text1 to text2. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LinkedList of <ref refid="class_patch" kindref="compound">Patch</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="545" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1631" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1aa4b405c41f79af23a8e60129c8e9a721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt;</type>
        <definition>QList&lt; Patch &gt; diff_match_patch::patch_deepCopy</definition>
        <argsstring>(QList&lt; Patch &gt; &amp;patches)</argsstring>
        <name>patch_deepCopy</name>
        <param>
          <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt; &amp;</type>
          <declname>patches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given an array of patches, return another array that is identical. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>patches</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_array" kindref="compound">Array</ref> of patch objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_array" kindref="compound">Array</ref> of patch objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="553" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1714" bodyend="1729"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPair&lt; QString, QVector&lt; bool &gt; &gt;</type>
        <definition>QPair&lt; QString, QVector&lt; bool &gt; &gt; diff_match_patch::patch_apply</definition>
        <argsstring>(QList&lt; Patch &gt; &amp;patches, const QString &amp;text)</argsstring>
        <name>patch_apply</name>
        <param>
          <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt; &amp;</type>
          <declname>patches</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Merge a set of patches onto the text. Return a patched text, as well as an array of true/false values indicating which patches were applied. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>patches</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_array" kindref="compound">Array</ref> of patch objects. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Old text. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Two element <ref refid="class_object" kindref="compound">Object</ref> array, containing the new text and an array of boolean values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="564" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1732" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a03d8b23bf20cbfc3e454aad38ff366d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString diff_match_patch::patch_addPadding</definition>
        <argsstring>(QList&lt; Patch &gt; &amp;patches)</argsstring>
        <name>patch_addPadding</name>
        <param>
          <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt; &amp;</type>
          <declname>patches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add some padding on text start and end so that edges can match something. Intended to be called only from within patch_apply. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>patches</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_array" kindref="compound">Array</ref> of patch objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The padding string added to each side. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="573" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1834" bodyend="1889"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a8b026488adde70dcc268fc50d170f4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff_match_patch::patch_splitMax</definition>
        <argsstring>(QList&lt; Patch &gt; &amp;patches)</argsstring>
        <name>patch_splitMax</name>
        <param>
          <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt; &amp;</type>
          <declname>patches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look through the patches and break up any which are longer than the maximum limit of the match algorithm. Intended to be called only from within patch_apply. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>patches</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_patch" kindref="compound">Patch</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="582" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1892" bodyend="1993"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString diff_match_patch::patch_toText</definition>
        <argsstring>(const QList&lt; Patch &gt; &amp;patches)</argsstring>
        <name>patch_toText</name>
        <param>
          <type>const QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt; &amp;</type>
          <declname>patches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take a list of patches and return a textual representation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>patches</parametername>
</parameternamelist>
<parameterdescription>
<para>List of <ref refid="class_patch" kindref="compound">Patch</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Text representation of patches. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="590" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1996" bodyend="2002"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_patch" kindref="compound">Patch</ref> &gt;</type>
        <definition>QList&lt; Patch &gt; diff_match_patch::patch_fromText</definition>
        <argsstring>(const QString &amp;textline)</argsstring>
        <name>patch_fromText</name>
        <param>
          <type>const QString &amp;</type>
          <declname>textline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a textual representation of patches and return a List of <ref refid="class_patch" kindref="compound">Patch</ref> objects. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>textline</parametername>
</parameternamelist>
<parameterdescription>
<para>Text representation of patches. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of <ref refid="class_patch" kindref="compound">Patch</ref> objects. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>QString</parametername>
</parameternamelist>
<parameterdescription>
<para>If invalid input. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="600" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="2005" bodyend="2077"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdiff__match__patch_1aa2c6eb1e6f3793d8f0c13718ea9898de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_main</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2, bool checklines, clock_t deadline)</argsstring>
        <name>diff_main</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklines</declname>
        </param>
        <param>
          <type>clock_t</type>
          <declname>deadline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the differences between two texts. Simplifies the problem by stripping any common prefix or suffix off the texts before diffing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checklines</parametername>
</parameternamelist>
<parameterdescription>
<para>Speedup flag. If false, then don&apos;t run a line-level diff first to identify the changed areas. If true, then run a faster slightly less optimal diff. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deadline</parametername>
</parameternamelist>
<parameterdescription>
<para>Time when the diff should be complete by. Used internally for recursive calls. Users should set DiffTimeout instead. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Linked List of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="201" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="194" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a681aef0a3a242b286ed3039134110ce2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_compute</definition>
        <argsstring>(QString text1, QString text2, bool checklines, clock_t deadline)</argsstring>
        <name>diff_compute</name>
        <param>
          <type>QString</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>text2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklines</declname>
        </param>
        <param>
          <type>clock_t</type>
          <declname>deadline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the differences between two texts. Assumes that the texts do not have any common prefix or suffix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checklines</parametername>
</parameternamelist>
<parameterdescription>
<para>Speedup flag. If false, then don&apos;t run a line-level diff first to identify the changed areas. If true, then run a faster slightly less optimal diff. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deadline</parametername>
</parameternamelist>
<parameterdescription>
<para>Time when the diff should be complete by. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Linked List of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="215" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="239" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1ac68c139d406ee60a37e7dc7e89b7776f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_lineMode</definition>
        <argsstring>(QString text1, QString text2, clock_t deadline)</argsstring>
        <name>diff_lineMode</name>
        <param>
          <type>QString</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>text2</declname>
        </param>
        <param>
          <type>clock_t</type>
          <declname>deadline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do a quick line-level diff on both strings, then rediff the parts for greater accuracy. This speedup can produce non-minimal diffs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deadline</parametername>
</parameternamelist>
<parameterdescription>
<para>Time when the diff should be complete by. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Linked List of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="227" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="308" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1ad2c2e2cadc17dee2af212faebec131e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_bisectSplit</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2, int x, int y, clock_t deadline)</argsstring>
        <name>diff_bisectSplit</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>clock_t</type>
          <declname>deadline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given the location of the &apos;middle snake&apos;, split the diff in two parts and recurse. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of split point in text1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of split point in text2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deadline</parametername>
</parameternamelist>
<parameterdescription>
<para>Time at which to bail if not yet complete. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="251" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="489" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a98fe94c5450606a16cb49423fc47b117" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString diff_match_patch::diff_linesToCharsMunge</definition>
        <argsstring>(const QString &amp;text, QStringList &amp;lineArray, QMap&lt; QString, int &gt; &amp;lineHash)</argsstring>
        <name>diff_linesToCharsMunge</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>QStringList &amp;</type>
          <declname>lineArray</declname>
        </param>
        <param>
          <type>QMap&lt; QString, int &gt; &amp;</type>
          <declname>lineHash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Split a text into a list of strings. Reduce the texts to a string of hashes where each Unicode character represents one line. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>String to encode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineArray</parametername>
</parameternamelist>
<parameterdescription>
<para>List of unique strings. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineHash</parametername>
</parameternamelist>
<parameterdescription>
<para>Map of strings to indices. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Encoded string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="274" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="525" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a74ced0fe48ebdd4c7078d0cabf1c036d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff_match_patch::diff_charsToLines</definition>
        <argsstring>(QList&lt; Diff &gt; &amp;diffs, const QStringList &amp;lineArray)</argsstring>
        <name>diff_charsToLines</name>
        <param>
          <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt; &amp;</type>
          <declname>diffs</declname>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>lineArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rehydrate the text in a diff from a string of line hashes to real lines of text. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diffs</parametername>
</parameternamelist>
<parameterdescription>
<para>LinkedList of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineArray</parametername>
</parameternamelist>
<parameterdescription>
<para>List of unique strings. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="284" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="556" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a69075db832cb512477a332aa340ea069" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList diff_match_patch::diff_halfMatchI</definition>
        <argsstring>(const QString &amp;longtext, const QString &amp;shorttext, int i)</argsstring>
        <name>diff_halfMatchI</name>
        <param>
          <type>const QString &amp;</type>
          <declname>longtext</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>shorttext</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does a substring of shorttext exist within longtext such that the substring is at least half the length of longtext? <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>longtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Longer string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shorttext</parametername>
</parameternamelist>
<parameterdescription>
<para>Shorter string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Start index of quarter length substring within longtext. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Five element String array, containing the prefix of longtext, the suffix of longtext, the prefix of shorttext, the suffix of shorttext and the common middle. Or null if there was no match. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="338" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="681" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1ac9a31789a0d9a3a6260f437deb1faf4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::diff_cleanupSemanticScore</definition>
        <argsstring>(const QString &amp;one, const QString &amp;two)</argsstring>
        <name>diff_cleanupSemanticScore</name>
        <param>
          <type>const QString &amp;</type>
          <declname>one</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>two</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given two strings, compute a score representing whether the internal boundary falls on logical boundaries. Scores range from 5 (best) to 0 (worst). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>one</parametername>
</parameternamelist>
<parameterdescription>
<para>First string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>two</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The score. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="365" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="915" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1af6a57fd45cdf2b02148cc0ea33dbe548" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double diff_match_patch::match_bitapScore</definition>
        <argsstring>(int e, int x, int loc, const QString &amp;pattern)</argsstring>
        <name>match_bitapScore</name>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute and return the score for a match with e errors and x location. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of errors in match. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of match. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected location of match. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern being sought. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Overall score for match (0.0 = good, 1.0 = bad). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="483" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1524" bodyend="1533"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdiff__match__patch_1a10f6b81afc589a091a74d00d58ec1a5a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_diff" kindref="compound">Diff</ref> &gt;</type>
        <definition>QList&lt; Diff &gt; diff_match_patch::diff_bisect</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2, clock_t deadline)</argsstring>
        <name>diff_bisect</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <param>
          <type>clock_t</type>
          <declname>deadline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the &apos;middle snake&apos; of a diff, split the problem in two and return the recursively constructed diff. See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>Old string to be diffed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>New string to be diffed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Linked List of <ref refid="class_diff" kindref="compound">Diff</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="238" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="371" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1ab1f120b83d49948767de531ab2a4e15a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QVariant &gt;</type>
        <definition>QList&lt; QVariant &gt; diff_match_patch::diff_linesToChars</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2)</argsstring>
        <name>diff_linesToChars</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Split two texts into a list of strings. Reduce the texts to a string of hashes where each Unicode character represents one line. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>First string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Three element <ref refid="class_object" kindref="compound">Object</ref> array, containing the encoded text1, the encoded text2 and the List of unique strings. The zeroth element of the List of unique strings is intentionally blank. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="263" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="503" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1aa47c81e235ed1609fb915f03316d21dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::diff_commonOverlap</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2)</argsstring>
        <name>diff_commonOverlap</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if the suffix of one string is the prefix of another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>First string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of characters common to the end of the first string and the start of the second string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="312" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="598" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList diff_match_patch::diff_halfMatch</definition>
        <argsstring>(const QString &amp;text1, const QString &amp;text2)</argsstring>
        <name>diff_halfMatch</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do the two texts share a substring which is at least half the length of the longer text? This speedup can produce non-minimal diffs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text1</parametername>
</parameternamelist>
<parameterdescription>
<para>First string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Five element String array, containing the prefix of text1, the suffix of text1, the prefix of text2, the suffix of text2 and the common middle. Or null if there was no match. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="325" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="640" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diff_match_patch::match_bitap</definition>
        <argsstring>(const QString &amp;text, const QString &amp;pattern, int loc)</argsstring>
        <name>match_bitap</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Locate the best instance of &apos;pattern&apos; in &apos;text&apos; near &apos;loc&apos; using the Bitap algorithm. Returns -1 if no match found. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>The location to search around. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Best match index or -1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="472" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1422" bodyend="1521"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a106c32e9978fc36cafe6f1bc8f81bf8d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMap&lt; QChar, int &gt;</type>
        <definition>QMap&lt; QChar, int &gt; diff_match_patch::match_alphabet</definition>
        <argsstring>(const QString &amp;pattern)</argsstring>
        <name>match_alphabet</name>
        <param>
          <type>const QString &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise the alphabet for the Bitap algorithm. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to encode. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Hash of character locations. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="491" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1536" bodyend="1548"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1a330cc0e446453f69d18a90ba9887c7db" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff_match_patch::patch_addContext</definition>
        <argsstring>(Patch &amp;patch, const QString &amp;text)</argsstring>
        <name>patch_addContext</name>
        <param>
          <type><ref refid="class_patch" kindref="compound">Patch</ref> &amp;</type>
          <declname>patch</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increase the context until it is unique, but don&apos;t let the pattern expand beyond Match_MaxBits. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>patch</parametername>
</parameternamelist>
<parameterdescription>
<para>The patch to grow. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Source text. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="504" column="1" bodyfile="thirdparty/diff/diff_match_patch.cpp" bodystart="1554" bodyend="1593"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classdiff__match__patch_1af06a6618e0f02033e19e69849c42ff65" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>static QString diff_match_patch::safeMid</definition>
        <argsstring>(const QString &amp;str, int pos)</argsstring>
        <name>safeMid</name>
        <param>
          <type>const QString &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A safer version of QString.mid(pos). This one returns &quot;&quot; instead of null when the postion equals the string length. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to take a substring from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to start the substring from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Substring. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="610" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="610" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="classdiff__match__patch_1add89b5b27166af1357888e9c816c511a" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>static QString diff_match_patch::safeMid</definition>
        <argsstring>(const QString &amp;str, int pos, int len)</argsstring>
        <name>safeMid</name>
        <param>
          <type>const QString &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A safer version of QString.mid(pos, len). This one returns &quot;&quot; instead of null when the postion equals the string length. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to take a substring from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to start the substring from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of substring. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Substring. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch.h" line="623" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="623" bodyend="625"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_class" kindref="compound">Class</ref> containing the diff, match and patch methods. Also contains the behaviour settings. </para>    </detaileddescription>
    <location file="thirdparty/diff/diff_match_patch.h" line="129" column="1" bodyfile="thirdparty/diff/diff_match_patch.h" bodystart="129" bodyend="626"/>
    <listofallmembers>
      <member refid="classdiff__match__patch_1a10f6b81afc589a091a74d00d58ec1a5a" prot="protected" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_bisect</name></member>
      <member refid="classdiff__match__patch_1ad2c2e2cadc17dee2af212faebec131e5" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_bisectSplit</name></member>
      <member refid="classdiff__match__patch_1a74ced0fe48ebdd4c7078d0cabf1c036d" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_charsToLines</name></member>
      <member refid="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_cleanupEfficiency</name></member>
      <member refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_cleanupMerge</name></member>
      <member refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_cleanupSemantic</name></member>
      <member refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_cleanupSemanticLossless</name></member>
      <member refid="classdiff__match__patch_1ac9a31789a0d9a3a6260f437deb1faf4a" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_cleanupSemanticScore</name></member>
      <member refid="classdiff__match__patch_1aa47c81e235ed1609fb915f03316d21dc" prot="protected" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_commonOverlap</name></member>
      <member refid="classdiff__match__patch_1a6139ad292f602b8b9295fe0c48709e31" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_commonPrefix</name></member>
      <member refid="classdiff__match__patch_1aed765d65d9e6fb78de3725416a262586" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_commonSuffix</name></member>
      <member refid="classdiff__match__patch_1a681aef0a3a242b286ed3039134110ce2" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_compute</name></member>
      <member refid="classdiff__match__patch_1a3a7134ca63b7e4cb44a2432ef4c34121" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>Diff_EditCost</name></member>
      <member refid="classdiff__match__patch_1a70e244439ed3261a2a2c2ce092c45bc0" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_fromDelta</name></member>
      <member refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" prot="protected" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_halfMatch</name></member>
      <member refid="classdiff__match__patch_1a69075db832cb512477a332aa340ea069" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_halfMatchI</name></member>
      <member refid="classdiff__match__patch_1a5183e0300c4fbe6b993cae9844f57c11" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_levenshtein</name></member>
      <member refid="classdiff__match__patch_1ac68c139d406ee60a37e7dc7e89b7776f" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_lineMode</name></member>
      <member refid="classdiff__match__patch_1ab1f120b83d49948767de531ab2a4e15a" prot="protected" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_linesToChars</name></member>
      <member refid="classdiff__match__patch_1a98fe94c5450606a16cb49423fc47b117" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_linesToCharsMunge</name></member>
      <member refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_main</name></member>
      <member refid="classdiff__match__patch_1a106a1cb355978e1d2c60fb6487667fe3" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_main</name></member>
      <member refid="classdiff__match__patch_1aa2c6eb1e6f3793d8f0c13718ea9898de" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_main</name></member>
      <member refid="classdiff__match__patch_1a0c839cb3f22ff25e4d89f09554a2dd2c" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_match_patch</name></member>
      <member refid="classdiff__match__patch_1ab85b721264b16d0a4d42230097d485ca" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_match_patch_test</name></member>
      <member refid="classdiff__match__patch_1a3eeaf8a99e5d6f53e8994128d64f57f1" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_prettyHtml</name></member>
      <member refid="classdiff__match__patch_1a6a1995ece702b50091f3883518864ea7" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_text1</name></member>
      <member refid="classdiff__match__patch_1a9d3e1424496704a7e1d1f7995d465f20" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_text2</name></member>
      <member refid="classdiff__match__patch_1aaa544a91d8555a780ab261fc1c15b3f9" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>Diff_Timeout</name></member>
      <member refid="classdiff__match__patch_1acc6b4e2d43c1be99c291049810bfc654" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_toDelta</name></member>
      <member refid="classdiff__match__patch_1a91474da17c89bab2ca34efa207fe85b4" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>diff_xIndex</name></member>
      <member refid="classdiff__match__patch_1a106c32e9978fc36cafe6f1bc8f81bf8d" prot="protected" virt="non-virtual"><scope>diff_match_patch</scope><name>match_alphabet</name></member>
      <member refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" prot="protected" virt="non-virtual"><scope>diff_match_patch</scope><name>match_bitap</name></member>
      <member refid="classdiff__match__patch_1af6a57fd45cdf2b02148cc0ea33dbe548" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>match_bitapScore</name></member>
      <member refid="classdiff__match__patch_1a57c49d8f3692157431ecd74fe6cd3f8f" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>Match_Distance</name></member>
      <member refid="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>match_main</name></member>
      <member refid="classdiff__match__patch_1aa99b26cfb171f9ca3d558db26c76346c" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>Match_MaxBits</name></member>
      <member refid="classdiff__match__patch_1a4e7c966c7c2a930a578cf7ac8edc0e86" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>Match_Threshold</name></member>
      <member refid="classdiff__match__patch_1a330cc0e446453f69d18a90ba9887c7db" prot="protected" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_addContext</name></member>
      <member refid="classdiff__match__patch_1a03d8b23bf20cbfc3e454aad38ff366d8" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_addPadding</name></member>
      <member refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_apply</name></member>
      <member refid="classdiff__match__patch_1aa4b405c41f79af23a8e60129c8e9a721" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_deepCopy</name></member>
      <member refid="classdiff__match__patch_1a45ecc3f1f3d865c8b1d1b2eb4f40ab33" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>Patch_DeleteThreshold</name></member>
      <member refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_fromText</name></member>
      <member refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_make</name></member>
      <member refid="classdiff__match__patch_1ac5992f58192fc44530f33dd40202c165" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_make</name></member>
      <member refid="classdiff__match__patch_1aaf3ea8fa0cd411d87dc465544fa68ac1" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_make</name></member>
      <member refid="classdiff__match__patch_1a7fe185270bdffc221bd36f3f72635298" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_make</name></member>
      <member refid="classdiff__match__patch_1a798d3ee5eb9bf60ed679f50fa9a42d9b" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>Patch_Margin</name></member>
      <member refid="classdiff__match__patch_1a8b026488adde70dcc268fc50d170f4e3" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_splitMax</name></member>
      <member refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" prot="public" virt="non-virtual"><scope>diff_match_patch</scope><name>patch_toText</name></member>
      <member refid="classdiff__match__patch_1af06a6618e0f02033e19e69849c42ff65" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>safeMid</name></member>
      <member refid="classdiff__match__patch_1add89b5b27166af1357888e9c816c511a" prot="private" virt="non-virtual"><scope>diff_match_patch</scope><name>safeMid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
