<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_ms_1_1_midi_instr" kind="namespace" language="C++">
    <compoundname>Ms::MidiInstr</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a3173d75433f76d34944346dc9985b44c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::MidiInstr::instrumentName</definition>
        <argsstring>(MidiType type, int program, bool isDrumTrack)</argsstring>
        <name>instrumentName</name>
        <param>
          <type>MidiType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isDrumTrack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="22" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="22" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a3095ef9572d5bd596dd2c88268c0e07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiInstr::isGrandStaff</definition>
        <argsstring>(const MTrack &amp;t1, const MTrack &amp;t2)</argsstring>
        <name>isGrandStaff</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="38" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a0b552718bb04a30ae7af9d906f14e4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiInstr::isSameChannel</definition>
        <argsstring>(const MTrack &amp;t1, const MTrack &amp;t2)</argsstring>
        <name>isSameChannel</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="45" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a0692de70a14f6852a37623099be763d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiInstr::is3StaffOrgan</definition>
        <argsstring>(int program)</argsstring>
        <name>is3StaffOrgan</name>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="50" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1aa7bc4f20861e93a63da21cd022b95c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiInstr::areNext2GrandStaff</definition>
        <argsstring>(int currentTrack, const QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>areNext2GrandStaff</name>
        <param>
          <type>int</type>
          <declname>currentTrack</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="55" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a028a4bc3afddd75589604a5a0c9e2126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiInstr::areNext3OrganStaff</definition>
        <argsstring>(int currentTrack, const QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>areNext3OrganStaff</name>
        <param>
          <type>int</type>
          <declname>currentTrack</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="62" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="62" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1af5f583f35ca415555324341aa8452dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::MidiInstr::concatenateWithComma</definition>
        <argsstring>(const QString &amp;left, const QString &amp;right)</argsstring>
        <name>concatenateWithComma</name>
        <param>
          <type>const QString &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="73" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="73" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1abd7890702d2e5271456addc5a07e1f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiInstr::setGrandStaffProgram</definition>
        <argsstring>(QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>setGrandStaffProgram</name>
        <param>
          <type>QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="85" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="85" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a83bb3272c1a8bfde97030ce1adef04e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::set&lt; int &gt;</type>
        <definition>std::set&lt;int&gt; Ms::MidiInstr::findAllPitches</definition>
        <argsstring>(const MTrack &amp;track)</argsstring>
        <name>findAllPitches</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="111" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1abd2218d53ca45f83d56284cbe101ec20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiInstr::findNotEmptyDrumPitches</definition>
        <argsstring>(std::set&lt; int &gt; &amp;drumPitches, const InstrumentTemplate *templ)</argsstring>
        <name>findNotEmptyDrumPitches</name>
        <param>
          <type>std::set&lt; int &gt; &amp;</type>
          <declname>drumPitches</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> *</type>
          <declname>templ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="121" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1af84ce5c73b3cd372c54a1244a968dfb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiInstr::hasNotDefinedDrumPitch</definition>
        <argsstring>(const std::set&lt; int &gt; &amp;trackPitches, const std::set&lt; int &gt; &amp;drumPitches)</argsstring>
        <name>hasNotDefinedDrumPitch</name>
        <param>
          <type>const std::set&lt; int &gt; &amp;</type>
          <declname>trackPitches</declname>
        </param>
        <param>
          <type>const std::set&lt; int &gt; &amp;</type>
          <declname>drumPitches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="129" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="129" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a055c8b9009376a2a7df530cce62a90f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> *</type>
        <definition>const InstrumentTemplate* Ms::MidiInstr::findInstrument</definition>
        <argsstring>(const QString &amp;groupId, const QString &amp;instrId)</argsstring>
        <name>findInstrument</name>
        <param>
          <type>const QString &amp;</type>
          <declname>groupId</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>instrId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="142" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="142" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a8b57e5bf688569b4a2cb9cc3a4fd56d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> *</type>
        <definition>const InstrumentTemplate* Ms::MidiInstr::findClosestInstrument</definition>
        <argsstring>(const MTrack &amp;track)</argsstring>
        <name>findClosestInstrument</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="162" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="162" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1acd2b9fe458c2b5fb5e74a2d3e01e1580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> * &gt;</type>
        <definition>std::vector&lt;const InstrumentTemplate *&gt; Ms::MidiInstr::findInstrumentsForProgram</definition>
        <argsstring>(const MTrack &amp;track)</argsstring>
        <name>findInstrumentsForProgram</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="187" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="187" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a9ade4a333008c4905d21e44ccbbd5365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt;int, int&gt; Ms::MidiInstr::findMinMaxPitch</definition>
        <argsstring>(const MTrack &amp;track)</argsstring>
        <name>findMinMaxPitch</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="271" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="271" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a92568f0345b2055d97d5cbb23a0bb13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiInstr::findMaxPitchDiff</definition>
        <argsstring>(const std::pair&lt; int, int &gt; &amp;minMaxPitch, const InstrumentTemplate *templ)</argsstring>
        <name>findMaxPitchDiff</name>
        <param>
          <type>const std::pair&lt; int, int &gt; &amp;</type>
          <declname>minMaxPitch</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> *</type>
          <declname>templ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="287" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="287" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a0e2ee10333ca6cf804c14885570f2f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiInstr::hasCommonGenre</definition>
        <argsstring>(QList&lt; InstrumentGenre *&gt; genres)</argsstring>
        <name>hasCommonGenre</name>
        <param>
          <type>QList&lt; <ref refid="class_ms_1_1_instrument_genre" kindref="compound">InstrumentGenre</ref> *&gt;</type>
          <declname>genres</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="300" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="300" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a87caf8ed372520e828f3c4b5d4a0ca4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiInstr::sortInstrumentTemplates</definition>
        <argsstring>(std::vector&lt; const InstrumentTemplate *&gt; &amp;templates, const std::pair&lt; int, int &gt; &amp;minMaxPitch)</argsstring>
        <name>sortInstrumentTemplates</name>
        <param>
          <type>std::vector&lt; const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> *&gt; &amp;</type>
          <declname>templates</declname>
        </param>
        <param>
          <type>const std::pair&lt; int, int &gt; &amp;</type>
          <declname>minMaxPitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="309" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="309" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a1ade69c86fb6965886679fead93c509a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> * &gt;</type>
        <definition>std::vector&lt;const InstrumentTemplate *&gt; Ms::MidiInstr::findSuitableInstruments</definition>
        <argsstring>(const MTrack &amp;track)</argsstring>
        <name>findSuitableInstruments</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="338" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="338" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1a6ed495c2a6e57005393487a01047e5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiInstr::findInstrumentsForAllTracks</definition>
        <argsstring>(const QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>findInstrumentsForAllTracks</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="354" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="354" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1ae59ae8af6c4d38c6242fc64af216070d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiInstr::createInstruments</definition>
        <argsstring>(Score *score, QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>createInstruments</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="372" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="372" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__instrument_8cpp_1ad05be7c0f267fbc73f69830e788aff34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::MidiInstr::msInstrName</definition>
        <argsstring>(int trackIndex)</argsstring>
        <name>msInstrName</name>
        <param>
          <type>int</type>
          <declname>trackIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_instrument.cpp" line="449" column="1" bodyfile="mscore/importmidi/importmidi_instrument.cpp" bodystart="449" bodyend="464"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="mscore/importmidi/importmidi_instrument.cpp" line="20" column="1"/>
  </compounddef>
</doxygen>
