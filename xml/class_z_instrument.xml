<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_z_instrument" kind="class" language="C++" prot="public">
    <compoundname>ZInstrument</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_z_instrument_1ac1eb15472d12c216cd52fc4ceb4c2314" prot="private" static="no" mutable="no">
        <type><ref refid="class_zerberus" kindref="compound">Zerberus</ref> *</type>
        <definition>Zerberus* ZInstrument::zerberus</definition>
        <argsstring></argsstring>
        <name>zerberus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="31" column="1" bodyfile="zerberus/instrument.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_instrument_1a62fbcd1d0557780fc7c6d4f44303a3e1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ZInstrument::_refCount</definition>
        <argsstring></argsstring>
        <name>_refCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="32" column="1" bodyfile="zerberus/instrument.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_instrument_1a62080e0556d4e1518991f1cc809615b2" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString ZInstrument::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="33" column="1" bodyfile="zerberus/instrument.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_instrument_1aa45ac3c473539072dbba0c79d1499cc7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ZInstrument::_program</definition>
        <argsstring></argsstring>
        <name>_program</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="34" column="1" bodyfile="zerberus/instrument.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_instrument_1a1b18d00c0b0ab1ea164d96bd8470cc58" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString ZInstrument::instrumentPath</definition>
        <argsstring></argsstring>
        <name>instrumentPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="35" column="1" bodyfile="zerberus/instrument.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_instrument_1a67329e213c5845a82df82b13e9c246da" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="struct_zone" kindref="compound">Zone</ref> * &gt;</type>
        <definition>std::list&lt;Zone*&gt; ZInstrument::_zones</definition>
        <argsstring></argsstring>
        <name>_zones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="36" column="1" bodyfile="zerberus/instrument.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_instrument_1ae1548432d18782b8e6095ed7eda818c1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ZInstrument::_setcc[128]</definition>
        <argsstring>[128]</argsstring>
        <name>_setcc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="37" column="1" bodyfile="zerberus/instrument.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_z_instrument_1a333bb2345fe4525e6b6b91db7af0844e" prot="public" static="yes" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray ZInstrument::buf</definition>
        <argsstring></argsstring>
        <name>buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="61" column="1" bodyfile="zerberus/instrument.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_instrument_1a5ebde6ef526551565b80e1018c0c57ab" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ZInstrument::idx</definition>
        <argsstring></argsstring>
        <name>idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="62" column="1" bodyfile="zerberus/instrument.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_z_instrument_1a9668dba97818cb18e3743aec08e6e086" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ZInstrument::loadFromFile</definition>
        <argsstring>(const QString &amp;)</argsstring>
        <name>loadFromFile</name>
        <param>
          <type>const QString &amp;</type>
          <defname>path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="39" column="1" bodyfile="zerberus/instrument.cpp" bodystart="156" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a1c176697fc5dc645eeca3669d2eccd66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ZInstrument::loadSfz</definition>
        <argsstring>(const QString &amp;)</argsstring>
        <name>loadSfz</name>
        <param>
          <type>const QString &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="40" column="1" bodyfile="zerberus/sfz.cpp" bodystart="504" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a874046d80ade6b760ac2df00e71494ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ZInstrument::loadFromDir</definition>
        <argsstring>(const QString &amp;)</argsstring>
        <name>loadFromDir</name>
        <param>
          <type>const QString &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="41" column="1" bodyfile="zerberus/instrument.cpp" bodystart="137" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1ae920151185e3ee550537180e3a668ce3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ZInstrument::read</definition>
        <argsstring>(const QByteArray &amp;, MQZipReader *, const QString &amp;path)</argsstring>
        <name>read</name>
        <param>
          <type>const QByteArray &amp;</type>
          <defname>buf</defname>
        </param>
        <param>
          <type><ref refid="class_m_q_zip_reader" kindref="compound">MQZipReader</ref> *</type>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="42" column="1" bodyfile="zerberus/instrument.cpp" bodystart="182" bodyend="200"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_z_instrument_1ae3c01b4b90a147c1e466b75bdd21afb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ZInstrument::ZInstrument</definition>
        <argsstring>(Zerberus *)</argsstring>
        <name>ZInstrument</name>
        <param>
          <type><ref refid="class_zerberus" kindref="compound">Zerberus</ref> *</type>
          <defname>z</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="45" column="1" bodyfile="zerberus/instrument.cpp" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1aa0ddf5c3273c1bc6aa62eaf79d9f0ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ZInstrument::~ZInstrument</definition>
        <argsstring>()</argsstring>
        <name>~ZInstrument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="46" column="1" bodyfile="zerberus/instrument.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a570eb64ee6cf833701108be6abec7584" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ZInstrument::refCount</definition>
        <argsstring>() const</argsstring>
        <name>refCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="48" column="1" bodyfile="zerberus/instrument.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a28f23cae9c734aa7b6aa15f69a2f312d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ZInstrument::setRefCount</definition>
        <argsstring>(int val)</argsstring>
        <name>setRefCount</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="49" column="1" bodyfile="zerberus/instrument.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a48cad5adcca4f25f9c94270ac364c885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ZInstrument::load</definition>
        <argsstring>(const QString &amp;)</argsstring>
        <name>load</name>
        <param>
          <type>const QString &amp;</type>
          <defname>path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="50" column="1" bodyfile="zerberus/instrument.cpp" bodystart="120" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a8b9a007e194ca2718fd25ded6979d1e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ZInstrument::program</definition>
        <argsstring>() const</argsstring>
        <name>program</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="51" column="1" bodyfile="zerberus/instrument.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1aa0097743ee7f8f0bbd9eccf9cb5c6f85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString ZInstrument::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="52" column="1" bodyfile="zerberus/instrument.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1ab2c149a7706f01ba2869b8f4b1c16c49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString ZInstrument::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="53" column="1" bodyfile="zerberus/instrument.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a26ebdbb7146d29f9ef071da7a8c2ae67" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::list&lt; <ref refid="struct_zone" kindref="compound">Zone</ref> * &gt; &amp;</type>
        <definition>const std::list&lt;Zone*&gt;&amp; ZInstrument::zones</definition>
        <argsstring>() const</argsstring>
        <name>zones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="54" column="1" bodyfile="zerberus/instrument.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1af4f833c4486f597e4d38abf8e1465dc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::list&lt; <ref refid="struct_zone" kindref="compound">Zone</ref> * &gt; &amp;</type>
        <definition>std::list&lt;Zone*&gt;&amp; ZInstrument::zones</definition>
        <argsstring>()</argsstring>
        <name>zones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="55" column="1" bodyfile="zerberus/instrument.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a7c4775b44c1d9c28e43f2719da2f75e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_sample" kindref="compound">Sample</ref> *</type>
        <definition>Sample * ZInstrument::readSample</definition>
        <argsstring>(const QString &amp;s, MQZipReader *uz)</argsstring>
        <name>readSample</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_m_q_zip_reader" kindref="compound">MQZipReader</ref> *</type>
          <declname>uz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="56" column="1" bodyfile="zerberus/instrument.cpp" bodystart="43" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a52d8d71043543260bb39a08dabe6c170" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ZInstrument::addZone</definition>
        <argsstring>(Zone *z)</argsstring>
        <name>addZone</name>
        <param>
          <type><ref refid="struct_zone" kindref="compound">Zone</ref> *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="57" column="1" bodyfile="zerberus/instrument.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1acf7d6e98f6b414d18493bb51523074a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ZInstrument::addRegion</definition>
        <argsstring>(SfzRegion &amp;)</argsstring>
        <name>addRegion</name>
        <param>
          <type><ref refid="struct_sfz_region" kindref="compound">SfzRegion</ref> &amp;</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="58" column="1" bodyfile="zerberus/sfz.cpp" bodystart="258" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_z_instrument_1a00e9dd19bd13d4b7a682bfcd025bbc13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ZInstrument::getSetCC</definition>
        <argsstring>(int v)</argsstring>
        <name>getSetCC</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zerberus/instrument.h" line="59" column="1" bodyfile="zerberus/instrument.h" bodystart="59" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="zerberus/instrument.h" line="30" column="1" bodyfile="zerberus/instrument.h" bodystart="30" bodyend="63"/>
    <listofallmembers>
      <member refid="class_z_instrument_1a62080e0556d4e1518991f1cc809615b2" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>_name</name></member>
      <member refid="class_z_instrument_1aa45ac3c473539072dbba0c79d1499cc7" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>_program</name></member>
      <member refid="class_z_instrument_1a62fbcd1d0557780fc7c6d4f44303a3e1" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>_refCount</name></member>
      <member refid="class_z_instrument_1ae1548432d18782b8e6095ed7eda818c1" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>_setcc</name></member>
      <member refid="class_z_instrument_1a67329e213c5845a82df82b13e9c246da" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>_zones</name></member>
      <member refid="class_z_instrument_1acf7d6e98f6b414d18493bb51523074a1" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>addRegion</name></member>
      <member refid="class_z_instrument_1a52d8d71043543260bb39a08dabe6c170" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>addZone</name></member>
      <member refid="class_z_instrument_1a333bb2345fe4525e6b6b91db7af0844e" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>buf</name></member>
      <member refid="class_z_instrument_1a00e9dd19bd13d4b7a682bfcd025bbc13" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>getSetCC</name></member>
      <member refid="class_z_instrument_1a5ebde6ef526551565b80e1018c0c57ab" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>idx</name></member>
      <member refid="class_z_instrument_1a1b18d00c0b0ab1ea164d96bd8470cc58" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>instrumentPath</name></member>
      <member refid="class_z_instrument_1a48cad5adcca4f25f9c94270ac364c885" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>load</name></member>
      <member refid="class_z_instrument_1a874046d80ade6b760ac2df00e71494ed" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>loadFromDir</name></member>
      <member refid="class_z_instrument_1a9668dba97818cb18e3743aec08e6e086" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>loadFromFile</name></member>
      <member refid="class_z_instrument_1a1c176697fc5dc645eeca3669d2eccd66" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>loadSfz</name></member>
      <member refid="class_z_instrument_1aa0097743ee7f8f0bbd9eccf9cb5c6f85" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>name</name></member>
      <member refid="class_z_instrument_1ab2c149a7706f01ba2869b8f4b1c16c49" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>path</name></member>
      <member refid="class_z_instrument_1a8b9a007e194ca2718fd25ded6979d1e7" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>program</name></member>
      <member refid="class_z_instrument_1ae920151185e3ee550537180e3a668ce3" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>read</name></member>
      <member refid="class_z_instrument_1a7c4775b44c1d9c28e43f2719da2f75e6" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>readSample</name></member>
      <member refid="class_z_instrument_1a570eb64ee6cf833701108be6abec7584" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>refCount</name></member>
      <member refid="class_z_instrument_1a28f23cae9c734aa7b6aa15f69a2f312d" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>setRefCount</name></member>
      <member refid="class_z_instrument_1ac1eb15472d12c216cd52fc4ceb4c2314" prot="private" virt="non-virtual"><scope>ZInstrument</scope><name>zerberus</name></member>
      <member refid="class_z_instrument_1ae3c01b4b90a147c1e466b75bdd21afb9" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>ZInstrument</name></member>
      <member refid="class_z_instrument_1a26ebdbb7146d29f9ef071da7a8c2ae67" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>zones</name></member>
      <member refid="class_z_instrument_1af4f833c4486f597e4d38abf8e1465dc9" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>zones</name></member>
      <member refid="class_z_instrument_1aa0ddf5c3273c1bc6aa62eaf79d9f0ada" prot="public" virt="non-virtual"><scope>ZInstrument</scope><name>~ZInstrument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
