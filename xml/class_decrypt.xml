<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_decrypt" kind="class" language="C++" prot="public">
    <compoundname>Decrypt</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_decrypt_1a8f2aeaff1b4a0632b400a79bf4b61dc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Decrypt::makeFileKey</definition>
        <argsstring>(int encVersion, int encRevision, int keyLength, GooString *ownerKey, GooString *userKey, GooString *ownerEnc, GooString *userEnc, int permissions, GooString *fileID, GooString *ownerPassword, GooString *userPassword, Guchar *fileKey, GBool encryptMetadata, GBool *ownerPasswordOk)</argsstring>
        <name>makeFileKey</name>
        <param>
          <type>int</type>
          <declname>encVersion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>encRevision</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keyLength</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>ownerKey</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>userKey</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>ownerEnc</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>userEnc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>permissions</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>fileID</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>ownerPassword</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>userPassword</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>fileKey</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>encryptMetadata</declname>
        </param>
        <param>
          <type>GBool *</type>
          <declname>ownerPasswordOk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Decrypt.h" line="52" column="1" bodyfile="thirdparty/poppler/poppler/Decrypt.cc" bodystart="73" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_decrypt_1a8bb121a91e2af4e93ba21ec388ed5390" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Decrypt::makeFileKey2</definition>
        <argsstring>(int encVersion, int encRevision, int keyLength, GooString *ownerKey, GooString *userKey, int permissions, GooString *fileID, GooString *userPassword, Guchar *fileKey, GBool encryptMetadata)</argsstring>
        <name>makeFileKey2</name>
        <param>
          <type>int</type>
          <declname>encVersion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>encRevision</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keyLength</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>ownerKey</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>userKey</declname>
        </param>
        <param>
          <type>int</type>
          <declname>permissions</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>fileID</declname>
        </param>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>userPassword</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>fileKey</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>encryptMetadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Decrypt.h" line="62" column="1" bodyfile="thirdparty/poppler/poppler/Decrypt.cc" bodystart="228" bodyend="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="thirdparty/poppler/poppler/Decrypt.h" line="44" column="1" bodyfile="thirdparty/poppler/poppler/Decrypt.h" bodystart="44" bodyend="67"/>
    <listofallmembers>
      <member refid="class_decrypt_1a8f2aeaff1b4a0632b400a79bf4b61dc3" prot="public" virt="non-virtual"><scope>Decrypt</scope><name>makeFileKey</name></member>
      <member refid="class_decrypt_1a8bb121a91e2af4e93ba21ec388ed5390" prot="private" virt="non-virtual"><scope>Decrypt</scope><name>makeFileKey2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
