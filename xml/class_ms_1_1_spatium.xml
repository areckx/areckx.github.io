<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_spatium" kind="class" language="C++" prot="public">
    <compoundname>Ms::Spatium</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_spatium_1a427bdb4444ee76155ec9fb32c6306daf" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal Ms::Spatium::_val</definition>
        <argsstring></argsstring>
        <name>_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="26" column="1" bodyfile="libmscore/spatium.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_spatium_1ae310cb930f20f7c59f5c214195d2be05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Ms::Spatium::Spatium</definition>
        <argsstring>()</argsstring>
        <name>Spatium</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="29" column="1" bodyfile="libmscore/spatium.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1a97571ce2d78b24ff8a935a3a475e88ae" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::Spatium::Spatium</definition>
        <argsstring>(qreal v)</argsstring>
        <name>Spatium</name>
        <param>
          <type>qreal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="30" column="1" bodyfile="libmscore/spatium.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1ab21fa50b8ec92de51fb08a2365770422" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr qreal</type>
        <definition>constexpr qreal Ms::Spatium::val</definition>
        <argsstring>() const</argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="32" column="1" bodyfile="libmscore/spatium.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1a911472dc5090661357c7e5493e7434e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Spatium::operator&gt;</definition>
        <argsstring>(const Spatium &amp;a) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="34" column="1" bodyfile="libmscore/spatium.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1aada2dc92816ac1129fb477ac80aa1fb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Spatium::operator&lt;</definition>
        <argsstring>(const Spatium &amp;a) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="35" column="1" bodyfile="libmscore/spatium.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1abfe21d15cc6c9b7623a476273148bbad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Spatium::operator==</definition>
        <argsstring>(const Spatium &amp;a) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="36" column="1" bodyfile="libmscore/spatium.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1ad06d2714a2872ceb6deaa1b69c6d5469" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Spatium::operator!=</definition>
        <argsstring>(const Spatium &amp;a) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="37" column="1" bodyfile="libmscore/spatium.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1a0f5062c2de370f4b2c82af49761c8187" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Spatium::isZero</definition>
        <argsstring>() const</argsstring>
        <name>isZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="38" column="1" bodyfile="libmscore/spatium.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1ac709e2bb26c1c1697b66c2e18e2ae844" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
        <definition>Spatium&amp; Ms::Spatium::operator+=</definition>
        <argsstring>(const Spatium &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="40" column="1" bodyfile="libmscore/spatium.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1a58f8f9d523ea2f5b15345951e533bc24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
        <definition>Spatium&amp; Ms::Spatium::operator-=</definition>
        <argsstring>(const Spatium &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="44" column="1" bodyfile="libmscore/spatium.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1aa618544034d2a8d408b3aad37be7c6df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
        <definition>Spatium&amp; Ms::Spatium::operator/=</definition>
        <argsstring>(qreal d)</argsstring>
        <name>operator/=</name>
        <param>
          <type>qreal</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="48" column="1" bodyfile="libmscore/spatium.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1a7d57a81bd0051e3364cdf82164e5c8df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Spatium::operator/</definition>
        <argsstring>(const Spatium &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="52" column="1" bodyfile="libmscore/spatium.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1a182fdadaf628a8658b4c7b4dd1a726c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
        <definition>Spatium&amp; Ms::Spatium::operator*=</definition>
        <argsstring>(int d)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="55" column="1" bodyfile="libmscore/spatium.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1a1a97bd27476c723439bc07702ceef71c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
        <definition>Spatium&amp; Ms::Spatium::operator*=</definition>
        <argsstring>(qreal d)</argsstring>
        <name>operator*=</name>
        <param>
          <type>qreal</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="59" column="1" bodyfile="libmscore/spatium.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1aee2fbd8d4d49dce1097b6e91fe8d5b9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref></type>
        <definition>Spatium Ms::Spatium::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="63" column="1" bodyfile="libmscore/spatium.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_spatium_1ad6ca4e1228ab699f9fef4e18fb14ba70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::Spatium::operator QVariant</definition>
        <argsstring>() const</argsstring>
        <name>operator QVariant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="64" column="1" bodyfile="libmscore/spatium.h" bodystart="64" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_spatium_1a4e3bcd552101129c6de32426beef242a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Ms::Spatium::toDouble</definition>
        <argsstring>(const Spatium &amp;v)</argsstring>
        <name>toDouble</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/spatium.h" line="66" column="1" bodyfile="libmscore/spatium.h" bodystart="66" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libmscore/spatium.h" line="25" column="1" bodyfile="libmscore/spatium.h" bodystart="25" bodyend="67"/>
    <listofallmembers>
      <member refid="class_ms_1_1_spatium_1a427bdb4444ee76155ec9fb32c6306daf" prot="private" virt="non-virtual"><scope>Ms::Spatium</scope><name>_val</name></member>
      <member refid="class_ms_1_1_spatium_1a0f5062c2de370f4b2c82af49761c8187" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>isZero</name></member>
      <member refid="class_ms_1_1_spatium_1ad6ca4e1228ab699f9fef4e18fb14ba70" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator QVariant</name></member>
      <member refid="class_ms_1_1_spatium_1ad06d2714a2872ceb6deaa1b69c6d5469" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator!=</name></member>
      <member refid="class_ms_1_1_spatium_1a182fdadaf628a8658b4c7b4dd1a726c3" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator*=</name></member>
      <member refid="class_ms_1_1_spatium_1a1a97bd27476c723439bc07702ceef71c" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator*=</name></member>
      <member refid="class_ms_1_1_spatium_1ac709e2bb26c1c1697b66c2e18e2ae844" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator+=</name></member>
      <member refid="class_ms_1_1_spatium_1aee2fbd8d4d49dce1097b6e91fe8d5b9b" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator-</name></member>
      <member refid="class_ms_1_1_spatium_1a58f8f9d523ea2f5b15345951e533bc24" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator-=</name></member>
      <member refid="class_ms_1_1_spatium_1a7d57a81bd0051e3364cdf82164e5c8df" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator/</name></member>
      <member refid="class_ms_1_1_spatium_1aa618544034d2a8d408b3aad37be7c6df" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator/=</name></member>
      <member refid="class_ms_1_1_spatium_1aada2dc92816ac1129fb477ac80aa1fb8" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator&lt;</name></member>
      <member refid="class_ms_1_1_spatium_1abfe21d15cc6c9b7623a476273148bbad" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator==</name></member>
      <member refid="class_ms_1_1_spatium_1a911472dc5090661357c7e5493e7434e5" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>operator&gt;</name></member>
      <member refid="class_ms_1_1_spatium_1ae310cb930f20f7c59f5c214195d2be05" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>Spatium</name></member>
      <member refid="class_ms_1_1_spatium_1a97571ce2d78b24ff8a935a3a475e88ae" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>Spatium</name></member>
      <member refid="class_ms_1_1_spatium_1a4e3bcd552101129c6de32426beef242a" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>toDouble</name></member>
      <member refid="class_ms_1_1_spatium_1ab21fa50b8ec92de51fb08a2365770422" prot="public" virt="non-virtual"><scope>Ms::Spatium</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
