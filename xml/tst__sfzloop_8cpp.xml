<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__sfzloop_8cpp" kind="file" language="C++">
    <compoundname>tst_sfzloop.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="zerberus_2instrument_8h" local="yes">zerberus/instrument.h</includes>
    <includes refid="zerberus_8h" local="yes">zerberus/zerberus.h</includes>
    <includes refid="zone_8h" local="yes">zerberus/zone.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <includes refid="synthesizer_2event_8h" local="yes">synthesizer/event.h</includes>
    <includes local="no">sndfile.h</includes>
    <includes local="yes">tst_sfzloop.moc</includes>
    <incdepgraph>
      <node id="75089">
        <label>list</label>
      </node>
      <node id="75105">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="75106" relation="include">
        </childnode>
        <childnode refid="75109" relation="include">
        </childnode>
      </node>
      <node id="75093">
        <label>atomic</label>
      </node>
      <node id="75101">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="75102" relation="include">
        </childnode>
        <childnode refid="75103" relation="include">
        </childnode>
        <childnode refid="75105" relation="include">
        </childnode>
      </node>
      <node id="75100">
        <label>zerberus/zone.h</label>
        <link refid="zone_8h_source"/>
      </node>
      <node id="75087">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="75103">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="75104" relation="include">
        </childnode>
        <childnode refid="75102" relation="include">
        </childnode>
      </node>
      <node id="75079">
        <label>mtest/zerberus/loop/tst_sfzloop.cpp</label>
        <link refid="tst__sfzloop_8cpp"/>
        <childnode refid="75080" relation="include">
        </childnode>
        <childnode refid="75081" relation="include">
        </childnode>
        <childnode refid="75088" relation="include">
        </childnode>
        <childnode refid="75091" relation="include">
        </childnode>
        <childnode refid="75100" relation="include">
        </childnode>
        <childnode refid="75101" relation="include">
        </childnode>
        <childnode refid="75096" relation="include">
        </childnode>
        <childnode refid="75111" relation="include">
        </childnode>
        <childnode refid="75112" relation="include">
        </childnode>
      </node>
      <node id="75099">
        <label>cstdint</label>
      </node>
      <node id="75097">
        <label>map</label>
      </node>
      <node id="75104">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="75111">
        <label>sndfile.h</label>
      </node>
      <node id="75107">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="75084" relation="include">
        </childnode>
      </node>
      <node id="75106">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="75107" relation="include">
        </childnode>
        <childnode refid="75108" relation="include">
        </childnode>
      </node>
      <node id="75081">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="75082" relation="include">
        </childnode>
      </node>
      <node id="75083">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="75084">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="75085" relation="include">
        </childnode>
      </node>
      <node id="75090">
        <label>QString</label>
      </node>
      <node id="75112">
        <label>tst_sfzloop.moc</label>
      </node>
      <node id="75102">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="75109">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="75110" relation="include">
        </childnode>
        <childnode refid="75096" relation="include">
        </childnode>
      </node>
      <node id="75092">
        <label>math.h</label>
      </node>
      <node id="75088">
        <label>zerberus/instrument.h</label>
        <link refid="zerberus_2instrument_8h_source"/>
        <childnode refid="75089" relation="include">
        </childnode>
        <childnode refid="75090" relation="include">
        </childnode>
      </node>
      <node id="75082">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="75083" relation="include">
        </childnode>
        <childnode refid="75084" relation="include">
        </childnode>
        <childnode refid="75086" relation="include">
        </childnode>
        <childnode refid="75087" relation="include">
        </childnode>
      </node>
      <node id="75095">
        <label>libmscore/synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="75089" relation="include">
        </childnode>
      </node>
      <node id="75091">
        <label>zerberus/zerberus.h</label>
        <link refid="zerberus_8h_source"/>
        <childnode refid="75092" relation="include">
        </childnode>
        <childnode refid="75093" relation="include">
        </childnode>
        <childnode refid="75089" relation="include">
        </childnode>
        <childnode refid="75094" relation="include">
        </childnode>
        <childnode refid="75096" relation="include">
        </childnode>
        <childnode refid="75098" relation="include">
        </childnode>
      </node>
      <node id="75094">
        <label>synthesizer/synthesizer.h</label>
        <link refid="synthesizer_8h_source"/>
        <childnode refid="75095" relation="include">
        </childnode>
      </node>
      <node id="75098">
        <label>voice.h</label>
        <link refid="zerberus_2voice_8h_source"/>
        <childnode refid="75099" relation="include">
        </childnode>
        <childnode refid="75092" relation="include">
        </childnode>
      </node>
      <node id="75108">
        <label>set</label>
      </node>
      <node id="75085">
        <label>config.h</label>
      </node>
      <node id="75096">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="75097" relation="include">
        </childnode>
      </node>
      <node id="75110">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="75084" relation="include">
        </childnode>
      </node>
      <node id="75086">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="75080">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_sfz_loop" prot="public">TestSfzLoop</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zerberus/instrument.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zerberus/zerberus.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zerberus/zone.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;synthesizer/event.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sndfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestSfzEnvelopes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_test_sfz_loop" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_sfz_loop" kindref="compound">TestSfzLoop</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>samplerate<sp/>=<sp/>44100;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_zerberus" kindref="compound">Zerberus</ref>*<sp/>synth;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testEnvelopesParsing();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testLoopAudio();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_test_sfz_loop" kindref="compound">TestSfzLoop</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestSfzLoop::initTestCase()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_zerberus" kindref="compound">Zerberus</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;init(samplerate);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Ms::preferences.mySoundfontsPath<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>+<sp/>root;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;loadInstrument(</highlight><highlight class="stringliteral">&quot;loopTest.sfz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>testglobal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestSfzLoop::testEnvelopesParsing()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(synth-&gt;instrument(0)-&gt;zones().size(),<sp/>(size_t)<sp/>4);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::list&lt;Zone<sp/>*&gt;::iterator<sp/>curZone<sp/>=<sp/>synth-&gt;instrument(0)-&gt;zones().begin();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyLo,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>20);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyHi,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>20);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyBase,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>20);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;loopMode,<sp/>LoopMode::NO_LOOP);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curZone++;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyLo,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>21);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyHi,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>21);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyBase,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>21);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;loopMode,<sp/>LoopMode::ONE_SHOT);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curZone++;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyLo,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>22);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyHi,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>22);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyBase,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>22);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;loopMode,<sp/>LoopMode::CONTINUOUS);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curZone++;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyLo,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>23);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyHi,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>23);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;keyBase,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>23);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE((*curZone)-&gt;loopMode,<sp/>LoopMode::SUSTAIN);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curZone++;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestSfzLoop::testLoopAudio()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_PROGRAM,<sp/>0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>data[2<sp/>*<sp/>110<sp/>*<sp/>3];<sp/></highlight><highlight class="comment">//<sp/>2<sp/>Channel<sp/>110<sp/>Sample<sp/>duration<sp/>-<sp/>enough<sp/>space<sp/>for<sp/>at<sp/>least<sp/>one<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>no_loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>20,<sp/>127));<sp/></highlight><highlight class="comment">//<sp/>play<sp/>note<sp/>-<sp/>no_loop<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(50,<sp/>data,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>-<sp/>stop<sp/>in<sp/>middle<sp/>of<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>20,<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>send<sp/>note<sp/>off<sp/>and<sp/>check<sp/>whether<sp/>voice<sp/>is<sp/>actually<sp/>turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(50<sp/>,<sp/>data<sp/>+<sp/>(50*2),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>until<sp/>end<sp/>of<sp/>sustain<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[0],<sp/>0.0f);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[1],<sp/>0.0f);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[10<sp/>*<sp/>2]<sp/>!=<sp/>0.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[10<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>!=<sp/>0.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[50<sp/>*<sp/>2],<sp/>0.0f);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[50<sp/>*<sp/>2<sp/>+<sp/>1],<sp/>0.0f);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));<sp/></highlight><highlight class="comment">//<sp/>clear<sp/>data<sp/>because<sp/>each<sp/>voice<sp/>gets<sp/>added<sp/>to<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>one_shot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>21,<sp/>127));<sp/></highlight><highlight class="comment">//<sp/>play<sp/>note<sp/>-<sp/>one_shot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(50,<sp/>data,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>-<sp/>stop<sp/>in<sp/>middle<sp/>of<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>21,<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>send<sp/>note<sp/>off<sp/>-<sp/>sample<sp/>should<sp/>still<sp/>play<sp/>to<sp/>end!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(60<sp/>,<sp/>data<sp/>+<sp/>(50*2),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>until<sp/>end<sp/>of<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[0],<sp/>0.0f);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[1],<sp/>0.0f);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[10<sp/>*<sp/>2]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[10<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[50<sp/>*<sp/>2]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[50<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[60<sp/>*<sp/>2]<sp/>&lt;<sp/>pow(10,<sp/>-30.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>not<sp/>zero<sp/>due<sp/>to<sp/>the<sp/>filter<sp/>-<sp/>assume<sp/>at<sp/>least<sp/>-30dB<sp/>right<sp/>after<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[60<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&lt;<sp/>pow(10,<sp/>-30.0f/20.0f));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[70<sp/>*<sp/>2]<sp/>&lt;<sp/>pow(10,<sp/>-85.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>and<sp/>-85dB<sp/>10<sp/>samples<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[70<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&lt;<sp/>pow(10,<sp/>-85.0f/20.0f));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));<sp/></highlight><highlight class="comment">//<sp/>clear<sp/>data<sp/>because<sp/>each<sp/>voice<sp/>gets<sp/>added<sp/>to<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>loop_continuous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>22,<sp/>127));<sp/></highlight><highlight class="comment">//<sp/>play<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(109,<sp/>data,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>-<sp/>it<sp/>should<sp/>loop<sp/>(loop<sp/>from<sp/>10<sp/>to<sp/>59)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>22,<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>send<sp/>note<sp/>off<sp/>-<sp/>sample<sp/>should<sp/>not<sp/>switch<sp/>to<sp/>the<sp/>zero<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(60<sp/>,<sp/>data<sp/>+<sp/>(109*2),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>until<sp/>end<sp/>of<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[0],<sp/>0.0f);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[1],<sp/>0.0f);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[10<sp/>*<sp/>2]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[10<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[50<sp/>*<sp/>2]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[50<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[60<sp/>*<sp/>2]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>not<sp/>stop<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>loud<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[60<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[70<sp/>*<sp/>2]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>not<sp/>stop<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>loud<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[70<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[110<sp/>*<sp/>2]<sp/>&gt;<sp/>pow(10,<sp/>-20.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>not<sp/>stop<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>loud<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[110<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&gt;<sp/>pow(10,<sp/>-20.0f/20.0f));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[120<sp/>*<sp/>2]<sp/>&gt;<sp/>pow(10,<sp/>-35.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>not<sp/>stop<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>loud<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[120<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&gt;<sp/>pow(10,<sp/>-35.0f/20.0f));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));<sp/></highlight><highlight class="comment">//<sp/>clear<sp/>data<sp/>because<sp/>each<sp/>voice<sp/>gets<sp/>added<sp/>to<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>loop_sustain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>23,<sp/>127));<sp/></highlight><highlight class="comment">//<sp/>play<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(109,<sp/>data,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>-<sp/>it<sp/>should<sp/>loop<sp/>(loop<sp/>from<sp/>10<sp/>to<sp/>59)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;play(<ref refid="class_ms_1_1_play_event" kindref="compound">Ms::PlayEvent</ref>(ME_NOTEON,<sp/>0,<sp/>23,<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>send<sp/>note<sp/>off<sp/>-<sp/>sample<sp/>should<sp/>not<sp/>switch<sp/>to<sp/>the<sp/>zero<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>synth-&gt;process(60<sp/>,<sp/>data<sp/>+<sp/>(109*2),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>until<sp/>end<sp/>of<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[0],<sp/>0.0f);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(data[1],<sp/>0.0f);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[10<sp/>*<sp/>2]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[10<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[50<sp/>*<sp/>2]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[50<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[60<sp/>*<sp/>2]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>not<sp/>stop<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>loud<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[60<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[70<sp/>*<sp/>2]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>not<sp/>stop<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>loud<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[70<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&gt;<sp/>pow(10,<sp/>-15.0f/20.0f));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[110<sp/>*<sp/>2]<sp/>&lt;<sp/>pow(10,<sp/>-30.0f/20.0f));<sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>play<sp/>zeros<sp/>after<sp/>leaving<sp/>sustain<sp/>-&gt;<sp/>drastic<sp/>volume<sp/>reduce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[110<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&lt;<sp/>pow(10,<sp/>-30.0f/20.0f));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[120<sp/>*<sp/>2]<sp/>&lt;<sp/>pow(10,<sp/>-85.0f/20.0f));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(data[120<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>&lt;<sp/>pow(10,<sp/>-85.0f/20.0f));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">TestSfzLoop::~TestSfzLoop()</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>synth;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_sfz_loop" kindref="compound">TestSfzLoop</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_sfzloop.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/zerberus/loop/tst_sfzloop.cpp"/>
  </compounddef>
</doxygen>
