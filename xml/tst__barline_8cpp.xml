<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__barline_8cpp" kind="file" language="C++">
    <compoundname>tst_barline.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="barline_8h" local="yes">libmscore/barline.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="system_8h" local="yes">libmscore/system.h</includes>
    <includes refid="undo_8h" local="yes">libmscore/undo.h</includes>
    <includes refid="bracket_8h" local="yes">libmscore/bracket.h</includes>
    <includes local="yes">tst_barline.moc</includes>
    <incdepgraph>
      <node id="72002">
        <label>list</label>
      </node>
      <node id="71996">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="71980" relation="include">
        </childnode>
      </node>
      <node id="71998">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="72037">
        <label>functional</label>
      </node>
      <node id="72023">
        <label>pitchvalue.h</label>
        <link refid="pitchvalue_8h_source"/>
      </node>
      <node id="72038">
        <label>duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="71976" relation="include">
        </childnode>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71990" relation="include">
        </childnode>
      </node>
      <node id="71986">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="71987" relation="include">
        </childnode>
      </node>
      <node id="71983">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="71984" relation="include">
        </childnode>
        <childnode refid="71975" relation="include">
        </childnode>
        <childnode refid="71986" relation="include">
        </childnode>
      </node>
      <node id="71978">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="72003">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="72030">
        <label>pitch.h</label>
        <link refid="pitch_8h_source"/>
      </node>
      <node id="71987">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71978" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
      </node>
      <node id="72032">
        <label>keylist.h</label>
        <link refid="keylist_8h_source"/>
        <childnode refid="71998" relation="include">
        </childnode>
      </node>
      <node id="72010">
        <label>libmscore/system.h</label>
        <link refid="system_8h"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71974" relation="include">
        </childnode>
        <childnode refid="71992" relation="include">
        </childnode>
      </node>
      <node id="71982">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="72026">
        <label>dynamic.h</label>
        <link refid="dynamic_8h_source"/>
        <childnode refid="72027" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
      </node>
      <node id="71970">
        <label>mtest/libmscore/barline/tst_barline.cpp</label>
        <link refid="tst__barline_8cpp"/>
        <childnode refid="71971" relation="include">
        </childnode>
        <childnode refid="71972" relation="include">
        </childnode>
        <childnode refid="71979" relation="include">
        </childnode>
        <childnode refid="71983" relation="include">
        </childnode>
        <childnode refid="71988" relation="include">
        </childnode>
        <childnode refid="72010" relation="include">
        </childnode>
        <childnode refid="72011" relation="include">
        </childnode>
        <childnode refid="72039" relation="include">
        </childnode>
        <childnode refid="72041" relation="include">
        </childnode>
      </node>
      <node id="71993">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71994" relation="include">
        </childnode>
      </node>
      <node id="72014">
        <label>instrument.h</label>
        <link refid="libmscore_2instrument_8h_source"/>
        <childnode refid="72015" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="72019" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="72021" relation="include">
        </childnode>
      </node>
      <node id="72020">
        <label>map</label>
      </node>
      <node id="72021">
        <label>clef.h</label>
        <link refid="clef_8h"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
      </node>
      <node id="71990">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="71975" relation="include">
        </childnode>
        <childnode refid="71991" relation="include">
        </childnode>
      </node>
      <node id="72015">
        <label>stringdata.h</label>
        <link refid="stringdata_8h_source"/>
        <childnode refid="72016" relation="include">
        </childnode>
      </node>
      <node id="72013">
        <label>tempo.h</label>
        <link refid="tempo_8h_source"/>
      </node>
      <node id="72039">
        <label>libmscore/bracket.h</label>
        <link refid="bracket_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="72040" relation="include">
        </childnode>
      </node>
      <node id="72028">
        <label>staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="72029" relation="include">
        </childnode>
        <childnode refid="72030" relation="include">
        </childnode>
        <childnode refid="72031" relation="include">
        </childnode>
        <childnode refid="72032" relation="include">
        </childnode>
        <childnode refid="72033" relation="include">
        </childnode>
        <childnode refid="72025" relation="include">
        </childnode>
        <childnode refid="71977" relation="include">
        </childnode>
      </node>
      <node id="72011">
        <label>libmscore/undo.h</label>
        <link refid="undo_8h"/>
        <childnode refid="71974" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="72012" relation="include">
        </childnode>
        <childnode refid="72013" relation="include">
        </childnode>
        <childnode refid="71989" relation="include">
        </childnode>
        <childnode refid="71981" relation="include">
        </childnode>
        <childnode refid="71998" relation="include">
        </childnode>
        <childnode refid="72000" relation="include">
        </childnode>
        <childnode refid="72014" relation="include">
        </childnode>
        <childnode refid="72022" relation="include">
        </childnode>
        <childnode refid="72023" relation="include">
        </childnode>
        <childnode refid="72024" relation="include">
        </childnode>
        <childnode refid="71995" relation="include">
        </childnode>
        <childnode refid="72001" relation="include">
        </childnode>
        <childnode refid="72026" relation="include">
        </childnode>
        <childnode refid="72028" relation="include">
        </childnode>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72031" relation="include">
        </childnode>
        <childnode refid="71991" relation="include">
        </childnode>
        <childnode refid="72034" relation="include">
        </childnode>
        <childnode refid="72035" relation="include">
        </childnode>
      </node>
      <node id="72024">
        <label>timesig.h</label>
        <link refid="timesig_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="72012" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="72025" relation="include">
        </childnode>
      </node>
      <node id="72004">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="72005" relation="include">
        </childnode>
      </node>
      <node id="72005">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="72006" relation="include">
        </childnode>
        <childnode refid="72007" relation="include">
        </childnode>
        <childnode refid="72008" relation="include">
        </childnode>
      </node>
      <node id="72033">
        <label>stafftypelist.h</label>
        <link refid="stafftypelist_8h_source"/>
        <childnode refid="72017" relation="include">
        </childnode>
      </node>
      <node id="71984">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71985" relation="include">
        </childnode>
      </node>
      <node id="71997">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="71992" relation="include">
        </childnode>
      </node>
      <node id="71972">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
      </node>
      <node id="72006">
        <label>vector</label>
      </node>
      <node id="71994">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="72016">
        <label>xml.h</label>
        <link refid="xml_8h_source"/>
        <childnode refid="72017" relation="include">
        </childnode>
        <childnode refid="72018" relation="include">
        </childnode>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="72000" relation="include">
        </childnode>
      </node>
      <node id="71974">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="72009">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="71975">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="71976" relation="include">
        </childnode>
      </node>
      <node id="71992">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="71993" relation="include">
        </childnode>
      </node>
      <node id="71981">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="71982" relation="include">
        </childnode>
      </node>
      <node id="72027">
        <label>text.h</label>
        <link refid="text_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71994" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
      </node>
      <node id="72034">
        <label>drumset.h</label>
        <link refid="drumset_8h_source"/>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="71991" relation="include">
        </childnode>
      </node>
      <node id="71999">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71990" relation="include">
        </childnode>
      </node>
      <node id="72018">
        <label>interval.h</label>
        <link refid="interval_8h_source"/>
      </node>
      <node id="71985">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
      </node>
      <node id="71973">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="71974" relation="include">
        </childnode>
        <childnode refid="71975" relation="include">
        </childnode>
        <childnode refid="71977" relation="include">
        </childnode>
        <childnode refid="71978" relation="include">
        </childnode>
      </node>
      <node id="72001">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="72002" relation="include">
        </childnode>
      </node>
      <node id="72008">
        <label>iostream</label>
      </node>
      <node id="72029">
        <label>velo.h</label>
        <link refid="velo_8h"/>
      </node>
      <node id="71980">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="71976" relation="include">
        </childnode>
        <childnode refid="71981" relation="include">
        </childnode>
      </node>
      <node id="72025">
        <label>groups.h</label>
        <link refid="groups_8h_source"/>
        <childnode refid="71975" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="71990" relation="include">
        </childnode>
        <childnode refid="71999" relation="include">
        </childnode>
      </node>
      <node id="71989">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="71990" relation="include">
        </childnode>
        <childnode refid="71999" relation="include">
        </childnode>
      </node>
      <node id="71995">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="71979">
        <label>libmscore/barline.h</label>
        <link refid="barline_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
      </node>
      <node id="72017">
        <label>stafftype.h</label>
        <link refid="stafftype_8h_source"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71974" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="71990" relation="include">
        </childnode>
      </node>
      <node id="72041">
        <label>tst_barline.moc</label>
      </node>
      <node id="72036">
        <label>chordrest.h</label>
        <link refid="chordrest_8h_source"/>
        <childnode refid="72037" relation="include">
        </childnode>
        <childnode refid="71992" relation="include">
        </childnode>
        <childnode refid="72038" relation="include">
        </childnode>
        <childnode refid="71999" relation="include">
        </childnode>
        <childnode refid="71978" relation="include">
        </childnode>
      </node>
      <node id="71976">
        <label>config.h</label>
      </node>
      <node id="72040">
        <label>bracketItem.h</label>
        <link refid="bracket_item_8h_source"/>
        <childnode refid="71977" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
      </node>
      <node id="72007">
        <label>algorithm</label>
      </node>
      <node id="71988">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="71976" relation="include">
        </childnode>
        <childnode refid="71989" relation="include">
        </childnode>
        <childnode refid="72000" relation="include">
        </childnode>
        <childnode refid="72001" relation="include">
        </childnode>
        <childnode refid="72003" relation="include">
        </childnode>
        <childnode refid="72004" relation="include">
        </childnode>
        <childnode refid="71985" relation="include">
        </childnode>
        <childnode refid="72009" relation="include">
        </childnode>
      </node>
      <node id="72019">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="72020" relation="include">
        </childnode>
      </node>
      <node id="72012">
        <label>sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="71975" relation="include">
        </childnode>
      </node>
      <node id="71977">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="72031">
        <label>cleflist.h</label>
        <link refid="cleflist_8h_source"/>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="72021" relation="include">
        </childnode>
      </node>
      <node id="72022">
        <label>synthesizer/midipatch.h</label>
        <link refid="midipatch_8h_source"/>
      </node>
      <node id="72000">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="71996" relation="include">
        </childnode>
        <childnode refid="71980" relation="include">
        </childnode>
        <childnode refid="71990" relation="include">
        </childnode>
      </node>
      <node id="72035">
        <label>rest.h</label>
        <link refid="rest_8h_source"/>
        <childnode refid="72036" relation="include">
        </childnode>
      </node>
      <node id="71991">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="71973" relation="include">
        </childnode>
        <childnode refid="71992" relation="include">
        </childnode>
        <childnode refid="71995" relation="include">
        </childnode>
        <childnode refid="71996" relation="include">
        </childnode>
        <childnode refid="71978" relation="include">
        </childnode>
        <childnode refid="71997" relation="include">
        </childnode>
        <childnode refid="71998" relation="include">
        </childnode>
      </node>
      <node id="71971">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_barline" prot="public">TestBarline</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__barline_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;libmscore/barline/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="22" column="9" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="tst__barline_8cpp_1afeeba7421d60057822ecb4e7703c4752" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BRACKET0_HEIGHT_MIN</definition>
        <argsstring></argsstring>
        <name>BRACKET0_HEIGHT_MIN</name>
        <initializer>= 27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>barline01 Check bar line and brackets presence and length with hidden empty staves: </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="69" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tst__barline_8cpp_1aad3694803b1d3445daf45197cc465607" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BRACKET0_HEIGHT_MAX</definition>
        <argsstring></argsstring>
        <name>BRACKET0_HEIGHT_MAX</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="70" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tst__barline_8cpp_1a6eabdea581699cf9a5fb28bee8f48dc2" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BRACKET_HEIGHT_MIN</definition>
        <argsstring></argsstring>
        <name>BRACKET_HEIGHT_MIN</name>
        <initializer>= 17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="72" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tst__barline_8cpp_1a5fcd38084479f57cceee3cc1acb11002" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BRACKET_HEIGHT_MAX</definition>
        <argsstring></argsstring>
        <name>BRACKET_HEIGHT_MAX</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="73" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tst__barline_8cpp_1a78e3007c1a92ed8007ede1103e26cb57" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BARLINE0_HEIGHT_MIN</definition>
        <argsstring></argsstring>
        <name>BARLINE0_HEIGHT_MIN</name>
        <initializer>= 24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="75" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tst__barline_8cpp_1a77f299ac525e420f2a59d3c5ac024c54" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BARLINE0_HEIGHT_MAX</definition>
        <argsstring></argsstring>
        <name>BARLINE0_HEIGHT_MAX</name>
        <initializer>= 26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="76" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tst__barline_8cpp_1a2e2887ddb0cfcdc8a2ecea676c7cb508" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BARLINE_HEIGHT_MIN</definition>
        <argsstring></argsstring>
        <name>BARLINE_HEIGHT_MIN</name>
        <initializer>= 14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="78" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tst__barline_8cpp_1a0dd41138231f596272333e632f928422" prot="public" static="yes" mutable="no">
        <type>const qreal</type>
        <definition>const qreal BARLINE_HEIGHT_MAX</definition>
        <argsstring></argsstring>
        <name>BARLINE_HEIGHT_MAX</name>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="79" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tst__barline_8cpp_1ab8594437b0fb5f09e89fe7b136fbb5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dropNormalBarline</definition>
        <argsstring>(Element *e)</argsstring>
        <name>dropNormalBarline</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dropNormalBarline helper for barline179726() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="361" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="361" bodyend="372"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/barline.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="system_8h" kindref="compound">libmscore/system.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="undo_8h" kindref="compound">libmscore/undo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/bracket.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;libmscore/barline/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestBarline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_test_barline" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_barline" kindref="compound">TestBarline</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barline01();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barline02();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barline03();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barline04();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barline05();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barline06();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barline179726();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::initTestCase()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>A<sp/>score<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>staves,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bracket<sp/>across<sp/>all<sp/>3<sp/>staves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bar<sp/>lines<sp/>across<sp/>all<sp/>3<sp/>staves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systems<sp/>with<sp/>each<sp/>staff<sp/>hidden<sp/>in<sp/>turn<sp/>because<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>is<sp/>loaded,<sp/>laid<sp/>out<sp/>and<sp/>bracket/bar<sp/>line<sp/>sizes<sp/>are<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>REFERENCE<sp/>SCORE<sp/>IS<sp/>USED:<sp/>the<sp/>test<sp/>has<sp/>to<sp/>do<sp/>with<sp/>layout/formatting,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>not<sp/>with<sp/>edit<sp/>or<sp/>read/save<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>actual<sp/>3-staff<sp/>bracket<sp/>should<sp/>be<sp/>high<sp/>28.6<sp/>SP<sp/>ca.:<sp/>allow<sp/>for<sp/>some<sp/>layout<sp/>margin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BRACKET0_HEIGHT_MIN<sp/><sp/><sp/><sp/><sp/>=<sp/>27;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BRACKET0_HEIGHT_MAX<sp/><sp/><sp/><sp/><sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>actual<sp/>2-staff<sp/>bracket<sp/>should<sp/>be<sp/>high<sp/>18.1<sp/>SP<sp/>ca.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BRACKET_HEIGHT_MIN<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BRACKET_HEIGHT_MAX<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>actual<sp/>3-staff<sp/>bar<sp/>line<sp/>should<sp/>be<sp/>high<sp/>25<sp/>SP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BARLINE0_HEIGHT_MIN<sp/><sp/><sp/><sp/><sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BARLINE0_HEIGHT_MAX<sp/><sp/><sp/><sp/><sp/>=<sp/>26;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>actual<sp/>2-staff<sp/>bar<sp/>line<sp/>should<sp/>be<sp/>high<sp/>14.5<sp/>SP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BARLINE_HEIGHT_MIN<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/><sp/><sp/><sp/><sp/><sp/>BARLINE_HEIGHT_MAX<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::barline01()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[256];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;barline01.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>height,<sp/>heightMin,<sp/>heightMax;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>spatium<sp/>=<sp/>score-&gt;spatium();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sysNo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_system" kindref="compound">System</ref>*<sp/>sys<sp/>:<sp/>score-&gt;systems())<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>number<sp/>of<sp/>the<sp/>brackets<sp/>of<sp/>each<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>number<sp/>of<sp/>brackets<sp/>in<sp/>system<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>sysNo+1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(sys-&gt;brackets().count()<sp/>==<sp/>1,<sp/>msg);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>height<sp/>of<sp/>the<sp/>bracket<sp/>of<sp/>each<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(bracket<sp/>height<sp/>is<sp/>different<sp/>between<sp/>first<sp/>system<sp/>(3<sp/>staves)<sp/>and<sp/>other<sp/>systems<sp/>(2<sp/>staves)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bracket" kindref="compound">Bracket</ref>*<sp/>bracket<sp/>=<sp/>sys-&gt;brackets().at(0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bracket-&gt;bbox().height()<sp/>/<sp/>spatium;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heightMin<sp/><sp/><sp/>=<sp/>(sysNo<sp/>==<sp/>0)<sp/>?<sp/>BRACKET0_HEIGHT_MIN<sp/>:<sp/>BRACKET_HEIGHT_MIN;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heightMax<sp/><sp/><sp/>=<sp/>(sysNo<sp/>==<sp/>0)<sp/>?<sp/>BRACKET0_HEIGHT_MAX<sp/>:<sp/>BRACKET_HEIGHT_MAX;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>bracket<sp/>height<sp/>in<sp/>system<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>sysNo+1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(height<sp/>&gt;<sp/>heightMin<sp/>&amp;&amp;<sp/>height<sp/>&lt;<sp/>heightMax,<sp/>msg);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>presence<sp/>and<sp/>height<sp/>of<sp/>the<sp/>bar<sp/>line<sp/>of<sp/>each<sp/>measure<sp/>of<sp/>each<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(2<sp/>measure<sp/>for<sp/>each<sp/>system)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heightMin<sp/>=<sp/>(sysNo<sp/>==<sp/>0)<sp/>?<sp/>BARLINE0_HEIGHT_MIN<sp/>:<sp/>BARLINE_HEIGHT_MIN;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heightMax<sp/>=<sp/>(sysNo<sp/>==<sp/>0)<sp/>?<sp/>BARLINE0_HEIGHT_MAX<sp/>:<sp/>BARLINE_HEIGHT_MAX;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msrNo=0;<sp/>msrNo<sp/>&lt;<sp/>2;<sp/>++msrNo)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*<sp/>bar<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>msr<sp/>=<sp/>toMeasure(sys-&gt;measure(msrNo));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>seg<sp/>=<sp/>msr-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::EndBarLine,<sp/>msr-&gt;tick()+msr-&gt;ticks());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SegEndBarLine<sp/>in<sp/>measure<sp/>%d<sp/>of<sp/>system<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>msrNo+1,<sp/>sysNo+1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bar<sp/>=<sp/>toBarLine(seg-&gt;element(0));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>barline<sp/>in<sp/>measure<sp/>%d<sp/>of<sp/>system<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>msrNo+1,<sp/>sysNo+1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/>//<sp/>not<sp/>valid<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bar-&gt;bbox().height()<sp/>/<sp/>spatium;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>barline<sp/>height<sp/>%f<sp/>%f<sp/>%f<sp/>in<sp/>measure<sp/>%d<sp/>of<sp/>system<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heightMin,<sp/>height,<sp/>heightMax,<sp/>msrNo+1,<sp/>sysNo+1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(height<sp/>&gt;<sp/>heightMin<sp/>&amp;&amp;<sp/>height<sp/>&lt;<sp/>heightMax,<sp/>msg);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sysNo++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>&quot;barline01.mscx&quot;,<sp/>DIR<sp/>+<sp/>&quot;barline01-ref.mscx&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>REFERENCE<sp/>SCORE<sp/>IS<sp/>USED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::barline02()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[256];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;barline02.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>msr<sp/>=<sp/>score-&gt;firstMeasure()-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_time_sig" kindref="compound">TimeSig</ref>*<sp/>ts<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_time_sig" kindref="compound">TimeSig</ref>(score);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ts-&gt;setSig(<ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(3,<sp/>4),<sp/>TimeSigType::NORMAL);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdAddTimeSig(msr,<sp/>0,<sp/>ts,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msr<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msrNo<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((msr<sp/>=<sp/>msr-&gt;nextMeasure()))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++msrNo;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>seg<sp/>=<sp/>msr-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::EndBarLine,<sp/>msr-&gt;tick()+msr-&gt;ticks());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SegEndBarLine<sp/>in<sp/>measure<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>msrNo);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*<sp/>bar<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(seg-&gt;element(0));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>barline<sp/>in<sp/>measure<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>msrNo);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bar<sp/>line<sp/>should<sp/>be<sp/>generated<sp/>if<sp/>NORMAL,<sp/>except<sp/>the<sp/>END<sp/>one<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;Barline<sp/>in<sp/>measure<sp/>%d<sp/>changed<sp/>into<sp/>&apos;non-generated&apos;.&quot;</highlight><highlight class="normal">,<sp/>msrNo);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ws:<sp/>end<sp/>barline<sp/>is<sp/>also<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>test<sp/>=<sp/>(bar-&gt;barLineType()<sp/>==<sp/>BarLineType::NORMAL)<sp/>?<sp/>bar-&gt;generated()<sp/>:<sp/>!bar-&gt;generated();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test<sp/>=<sp/>bar-&gt;generated();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(test,<sp/>msg);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>&quot;barline02.mscx&quot;,<sp/>DIR<sp/>+<sp/>&quot;barline02-ref.mscx&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>REFERENCE<sp/>SCORE<sp/>IS<sp/>USED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::barline03()</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;barline03.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;undo(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_change_property" kindref="compound">ChangeProperty</ref>(score-&gt;staff(0),<sp/>P_ID::STAFF_BARLINE_SPAN,<sp/>1));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;undo(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_change_property" kindref="compound">ChangeProperty</ref>(score-&gt;staff(0),<sp/>P_ID::STAFF_BARLINE_SPAN_FROM,<sp/>2));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;undo(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_change_property" kindref="compound">ChangeProperty</ref>(score-&gt;staff(0),<sp/>P_ID::STAFF_BARLINE_SPAN_TO,<sp/>-2));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;go&apos;<sp/>to<sp/>5th<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>msr<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msr<sp/>=<sp/>msr-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>span<sp/>data<sp/>of<sp/>measure-initial<sp/>start-repeat<sp/>bar<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>seg<sp/>=<sp/>msr-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::StartRepeatBarLine,<sp/>msr-&gt;tick());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SegStartRepeatBarLine<sp/>segment<sp/>in<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*<sp/>bar<sp/>=<sp/>toBarLine(seg-&gt;element(0));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>start-repeat<sp/>barline<sp/>in<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;spanStaff()<sp/>&amp;&amp;<sp/>bar-&gt;spanFrom()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>bar-&gt;spanTo()<sp/>==<sp/>-2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Wrong<sp/>span<sp/>data<sp/>in<sp/>start-repeat<sp/>barline<sp/>of<sp/>measure<sp/>5.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>start-repeat<sp/>bar<sp/>ine<sp/>in<sp/>second<sp/>staff<sp/>is<sp/>gone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//TODO:<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg-&gt;element(1)<sp/>==<sp/>nullptr,<sp/>&quot;Extra<sp/>start-repeat<sp/>barline<sp/>in<sp/>2nd<sp/>staff<sp/>of<sp/>measure<sp/>5.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>&quot;barline03.mscx&quot;,<sp/>DIR<sp/>+<sp/>&quot;barline03-ref.mscx&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="218"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>REFERENCE<sp/>SCORE<sp/>IS<sp/>USED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::barline04()</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;barline04.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;go&apos;<sp/>to<sp/>5th<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>msr<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msr<sp/>=<sp/>msr-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>span<sp/>data<sp/>of<sp/>measure-initial<sp/>start-repeat<sp/>bar<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>seg<sp/>=<sp/>msr-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::StartRepeatBarLine,<sp/>msr-&gt;tick());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SegStartRepeatBarLine<sp/>segment<sp/>in<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*<sp/>bar<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(seg-&gt;element(0));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>start-repeat<sp/>barline<sp/>in<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bar-&gt;undoChangeProperty(P_ID::BARLINE_SPAN,<sp/>2);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bar-&gt;undoChangeProperty(P_ID::BARLINE_SPAN_FROM,<sp/>2);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bar-&gt;undoChangeProperty(P_ID::BARLINE_SPAN_TO,<sp/>6);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;spanStaff()<sp/>&amp;&amp;<sp/>bar-&gt;spanFrom()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>bar-&gt;spanTo()<sp/>==<sp/>6,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>span<sp/>data<sp/>in<sp/>start-repeat<sp/>barline<sp/>of<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>start-repeat<sp/>bar<sp/>ine<sp/>in<sp/>second<sp/>staff<sp/>is<sp/>gone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg-&gt;element(1)<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Extra<sp/>start-repeat<sp/>barline<sp/>in<sp/>2nd<sp/>staff<sp/>of<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>&quot;barline04.mscx&quot;,<sp/>DIR<sp/>+<sp/>&quot;barline04-ref.mscx&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="259"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>REFERENCE<sp/>SCORE<sp/>IS<sp/>USED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::barline05()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;barline05.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;go&apos;<sp/>to<sp/>4th<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>msr<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msr<sp/>=<sp/>msr-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>and<sp/>add<sp/>a<sp/>LineBreak<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_layout_break" kindref="compound">LayoutBreak</ref>*<sp/>lb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_layout_break" kindref="compound">LayoutBreak</ref>(score);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb-&gt;setLayoutBreakType(LayoutBreak::Type::LINE);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb-&gt;setTrack(-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>system-level<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb-&gt;setParent(msr);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;undoAddElement(lb);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>an<sp/>end-repeat<sp/>bar<sp/>line<sp/>has<sp/>been<sp/>created<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>measure<sp/>and<sp/>it<sp/>is<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>seg<sp/>=<sp/>msr-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::EndBarLine,<sp/>msr-&gt;tick()+msr-&gt;ticks());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SegEndBarLine<sp/>segment<sp/>in<sp/>measure<sp/>4.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*<sp/>bar<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(seg-&gt;element(0));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>end-repeat<sp/>barline<sp/>in<sp/>measure<sp/>4.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;barLineType()<sp/>==<sp/>BarLineType::END_REPEAT,<sp/></highlight><highlight class="stringliteral">&quot;Barline<sp/>at<sp/>measure<sp/>4<sp/>is<sp/>not<sp/>END-REPEAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;generated(),<sp/></highlight><highlight class="stringliteral">&quot;End-repeat<sp/>barline<sp/>in<sp/>measure<sp/>4<sp/>is<sp/>non-generated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>check<sp/>an<sp/>end-repeat<sp/>bar<sp/>line<sp/>has<sp/>been<sp/>created<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>next<sp/>measure<sp/>and<sp/>it<sp/>is<sp/>not<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>an<sp/>end-repeat<sp/>bar<sp/>line<sp/>has<sp/>been<sp/>created<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>next<sp/>measure<sp/>and<sp/>it<sp/>is<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msr<sp/>=<sp/>msr-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>msr-&gt;findSegment(SegmentType::StartRepeatBarLine,<sp/>msr-&gt;tick());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SegStartRepeatBarLine<sp/>segment<sp/>in<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bar<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(seg-&gt;element(0));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>start-repeat<sp/>barline<sp/>in<sp/>measure<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;generated(),<sp/></highlight><highlight class="stringliteral">&quot;Start-reapeat<sp/>barline<sp/>in<sp/>measure<sp/>5<sp/>is<sp/>not<sp/>generated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>&quot;barline05.mscx&quot;,<sp/>DIR<sp/>+<sp/>&quot;barline05-ref.mscx&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="307"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>REFERENCE<sp/>SCORE<sp/>IS<sp/>USED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::barline06()</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>msg[256];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;barline06.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>each<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/><sp/><sp/><sp/>msr<sp/><sp/><sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msrNo<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>measure<sp/>endbarline<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;EndBarLineType<sp/>not<sp/>NORMAL<sp/>in<sp/>measure<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>msrNo);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(msr-&gt;endBarLineType()<sp/>==<sp/>BarLineType::NORMAL,<sp/>msg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>locate<sp/>end-measure<sp/>bar<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>seg<sp/>=<sp/>msr-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::EndBarLine,<sp/>msr-&gt;tick()+msr-&gt;ticks());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>SegEndBarLine<sp/>in<sp/>measure<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>msr-&gt;no());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>only<sp/>i-th<sp/>staff<sp/>has<sp/>custom<sp/>bar<sp/>line<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*<sp/>bar<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(seg-&gt;element(j*VOICES));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>the<sp/>i-th<sp/>staff,<sp/>bar<sp/>should<sp/>be<sp/>normal<sp/>and<sp/>not<sp/>custom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;barline<sp/>type<sp/>NOT<sp/>NORMAL<sp/>or<sp/>CUSTOM<sp/>TYPE<sp/>in<sp/>staff<sp/>%d<sp/>of<sp/>measure<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>j+1,<sp/>msrNo);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;barLineType()<sp/>==<sp/>BarLineType::NORMAL,<sp/>msg);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;customSubtype()<sp/>==<sp/>false,<sp/>msg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>i-th<sp/>staff,<sp/>the<sp/>bar<sp/>line<sp/>should<sp/>be<sp/>of<sp/>type<sp/>DOUBLE<sp/>and<sp/>custom<sp/>type<sp/>should<sp/>be<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>barline<sp/>for<sp/>staff<sp/>%d<sp/>in<sp/>measure<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>j+1,<sp/>msrNo);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;barline<sp/>type<sp/>NOT<sp/>DOUBLE<sp/>or<sp/>NOT<sp/>CUSTOM<sp/>TYPE<sp/>in<sp/>staff<sp/>%d<sp/>of<sp/>measure<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>j+1,<sp/>msrNo);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;barLineType()<sp/>==<sp/>BarLineType::DOUBLE,<sp/>msg);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY2(bar-&gt;customSubtype()<sp/>==<sp/>true,<sp/>msg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msr<sp/>=<sp/>msr-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msrNo++;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>&quot;barline06.mscx&quot;,<sp/>DIR<sp/>+<sp/>&quot;barline06-ref.mscx&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="359"><highlight class="comment"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dropNormalBarline(<ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref><sp/>dropData;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropData.view<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>*<sp/>barLine<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref>(e-&gt;score());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barLine-&gt;setBarLineType(BarLineType::NORMAL);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropData.element<sp/>=<sp/>barLine;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;score()-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;<ref refid="class_ms_1_1_element_1a0ca69a9fb48e7b9fb481aacaf3860032" kindref="member">drop</ref>(dropData);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;score()-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="377"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>REFERENCE<sp/>SCORE<sp/>IS<sp/>USED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBarline::barline179726()</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;barline179726.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>initial<sp/>START_REPEAT<sp/>barline<sp/>will<sp/>remove<sp/>that<sp/>START_REPEAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::StartRepeatBarLine,<sp/>m-&gt;tick())-&gt;elementAt(0));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::StartRepeatBarLine,<sp/>0)<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>END_START_REPEAT<sp/>will<sp/>turn<sp/>into<sp/>NORMAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(static_cast&lt;BarLine*&gt;(m-&gt;<ref refid="class_ms_1_1_measure_1a52aebd01fd2288c2e10cd1544a0ceaad" kindref="member">findSegment</ref>(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0))-&gt;barLineType()<sp/>==<sp/>BarLineType::NORMAL);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>the<sp/>END_REPEAT<sp/>part<sp/>of<sp/>an<sp/>END_START_REPEAT<sp/>straddling<sp/>a<sp/>newline<sp/>will<sp/>turn<sp/>into<sp/>NORMAL<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>meas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(static_cast&lt;BarLine*&gt;(m-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0))-&gt;barLineType()<sp/>==<sp/>BarLineType::NORMAL);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>leave<sp/>START_REPEAT<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>newline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(static_cast&lt;BarLine*&gt;(m-&gt;findSegment(SegmentType::StartRepeatBarLine,<sp/>m-&gt;tick())-&gt;elementAt(0)));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>the<sp/>meas<sp/>ending<sp/>with<sp/>an<sp/>END_START_REPEAT<sp/>straddling<sp/>a<sp/>newline<sp/>will<sp/>turn<sp/>into<sp/>NORMAL<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>meas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>note<sp/>I&apos;m<sp/>not<sp/>verifying<sp/>what<sp/>happens<sp/>to<sp/>the<sp/>START_REPEAT<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>newline...I&apos;m<sp/>not<sp/>sure<sp/>that<sp/>behavior<sp/>is<sp/>well-defined<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(static_cast&lt;BarLine*&gt;(m-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0))-&gt;barLineType()<sp/>==<sp/>BarLineType::NORMAL);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>the<sp/>START_REPEAT<sp/>part<sp/>of<sp/>an<sp/>END_START_REPEAT<sp/>straddling<sp/>a<sp/>newline<sp/>will<sp/>remove<sp/>the<sp/>START_REPEAT<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>this<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m-&gt;findSegment(SegmentType::StartRepeatBarLine,<sp/>m-&gt;tick())-&gt;elementAt(0));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m-&gt;findSegment(SegmentType::StartRepeatBarLine,<sp/>m-&gt;tick())<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>leave<sp/>END_REPEAT<sp/>at<sp/>the<sp/>end<sp/>of<sp/>previous<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(static_cast&lt;BarLine*&gt;(m-&gt;prevMeasure()-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;tick())-&gt;elementAt(0))-&gt;barLineType()<sp/>==<sp/>BarLineType::END_REPEAT);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++,<sp/>m<sp/>=<sp/>m-&gt;nextMeasure())<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>END_REPEAT,<sp/>BROKEN,<sp/>DOTTED,<sp/>DOUBLE<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>meas<sp/>will<sp/>turn<sp/>into<sp/>NORMAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(static_cast&lt;BarLine*&gt;(m-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0))-&gt;barLineType()<sp/>==<sp/>BarLineType::NORMAL);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>a<sp/>START_REPEAT<sp/>in<sp/>middle<sp/>of<sp/>a<sp/>line<sp/>will<sp/>remove<sp/>the<sp/>START_REPEAT<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>this<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m-&gt;findSegment(SegmentType::StartRepeatBarLine,<sp/>m-&gt;tick())-&gt;elementAt(0));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m-&gt;findSegment(SegmentType::StartRepeatBarLine,<sp/>m-&gt;tick())<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>NORMAL<sp/>onto<sp/>final<sp/>END_REPEAT<sp/>at<sp/>end<sp/>of<sp/>score<sp/>will<sp/>turn<sp/>into<sp/>NORMAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropNormalBarline(m-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(static_cast&lt;BarLine*&gt;(m-&gt;findSegment(SegmentType::EndBarLine,<sp/>m-&gt;endTick())-&gt;elementAt(0))-&gt;barLineType()<sp/>==<sp/>BarLineType::NORMAL);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_barline" kindref="compound">TestBarline</ref>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_barline.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/libmscore/barline/tst_barline.cpp"/>
  </compounddef>
</doxygen>
