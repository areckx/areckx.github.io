<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_xml_stream_attribute" kind="class" language="C++" prot="public">
    <compoundname>XmlStreamAttribute</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_xml_stream_attribute_1aa36a2450f624c6ea7a448f4aedd67b13" prot="private" static="no" mutable="no">
        <type><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref></type>
        <definition>XmlStreamStringRef XmlStreamAttribute::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="71" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_attribute_1a8fc3713a29933c97ed4b3b293fa28c7d" prot="private" static="no" mutable="no">
        <type><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref></type>
        <definition>XmlStreamStringRef XmlStreamAttribute::m_namespaceUri</definition>
        <argsstring></argsstring>
        <name>m_namespaceUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="71" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_attribute_1a9f3895aa8a96afe32fa4d2e699540c64" prot="private" static="no" mutable="no">
        <type><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref></type>
        <definition>XmlStreamStringRef XmlStreamAttribute::m_qualifiedName</definition>
        <argsstring></argsstring>
        <name>m_qualifiedName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="71" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_attribute_1a7a6799297209d6ac34a61283b3cd7337" prot="private" static="no" mutable="no">
        <type><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref></type>
        <definition>XmlStreamStringRef XmlStreamAttribute::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="71" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_attribute_1ab887f955beb77400d10ad9c0d08d895a" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* XmlStreamAttribute::reserved</definition>
        <argsstring></argsstring>
        <name>reserved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="72" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_attribute_1aaed8c2f63badedf388e8381af7ab08d0" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint XmlStreamAttribute::m_isDefault</definition>
        <argsstring></argsstring>
        <name>m_isDefault</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="73" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_xml_stream_attribute_1a07cbe8adea255c3bb802811c3872de83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class XmlStreamReaderPrivate</definition>
        <argsstring></argsstring>
        <name>XmlStreamReaderPrivate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="74" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_xml_stream_attribute_1a7150ff3129fa35c4da7a86be5f547999" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class XmlStreamAttributes</definition>
        <argsstring></argsstring>
        <name>XmlStreamAttributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="75" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_xml_stream_attribute_1aa5f200993700468c044eadc4ce7ae89f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamAttribute::XmlStreamAttribute</definition>
        <argsstring>()</argsstring>
        <name>XmlStreamAttribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty attribute. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="77" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2271" bodyend="2274"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1aa6fb4b0b8a1b67e82eb96f1ca18433a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamAttribute::XmlStreamAttribute</definition>
        <argsstring>(const QString &amp;qualifiedName, const QString &amp;value)</argsstring>
        <name>XmlStreamAttribute</name>
        <param>
          <type>const QString &amp;</type>
          <declname>qualifiedName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs an attribute with qualified name <emphasis>qualifiedName</emphasis> and value <emphasis>value</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="78" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2297" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a266b1754effadd2f2388969a27cf91a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamAttribute::XmlStreamAttribute</definition>
        <argsstring>(const QString &amp;namespaceUri, const QString &amp;name, const QString &amp;value)</argsstring>
        <name>XmlStreamAttribute</name>
        <param>
          <type>const QString &amp;</type>
          <declname>namespaceUri</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs an attribute in the namespace described with <emphasis>namespaceUri</emphasis> with <emphasis>name</emphasis> and value <emphasis>value</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="79" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2286" bodyend="2292"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a14fa3927c8ba018070ab4edbdef2f638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamAttribute::XmlStreamAttribute</definition>
        <argsstring>(const XmlStreamAttribute &amp;)</argsstring>
        <name>XmlStreamAttribute</name>
        <param>
          <type>const <ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a copy of <emphasis>other</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="80" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2360" bodyend="2363"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a7d455c18b5d261f261523752e9d39b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref> &amp;</type>
        <definition>XmlStreamAttribute &amp; XmlStreamAttribute::operator=</definition>
        <argsstring>(const XmlStreamAttribute &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns <emphasis>other</emphasis> to this attribute. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="81" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2368" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a0790a80f54d9bb1dba7ce5f230ff3b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamAttribute::~XmlStreamAttribute</definition>
        <argsstring>()</argsstring>
        <name>~XmlStreamAttribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructs an attribute. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="82" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2279" bodyend="2281"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamAttribute::namespaceUri</definition>
        <argsstring>() const</argsstring>
        <name>namespaceUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the attribute&apos;s resolved namespaceUri, or an empty string reference if the attribute does not have a defined namespace. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="83" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamAttribute::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the attribute&apos;s local name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="84" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamAttribute::qualifiedName</definition>
        <argsstring>() const</argsstring>
        <name>qualifiedName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the attribute&apos;s qualified name.</para><para>A qualified name is the raw name of an attribute in the XML data. It consists of the namespace <ref refid="class_xml_stream_attribute_1a09aa6449118ecdcdbba90cc0b05f9e33" kindref="member">prefix()</ref>, followed by colon, followed by the attribute&apos;s local <ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name()</ref>. Since the namespace prefix is not unique (the same prefix can point to different namespaces and different prefixes can point to the same namespace), you shouldn&apos;t use <ref refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" kindref="member">qualifiedName()</ref>, but the resolved <ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri()</ref> and the attribute&apos;s local <ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="85" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a09aa6449118ecdcdbba90cc0b05f9e33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamAttribute::prefix</definition>
        <argsstring>() const</argsstring>
        <name>prefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>4.4 Returns the attribute&apos;s namespace prefix.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name()</ref>, <ref refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" kindref="member">qualifiedName()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="86" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamAttribute::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the attribute&apos;s value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="91" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1ab2798a63f4ca2dd71004602f94bddc53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XmlStreamAttribute::isDefault</definition>
        <argsstring>() const</argsstring>
        <name>isDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if the parser added this attribute with a default value following an ATTLIST declaration in the DTD; otherwise returns <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="92" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1aeb585e0fb002453ec3a176accb119c6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XmlStreamAttribute::operator==</definition>
        <argsstring>(const XmlStreamAttribute &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this attribute with <emphasis>other</emphasis> and returns <computeroutput>true</computeroutput> if they are equal; otherwise returns <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="93" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_attribute_1a2a64fc419c69526cd7260cd49d7ad17f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XmlStreamAttribute::operator!=</definition>
        <argsstring>(const XmlStreamAttribute &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this attribute with <emphasis>other</emphasis> and returns <computeroutput>true</computeroutput> if they are not equal; otherwise returns <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="98" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="98" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref> class represents a single XML attribute. </para>    </briefdescription>
    <detaileddescription>
<para>QtCore <simplesect kind="since"><para>4.3 </para></simplesect>
An attribute consists of an optionally empty <ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri()</ref>, a <ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name()</ref>, a <ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value()</ref>, and an <ref refid="class_xml_stream_attribute_1ab2798a63f4ca2dd71004602f94bddc53" kindref="member">isDefault()</ref> attribute.</para><para>The raw XML attribute name is returned as <ref refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" kindref="member">qualifiedName()</ref>. </para>    </detaileddescription>
    <location file="thirdparty/xmlstream/xmlstream.h" line="70" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="70" bodyend="100"/>
    <listofallmembers>
      <member refid="class_xml_stream_attribute_1ab2798a63f4ca2dd71004602f94bddc53" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>isDefault</name></member>
      <member refid="class_xml_stream_attribute_1aaed8c2f63badedf388e8381af7ab08d0" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>m_isDefault</name></member>
      <member refid="class_xml_stream_attribute_1aa36a2450f624c6ea7a448f4aedd67b13" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>m_name</name></member>
      <member refid="class_xml_stream_attribute_1a8fc3713a29933c97ed4b3b293fa28c7d" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>m_namespaceUri</name></member>
      <member refid="class_xml_stream_attribute_1a9f3895aa8a96afe32fa4d2e699540c64" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>m_qualifiedName</name></member>
      <member refid="class_xml_stream_attribute_1a7a6799297209d6ac34a61283b3cd7337" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>m_value</name></member>
      <member refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>name</name></member>
      <member refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>namespaceUri</name></member>
      <member refid="class_xml_stream_attribute_1a2a64fc419c69526cd7260cd49d7ad17f" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>operator!=</name></member>
      <member refid="class_xml_stream_attribute_1a7d455c18b5d261f261523752e9d39b98" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>operator=</name></member>
      <member refid="class_xml_stream_attribute_1aeb585e0fb002453ec3a176accb119c6a" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>operator==</name></member>
      <member refid="class_xml_stream_attribute_1a09aa6449118ecdcdbba90cc0b05f9e33" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>prefix</name></member>
      <member refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>qualifiedName</name></member>
      <member refid="class_xml_stream_attribute_1ab887f955beb77400d10ad9c0d08d895a" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>reserved</name></member>
      <member refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>value</name></member>
      <member refid="class_xml_stream_attribute_1aa5f200993700468c044eadc4ce7ae89f" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>XmlStreamAttribute</name></member>
      <member refid="class_xml_stream_attribute_1aa6fb4b0b8a1b67e82eb96f1ca18433a0" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>XmlStreamAttribute</name></member>
      <member refid="class_xml_stream_attribute_1a266b1754effadd2f2388969a27cf91a2" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>XmlStreamAttribute</name></member>
      <member refid="class_xml_stream_attribute_1a14fa3927c8ba018070ab4edbdef2f638" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>XmlStreamAttribute</name></member>
      <member refid="class_xml_stream_attribute_1a7150ff3129fa35c4da7a86be5f547999" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>XmlStreamAttributes</name></member>
      <member refid="class_xml_stream_attribute_1a07cbe8adea255c3bb802811c3872de83" prot="private" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>XmlStreamReaderPrivate</name></member>
      <member refid="class_xml_stream_attribute_1a0790a80f54d9bb1dba7ce5f230ff3b61" prot="public" virt="non-virtual"><scope>XmlStreamAttribute</scope><name>~XmlStreamAttribute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
