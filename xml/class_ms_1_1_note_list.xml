<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_note_list" kind="class" language="C++" prot="public">
    <compoundname>Ms::NoteList</compoundname>
    <includes refid="musicxmlsupport_8h" local="no">musicxmlsupport.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_note_list_1af567417287a46f20912122af2d5a561d" prot="private" static="no" mutable="no">
        <type>QList&lt; StartStopList &gt;</type>
        <definition>QList&lt;StartStopList&gt; Ms::NoteList::_staffNoteLists</definition>
        <argsstring></argsstring>
        <name>_staffNoteLists</name>
        <briefdescription>
<para>The note start/stop times in all staves. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="57" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_note_list_1aba27fa848a68f87f7e6b6e97d7ccf8a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::NoteList::NoteList</definition>
        <argsstring>()</argsstring>
        <name>NoteList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="51" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_list_1a50403f10c142acfdc5eed77a21602018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::NoteList::addNote</definition>
        <argsstring>(const int startTick, const int endTick, const int staff)</argsstring>
        <name>addNote</name>
        <param>
          <type>const int</type>
          <declname>startTick</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>endTick</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="52" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_list_1abbcdf9d72ac5e6df90964b55a4674a49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::NoteList::dump</definition>
        <argsstring>(const QString &amp;voice) const</argsstring>
        <name>dump</name>
        <param>
          <type>const QString &amp;</type>
          <declname>voice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="53" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="44" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_list_1aef910717b2f1d6843845a86456aa8df0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::NoteList::stavesOverlap</definition>
        <argsstring>(const int staff1, const int staff2) const</argsstring>
        <name>stavesOverlap</name>
        <param>
          <type>const int</type>
          <declname>staff1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>staff2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if any note in staff1 and staff2 overlaps. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="54" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="77" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_list_1a30936f3073c3e4da3f93ddddbf7e1c47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::NoteList::anyStaffOverlaps</definition>
        <argsstring>() const</argsstring>
        <name>anyStaffOverlaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if any note in any staff overlaps. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="55" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="92" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>List of note start/stop times in a voice in all staves. </para>    </detaileddescription>
    <location file="mscore/musicxmlsupport.h" line="49" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="49" bodyend="58"/>
    <listofallmembers>
      <member refid="class_ms_1_1_note_list_1af567417287a46f20912122af2d5a561d" prot="private" virt="non-virtual"><scope>Ms::NoteList</scope><name>_staffNoteLists</name></member>
      <member refid="class_ms_1_1_note_list_1a50403f10c142acfdc5eed77a21602018" prot="public" virt="non-virtual"><scope>Ms::NoteList</scope><name>addNote</name></member>
      <member refid="class_ms_1_1_note_list_1a30936f3073c3e4da3f93ddddbf7e1c47" prot="public" virt="non-virtual"><scope>Ms::NoteList</scope><name>anyStaffOverlaps</name></member>
      <member refid="class_ms_1_1_note_list_1abbcdf9d72ac5e6df90964b55a4674a49" prot="public" virt="non-virtual"><scope>Ms::NoteList</scope><name>dump</name></member>
      <member refid="class_ms_1_1_note_list_1aba27fa848a68f87f7e6b6e97d7ccf8a3" prot="public" virt="non-virtual"><scope>Ms::NoteList</scope><name>NoteList</name></member>
      <member refid="class_ms_1_1_note_list_1aef910717b2f1d6843845a86456aa8df0" prot="public" virt="non-virtual"><scope>Ms::NoteList</scope><name>stavesOverlap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
