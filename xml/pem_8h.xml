<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pem_8h" kind="file" language="C++">
    <compoundname>pem.h</compoundname>
    <includes refid="e__os2_8h" local="no">openssl/e_os2.h</includes>
    <includes refid="bio_8h" local="no">openssl/bio.h</includes>
    <includes refid="stack_8h" local="no">openssl/stack.h</includes>
    <includes refid="evp_8h" local="no">openssl/evp.h</includes>
    <includes refid="x509_8h" local="no">openssl/x509.h</includes>
    <includes refid="pem2_8h" local="no">openssl/pem2.h</includes>
    <includes refid="symhacks_8h" local="no">openssl/symhacks.h</includes>
    <includedby refid="kqoauthutils_8cpp" local="no">thirdparty/kQOAuth/kqoauthutils.cpp</includedby>
    <includedby refid="ssl_8h" local="no">thirdparty/openssl/include/openssl/ssl.h</includedby>
    <incdepgraph>
      <node id="83218">
        <label>stdarg.h</label>
      </node>
      <node id="83223">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="83226">
        <label>stdint.h</label>
      </node>
      <node id="83237">
        <label>openssl/ec.h</label>
        <link refid="ec_8h_source"/>
        <childnode refid="83215" relation="include">
        </childnode>
        <childnode refid="83230" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
        <childnode refid="83232" relation="include">
        </childnode>
      </node>
      <node id="83220">
        <label>stdlib.h</label>
      </node>
      <node id="83216">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83217" relation="include">
        </childnode>
        <childnode refid="83218" relation="include">
        </childnode>
        <childnode refid="83219" relation="include">
        </childnode>
        <childnode refid="83226" relation="include">
        </childnode>
      </node>
      <node id="83240">
        <label>openssl/rsa.h</label>
        <link refid="rsa_8h_source"/>
        <childnode refid="83230" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83219" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83232" relation="include">
        </childnode>
      </node>
      <node id="83234">
        <label>openssl/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83235" relation="include">
        </childnode>
        <childnode refid="83236" relation="include">
        </childnode>
      </node>
      <node id="83221">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="83246">
        <label>openssl/pkcs7.h</label>
        <link refid="pkcs7_8h_source"/>
        <childnode refid="83230" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
      </node>
      <node id="83235">
        <label>stddef.h</label>
      </node>
      <node id="83243">
        <label>openssl/sha.h</label>
        <link refid="sha_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83235" relation="include">
        </childnode>
      </node>
      <node id="83232">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83217" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83219" relation="include">
        </childnode>
      </node>
      <node id="83233">
        <label>openssl/x509.h</label>
        <link refid="x509_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
        <childnode refid="83234" relation="include">
        </childnode>
        <childnode refid="83227" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83221" relation="include">
        </childnode>
        <childnode refid="83230" relation="include">
        </childnode>
        <childnode refid="83222" relation="include">
        </childnode>
        <childnode refid="83237" relation="include">
        </childnode>
        <childnode refid="83238" relation="include">
        </childnode>
        <childnode refid="83239" relation="include">
        </childnode>
        <childnode refid="83240" relation="include">
        </childnode>
        <childnode refid="83241" relation="include">
        </childnode>
        <childnode refid="83242" relation="include">
        </childnode>
        <childnode refid="83243" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83244" relation="include">
        </childnode>
        <childnode refid="83246" relation="include">
        </childnode>
      </node>
      <node id="83241">
        <label>openssl/dsa.h</label>
        <link refid="dsa_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83219" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83232" relation="include">
        </childnode>
        <childnode refid="83242" relation="include">
        </childnode>
      </node>
      <node id="83229">
        <label>openssl/obj_mac.h</label>
        <link refid="obj__mac_8h_source"/>
      </node>
      <node id="83244">
        <label>openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h_source"/>
        <childnode refid="83233" relation="include">
        </childnode>
        <childnode refid="83215" relation="include">
        </childnode>
        <childnode refid="83245" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83219" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
      </node>
      <node id="83236">
        <label>sys/types.h</label>
      </node>
      <node id="83225">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
      </node>
      <node id="83230">
        <label>openssl/asn1.h</label>
        <link refid="asn1_8h_source"/>
        <childnode refid="83231" relation="include">
        </childnode>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83221" relation="include">
        </childnode>
        <childnode refid="83222" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83232" relation="include">
        </childnode>
      </node>
      <node id="83222">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="83221" relation="include">
        </childnode>
      </node>
      <node id="83227">
        <label>openssl/evp.h</label>
        <link refid="evp_8h_source"/>
        <childnode refid="83215" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83228" relation="include">
        </childnode>
      </node>
      <node id="83231">
        <label>time.h</label>
      </node>
      <node id="83238">
        <label>openssl/ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="83215" relation="include">
        </childnode>
        <childnode refid="83237" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83232" relation="include">
        </childnode>
      </node>
      <node id="83213">
        <label>thirdparty/openssl/include/openssl/pem.h</label>
        <link refid="pem_8h"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83221" relation="include">
        </childnode>
        <childnode refid="83227" relation="include">
        </childnode>
        <childnode refid="83233" relation="include">
        </childnode>
        <childnode refid="83247" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
      </node>
      <node id="83245">
        <label>openssl/lhash.h</label>
        <link refid="lhash_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83217" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
      </node>
      <node id="83228">
        <label>openssl/objects.h</label>
        <link refid="objects_8h_source"/>
        <childnode refid="83229" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83230" relation="include">
        </childnode>
      </node>
      <node id="83215">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="83247">
        <label>openssl/pem2.h</label>
        <link refid="pem2_8h_source"/>
      </node>
      <node id="83214">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="83215" relation="include">
        </childnode>
      </node>
      <node id="83217">
        <label>stdio.h</label>
      </node>
      <node id="83239">
        <label>openssl/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="83215" relation="include">
        </childnode>
        <childnode refid="83237" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83232" relation="include">
        </childnode>
      </node>
      <node id="83224">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
      </node>
      <node id="83219">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="83220" relation="include">
        </childnode>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83217" relation="include">
        </childnode>
        <childnode refid="83221" relation="include">
        </childnode>
        <childnode refid="83222" relation="include">
        </childnode>
        <childnode refid="83223" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83225" relation="include">
        </childnode>
      </node>
      <node id="83242">
        <label>openssl/dh.h</label>
        <link refid="dh_8h_source"/>
        <childnode refid="83214" relation="include">
        </childnode>
        <childnode refid="83216" relation="include">
        </childnode>
        <childnode refid="83224" relation="include">
        </childnode>
        <childnode refid="83232" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="83249">
        <label>thirdparty/kQOAuth/kqoauthutils.cpp</label>
        <link refid="kqoauthutils_8cpp_source"/>
      </node>
      <node id="83251">
        <label>thirdparty/openssl/include/openssl/ssl3.h</label>
        <link refid="ssl3_8h_source"/>
        <childnode refid="83250" relation="include">
        </childnode>
      </node>
      <node id="83248">
        <label>thirdparty/openssl/include/openssl/pem.h</label>
        <link refid="pem_8h"/>
        <childnode refid="83249" relation="include">
        </childnode>
        <childnode refid="83250" relation="include">
        </childnode>
      </node>
      <node id="83250">
        <label>thirdparty/openssl/include/openssl/ssl.h</label>
        <link refid="ssl_8h_source"/>
        <childnode refid="83249" relation="include">
        </childnode>
        <childnode refid="83251" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_p_e_m___encode___seal__st" prot="public">PEM_Encode_Seal_st</innerclass>
    <innerclass refid="structpem__recip__st" prot="public">pem_recip_st</innerclass>
    <innerclass refid="structpem__ctx__st" prot="public">pem_ctx_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pem_8h_1a444a66a6bebcbf3d737ca4baedec5b10" prot="public" static="no">
        <name>PEM_BUFSIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="77" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a147cb4f85276d69f3ec81913409b6f4c" prot="public" static="no">
        <name>PEM_OBJ_UNDEF</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="79" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ab7337a8485eb20efc885ff3361b04069" prot="public" static="no">
        <name>PEM_OBJ_X509</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="80" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6761d5dd762c80cd7355a7afc0351ea6" prot="public" static="no">
        <name>PEM_OBJ_X509_REQ</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="81" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1af3729d6760b91e7724930f389b106d5a" prot="public" static="no">
        <name>PEM_OBJ_CRL</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="82" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1af11d2da93bb4f8166b597378f09c7d92" prot="public" static="no">
        <name>PEM_OBJ_SSL_SESSION</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="83" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aa8a8add65c8f71de4235e5a7d5e42b3f" prot="public" static="no">
        <name>PEM_OBJ_PRIV_KEY</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="84" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a8315e2fa3b14da246161261905b1f4ad" prot="public" static="no">
        <name>PEM_OBJ_PRIV_RSA</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="85" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a79c01d6476648e58e0d4be3f55440620" prot="public" static="no">
        <name>PEM_OBJ_PRIV_DSA</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="86" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ad6136f1aa7e0d572527e7300cde37076" prot="public" static="no">
        <name>PEM_OBJ_PRIV_DH</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="87" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6433264af2879b35d55427c740a9e834" prot="public" static="no">
        <name>PEM_OBJ_PUB_RSA</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="88" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ad765e267f411b8c7ba098aaa37545738" prot="public" static="no">
        <name>PEM_OBJ_PUB_DSA</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="89" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ad6cc4bda6ff311790dc9dcfbc235c1ee" prot="public" static="no">
        <name>PEM_OBJ_PUB_DH</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="90" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ab54d8226e389ab8dfd3027d02e76fd4d" prot="public" static="no">
        <name>PEM_OBJ_DHPARAMS</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="91" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6b1e3b4ae71b57c84c54f2aa2fc55a1f" prot="public" static="no">
        <name>PEM_OBJ_DSAPARAMS</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="92" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a71a731581a55ab6d1ae9fd05d0d4a50a" prot="public" static="no">
        <name>PEM_OBJ_PRIV_RSA_PUBLIC</name>
        <initializer>19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="93" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a7852cf2a7ccbaf55841e6848c8102ade" prot="public" static="no">
        <name>PEM_OBJ_PRIV_ECDSA</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="94" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aaf0920df36cb7b6320bbc836e59b12df" prot="public" static="no">
        <name>PEM_OBJ_PUB_ECDSA</name>
        <initializer>21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="95" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ac58e3729b30bfd7979188410c19b542e" prot="public" static="no">
        <name>PEM_OBJ_ECPARAMETERS</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="96" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1abb1c353eaf6220795b0780af96454c65" prot="public" static="no">
        <name>PEM_ERROR</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="98" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9fe6b2bbc813e737ed5b7ae8e35cd2ff" prot="public" static="no">
        <name>PEM_DEK_DES_CBC</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="99" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a4177d94c0724cf80bc3aaa943e27f53a" prot="public" static="no">
        <name>PEM_DEK_IDEA_CBC</name>
        <initializer>45</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="100" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1af98373f0e78bafea72ee869eb7fa0473" prot="public" static="no">
        <name>PEM_DEK_DES_EDE</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="101" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae8a24a3aa73924259d087b6cab2783fa" prot="public" static="no">
        <name>PEM_DEK_DES_ECB</name>
        <initializer>60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="102" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae4c16896f06872dc267415b1955721ce" prot="public" static="no">
        <name>PEM_DEK_RSA</name>
        <initializer>70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="103" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a4c092f89660f78425030f78fac973023" prot="public" static="no">
        <name>PEM_DEK_RSA_MD2</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="104" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a52532f48b4103ebaba6210da84c7c441" prot="public" static="no">
        <name>PEM_DEK_RSA_MD5</name>
        <initializer>90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="105" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a631374d4102fe8a5a3e5b81794984298" prot="public" static="no">
        <name>PEM_MD_MD2</name>
        <initializer>NID_md2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="107" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a0545f12653304da81ff5280827b441c4" prot="public" static="no">
        <name>PEM_MD_MD5</name>
        <initializer>NID_md5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="108" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a3f8ddf9ee74d3dc283324086b9f17ea7" prot="public" static="no">
        <name>PEM_MD_SHA</name>
        <initializer>NID_sha</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="109" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6c2cb876a6221a2e2b524b2687d3d1db" prot="public" static="no">
        <name>PEM_MD_MD2_RSA</name>
        <initializer>NID_md2WithRSAEncryption</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="110" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae24f617da57857c390e5152629e01ceb" prot="public" static="no">
        <name>PEM_MD_MD5_RSA</name>
        <initializer>NID_md5WithRSAEncryption</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="111" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1acf2926892d2177249e724bc7c81dea3b" prot="public" static="no">
        <name>PEM_MD_SHA_RSA</name>
        <initializer>NID_sha1WithRSAEncryption</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="112" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1acd761fcc52b6d060045a451356ea3618" prot="public" static="no">
        <name>PEM_STRING_X509_OLD</name>
        <initializer>&quot;X509 CERTIFICATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="114" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a86adc37abd57e0a03919cc3b8329a39c" prot="public" static="no">
        <name>PEM_STRING_X509</name>
        <initializer>&quot;CERTIFICATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="115" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae524c9c879e5384eff76a99fbc211426" prot="public" static="no">
        <name>PEM_STRING_X509_PAIR</name>
        <initializer>&quot;CERTIFICATE PAIR&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="116" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a0ada26689c9583959861a1e5a5b46315" prot="public" static="no">
        <name>PEM_STRING_X509_TRUSTED</name>
        <initializer>&quot;TRUSTED CERTIFICATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="117" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae1a2f7bdc879d284e7132b3e12f82a31" prot="public" static="no">
        <name>PEM_STRING_X509_REQ_OLD</name>
        <initializer>&quot;NEW CERTIFICATE REQUEST&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="118" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aae252be181ba72e1f573ce1007f64cb4" prot="public" static="no">
        <name>PEM_STRING_X509_REQ</name>
        <initializer>&quot;CERTIFICATE REQUEST&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="119" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a1b463db39c063ef7abae07a04e890116" prot="public" static="no">
        <name>PEM_STRING_X509_CRL</name>
        <initializer>&quot;X509 CRL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="120" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a1d59cc219c945814823a59568dae9e2e" prot="public" static="no">
        <name>PEM_STRING_EVP_PKEY</name>
        <initializer>&quot;ANY PRIVATE KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="121" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a2e1a22f721c98808fa2b47772094f0f1" prot="public" static="no">
        <name>PEM_STRING_PUBLIC</name>
        <initializer>&quot;PUBLIC KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="122" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1af0cd09a4dfc451a24fe73d76126ce3a6" prot="public" static="no">
        <name>PEM_STRING_RSA</name>
        <initializer>&quot;RSA PRIVATE KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="123" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1abddc8ad6a35d18890ae40b97a80ca48e" prot="public" static="no">
        <name>PEM_STRING_RSA_PUBLIC</name>
        <initializer>&quot;RSA PUBLIC KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="124" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ada12565e217200fa0b6bddd5d89ded13" prot="public" static="no">
        <name>PEM_STRING_DSA</name>
        <initializer>&quot;DSA PRIVATE KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="125" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9d719710967d3858ebd2cf0b0d2bcc62" prot="public" static="no">
        <name>PEM_STRING_DSA_PUBLIC</name>
        <initializer>&quot;DSA PUBLIC KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="126" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a5d0eb5712fdf841c0ccbbc0539bf26d0" prot="public" static="no">
        <name>PEM_STRING_PKCS7</name>
        <initializer>&quot;PKCS7&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="127" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a07cccd3c81dfaa0e9312a2bb7fe01cfa" prot="public" static="no">
        <name>PEM_STRING_PKCS7_SIGNED</name>
        <initializer>&quot;PKCS #7 SIGNED DATA&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="128" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ad8786427e340af368e5644edc2527e43" prot="public" static="no">
        <name>PEM_STRING_PKCS8</name>
        <initializer>&quot;ENCRYPTED PRIVATE KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="129" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1add59c3fe613e263c1f8fe4f094d1ef47" prot="public" static="no">
        <name>PEM_STRING_PKCS8INF</name>
        <initializer>&quot;PRIVATE KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="130" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a97229165cbb8071a8cf3baa53d639e17" prot="public" static="no">
        <name>PEM_STRING_DHPARAMS</name>
        <initializer>&quot;DH PARAMETERS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="131" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aaf8e1426ea277d838a4e69586cc443e6" prot="public" static="no">
        <name>PEM_STRING_SSL_SESSION</name>
        <initializer>&quot;SSL SESSION PARAMETERS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="132" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9927b5285c923c2df41203db9c17a6f1" prot="public" static="no">
        <name>PEM_STRING_DSAPARAMS</name>
        <initializer>&quot;DSA PARAMETERS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="133" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a0b6d0e061174cfa1b2521d25e4ddfc35" prot="public" static="no">
        <name>PEM_STRING_ECDSA_PUBLIC</name>
        <initializer>&quot;ECDSA PUBLIC KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="134" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a2b098e09877981e2950461c1987419c4" prot="public" static="no">
        <name>PEM_STRING_ECPARAMETERS</name>
        <initializer>&quot;EC PARAMETERS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="135" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a79fd8db3be85c3b5512676e7521ab5aa" prot="public" static="no">
        <name>PEM_STRING_ECPRIVATEKEY</name>
        <initializer>&quot;EC PRIVATE KEY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="136" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a16c7dcf487ef76caeb8d5e297a299217" prot="public" static="no">
        <name>PEM_STRING_PARAMETERS</name>
        <initializer>&quot;PARAMETERS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="137" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a41fa338fcf44079b74363f4c9e625997" prot="public" static="no">
        <name>PEM_STRING_CMS</name>
        <initializer>&quot;CMS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="138" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1afa5e62a45e0d7c49ca2853c886544fc4" prot="public" static="no">
        <name>PEM_TYPE_ENCRYPTED</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="150" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a03b32add1f4e77702e084b72918e00e4" prot="public" static="no">
        <name>PEM_TYPE_MIC_ONLY</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="151" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a4bd8a3a1d14937264d4ebfb9d3e09be5" prot="public" static="no">
        <name>PEM_TYPE_MIC_CLEAR</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="152" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a1f7096dd7a4333c26a279531fbad0ceb" prot="public" static="no">
        <name>PEM_TYPE_CLEAR</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="153" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a7e70c44d61d1c1e11082b326b516f048" prot="public" static="no">
        <name>IMPLEMENT_PEM_read_fp</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>type *PEM_read_##name(FILE *fp, type **x, pem_password_cb *cb, void *u)\
{ \
return PEM_ASN1_read((d2i_of_void *)d2i_##asn1, str,fp,(void **)x,cb,u); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="222" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1af7ff0350fbdf6f13be2b809c191848d7" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_fp</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_##name(FILE *fp, type *x) \
{ \
return PEM_ASN1_write((i2d_of_void *)i2d_##asn1,str,fp,x,NULL,NULL,0,NULL,NULL); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="228" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1af95c597d5267b5560c6e0a0150cda528" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_fp_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_##name(FILE *fp, const type *x) \
{ \
return PEM_ASN1_write((i2d_of_void *)i2d_##asn1,str,fp,(void *)x,NULL,NULL,0,NULL,NULL); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="234" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a3fd9d0e768d0dbedd35c77af8e339f2f" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_cb_fp</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_##name(FILE *fp, type *x, const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *enc, \
	     unsigned char *kstr, int klen, pem_password_cb *cb, \
		  void *u) \
	{ \
	return PEM_ASN1_write((i2d_of_void *)i2d_##asn1,str,fp,x,enc,kstr,klen,cb,u); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="240" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a1735ac81342cdb4da0e74710b3c4d781" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_cb_fp_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_##name(FILE *fp, type *x, const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *enc, \
	     unsigned char *kstr, int klen, pem_password_cb *cb, \
		  void *u) \
	{ \
	return PEM_ASN1_write((i2d_of_void *)i2d_##asn1,str,fp,x,enc,kstr,klen,cb,u); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="248" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9659a7855e39e5c22783a945ff9aa301" prot="public" static="no">
        <name>IMPLEMENT_PEM_read_bio</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>type *PEM_read_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, type **x, pem_password_cb *cb, void *u)\
{ \
return PEM_ASN1_read_bio((d2i_of_void *)d2i_##asn1, str,bp,(void **)x,cb,u); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="258" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a567a4e50b2ec92be20f56bc33f8f2b77" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_bio</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, type *x) \
{ \
return PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,x,NULL,NULL,0,NULL,NULL); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="264" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a698c64e675f094ff53b3447231d4f268" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_bio_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, const type *x) \
{ \
return PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,(void *)x,NULL,NULL,0,NULL,NULL); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="270" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6e5c5b2c4d87372918dac0590e906a1e" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_cb_bio</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, type *x, const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *enc, \
	     unsigned char *kstr, int klen, pem_password_cb *cb, void *u) \
	{ \
	return PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,x,enc,kstr,klen,cb,u); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="276" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aaea46a16c1a12cf7ea03e192465d7330" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_cb_bio_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>int PEM_write_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, type *x, const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *enc, \
	     unsigned char *kstr, int klen, pem_password_cb *cb, void *u) \
	{ \
	return PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,(void *)x,enc,kstr,klen,cb,u); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="283" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aa29dc952adaced1c022da6ba87c8e671" prot="public" static="no">
        <name>IMPLEMENT_PEM_write</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_write_bio(name, type, str, asn1) \
	IMPLEMENT_PEM_write_fp(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="290" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a3c9481bedc760e6c1104c7f1d575a8ea" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_write_bio_const(name, type, str, asn1) \
	IMPLEMENT_PEM_write_fp_const(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="294" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a4e8104e503dbd6de59f373059b0d9183" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_cb</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_write_cb_bio(name, type, str, asn1) \
	IMPLEMENT_PEM_write_cb_fp(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="298" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae5e2c2cbf0a173b271aa87aa154ad058" prot="public" static="no">
        <name>IMPLEMENT_PEM_write_cb_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_write_cb_bio_const(name, type, str, asn1) \
	IMPLEMENT_PEM_write_cb_fp_const(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="302" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a2bb9d189654608632670a28fe8ed7a12" prot="public" static="no">
        <name>IMPLEMENT_PEM_read</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_read_bio(name, type, str, asn1) \
	IMPLEMENT_PEM_read_fp(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="306" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a8a11cb97229efe766fdff1df3864e29f" prot="public" static="no">
        <name>IMPLEMENT_PEM_rw</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_read(name, type, str, asn1) \
	IMPLEMENT_PEM_write(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="310" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aeab1124de8bb82038eb4ca730127a410" prot="public" static="no">
        <name>IMPLEMENT_PEM_rw_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_read(name, type, str, asn1) \
	IMPLEMENT_PEM_write_const(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="314" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a45158b8b23152c216bfe8b78a9931635" prot="public" static="no">
        <name>IMPLEMENT_PEM_rw_cb</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>str</defname></param>
        <param><defname>asn1</defname></param>
        <initializer>IMPLEMENT_PEM_read(name, type, str, asn1) \
	IMPLEMENT_PEM_write_cb(name, type, str, asn1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="318" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aa1792df107498e0724a596afb02fda34" prot="public" static="no">
        <name>DECLARE_PEM_read_fp</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>type *PEM_read_##name(FILE *fp, type **x, pem_password_cb *cb, void *u);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="332" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aa6fd3d17f5b8b37f46497ed651677404" prot="public" static="no">
        <name>DECLARE_PEM_write_fp</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>int PEM_write_##name(FILE *fp, type *x);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="335" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a774917c6a37c5cf0094f904a3fff2005" prot="public" static="no">
        <name>DECLARE_PEM_write_fp_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>int PEM_write_##name(FILE *fp, const type *x);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="338" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a4221930f066a52305e183bc3862f6dbc" prot="public" static="no">
        <name>DECLARE_PEM_write_cb_fp</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>int PEM_write_##name(FILE *fp, type *x, const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *enc, \
	     unsigned char *kstr, int klen, pem_password_cb *cb, void *u);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="341" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9b43e4e7acf5ea5a2c8436a2ee6d0687" prot="public" static="no">
        <name>DECLARE_PEM_read_bio</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>type *PEM_read_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, type **x, pem_password_cb *cb, void *u);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="348" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a640e526504675532fab48f59b8d849cb" prot="public" static="no">
        <name>DECLARE_PEM_write_bio</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>int PEM_write_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, type *x);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="351" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1afbe63ae2ddb534b17cde89ae233e371d" prot="public" static="no">
        <name>DECLARE_PEM_write_bio_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>int PEM_write_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, const type *x);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="354" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1afe7f8be98470903d4b61eb4ca40310bd" prot="public" static="no">
        <name>DECLARE_PEM_write_cb_bio</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>int PEM_write_bio_##name(<ref refid="structbio__st" kindref="compound">BIO</ref> *bp, type *x, const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *enc, \
	     unsigned char *kstr, int klen, pem_password_cb *cb, void *u);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="357" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9aea2de604c3a303f8bd3fbf926e76bd" prot="public" static="no">
        <name>DECLARE_PEM_write</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>DECLARE_PEM_write_bio(name, type) \
	DECLARE_PEM_write_fp(name, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="370" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a47b30a3b88e5c344b9a1c399ad331dc4" prot="public" static="no">
        <name>DECLARE_PEM_write_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>DECLARE_PEM_write_bio_const(name, type) \
	DECLARE_PEM_write_fp_const(name, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="374" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a78da3a6001c890b002889c8691dffe45" prot="public" static="no">
        <name>DECLARE_PEM_write_cb</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>DECLARE_PEM_write_cb_bio(name, type) \
	DECLARE_PEM_write_cb_fp(name, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="378" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a230c1a0c47996d792f32b59ee1d997ec" prot="public" static="no">
        <name>DECLARE_PEM_read</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>DECLARE_PEM_read_bio(name, type) \
	DECLARE_PEM_read_fp(name, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="382" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a67fe684bd62dfc0288e382b54fb6e8cf" prot="public" static="no">
        <name>DECLARE_PEM_rw</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>DECLARE_PEM_read(name, type) \
	DECLARE_PEM_write(name, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="386" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ac1f4c80a96860b0fdd0ee6a8fbe0a70f" prot="public" static="no">
        <name>DECLARE_PEM_rw_const</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>DECLARE_PEM_read(name, type) \
	DECLARE_PEM_write_const(name, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="390" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a90a5a114a61d390b25631c38ca25c1c9" prot="public" static="no">
        <name>DECLARE_PEM_rw_cb</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>DECLARE_PEM_read(name, type) \
	DECLARE_PEM_write_cb(name, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="394" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a704da08d227673fa47a49c39ecffde33" prot="public" static="no">
        <name>PEM_F_B2I_DSS</name>
        <initializer>127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="567" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a2266909d6ac9fa36ea08b5ece71f9eb9" prot="public" static="no">
        <name>PEM_F_B2I_PVK_BIO</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="568" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a87844e0f23b4fefc4d95f1758b0883b0" prot="public" static="no">
        <name>PEM_F_B2I_RSA</name>
        <initializer>129</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="569" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae83d8b7d908c6f4cfc0d469fcaae4d84" prot="public" static="no">
        <name>PEM_F_CHECK_BITLEN_DSA</name>
        <initializer>130</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="570" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a15496c572483a56489aef1a50b082711" prot="public" static="no">
        <name>PEM_F_CHECK_BITLEN_RSA</name>
        <initializer>131</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="571" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9f4b16e53ad9ff88cefae90429be1f7d" prot="public" static="no">
        <name>PEM_F_D2I_PKCS8PRIVATEKEY_BIO</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="572" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a12195b5ca3ba77e7d348c5480aae805e" prot="public" static="no">
        <name>PEM_F_D2I_PKCS8PRIVATEKEY_FP</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="573" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aed83a2a63181e37da951fdbd7f62e447" prot="public" static="no">
        <name>PEM_F_DO_B2I</name>
        <initializer>132</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="574" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a57a9eeb4c33b59e126f9c88a442a6141" prot="public" static="no">
        <name>PEM_F_DO_B2I_BIO</name>
        <initializer>133</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="575" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ad000d375068f518526f9db5a64051232" prot="public" static="no">
        <name>PEM_F_DO_BLOB_HEADER</name>
        <initializer>134</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="576" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a236a4f6981afa4a32769e9ed5a1733db" prot="public" static="no">
        <name>PEM_F_DO_PK8PKEY</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="577" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a99e9b42997df4e70808524a5fcb113d3" prot="public" static="no">
        <name>PEM_F_DO_PK8PKEY_FP</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="578" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a5135f19ebb7c92f168ce54d28a157283" prot="public" static="no">
        <name>PEM_F_DO_PVK_BODY</name>
        <initializer>135</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="579" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1abecbca493911ff2e73caff52203c32be" prot="public" static="no">
        <name>PEM_F_DO_PVK_HEADER</name>
        <initializer>136</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="580" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ab03ebe82f6e4ea2848c6468d0d9aacea" prot="public" static="no">
        <name>PEM_F_I2B_PVK</name>
        <initializer>137</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="581" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ad27b40f7a53b3d4f99af13e534cc3213" prot="public" static="no">
        <name>PEM_F_I2B_PVK_BIO</name>
        <initializer>138</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="582" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aab78ded767dccacc1f9d0a13acb466b4" prot="public" static="no">
        <name>PEM_F_LOAD_IV</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="583" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae4e6da3db83eff00bd535a55974b6888" prot="public" static="no">
        <name>PEM_F_PEM_ASN1_READ</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="584" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6a607bd722f6078d80829f0930e35d57" prot="public" static="no">
        <name>PEM_F_PEM_ASN1_READ_BIO</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="585" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a3a6a40fd89c2cf8ed6819c13e877b1df" prot="public" static="no">
        <name>PEM_F_PEM_ASN1_WRITE</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="586" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a727aa0d6541219848acd97c0b634306e" prot="public" static="no">
        <name>PEM_F_PEM_ASN1_WRITE_BIO</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="587" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a3bf38d3bff0dbc42ebf3bced1efac2e3" prot="public" static="no">
        <name>PEM_F_PEM_DEF_CALLBACK</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="588" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a246457f49de6eb27472b740769501980" prot="public" static="no">
        <name>PEM_F_PEM_DO_HEADER</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="589" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a386ba15d7993c0564e1f8a11139c14f9" prot="public" static="no">
        <name>PEM_F_PEM_F_PEM_WRITE_PKCS8PRIVATEKEY</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="590" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1acfc05c15590a3c506e7ee5e82df3d6f7" prot="public" static="no">
        <name>PEM_F_PEM_GET_EVP_CIPHER_INFO</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="591" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a7e080f3e6b37d427fe2ba8e6c832d205" prot="public" static="no">
        <name>PEM_F_PEM_PK8PKEY</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="592" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a728f46b04aa5ccf92e69c244aec2babc" prot="public" static="no">
        <name>PEM_F_PEM_READ</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="593" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a29347adeedc1dbc325099bf365bc0a0c" prot="public" static="no">
        <name>PEM_F_PEM_READ_BIO</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="594" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a41e1b89a57fb42918a77815f1d4046ba" prot="public" static="no">
        <name>PEM_F_PEM_READ_BIO_PARAMETERS</name>
        <initializer>140</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="595" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a62f7a8c2aad6e3b012b45aa669c73365" prot="public" static="no">
        <name>PEM_F_PEM_READ_BIO_PRIVATEKEY</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="596" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a51b5603720541d6e8687d04c58ae8f87" prot="public" static="no">
        <name>PEM_F_PEM_READ_PRIVATEKEY</name>
        <initializer>124</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="597" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aaa19f8fb460e951a2f14ec2668c71ce6" prot="public" static="no">
        <name>PEM_F_PEM_SEALFINAL</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="598" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a95d0eb9c676632a03086a46943b5cc20" prot="public" static="no">
        <name>PEM_F_PEM_SEALINIT</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="599" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a147a40a3771b24c81e64217f9239114f" prot="public" static="no">
        <name>PEM_F_PEM_SIGNFINAL</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="600" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6b925fb2c67efcca8c0202099ecf4b95" prot="public" static="no">
        <name>PEM_F_PEM_WRITE</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="601" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a9680ff6fb65c949101e8e815651105eb" prot="public" static="no">
        <name>PEM_F_PEM_WRITE_BIO</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="602" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a111ce0a8354f989e30f72977d76905a1" prot="public" static="no">
        <name>PEM_F_PEM_WRITE_PRIVATEKEY</name>
        <initializer>139</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="603" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a08f1652bf8c3454f7a32d9f6c4aafabc" prot="public" static="no">
        <name>PEM_F_PEM_X509_INFO_READ</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="604" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a69d4471ac96d0e120060e4d4dd99634a" prot="public" static="no">
        <name>PEM_F_PEM_X509_INFO_READ_BIO</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="605" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a6368a04a887625d616309bea29295249" prot="public" static="no">
        <name>PEM_F_PEM_X509_INFO_WRITE_BIO</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="606" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ad05dd1086a9ed04fe4d00b6a9a9b497b" prot="public" static="no">
        <name>PEM_R_BAD_BASE64_DECODE</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="609" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ac908f915ec42bdf230510d407b914f16" prot="public" static="no">
        <name>PEM_R_BAD_DECRYPT</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="610" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a2d661fd0219ff72115462d9a2ab1a8c5" prot="public" static="no">
        <name>PEM_R_BAD_END_LINE</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="611" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ab1719cd125af1d8d9dec3a31c64f2e9f" prot="public" static="no">
        <name>PEM_R_BAD_IV_CHARS</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="612" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae40dadfce5a68c455be7c65506dfbed5" prot="public" static="no">
        <name>PEM_R_BAD_MAGIC_NUMBER</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="613" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a73ac00cf91c4ae8eca00e9353335beab" prot="public" static="no">
        <name>PEM_R_BAD_PASSWORD_READ</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="614" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a429cf976c40e36b8a6f13aea1b17c765" prot="public" static="no">
        <name>PEM_R_BAD_VERSION_NUMBER</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="615" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ab52a898e3678955ed96d58a1143e7124" prot="public" static="no">
        <name>PEM_R_BIO_WRITE_FAILURE</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="616" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a005e2cf22b3d682dae13453f80f3b68e" prot="public" static="no">
        <name>PEM_R_CIPHER_IS_NULL</name>
        <initializer>127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="617" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a52782305388af5915aa16d426cfadcba" prot="public" static="no">
        <name>PEM_R_ERROR_CONVERTING_PRIVATE_KEY</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="618" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a1fe142b8868498c94bd5a3b53e726ee6" prot="public" static="no">
        <name>PEM_R_EXPECTING_PRIVATE_KEY_BLOB</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="619" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1ae8fec10a6a2f50f189dfbe591f9d8be2" prot="public" static="no">
        <name>PEM_R_EXPECTING_PUBLIC_KEY_BLOB</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="620" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a44c3a8f7e84e267eb49b06afa923ee31" prot="public" static="no">
        <name>PEM_R_INCONSISTENT_HEADER</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="621" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1adae81755367c63af749801965671a7f3" prot="public" static="no">
        <name>PEM_R_KEYBLOB_HEADER_PARSE_ERROR</name>
        <initializer>122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="622" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a2339204ea12c7e18cadabdf8f7bf0de3" prot="public" static="no">
        <name>PEM_R_KEYBLOB_TOO_SHORT</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="623" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a2daf05311993ed405fc9dd0367286d08" prot="public" static="no">
        <name>PEM_R_NOT_DEK_INFO</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="624" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a79ef0b7d2712e203f0c7ea0110f37c0b" prot="public" static="no">
        <name>PEM_R_NOT_ENCRYPTED</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="625" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1afd7f5fb7a15e4748497cde2bf0829885" prot="public" static="no">
        <name>PEM_R_NOT_PROC_TYPE</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="626" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a8055ec8a72ec3fa315acee175f569531" prot="public" static="no">
        <name>PEM_R_NO_START_LINE</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="627" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a833a589bf5e3d0eb07a3726d083b4311" prot="public" static="no">
        <name>PEM_R_PROBLEMS_GETTING_PASSWORD</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="628" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1aeddbc1d718cbd36d54d51c0b7dae3fb1" prot="public" static="no">
        <name>PEM_R_PUBLIC_KEY_NO_RSA</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="629" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a080699a9164173f1488081b711f7184a" prot="public" static="no">
        <name>PEM_R_PVK_DATA_TOO_SHORT</name>
        <initializer>124</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="630" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1af3ffcc2d3bea9fc9625be6c613b5b84c" prot="public" static="no">
        <name>PEM_R_PVK_TOO_SHORT</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="631" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a1864e4c1b9252061c2c35bdb0cea9788" prot="public" static="no">
        <name>PEM_R_READ_KEY</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="632" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a273af720e8d43bfb889b94ec834d7ee3" prot="public" static="no">
        <name>PEM_R_SHORT_HEADER</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="633" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a39ed7601583eb45ff18b13873bea0a9e" prot="public" static="no">
        <name>PEM_R_UNSUPPORTED_CIPHER</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="634" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1a3a8ea3a682e7b670d6ef6573ef165d9a" prot="public" static="no">
        <name>PEM_R_UNSUPPORTED_ENCRYPTION</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="635" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pem_8h_1abf93e771b598290c88aa42ad72ca0618" prot="public" static="no">
        <name>PEM_R_UNSUPPORTED_KEY_COMPONENTS</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="636" column="9" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pem_8h_1ab9ad8a370ddb6869452490079988c764" prot="public" static="no">
        <type>struct <ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_Encode_Seal_st</ref></type>
        <definition>typedef struct PEM_Encode_Seal_st  PEM_ENCODE_SEAL_CTX</definition>
        <argsstring></argsstring>
        <name>PEM_ENCODE_SEAL_CTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pem_8h_1af4a17a304b13fbfbf4af1bcb2a3a22b4" prot="public" static="no">
        <type>struct <ref refid="structpem__recip__st" kindref="compound">pem_recip_st</ref></type>
        <definition>typedef struct pem_recip_st  PEM_USER</definition>
        <argsstring></argsstring>
        <name>PEM_USER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pem_8h_1acdf7da8f5613459b07e1546d5cfd69a7" prot="public" static="no">
        <type>struct <ref refid="structpem__ctx__st" kindref="compound">pem_ctx_st</ref></type>
        <definition>typedef struct pem_ctx_st  PEM_CTX</definition>
        <argsstring></argsstring>
        <name>PEM_CTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pem_8h_1a3d060f1c7cb9a37a92edf7ad3b7c4fa9" prot="public" static="no">
        <type>int</type>
        <definition>typedef int pem_password_cb(char *buf, int size, int rwflag, void *userdata)</definition>
        <argsstring>(char *buf, int size, int rwflag, void *userdata)</argsstring>
        <name>pem_password_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="400" column="1" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pem_8h_1a92c578a1a1d2733de8cf205957a962fc" prot="public" static="no" mutable="no">
        <type>pem_password_cb *</type>
        <definition>pem_password_cb * cb</definition>
        <argsstring></argsstring>
        <name>cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="423" column="1" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pem_8h_1a86d41d715a2b2ccd120028b6edfa7314" prot="public" static="no" mutable="no">
        <type>pem_password_cb void *</type>
        <definition>pem_password_cb void* u</definition>
        <argsstring></argsstring>
        <name>u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="423" column="1" bodyfile="thirdparty/openssl/include/openssl/pem.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pem_8h_1a1a6a6b1d31a3129490a1437d35d90cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_get_EVP_CIPHER_INFO</definition>
        <argsstring>(char *header, EVP_CIPHER_INFO *cipher)</argsstring>
        <name>PEM_get_EVP_CIPHER_INFO</name>
        <param>
          <type>char *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="structevp__cipher__info__st" kindref="compound">EVP_CIPHER_INFO</ref> *</type>
          <declname>cipher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a8c7e37d60c8b6d3cbe8df6419bc62e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_do_header</definition>
        <argsstring>(EVP_CIPHER_INFO *cipher, unsigned char *data, long *len, pem_password_cb *callback, void *u)</argsstring>
        <name>PEM_do_header</name>
        <param>
          <type><ref refid="structevp__cipher__info__st" kindref="compound">EVP_CIPHER_INFO</ref> *</type>
          <declname>cipher</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>len</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1ab3c7282dc23332fe4865028149e85050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_read_bio</definition>
        <argsstring>(BIO *bp, char **name, char **header, unsigned char **data, long *len)</argsstring>
        <name>PEM_read_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>header</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a6fb4c6d3daad07d76c43375ac3dc6d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_write_bio</definition>
        <argsstring>(BIO *bp, const char *name, char *hdr, unsigned char *data, long len)</argsstring>
        <name>PEM_write_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hdr</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a832e754f63ae34bd977755079c7132bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_bytes_read_bio</definition>
        <argsstring>(unsigned char **pdata, long *plen, char **pnm, const char *name, BIO *bp, pem_password_cb *cb, void *u)</argsstring>
        <name>PEM_bytes_read_bio</name>
        <param>
          <type>unsigned char **</type>
          <declname>pdata</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>plen</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>pnm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a79026951b2a1fd5f90a7b75f4caf8bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* PEM_ASN1_read_bio</definition>
        <argsstring>(d2i_of_void *d2i, const char *name, BIO *bp, void **x, pem_password_cb *cb, void *u)</argsstring>
        <name>PEM_ASN1_read_bio</name>
        <param>
          <type>d2i_of_void *</type>
          <declname>d2i</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a550f29b0c381e34485d9109bf101d716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_ASN1_write_bio</definition>
        <argsstring>(i2d_of_void *i2d, const char *name, BIO *bp, void *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u)</argsstring>
        <name>PEM_ASN1_write_bio</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a5e3bc6882c3e7aea26eda37e0e74adb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(X509_INFO) *PEM_X509_INFO_read_bio(BIO *bp</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="423" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a446547ad515f1503d44bf7a841596b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_X509_INFO_write_bio</definition>
        <argsstring>(BIO *bp, X509_INFO *xi, EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cd, void *u)</argsstring>
        <name>PEM_X509_INFO_write_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref> *</type>
          <declname>xi</declname>
        </param>
        <param>
          <type><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a40149c66524c40130717c83340d41944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_read</definition>
        <argsstring>(FILE *fp, char **name, char **header, unsigned char **data, long *len)</argsstring>
        <name>PEM_read</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>header</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1aeedfed610e097bcd4b0292fe8b6a4af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_write</definition>
        <argsstring>(FILE *fp, char *name, char *hdr, unsigned char *data, long len)</argsstring>
        <name>PEM_write</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hdr</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1ad5a7508411d2961adfae6462653e6bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* PEM_ASN1_read</definition>
        <argsstring>(d2i_of_void *d2i, const char *name, FILE *fp, void **x, pem_password_cb *cb, void *u)</argsstring>
        <name>PEM_ASN1_read</name>
        <param>
          <type>d2i_of_void *</type>
          <declname>d2i</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a588597db102467cc79d5d992d7a1de5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_ASN1_write</definition>
        <argsstring>(i2d_of_void *i2d, const char *name, FILE *fp, void *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *callback, void *u)</argsstring>
        <name>PEM_ASN1_write</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="433" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a81ad1afe4a4718d9ea092763c948800d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_SealInit</definition>
        <argsstring>(PEM_ENCODE_SEAL_CTX *ctx, EVP_CIPHER *type, EVP_MD *md_type, unsigned char **ek, int *ekl, unsigned char *iv, EVP_PKEY **pubk, int npubk)</argsstring>
        <name>PEM_SealInit</name>
        <param>
          <type><ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_ENCODE_SEAL_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md_type</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>ek</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ekl</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>pubk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>npubk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a83bb5e9ba7f9d33b2849fa70be6e818d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PEM_SealUpdate</definition>
        <argsstring>(PEM_ENCODE_SEAL_CTX *ctx, unsigned char *out, int *outl, unsigned char *in, int inl)</argsstring>
        <name>PEM_SealUpdate</name>
        <param>
          <type><ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_ENCODE_SEAL_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outl</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="442" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a489c456cc1f6648211596f8d6183721f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_SealFinal</definition>
        <argsstring>(PEM_ENCODE_SEAL_CTX *ctx, unsigned char *sig, int *sigl, unsigned char *out, int *outl, EVP_PKEY *priv)</argsstring>
        <name>PEM_SealFinal</name>
        <param>
          <type><ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_ENCODE_SEAL_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>sig</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sigl</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outl</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>priv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1acad24022291bb8bd409e0611b6ec1c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PEM_SignInit</definition>
        <argsstring>(EVP_MD_CTX *ctx, EVP_MD *type)</argsstring>
        <name>PEM_SignInit</name>
        <param>
          <type><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a7510482906232138a223a9ef03391a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PEM_SignUpdate</definition>
        <argsstring>(EVP_MD_CTX *ctx, unsigned char *d, unsigned int cnt)</argsstring>
        <name>PEM_SignUpdate</name>
        <param>
          <type><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1aa61dd48218074838b1676739eb1273f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_SignFinal</definition>
        <argsstring>(EVP_MD_CTX *ctx, unsigned char *sigret, unsigned int *siglen, EVP_PKEY *pkey)</argsstring>
        <name>PEM_SignFinal</name>
        <param>
          <type><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>sigret</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>siglen</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a13016f92a43d3a371f08b06e5e6f28e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_def_callback</definition>
        <argsstring>(char *buf, int num, int w, void *key)</argsstring>
        <name>PEM_def_callback</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a242b1f22693ba6c7b6155dbd49852123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PEM_proc_type</definition>
        <argsstring>(char *buf, int type)</argsstring>
        <name>PEM_proc_type</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a7a7645ec9b007ee4a29e92b9d4ae7075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PEM_dek_info</definition>
        <argsstring>(char *buf, const char *type, int len, char *str)</argsstring>
        <name>PEM_dek_info</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="454" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1ad9b631201f808385ea93aeb22a92ee57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_PEM_rw</definition>
        <argsstring>(X509, X509) DECLARE_PEM_rw(X509_AUX</argsstring>
        <name>DECLARE_PEM_rw</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref></type>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1abad9498efa3b5ff79edc473e1db09b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref></type>
        <definition>X509 DECLARE_PEM_rw</definition>
        <argsstring>(X509_CERT_PAIR, X509_CERT_PAIR) DECLARE_PEM_rw(X509_REQ</argsstring>
        <name>DECLARE_PEM_rw</name>
        <param>
          <type><ref refid="structx509__cert__pair__st" kindref="compound">X509_CERT_PAIR</ref></type>
        </param>
        <param>
          <type><ref refid="structx509__cert__pair__st" kindref="compound">X509_CERT_PAIR</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a5323dc412ee211d91813775eb4daf53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref></type>
        <definition>X509 X509_REQ DECLARE_PEM_write</definition>
        <argsstring>(X509_REQ_NEW, X509_REQ) DECLARE_PEM_rw(X509_CRL</argsstring>
        <name>DECLARE_PEM_write</name>
        <param>
          <type>X509_REQ_NEW</type>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a39c0485f7a5e27b82d74edb8040d22e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref></type>
        <definition>X509 X509_REQ X509_CRL DECLARE_PEM_rw</definition>
        <argsstring>(PKCS7, PKCS7) DECLARE_PEM_rw(NETSCAPE_CERT_SEQUENCE</argsstring>
        <name>DECLARE_PEM_rw</name>
        <param>
          <type><ref refid="structpkcs7__st" kindref="compound">PKCS7</ref></type>
        </param>
        <param>
          <type><ref refid="structpkcs7__st" kindref="compound">PKCS7</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a5f3eb005e6cbd52461b3ac24198de240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref></type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE DECLARE_PEM_rw</definition>
        <argsstring>(PKCS8, X509_SIG) DECLARE_PEM_rw(PKCS8_PRIV_KEY_INFO</argsstring>
        <name>DECLARE_PEM_rw</name>
        <param>
          <type>PKCS8</type>
        </param>
        <param>
          <type><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1af5f6e0493a0982a07612f4b87ffce8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref> <ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref></type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE PKCS8_PRIV_KEY_INFO DECLARE_PEM_rw_cb</definition>
        <argsstring>(RSAPrivateKey, RSA) DECLARE_PEM_rw_const(RSAPublicKey</argsstring>
        <name>DECLARE_PEM_rw_cb</name>
        <param>
          <type>RSAPrivateKey</type>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a5d8ff07e8288d9376cd92a56f89032b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref> <ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> <ref refid="structrsa__st" kindref="compound">RSA</ref></type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE PKCS8_PRIV_KEY_INFO RSA DECLARE_PEM_rw</definition>
        <argsstring>(RSA_PUBKEY, RSA) DECLARE_PEM_rw_cb(DSAPrivateKey</argsstring>
        <name>DECLARE_PEM_rw</name>
        <param>
          <type>RSA_PUBKEY</type>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a41c92e3b50166defa15fa13f57dc4e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref> <ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> <ref refid="structrsa__st" kindref="compound">RSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref></type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE PKCS8_PRIV_KEY_INFO RSA DSA DECLARE_PEM_rw</definition>
        <argsstring>(DSA_PUBKEY, DSA) DECLARE_PEM_rw_const(DSAparams</argsstring>
        <name>DECLARE_PEM_rw</name>
        <param>
          <type>DSA_PUBKEY</type>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a372cd706a567e152c1cb005b332bc327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref> <ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> <ref refid="structrsa__st" kindref="compound">RSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref></type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE PKCS8_PRIV_KEY_INFO RSA DSA DSA DECLARE_PEM_rw_const</definition>
        <argsstring>(ECPKParameters, EC_GROUP) DECLARE_PEM_rw_cb(ECPrivateKey</argsstring>
        <name>DECLARE_PEM_rw_const</name>
        <param>
          <type>ECPKParameters</type>
        </param>
        <param>
          <type>EC_GROUP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a0150d6aba91da5e8fa7250a8ff31a152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref> <ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> <ref refid="structrsa__st" kindref="compound">RSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref> EC_KEY</type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE PKCS8_PRIV_KEY_INFO RSA DSA DSA EC_KEY DECLARE_PEM_rw</definition>
        <argsstring>(EC_PUBKEY, EC_KEY) DECLARE_PEM_rw_const(DHparams</argsstring>
        <name>DECLARE_PEM_rw</name>
        <param>
          <type>EC_PUBKEY</type>
        </param>
        <param>
          <type>EC_KEY</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a07b23b0a8315e85603af9c633700f0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref> <ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> <ref refid="structrsa__st" kindref="compound">RSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref> EC_KEY <ref refid="structdh__st" kindref="compound">DH</ref></type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE PKCS8_PRIV_KEY_INFO RSA DSA DSA EC_KEY DH DECLARE_PEM_rw_cb</definition>
        <argsstring>(PrivateKey, EVP_PKEY) DECLARE_PEM_rw(PUBKEY</argsstring>
        <name>DECLARE_PEM_rw_cb</name>
        <param>
          <type>PrivateKey</type>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="509" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a577dbfae18d23f65b57de100ba57cd2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> <ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref> <ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> <ref refid="structrsa__st" kindref="compound">RSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref> <ref refid="structdsa__st" kindref="compound">DSA</ref> EC_KEY <ref refid="structdh__st" kindref="compound">DH</ref> <ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> int</type>
        <definition>X509 X509_REQ X509_CRL NETSCAPE_CERT_SEQUENCE PKCS8_PRIV_KEY_INFO RSA DSA DSA EC_KEY DH EVP_PKEY int PEM_write_bio_PKCS8PrivateKey_nid</definition>
        <argsstring>(BIO *bp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)</argsstring>
        <name>PEM_write_bio_PKCS8PrivateKey_nid</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="513" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a5c2aa845bcfe8cf14ff1cab03545089f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_write_bio_PKCS8PrivateKey</definition>
        <argsstring>(BIO *, EVP_PKEY *, const EVP_CIPHER *, char *, int, pem_password_cb *, void *)</argsstring>
        <name>PEM_write_bio_PKCS8PrivateKey</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        </param>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
        </param>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>pem_password_cb *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1af78d4fdd301dc0cfb63f8fe385600b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8PrivateKey_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY *x, const EVP_CIPHER *enc, char *kstr, int klen, pem_password_cb *cb, void *u)</argsstring>
        <name>i2d_PKCS8PrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a3f7185b88164e1c9369faedfde0b58f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8PrivateKey_nid_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)</argsstring>
        <name>i2d_PKCS8PrivateKey_nid_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a38a69ce78251cfb5f17bba1562585968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* d2i_PKCS8PrivateKey_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY **x, pem_password_cb *cb, void *u)</argsstring>
        <name>d2i_PKCS8PrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1af7c39e232a03a14f4915032cbd1068af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8PrivateKey_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY *x, const EVP_CIPHER *enc, char *kstr, int klen, pem_password_cb *cb, void *u)</argsstring>
        <name>i2d_PKCS8PrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a6559e8dea744f500a32a72d2025674ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8PrivateKey_nid_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)</argsstring>
        <name>i2d_PKCS8PrivateKey_nid_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a079b2e180356a40c21c54a2467cc9365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_write_PKCS8PrivateKey_nid</definition>
        <argsstring>(FILE *fp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)</argsstring>
        <name>PEM_write_PKCS8PrivateKey_nid</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1afdc7450dc7ba529ed0ed3df35164a450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* d2i_PKCS8PrivateKey_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY **x, pem_password_cb *cb, void *u)</argsstring>
        <name>d2i_PKCS8PrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a5e867a15f12cf7a608efbf996ddfa469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_write_PKCS8PrivateKey</definition>
        <argsstring>(FILE *fp, EVP_PKEY *x, const EVP_CIPHER *enc, char *kstr, int klen, pem_password_cb *cd, void *u)</argsstring>
        <name>PEM_write_PKCS8PrivateKey</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>klen</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1ab8d2112d44a3a56e9bbf2a2c50fc6ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* PEM_read_bio_Parameters</definition>
        <argsstring>(BIO *bp, EVP_PKEY **x)</argsstring>
        <name>PEM_read_bio_Parameters</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a20f9628ea45dcac3067705007c6389a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEM_write_bio_Parameters</definition>
        <argsstring>(BIO *bp, EVP_PKEY *x)</argsstring>
        <name>PEM_write_bio_Parameters</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a14f5011a4ce4be1c61e383d1e379dfa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* b2i_PrivateKey</definition>
        <argsstring>(const unsigned char **in, long length)</argsstring>
        <name>b2i_PrivateKey</name>
        <param>
          <type>const unsigned char **</type>
          <declname>in</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a27114f901ce85bc2e7da88acc74c1a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* b2i_PublicKey</definition>
        <argsstring>(const unsigned char **in, long length)</argsstring>
        <name>b2i_PublicKey</name>
        <param>
          <type>const unsigned char **</type>
          <declname>in</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1ad0879c740a44fbb75a7fa6a17b2a7265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* b2i_PrivateKey_bio</definition>
        <argsstring>(BIO *in)</argsstring>
        <name>b2i_PrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="547" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a8e513510bd6dad8064212efdddaedcd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* b2i_PublicKey_bio</definition>
        <argsstring>(BIO *in)</argsstring>
        <name>b2i_PublicKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1ac570dc2c232adc20b142c9559a5db424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2b_PrivateKey_bio</definition>
        <argsstring>(BIO *out, EVP_PKEY *pk)</argsstring>
        <name>i2b_PrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a84890753b7452b8f9db6cc52c3459b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2b_PublicKey_bio</definition>
        <argsstring>(BIO *out, EVP_PKEY *pk)</argsstring>
        <name>i2b_PublicKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a3534afa044cbfd9b1cf8cbdbe8e4efe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* b2i_PVK_bio</definition>
        <argsstring>(BIO *in, pem_password_cb *cb, void *u)</argsstring>
        <name>b2i_PVK_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a7e84e359e8f84b3d5000daa73f4ed1cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2b_PVK_bio</definition>
        <argsstring>(BIO *out, EVP_PKEY *pk, int enclevel, pem_password_cb *cb, void *u)</argsstring>
        <name>i2b_PVK_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enclevel</declname>
        </param>
        <param>
          <type>pem_password_cb *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pem_8h_1a3a956f2a45b7ed5eafd3f298c5393237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_PEM_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_PEM_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/pem.h" line="562" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/pem/pem.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1997<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_PEM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_PEM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/e_os2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/stack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/x509.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/pem2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_BUFSIZE<sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_UNDEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_X509<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_X509_REQ<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_CRL<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_SSL_SESSION<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PRIV_KEY<sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PRIV_RSA<sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PRIV_DSA<sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PRIV_DH<sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PUB_RSA<sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PUB_DSA<sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PUB_DH<sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_DHPARAMS<sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_DSAPARAMS<sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PRIV_RSA_PUBLIC<sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PRIV_ECDSA<sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_PUB_ECDSA<sp/><sp/><sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_OBJ_ECPARAMETERS<sp/><sp/><sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_DEK_DES_CBC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_DEK_IDEA_CBC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>45</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_DEK_DES_EDE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_DEK_DES_ECB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_DEK_RSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_DEK_RSA_MD2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_DEK_RSA_MD5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>90</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_MD_MD2<sp/><sp/><sp/><sp/><sp/><sp/>NID_md2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_MD_MD5<sp/><sp/><sp/><sp/><sp/><sp/>NID_md5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_MD_SHA<sp/><sp/><sp/><sp/><sp/><sp/>NID_sha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_MD_MD2_RSA<sp/><sp/><sp/><sp/><sp/><sp/>NID_md2WithRSAEncryption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_MD_MD5_RSA<sp/><sp/><sp/><sp/><sp/><sp/>NID_md5WithRSAEncryption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_MD_SHA_RSA<sp/><sp/><sp/><sp/><sp/><sp/>NID_sha1WithRSAEncryption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_X509_OLD<sp/>&quot;X509<sp/>CERTIFICATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_X509<sp/><sp/><sp/><sp/><sp/>&quot;CERTIFICATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_X509_PAIR<sp/><sp/><sp/><sp/>&quot;CERTIFICATE<sp/>PAIR&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_X509_TRUSTED<sp/>&quot;TRUSTED<sp/>CERTIFICATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_X509_REQ_OLD<sp/>&quot;NEW<sp/>CERTIFICATE<sp/>REQUEST&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_X509_REQ<sp/>&quot;CERTIFICATE<sp/>REQUEST&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_X509_CRL<sp/>&quot;X509<sp/>CRL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_EVP_PKEY<sp/>&quot;ANY<sp/>PRIVATE<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_PUBLIC<sp/><sp/><sp/>&quot;PUBLIC<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_RSA<sp/><sp/><sp/><sp/><sp/><sp/>&quot;RSA<sp/>PRIVATE<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_RSA_PUBLIC<sp/><sp/><sp/>&quot;RSA<sp/>PUBLIC<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_DSA<sp/><sp/><sp/><sp/><sp/><sp/>&quot;DSA<sp/>PRIVATE<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_DSA_PUBLIC<sp/><sp/><sp/>&quot;DSA<sp/>PUBLIC<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_PKCS7<sp/><sp/><sp/><sp/>&quot;PKCS7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_PKCS7_SIGNED<sp/>&quot;PKCS<sp/>#7<sp/>SIGNED<sp/>DATA&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_PKCS8<sp/><sp/><sp/><sp/>&quot;ENCRYPTED<sp/>PRIVATE<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_PKCS8INF<sp/>&quot;PRIVATE<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_DHPARAMS<sp/>&quot;DH<sp/>PARAMETERS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_SSL_SESSION<sp/><sp/>&quot;SSL<sp/>SESSION<sp/>PARAMETERS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_DSAPARAMS<sp/><sp/><sp/><sp/>&quot;DSA<sp/>PARAMETERS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_ECDSA_PUBLIC<sp/>&quot;ECDSA<sp/>PUBLIC<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_ECPARAMETERS<sp/>&quot;EC<sp/>PARAMETERS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_ECPRIVATEKEY<sp/>&quot;EC<sp/>PRIVATE<sp/>KEY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_PARAMETERS<sp/><sp/><sp/>&quot;PARAMETERS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_STRING_CMS<sp/><sp/><sp/><sp/><sp/><sp/>&quot;CMS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>this<sp/>structure<sp/>is<sp/>initialised<sp/>by<sp/>PEM_SealInit<sp/>and<sp/>cleaned<sp/>up</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>by<sp/>PEM_SealFinal<sp/>(at<sp/>least<sp/>for<sp/>now)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="struct_p_e_m___encode___seal__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_Encode_Seal_st</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structevp___encode___ctx__st" kindref="compound">EVP_ENCODE_CTX</ref><sp/>encode;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>md;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structevp__cipher__ctx__st" kindref="compound">EVP_CIPHER_CTX</ref><sp/>cipher;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_ENCODE_SEAL_CTX</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>enc_type<sp/>is<sp/>one<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_TYPE_ENCRYPTED<sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_TYPE_MIC_ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_TYPE_MIC_CLEAR<sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_TYPE_CLEAR<sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structpem__recip__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpem__recip__st" kindref="compound">pem_recip_st</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*dn;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cipher;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_enc;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>char<sp/>iv[8];<sp/>unused<sp/>and<sp/>wrong<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structpem__recip__st" kindref="compound">PEM_USER</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structpem__ctx__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpem__ctx__st" kindref="compound">pem_ctx_st</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>what<sp/>type<sp/>of<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>proc_type;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*domain;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cipher;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unused,<sp/>and<sp/>wrong<sp/>size</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>iv[8];<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>DEK_info;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpem__recip__st" kindref="compound">PEM_USER</ref><sp/>*originator;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_recipient;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpem__recip__st" kindref="compound">PEM_USER</ref><sp/>**recipient;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX(ben):<sp/>don#t<sp/>think<sp/>this<sp/>is<sp/>used!<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK<sp/>*x509_chain;<sp/><sp/>/<sp/>*<sp/>certificate<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signature<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>md_enc;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>the<sp/>md<sp/>encrypted<sp/>or<sp/>not?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>md_len;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>md_data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md_data;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>message<sp/>digest,<sp/>could<sp/>be<sp/>pkey<sp/>encrypted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*dec;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>date<sp/>encryption<sp/>cipher<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>key<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key;<sp/></highlight><highlight class="comment">/*<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unused,<sp/>and<sp/>wrong<sp/>size</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>iv[8];<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>data_enc;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>the<sp/>data<sp/>encrypted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_len;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structpem__ctx__st" kindref="compound">PEM_CTX</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>macros<sp/>make<sp/>the<sp/>PEM_read/PEM_write<sp/>functions<sp/>easier<sp/>to<sp/>maintain<sp/>and</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>write.<sp/>Now<sp/>they<sp/>are<sp/>all<sp/>implemented<sp/>with<sp/>either:</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>IMPLEMENT_PEM_rw(...)<sp/>or<sp/>IMPLEMENT_PEM_rw_cb(...)</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_NO_FP_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_read_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_fp_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb_fp_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_read_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor">type<sp/>*PEM_read_##name(FILE<sp/>*fp,<sp/>type<sp/>**x,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u)\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor">return<sp/>PEM_ASN1_read((d2i_of_void<sp/>*)d2i_##asn1,<sp/>str,fp,(void<sp/>**)x,cb,u);<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor">}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor">int<sp/>PEM_write_##name(FILE<sp/>*fp,<sp/>type<sp/>*x)<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor">return<sp/>PEM_ASN1_write((i2d_of_void<sp/>*)i2d_##asn1,str,fp,x,NULL,NULL,0,NULL,NULL);<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_fp_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor">int<sp/>PEM_write_##name(FILE<sp/>*fp,<sp/>const<sp/>type<sp/>*x)<sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor">return<sp/>PEM_ASN1_write((i2d_of_void<sp/>*)i2d_##asn1,str,fp,(void<sp/>*)x,NULL,NULL,0,NULL,NULL);<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor">int<sp/>PEM_write_##name(FILE<sp/>*fp,<sp/>type<sp/>*x,<sp/>const<sp/>EVP_CIPHER<sp/>*enc,<sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*kstr,<sp/>int<sp/>klen,<sp/>pem_password_cb<sp/>*cb,<sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>*u)<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>PEM_ASN1_write((i2d_of_void<sp/>*)i2d_##asn1,str,fp,x,enc,kstr,klen,cb,u);<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb_fp_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor">int<sp/>PEM_write_##name(FILE<sp/>*fp,<sp/>type<sp/>*x,<sp/>const<sp/>EVP_CIPHER<sp/>*enc,<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*kstr,<sp/>int<sp/>klen,<sp/>pem_password_cb<sp/>*cb,<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>*u)<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>PEM_ASN1_write((i2d_of_void<sp/>*)i2d_##asn1,str,fp,x,enc,kstr,klen,cb,u);<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_read_bio(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor">type<sp/>*PEM_read_bio_##name(BIO<sp/>*bp,<sp/>type<sp/>**x,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u)\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor">return<sp/>PEM_ASN1_read_bio((d2i_of_void<sp/>*)d2i_##asn1,<sp/>str,bp,(void<sp/>**)x,cb,u);<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_bio(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor">int<sp/>PEM_write_bio_##name(BIO<sp/>*bp,<sp/>type<sp/>*x)<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor">return<sp/>PEM_ASN1_write_bio((i2d_of_void<sp/>*)i2d_##asn1,str,bp,x,NULL,NULL,0,NULL,NULL);<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_bio_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor">int<sp/>PEM_write_bio_##name(BIO<sp/>*bp,<sp/>const<sp/>type<sp/>*x)<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor">return<sp/>PEM_ASN1_write_bio((i2d_of_void<sp/>*)i2d_##asn1,str,bp,(void<sp/>*)x,NULL,NULL,0,NULL,NULL);<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb_bio(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor">int<sp/>PEM_write_bio_##name(BIO<sp/>*bp,<sp/>type<sp/>*x,<sp/>const<sp/>EVP_CIPHER<sp/>*enc,<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*kstr,<sp/>int<sp/>klen,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u)<sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>PEM_ASN1_write_bio((i2d_of_void<sp/>*)i2d_##asn1,str,bp,x,enc,kstr,klen,cb,u);<sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb_bio_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor">int<sp/>PEM_write_bio_##name(BIO<sp/>*bp,<sp/>type<sp/>*x,<sp/>const<sp/>EVP_CIPHER<sp/>*enc,<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*kstr,<sp/>int<sp/>klen,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u)<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>PEM_ASN1_write_bio((i2d_of_void<sp/>*)i2d_##asn1,str,bp,(void<sp/>*)x,enc,kstr,klen,cb,u);<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_bio(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_bio_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_fp_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_cb_bio(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_cb_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_write_cb_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_cb_bio_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_cb_fp_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_read(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_read_bio(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_read_fp(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_rw(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_read(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write(name,<sp/>type,<sp/>str,<sp/>asn1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_rw_const(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_read(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_const(name,<sp/>type,<sp/>str,<sp/>asn1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_PEM_rw_cb(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_read(name,<sp/>type,<sp/>str,<sp/>asn1)<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_PEM_write_cb(name,<sp/>type,<sp/>str,<sp/>asn1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>same<sp/>except<sp/>they<sp/>are<sp/>for<sp/>the<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OPENSSL_NO_FP_API)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_read_fp(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_fp(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_cb_fp(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_read_fp(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>type<sp/>*PEM_read_##name(FILE<sp/>*fp,<sp/>type<sp/>**x,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_fp(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>PEM_write_##name(FILE<sp/>*fp,<sp/>type<sp/>*x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_fp_const(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>PEM_write_##name(FILE<sp/>*fp,<sp/>const<sp/>type<sp/>*x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_cb_fp(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>PEM_write_##name(FILE<sp/>*fp,<sp/>type<sp/>*x,<sp/>const<sp/>EVP_CIPHER<sp/>*enc,<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*kstr,<sp/>int<sp/>klen,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_read_bio(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>type<sp/>*PEM_read_bio_##name(BIO<sp/>*bp,<sp/>type<sp/>**x,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_bio(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>PEM_write_bio_##name(BIO<sp/>*bp,<sp/>type<sp/>*x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_bio_const(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>PEM_write_bio_##name(BIO<sp/>*bp,<sp/>const<sp/>type<sp/>*x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_cb_bio(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>PEM_write_bio_##name(BIO<sp/>*bp,<sp/>type<sp/>*x,<sp/>const<sp/>EVP_CIPHER<sp/>*enc,<sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*kstr,<sp/>int<sp/>klen,<sp/>pem_password_cb<sp/>*cb,<sp/>void<sp/>*u);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_read_bio(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_bio(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_bio_const(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_cb_bio(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_bio(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_fp(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_const(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_bio_const(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_fp_const(name,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_write_cb(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_cb_bio(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_cb_fp(name,<sp/>type)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_read(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_read_bio(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_read_fp(name,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_rw(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_read(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write(name,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_rw_const(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_read(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_const(name,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_PEM_rw_cb(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_read(name,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_PEM_write_cb(name,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;userdata&quot;:<sp/>new<sp/>with<sp/>OpenSSL<sp/>0.9.4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pem_password_cb(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rwflag,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OpenSSL<sp/>0.9.3,<sp/>0.9.3a<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pem_password_cb(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rwflag);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_get_EVP_CIPHER_INFO(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*header,<sp/><ref refid="structevp__cipher__info__st" kindref="compound">EVP_CIPHER_INFO</ref><sp/>*cipher);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_do_header<sp/>(<ref refid="structevp__cipher__info__st" kindref="compound">EVP_CIPHER_INFO</ref><sp/>*cipher,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*len,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*callback,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_read_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**header,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**data,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hdr,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_bytes_read_bio(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pdata,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*plen,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pnm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/>PEM_ASN1_read_bio(d2i_of_void<sp/>*d2i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**x,<sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_ASN1_write_bio(i2d_of_void<sp/>*i2d,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*enc,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">STACK_OF(<ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref>)<sp/>*<sp/><sp/><sp/>PEM_X509_INFO_read_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/>STACK_OF(<ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref>)<sp/>*sk,<sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_X509_INFO_write_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref><sp/>*xi,<sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*enc,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,<sp/>pem_password_cb<sp/>*cd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_read(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**header,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**data,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write(FILE<sp/>*fp,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hdr,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/>PEM_ASN1_read(d2i_of_void<sp/>*d2i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**x,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_ASN1_write(i2d_of_void<sp/>*i2d,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,FILE<sp/>*fp,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*enc,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,pem_password_cb<sp/>*callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">STACK_OF(<ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref>)<sp/>*<sp/><sp/><sp/>PEM_X509_INFO_read(FILE<sp/>*fp,<sp/>STACK_OF(<ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref>)<sp/>*sk,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_SealInit(<ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_ENCODE_SEAL_CTX</ref><sp/>*ctx,<sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*type,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md_type,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**ek,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ekl,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iv,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**pubk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>npubk);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PEM_SealUpdate(<ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_ENCODE_SEAL_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outl,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inl);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_SealFinal(<ref refid="struct_p_e_m___encode___seal__st" kindref="compound">PEM_ENCODE_SEAL_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sig,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sigl,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outl,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*priv);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PEM_SignInit(<ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>*ctx,<sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PEM_SignUpdate(<ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>*ctx,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_SignFinal(<ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sigret,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*siglen,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_def_callback(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PEM_proc_type(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PEM_dek_info(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/symhacks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">DECLARE_PEM_rw(<ref refid="structx509__st" kindref="compound">X509</ref>,<sp/><ref refid="structx509__st" kindref="compound">X509</ref>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">DECLARE_PEM_rw(X509_AUX,<sp/><ref refid="structx509__st" kindref="compound">X509</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">DECLARE_PEM_rw(<ref refid="structx509__cert__pair__st" kindref="compound">X509_CERT_PAIR</ref>,<sp/><ref refid="structx509__cert__pair__st" kindref="compound">X509_CERT_PAIR</ref>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">DECLARE_PEM_rw(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref>,<sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">DECLARE_PEM_write(X509_REQ_NEW,<sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">DECLARE_PEM_rw(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">DECLARE_PEM_rw(<ref refid="structpkcs7__st" kindref="compound">PKCS7</ref>,<sp/><ref refid="structpkcs7__st" kindref="compound">PKCS7</ref>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">DECLARE_PEM_rw(<ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref>,<sp/><ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">DECLARE_PEM_rw(PKCS8,<sp/><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">DECLARE_PEM_rw(<ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref>,<sp/><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">DECLARE_PEM_rw_cb(RSAPrivateKey,<sp/><ref refid="structrsa__st" kindref="compound">RSA</ref>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">DECLARE_PEM_rw_const(RSAPublicKey,<sp/><ref refid="structrsa__st" kindref="compound">RSA</ref>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">DECLARE_PEM_rw(RSA_PUBKEY,<sp/><ref refid="structrsa__st" kindref="compound">RSA</ref>)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">DECLARE_PEM_rw_cb(DSAPrivateKey,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">DECLARE_PEM_rw(DSA_PUBKEY,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">DECLARE_PEM_rw_const(DSAparams,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref>)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">DECLARE_PEM_rw_const(ECPKParameters,<sp/>EC_GROUP)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">DECLARE_PEM_rw_cb(ECPrivateKey,<sp/>EC_KEY)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">DECLARE_PEM_rw(EC_PUBKEY,<sp/>EC_KEY)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">DECLARE_PEM_rw_const(DHparams,<sp/><ref refid="structdh__st" kindref="compound">DH</ref>)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">DECLARE_PEM_rw_cb(PrivateKey,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref>)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">DECLARE_PEM_rw(PUBKEY,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write_bio_PKCS8PrivateKey_nid(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write_bio_PKCS8PrivateKey(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>pem_password_cb<sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8PrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*enc,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8PrivateKey_nid_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*d2i_PKCS8PrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**x,<sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8PrivateKey_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*enc,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8PrivateKey_nid_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write_PKCS8PrivateKey_nid(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*d2i_PKCS8PrivateKey_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**x,<sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write_PKCS8PrivateKey(FILE<sp/>*fp,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*enc,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kstr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>klen,<sp/>pem_password_cb<sp/>*cd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*PEM_read_bio_Parameters(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**x);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEM_write_bio_Parameters(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*x);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*b2i_PrivateKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*b2i_PublicKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*b2i_PrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*b2i_PublicKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2b_PrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pk);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2b_PublicKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pk);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RC4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*b2i_PVK_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*in,<sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2b_PVK_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enclevel,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pem_password_cb<sp/>*cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*u);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_PEM_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>PEM<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_B2I_DSS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_B2I_PVK_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_B2I_RSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>129</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_CHECK_BITLEN_DSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_CHECK_BITLEN_RSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>131</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_D2I_PKCS8PRIVATEKEY_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_D2I_PKCS8PRIVATEKEY_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_DO_B2I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>132</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_DO_B2I_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>133</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_DO_BLOB_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>134</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_DO_PK8PKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_DO_PK8PKEY_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_DO_PVK_BODY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>135</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_DO_PVK_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_I2B_PVK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>137</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_I2B_PVK_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>138</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_LOAD_IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_ASN1_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_ASN1_READ_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_ASN1_WRITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_ASN1_WRITE_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_DEF_CALLBACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_DO_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_F_PEM_WRITE_PKCS8PRIVATEKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_GET_EVP_CIPHER_INFO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_PK8PKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_READ_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_READ_BIO_PARAMETERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>140</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_READ_BIO_PRIVATEKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_READ_PRIVATEKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_SEALFINAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_SEALINIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_SIGNFINAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_WRITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_WRITE_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_WRITE_PRIVATEKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>139</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_X509_INFO_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_X509_INFO_READ_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_F_PEM_X509_INFO_WRITE_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BAD_BASE64_DECODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BAD_DECRYPT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BAD_END_LINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BAD_IV_CHARS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BAD_MAGIC_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BAD_PASSWORD_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BAD_VERSION_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_BIO_WRITE_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_CIPHER_IS_NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_ERROR_CONVERTING_PRIVATE_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_EXPECTING_PRIVATE_KEY_BLOB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_EXPECTING_PUBLIC_KEY_BLOB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_INCONSISTENT_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_KEYBLOB_HEADER_PARSE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>122</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_KEYBLOB_TOO_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_NOT_DEK_INFO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_NOT_ENCRYPTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_NOT_PROC_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_NO_START_LINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_PROBLEMS_GETTING_PASSWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_PUBLIC_KEY_NO_RSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_PVK_DATA_TOO_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_PVK_TOO_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_READ_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_SHORT_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_UNSUPPORTED_CIPHER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_UNSUPPORTED_ENCRYPTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PEM_R_UNSUPPORTED_KEY_COMPONENTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/pem.h"/>
  </compounddef>
</doxygen>
