<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="test__bbox_8c" kind="file" language="C++">
    <compoundname>test_bbox.c</compoundname>
    <includes local="no">ft2build.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="81072">
        <label>ft2build.h</label>
      </node>
      <node id="81073">
        <label>time.h</label>
      </node>
      <node id="81071">
        <label>thirdparty/freetype/src/tools/test_bbox.c</label>
        <link refid="test__bbox_8c"/>
        <childnode refid="81072" relation="include">
        </childnode>
        <childnode refid="81073" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__bbox_8c_1af14a0339b60aec4d8306dcba0032450f" prot="public" static="no">
        <name>XSCALE</name>
        <initializer>65536</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="26" column="10" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__bbox_8c_1a79044b7f55c886548600d63d09950ff8" prot="public" static="no">
        <name>XX</name>
        <param><defname>x</defname></param>
        <initializer>((FT_Pos)(x*XSCALE))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="27" column="10" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__bbox_8c_1a93ccc31578679e8584ba6d40a7b7be8d" prot="public" static="no">
        <name>XVEC</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>{ XX(x), XX(y) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="28" column="10" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__bbox_8c_1abb0cdf99c5e3670b1fc6fbf9ca1e7ab4" prot="public" static="no">
        <name>XVAL</name>
        <param><defname>x</defname></param>
        <initializer>((x)/(1.0*XSCALE))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="29" column="10" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__bbox_8c_1a2c9384c67919c632913b8db2088f8341" prot="public" static="no">
        <name>REPEAT</name>
        <initializer>1000000L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="173" column="9" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__bbox_8c_1a94689fc9f04d9ea4d204487c95aceacf" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref></type>
        <definition>FT_Vector dummy_vec_1[4]</definition>
        <argsstring>[4]</argsstring>
        <name>dummy_vec_1</name>
        <initializer>=
  {

    XVEC( 408.9111, 535.3164 ),
    XVEC( 455.8887, 634.396  ),
    XVEC( -37.8765, 786.2207 ),







   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="32" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__bbox_8c_1a311436044ebf4db2a4eff0d37564c751" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char dummy_tag_1[4]</definition>
        <argsstring>[4]</argsstring>
        <name>dummy_tag_1</name>
        <initializer>=
  {
    FT_CURVE_TAG_ON,
    FT_CURVE_TAG_CUBIC,
    FT_CURVE_TAG_CUBIC,
    FT_CURVE_TAG_ON
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="47" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__bbox_8c_1ac25e279215226e4c778f58bbb885bfef" prot="public" static="yes" mutable="no">
        <type>short</type>
        <definition>short dummy_contour_1[1]</definition>
        <argsstring>[1]</argsstring>
        <name>dummy_contour_1</name>
        <initializer>=
  {
    3
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="55" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__bbox_8c_1aff4ebea6c5afc6ecf51ec7061e66dfa1" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref></type>
        <definition>FT_Outline dummy_outline_1</definition>
        <argsstring></argsstring>
        <name>dummy_outline_1</name>
        <initializer>=
  {
    1,
    4,
    dummy_vec_1,
    dummy_tag_1,
    dummy_contour_1,
    0
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="60" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__bbox_8c_1a5657973552072f59047fc2f771f42821" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref></type>
        <definition>FT_Vector dummy_vec_2[4]</definition>
        <argsstring>[4]</argsstring>
        <name>dummy_vec_2</name>
        <initializer>=
  {
    XVEC( 100.0, 100.0 ),
    XVEC( 100.0, 200.0 ),
    XVEC( 200.0, 200.0 ),

  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="72" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__bbox_8c_1a5d147bddfb9ec86f5ff127f1196e40ce" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref></type>
        <definition>FT_Outline dummy_outline_2</definition>
        <argsstring></argsstring>
        <name>dummy_outline_2</name>
        <initializer>=
  {
    1,
    4,
    dummy_vec_2,
    dummy_tag_1,
    dummy_contour_1,
    0
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="80" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__bbox_8c_1a05ef1d26d524d546392fe197b7968912" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref></type>
        <definition>FT_Vector dummy_vec_3[4]</definition>
        <argsstring>[4]</argsstring>
        <name>dummy_vec_3</name>
        <initializer>=
  {
    XVEC( 100.0, 127.0 ),
    XVEC( 200.0, 127.0 ),
    XVEC(   0.0, 136.0 ),

  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="92" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__bbox_8c_1a891e58b05dedc0c1a4c3fd6780980dd0" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref></type>
        <definition>FT_Outline dummy_outline_3</definition>
        <argsstring></argsstring>
        <name>dummy_outline_3</name>
        <initializer>=
  {
    1,
    4,
    dummy_vec_3,
    dummy_tag_1,
    dummy_contour_1,
    0
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="100" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__bbox_8c_1a536e4eb7ce5f5bf2111598e083311d93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>static long get_time</definition>
        <argsstring>(void)</argsstring>
        <name>get_time</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="16" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="test__bbox_8c_1a931640f4c20be2b189222fa939402411" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dump_outline</definition>
        <argsstring>(FT_Outline *outline)</argsstring>
        <name>dump_outline</name>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="112" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="112" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="test__bbox_8c_1a8547875a87ec0e0a9519a62e89896df3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void profile_outline</definition>
        <argsstring>(FT_Outline *outline, long repeat)</argsstring>
        <name>profile_outline</name>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <param>
          <type>long</type>
          <declname>repeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="136" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="136" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="test__bbox_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/tools/test_bbox.c" line="175" column="1" bodyfile="thirdparty/freetype/src/tools/test_bbox.c" bodystart="175" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ft2build.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_FREETYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_BBOX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>clock()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SunOS<sp/>4.1.*<sp/>does<sp/>not<sp/>define<sp/>CLOCKS_PER_SEC,<sp/>so<sp/>include<sp/>&lt;sys/param.h&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>to<sp/>get<sp/>the<sp/>HZ<sp/>macro<sp/>which<sp/>is<sp/>the<sp/>equivalent.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__sun__)<sp/>&amp;&amp;<sp/>!defined(SVR4)<sp/>&amp;&amp;<sp/>!defined(__SVR4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/param.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOCKS_PER_SEC<sp/>HZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>get_time(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clock()<sp/>*<sp/>10000L<sp/>/<sp/>CLOCKS_PER_SEC;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>bbox<sp/>computations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>XSCALE<sp/><sp/><sp/><sp/>65536</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>XX(x)<sp/><sp/><sp/><sp/><sp/>((FT_Pos)(x*XSCALE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>XVEC(x,y)<sp/><sp/>{<sp/>XX(x),<sp/>XX(y)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>XVAL(x)<sp/><sp/><sp/>((x)/(1.0*XSCALE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>dummy<sp/>outline<sp/>#1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>dummy_vec_1[4]<sp/>=</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>408.9111,<sp/>535.3164<sp/>),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>455.8887,<sp/>634.396<sp/><sp/>),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>-37.8765,<sp/>786.2207<sp/>),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>164.6074,<sp/>535.3164<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(FT_Int32)0x0198E93DL<sp/>,<sp/>(FT_Int32)0x021750FFL<sp/>},<sp/><sp/></highlight><highlight class="comment">/*<sp/>408.9111,<sp/>535.3164<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(FT_Int32)0x01C7E312L<sp/>,<sp/>(FT_Int32)0x027A6560L<sp/>},<sp/><sp/></highlight><highlight class="comment">/*<sp/>455.8887,<sp/>634.3960<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(FT_Int32)0xFFDA1F9EL<sp/>,<sp/>(FT_Int32)0x0312387FL<sp/>},<sp/><sp/></highlight><highlight class="comment">/*<sp/>-37.8765,<sp/>786.2207<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(FT_Int32)0x00A49B7EL<sp/>,<sp/>(FT_Int32)0x021750FFL<sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>164.6074,<sp/>535.3164<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>dummy_tag_1[4]<sp/>=</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_CURVE_TAG_ON,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_CURVE_TAG_CUBIC,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_CURVE_TAG_CUBIC,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_CURVE_TAG_ON</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>dummy_contour_1[1]<sp/>=</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref><sp/><sp/>dummy_outline_1<sp/>=</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>4,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_vec_1,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_tag_1,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_contour_1,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>dummy<sp/>outline<sp/>#2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>dummy_vec_2[4]<sp/>=</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>100.0,<sp/>100.0<sp/>),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>100.0,<sp/>200.0<sp/>),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>200.0,<sp/>200.0<sp/>),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>200.0,<sp/>133.0<sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref><sp/><sp/>dummy_outline_2<sp/>=</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>4,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_vec_2,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_tag_1,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_contour_1,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>dummy<sp/>outline<sp/>#3<sp/>with<sp/>bbox<sp/>of<sp/>[0<sp/>100<sp/>128<sp/>128]<sp/>precisely<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>dummy_vec_3[4]<sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>100.0,<sp/>127.0<sp/>),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/>200.0,<sp/>127.0<sp/>),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/><sp/><sp/>0.0,<sp/>136.0<sp/>),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>XVEC(<sp/><sp/><sp/>0.0,<sp/>100.0<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref><sp/><sp/>dummy_outline_3<sp/>=</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>4,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_vec_3,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_tag_1,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_contour_1,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>dump_outline(<sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/>outline<sp/>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___b_box__" kindref="compound">FT_BBox</ref><sp/><sp/>bbox;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>and<sp/>display<sp/>cbox<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Outline_Get_CBox(<sp/>outline,<sp/>&amp;bbox<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;cbox<sp/>=<sp/>[%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMin<sp/>),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMin<sp/>),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMax<sp/>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>and<sp/>display<sp/>bbox<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Outline_Get_BBox(<sp/>outline,<sp/>&amp;bbox<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;bbox<sp/>=<sp/>[%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMin<sp/>),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMin<sp/>),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMax<sp/>),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>profile_outline(<sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/><sp/>outline,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat<sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___b_box__" kindref="compound">FT_BBox</ref><sp/><sp/>bbox;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>count;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>time0<sp/>=<sp/>get_time();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>count<sp/>=<sp/>repeat;<sp/>count<sp/>&gt;<sp/>0;<sp/>count--<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Outline_Get_CBox(<sp/>outline,<sp/>&amp;bbox<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>time0<sp/>=<sp/>get_time()<sp/>-<sp/>time0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;time<sp/>=<sp/>%6.3f<sp/>cbox<sp/>=<sp/>[%8.4f<sp/>%8.4f<sp/>%8.4f<sp/>%8.4f]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)time0/10000.0),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMin<sp/>),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMin<sp/>),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMax<sp/>),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;cbox_hex<sp/>=<sp/>[%08X<sp/>%08X<sp/>%08X<sp/>%08X]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox.xMin,<sp/>bbox.yMin,<sp/>bbox.xMax,<sp/>bbox.yMax<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>time0<sp/>=<sp/>get_time();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>count<sp/>=<sp/>repeat;<sp/>count<sp/>&gt;<sp/>0;<sp/>count--<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Outline_Get_BBox(<sp/>outline,<sp/>&amp;bbox<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>time0<sp/>=<sp/>get_time()<sp/>-<sp/>time0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;time<sp/>=<sp/>%6.3f<sp/>bbox<sp/>=<sp/>[%8.4f<sp/>%8.4f<sp/>%8.4f<sp/>%8.4f]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)time0/10000.0),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMin<sp/>),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMin<sp/>),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.xMax<sp/>),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XVAL(<sp/>bbox.yMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;bbox_hex<sp/>=<sp/>[%08X<sp/>%08X<sp/>%08X<sp/>%08X]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox.xMin,<sp/>bbox.yMin,<sp/>bbox.xMax,<sp/>bbox.yMax<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REPEAT<sp/><sp/>1000000L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>main(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/>argv<sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;outline<sp/>#1\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>profile_outline(<sp/>&amp;dummy_outline_1,<sp/>REPEAT<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;outline<sp/>#2\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>profile_outline(<sp/>&amp;dummy_outline_2,<sp/>REPEAT<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;outline<sp/>#3\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>profile_outline(<sp/>&amp;dummy_outline_3,<sp/>REPEAT<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/tools/test_bbox.c"/>
  </compounddef>
</doxygen>
