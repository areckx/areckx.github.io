<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_segment_list" kind="class" language="C++" prot="public">
    <compoundname>Ms::SegmentList</compoundname>
    <innerclass refid="class_ms_1_1_segment_list_1_1const__iterator" prot="public">Ms::SegmentList::const_iterator</innerclass>
    <innerclass refid="class_ms_1_1_segment_list_1_1iterator" prot="public">Ms::SegmentList::iterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_segment_list_1aa5be59ff08a8ab4dac5dafb44419eaec" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::SegmentList::_first</definition>
        <argsstring></argsstring>
        <name>_first</name>
        <briefdescription>
<para>First item of segment list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="27" column="1" bodyfile="libmscore/segmentlist.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_list_1aefd6d75cd27aafc2a631d490e3272f13" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::SegmentList::_last</definition>
        <argsstring></argsstring>
        <name>_last</name>
        <briefdescription>
<para>Last item of segment list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="28" column="1" bodyfile="libmscore/segmentlist.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_list_1a86e5775581f833eaa505c34d49c09e8b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::SegmentList::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
<para>Number of items in segment list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="29" column="1" bodyfile="libmscore/segmentlist.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_segment_list_1ab2ec5d35cf345d7a1d6b0ad88e8f1e54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::SegmentList::SegmentList</definition>
        <argsstring>()</argsstring>
        <name>SegmentList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="32" column="1" bodyfile="libmscore/segmentlist.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1acd9c41d2ea9abcdad80daeb4b96f40e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SegmentList::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="33" column="1" bodyfile="libmscore/segmentlist.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1aaa74a232a470a6d542788401501898aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SegmentList::check</definition>
        <argsstring>()</argsstring>
        <name>check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="35" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="41" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1ae0606ed51fa60e8b42b22ab8111fe958" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment_list" kindref="compound">SegmentList</ref></type>
        <definition>SegmentList Ms::SegmentList::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="39" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="23" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a891968fad18560ed40186c7e66dd5ac4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::SegmentList::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="40" column="1" bodyfile="libmscore/segmentlist.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a1c5127040399ae54ec30a8e1d19a28d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::SegmentList::first</definition>
        <argsstring>() const</argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="42" column="1" bodyfile="libmscore/segmentlist.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1ab0ef3e89f4caa968c4b257614609e3b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::SegmentList::first</definition>
        <argsstring>(SegmentType) const</argsstring>
        <name>first</name>
        <param>
          <type>SegmentType</type>
          <defname>types</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="43" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="204" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1ae3c78e334cda26e0207c6b4b70bb78db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::SegmentList::last</definition>
        <argsstring>() const</argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="45" column="1" bodyfile="libmscore/segmentlist.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a8597ccbc5e7745a6d24b34aa0581c8b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::SegmentList::firstCRSegment</definition>
        <argsstring>() const</argsstring>
        <name>firstCRSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="46" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1aaa8aee7ee1e871e4a84ab15547c5e38a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SegmentList::remove</definition>
        <argsstring>(Segment *)</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="47" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="123" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1af65d20a9f590f21dc45b7621d8420719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SegmentList::push_back</definition>
        <argsstring>(Segment *)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="48" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="161" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a295d1d590437004d4b3def75bacfcaf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SegmentList::push_front</definition>
        <argsstring>(Segment *)</argsstring>
        <name>push_front</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="49" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="178" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a32613dcb9dd88406f7994b6d46c65d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SegmentList::insert</definition>
        <argsstring>(Segment *e, Segment *el)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>el</declname>
        </param>
        <briefdescription>
<para>Insert <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> <emphasis>e</emphasis> before <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> <emphasis>el</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="50" column="1" bodyfile="libmscore/segmentlist.cpp" bodystart="103" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a57cab05b0ff5a3acb87f181f9ef13363" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment_list_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Ms::SegmentList::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="69" column="1" bodyfile="libmscore/segmentlist.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a3f02db92ae795db772ee7d135e70a367" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment_list_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Ms::SegmentList::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="70" column="1" bodyfile="libmscore/segmentlist.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a101c8c102201035e895b5ae8d9dcd134" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment_list_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Ms::SegmentList::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="71" column="1" bodyfile="libmscore/segmentlist.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1a246e40058edc4292b584b496b6d1bfa5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment_list_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Ms::SegmentList::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="72" column="1" bodyfile="libmscore/segmentlist.h" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libmscore/segmentlist.h" line="26" column="1" bodyfile="libmscore/segmentlist.h" bodystart="26" bodyend="73"/>
    <listofallmembers>
      <member refid="class_ms_1_1_segment_list_1aa5be59ff08a8ab4dac5dafb44419eaec" prot="private" virt="non-virtual"><scope>Ms::SegmentList</scope><name>_first</name></member>
      <member refid="class_ms_1_1_segment_list_1aefd6d75cd27aafc2a631d490e3272f13" prot="private" virt="non-virtual"><scope>Ms::SegmentList</scope><name>_last</name></member>
      <member refid="class_ms_1_1_segment_list_1a86e5775581f833eaa505c34d49c09e8b" prot="private" virt="non-virtual"><scope>Ms::SegmentList</scope><name>_size</name></member>
      <member refid="class_ms_1_1_segment_list_1a57cab05b0ff5a3acb87f181f9ef13363" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>begin</name></member>
      <member refid="class_ms_1_1_segment_list_1a101c8c102201035e895b5ae8d9dcd134" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>begin</name></member>
      <member refid="class_ms_1_1_segment_list_1aaa74a232a470a6d542788401501898aa" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>check</name></member>
      <member refid="class_ms_1_1_segment_list_1acd9c41d2ea9abcdad80daeb4b96f40e2" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>clear</name></member>
      <member refid="class_ms_1_1_segment_list_1ae0606ed51fa60e8b42b22ab8111fe958" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>clone</name></member>
      <member refid="class_ms_1_1_segment_list_1a3f02db92ae795db772ee7d135e70a367" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>end</name></member>
      <member refid="class_ms_1_1_segment_list_1a246e40058edc4292b584b496b6d1bfa5" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>end</name></member>
      <member refid="class_ms_1_1_segment_list_1a1c5127040399ae54ec30a8e1d19a28d9" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>first</name></member>
      <member refid="class_ms_1_1_segment_list_1ab0ef3e89f4caa968c4b257614609e3b5" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>first</name></member>
      <member refid="class_ms_1_1_segment_list_1a8597ccbc5e7745a6d24b34aa0581c8b2" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>firstCRSegment</name></member>
      <member refid="class_ms_1_1_segment_list_1a32613dcb9dd88406f7994b6d46c65d2d" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>insert</name></member>
      <member refid="class_ms_1_1_segment_list_1ae3c78e334cda26e0207c6b4b70bb78db" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>last</name></member>
      <member refid="class_ms_1_1_segment_list_1af65d20a9f590f21dc45b7621d8420719" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>push_back</name></member>
      <member refid="class_ms_1_1_segment_list_1a295d1d590437004d4b3def75bacfcaf7" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>push_front</name></member>
      <member refid="class_ms_1_1_segment_list_1aaa8aee7ee1e871e4a84ab15547c5e38a" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>remove</name></member>
      <member refid="class_ms_1_1_segment_list_1ab2ec5d35cf345d7a1d6b0ad88e8f1e54" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>SegmentList</name></member>
      <member refid="class_ms_1_1_segment_list_1a891968fad18560ed40186c7e66dd5ac4" prot="public" virt="non-virtual"><scope>Ms::SegmentList</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
