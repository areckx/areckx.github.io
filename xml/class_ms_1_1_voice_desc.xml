<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_voice_desc" kind="class" language="C++" prot="public">
    <compoundname>Ms::VoiceDesc</compoundname>
    <includes refid="musicxmlsupport_8h" local="no">musicxmlsupport.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_voice_desc_1aee88b75ef30f8bdbd4f2d8f558ed05a3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::VoiceDesc::_chordRests[MAX_STAVES]</definition>
        <argsstring>[MAX_STAVES]</argsstring>
        <name>_chordRests</name>
        <briefdescription>
<para>The number of chordrests on each MusicXML staff. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="87" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_voice_desc_1a2ad61b3beb46693486790982ac6c301f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::VoiceDesc::_staff</definition>
        <argsstring></argsstring>
        <name>_staff</name>
        <briefdescription>
<para>The <ref refid="class_ms_1_1_muse_score" kindref="compound">MuseScore</ref> staff allocated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="88" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_voice_desc_1a0bb420423716dcbda812406581b3ca0a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::VoiceDesc::_voice</definition>
        <argsstring></argsstring>
        <name>_voice</name>
        <briefdescription>
<para>The <ref refid="class_ms_1_1_muse_score" kindref="compound">MuseScore</ref> voice allocated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="89" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_voice_desc_1ab270b57f92c3c60efd8e8b0240864324" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::VoiceDesc::_overlaps</definition>
        <argsstring></argsstring>
        <name>_overlaps</name>
        <briefdescription>
<para>This voice contains active notes in multiple staves at the same time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="90" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_voice_desc_1a61ba61785edeaf88500394e4543aa494" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::VoiceDesc::_staffAlloc[MAX_STAVES]</definition>
        <argsstring>[MAX_STAVES]</argsstring>
        <name>_staffAlloc</name>
        <briefdescription>
<para>For overlapping voices: voice is allocated on these staves (note: -2=unalloc -1=undef 1=alloc) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="91" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_voice_desc_1a94716ac8dbc1f3648fe23cbf007a9d73" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::VoiceDesc::_voices[MAX_STAVES]</definition>
        <argsstring>[MAX_STAVES]</argsstring>
        <name>_voices</name>
        <briefdescription>
<para>For every voice allocated on the staff, the voice number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="92" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1a6942edc72d80d8c538ef9061abc55800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::VoiceDesc::VoiceDesc</definition>
        <argsstring>()</argsstring>
        <name>VoiceDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="70" column="1" bodyfile="mscore/importxml.cpp" bodystart="307" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1a946c7eb8e2645cce7062221f077c92fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::VoiceDesc::incrChordRests</definition>
        <argsstring>(int s)</argsstring>
        <name>incrChordRests</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="71" column="1" bodyfile="mscore/importxml.cpp" bodystart="316" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1ae21139d8e8e852e82e800b88eefeacad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::VoiceDesc::numberChordRests</definition>
        <argsstring>() const</argsstring>
        <name>numberChordRests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="72" column="1" bodyfile="mscore/importxml.cpp" bodystart="322" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1a84a6b5804cb3c4efe4f12a54894e7e3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::VoiceDesc::numberChordRests</definition>
        <argsstring>(int s) const</argsstring>
        <name>numberChordRests</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="73" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1ad66445a58db71f67825216adb2d2767e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::VoiceDesc::preferredStaff</definition>
        <argsstring>() const</argsstring>
        <name>preferredStaff</name>
        <briefdescription>
<para>Determine preferred staff for this voice. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="74" column="1" bodyfile="mscore/importxml.cpp" bodystart="330" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1aa849ea4fa842c71a125f8b57ad3be89f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::VoiceDesc::setStaff</definition>
        <argsstring>(int s)</argsstring>
        <name>setStaff</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="75" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1abfc96628833e3796e4bc008173fe475d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::VoiceDesc::staff</definition>
        <argsstring>() const</argsstring>
        <name>staff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="76" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1a6d877646681bcd4a3b8d4bae7d1117cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::VoiceDesc::setVoice</definition>
        <argsstring>(int v)</argsstring>
        <name>setVoice</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="77" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1ae8cef2b9e33d43583d880cebb8ad98ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::VoiceDesc::voice</definition>
        <argsstring>() const</argsstring>
        <name>voice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="78" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1a348abc3cb1cd9199c4727af7b252fe2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::VoiceDesc::setVoice</definition>
        <argsstring>(int s, int v)</argsstring>
        <name>setVoice</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="79" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1abe3be6dbf2abacc074b8a36d2c7d12bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::VoiceDesc::voice</definition>
        <argsstring>(int s) const</argsstring>
        <name>voice</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="80" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1a1da9f1d3f424eac6b1cb9dd99b65608f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::VoiceDesc::setOverlap</definition>
        <argsstring>(bool b)</argsstring>
        <name>setOverlap</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="81" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1a2fea512a18e5494d6085e7b9d0e7b702" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::VoiceDesc::overlaps</definition>
        <argsstring>() const</argsstring>
        <name>overlaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="82" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1ad8fb62710a1eb836a1b0c88aa1733434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::VoiceDesc::setStaffAlloc</definition>
        <argsstring>(int s, int i)</argsstring>
        <name>setStaffAlloc</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="83" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1ad0a87575c052faf2387dd8dd6c65f642" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::VoiceDesc::staffAlloc</definition>
        <argsstring>(int s) const</argsstring>
        <name>staffAlloc</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="84" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_voice_desc_1aba50123d72d471d6af74d36a1eecb107" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::VoiceDesc::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="85" column="1" bodyfile="mscore/importxml.cpp" bodystart="342" bodyend="360"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The description of a single voice in a MusicXML part. </para>    </detaileddescription>
    <location file="mscore/musicxmlsupport.h" line="68" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="68" bodyend="93"/>
    <listofallmembers>
      <member refid="class_ms_1_1_voice_desc_1aee88b75ef30f8bdbd4f2d8f558ed05a3" prot="private" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>_chordRests</name></member>
      <member refid="class_ms_1_1_voice_desc_1ab270b57f92c3c60efd8e8b0240864324" prot="private" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>_overlaps</name></member>
      <member refid="class_ms_1_1_voice_desc_1a2ad61b3beb46693486790982ac6c301f" prot="private" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>_staff</name></member>
      <member refid="class_ms_1_1_voice_desc_1a61ba61785edeaf88500394e4543aa494" prot="private" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>_staffAlloc</name></member>
      <member refid="class_ms_1_1_voice_desc_1a0bb420423716dcbda812406581b3ca0a" prot="private" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>_voice</name></member>
      <member refid="class_ms_1_1_voice_desc_1a94716ac8dbc1f3648fe23cbf007a9d73" prot="private" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>_voices</name></member>
      <member refid="class_ms_1_1_voice_desc_1a946c7eb8e2645cce7062221f077c92fe" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>incrChordRests</name></member>
      <member refid="class_ms_1_1_voice_desc_1ae21139d8e8e852e82e800b88eefeacad" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>numberChordRests</name></member>
      <member refid="class_ms_1_1_voice_desc_1a84a6b5804cb3c4efe4f12a54894e7e3e" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>numberChordRests</name></member>
      <member refid="class_ms_1_1_voice_desc_1a2fea512a18e5494d6085e7b9d0e7b702" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>overlaps</name></member>
      <member refid="class_ms_1_1_voice_desc_1ad66445a58db71f67825216adb2d2767e" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>preferredStaff</name></member>
      <member refid="class_ms_1_1_voice_desc_1a1da9f1d3f424eac6b1cb9dd99b65608f" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>setOverlap</name></member>
      <member refid="class_ms_1_1_voice_desc_1aa849ea4fa842c71a125f8b57ad3be89f" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>setStaff</name></member>
      <member refid="class_ms_1_1_voice_desc_1ad8fb62710a1eb836a1b0c88aa1733434" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>setStaffAlloc</name></member>
      <member refid="class_ms_1_1_voice_desc_1a6d877646681bcd4a3b8d4bae7d1117cf" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>setVoice</name></member>
      <member refid="class_ms_1_1_voice_desc_1a348abc3cb1cd9199c4727af7b252fe2f" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>setVoice</name></member>
      <member refid="class_ms_1_1_voice_desc_1abfc96628833e3796e4bc008173fe475d" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>staff</name></member>
      <member refid="class_ms_1_1_voice_desc_1ad0a87575c052faf2387dd8dd6c65f642" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>staffAlloc</name></member>
      <member refid="class_ms_1_1_voice_desc_1aba50123d72d471d6af74d36a1eecb107" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>toString</name></member>
      <member refid="class_ms_1_1_voice_desc_1ae8cef2b9e33d43583d880cebb8ad98ef" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>voice</name></member>
      <member refid="class_ms_1_1_voice_desc_1abe3be6dbf2abacc074b8a36d2c7d12bc" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>voice</name></member>
      <member refid="class_ms_1_1_voice_desc_1a6942edc72d80d8c538ef9061abc55800" prot="public" virt="non-virtual"><scope>Ms::VoiceDesc</scope><name>VoiceDesc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
