<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="omr_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline></codeline>
<codeline><highlight class="normal">#Updates<sp/>on<sp/>Optical<sp/>Music<sp/>Recognition<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###Graphical<sp/>Model<sp/>for<sp/>System<sp/>Identification</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>We<sp/>can<sp/>simply<sp/>use<sp/>vertical<sp/>line<sp/>detection<sp/>to<sp/>find<sp/>bar<sp/>lines.<sp/>But<sp/>the<sp/>detection<sp/>performance<sp/>is<sp/>unreliable<sp/>due<sp/>to<sp/>noise<sp/>such<sp/>as<sp/>note<sp/>stems<sp/>or<sp/>lines<sp/>in<sp/>text.<sp/>The<sp/>other<sp/>problem<sp/>of<sp/>solely<sp/>relying<sp/>on<sp/>line<sp/>detection<sp/>is<sp/>that<sp/>we<sp/>can<sp/>hardly<sp/>interpret<sp/>the<sp/>structure<sp/>of<sp/>systems<sp/>based<sp/>on<sp/>what<sp/>has<sp/>been<sp/>detected.<sp/>The<sp/>solution<sp/>to<sp/>this<sp/>problem<sp/>is<sp/>using<sp/>a<sp/>graphical<sp/>model<sp/>to<sp/>represent<sp/>the<sp/>system<sp/>structure<sp/>and<sp/>encode<sp/>useful<sp/>distance<sp/>or<sp/>non-overlapping<sp/>constraints,<sp/>with<sp/>which<sp/>we<sp/>can<sp/>determine<sp/>the<sp/>grouping<sp/>of<sp/>staves<sp/>into<sp/>systems<sp/>and<sp/>the<sp/>location<sp/>of<sp/>barlines<sp/>in<sp/>each<sp/>system<sp/>at<sp/>the<sp/>same<sp/>time<sp/>(simultaneously<sp/>estimate<sp/>both).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">2.<sp/>Suppose<sp/>we<sp/>have<sp/>n<sp/>staves<sp/>(n-1<sp/>gaps),<sp/>then<sp/>there&apos;ll<sp/>be<sp/>2^(n-1)<sp/>ways<sp/>of<sp/>grouping<sp/>systems<sp/>if<sp/>taking<sp/>each<sp/>gap<sp/>as<sp/>a<sp/>binary<sp/>switch<sp/>connecting<sp/>or<sp/>not<sp/>connecting<sp/>the<sp/>adjacent<sp/>staves.<sp/>In<sp/>each<sp/>system<sp/>(staff<sp/>group),<sp/>barline<sp/>positions<sp/>will<sp/>be<sp/>commonly<sp/>shared<sp/>(a<sp/>very<sp/>strong<sp/>and<sp/>useful<sp/>constriant!).<sp/>We<sp/>can<sp/>use<sp/>a<sp/>nested<sp/>dynamic<sp/>programming<sp/>to<sp/>solve<sp/>this<sp/>problem.<sp/>The<sp/>optimal<sp/>hypothesis<sp/>(how<sp/>the<sp/>staves<sp/>are<sp/>grouped<sp/>together)<sp/>until<sp/>the<sp/>k-th<sp/>stave<sp/>yielding<sp/>the<sp/>max<sp/>score<sp/>h(k)<sp/>=<sp/>max(h(i)<sp/>+<sp/>system(i+1,<sp/>...,<sp/>k)),<sp/>based<sp/>on<sp/>previous<sp/>optimal<sp/>hypotheses<sp/>h(i),<sp/>i=<sp/>1,2,...,k-1.</highlight></codeline>
<codeline><highlight class="normal">In<sp/>each<sp/>hypothesized<sp/>system(i,...,j)<sp/>from<sp/>i-th<sp/>to<sp/>j-th<sp/>staves,<sp/>we<sp/>recognize<sp/>shared<sp/>barlines<sp/>from<sp/>left<sp/>to<sp/>right<sp/>by<sp/>finding<sp/>the<sp/>best<sp/>scoring<sp/>configuration</highlight></codeline>
<codeline><highlight class="normal">b_opt<sp/>=<sp/>max(b(k1)<sp/>+<sp/>b(k2)<sp/>+<sp/>...<sp/>+<sp/>b(kn))<sp/>supposing<sp/>each<sp/>horizontal<sp/>location<sp/>corresponds<sp/>to<sp/>a<sp/>bar<sp/>or<sp/>just<sp/>background,<sp/>where<sp/>b(.)<sp/>is<sp/>the<sp/>scoring<sp/>function<sp/>for<sp/>barline<sp/>in<sp/>that<sp/>column.<sp/>We<sp/>can<sp/>also<sp/>incorporate<sp/>negative<sp/>constraints<sp/>(clef,<sp/>key<sp/>sigs,<sp/>time<sp/>sigs,<sp/>or<sp/>note<sp/>stem)<sp/>into<sp/>this<sp/>bar<sp/>line<sp/>recognition<sp/>process.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;!--Likelihood<sp/>Model<sp/>for<sp/>Symbol<sp/>Template<sp/>Matching</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1,<sp/>Given<sp/>a<sp/>binary<sp/>image<sp/>I<sp/>and<sp/>a<sp/>symbol<sp/>model<sp/>M,<sp/>we<sp/>want<sp/>to<sp/>decide<sp/>at<sp/>any<sp/>location<sp/>(i,j)<sp/>of<sp/>I,<sp/>whether<sp/>there&apos;s<sp/>a<sp/>probable<sp/>symbol<sp/>candidate<sp/>via<sp/>data<sp/>likelihood:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">P(I(i,j)|M)<sp/>=<sp/>P(p(i,j)|M)*P(p(i+1,j)|M)*...*P(p(i+n,j)|M)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*P(p(i,j+1)|M)*P(p(i+1,j+1)|M)*...*P(p(i+n,j+1)|M)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*P(p(i,j+m)|M)*P(p(i+1,j+m)|M)*...*P(p(i+n,j+m)|M)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">which<sp/>assumes<sp/>each<sp/>pixel<sp/>in<sp/>the<sp/>region<sp/>of<sp/>interest<sp/>is<sp/>conditionally<sp/>independent<sp/>given<sp/>the<sp/>model<sp/>M.<sp/>The<sp/>higher<sp/>this<sp/>likelihood<sp/>is,<sp/>the<sp/>more<sp/>possible<sp/>there<sp/>is<sp/>such<sp/>a<sp/>symbol.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">2,<sp/>Training<sp/>of<sp/>M.</highlight></codeline>
<codeline><highlight class="normal">Given<sp/>a<sp/>set<sp/>of<sp/>symbol<sp/>instances<sp/>I(training<sp/>dataset),<sp/>we<sp/>want<sp/>to<sp/>determine<sp/>what&apos;s<sp/>the<sp/>probability<sp/>distribution<sp/>for<sp/>each<sp/>location<sp/>(x,y)<sp/>of<sp/>model<sp/>M.<sp/>Since<sp/>the<sp/>observation<sp/>is<sp/>binary<sp/>(only<sp/>has<sp/>two<sp/>possible<sp/>values:<sp/>0<sp/>or<sp/>1),<sp/>the<sp/>probability<sp/>of<sp/>M(x,y)<sp/>can<sp/>be<sp/>easily<sp/>estimated<sp/>through<sp/>Maximal-Likelihood-Estimation<sp/>(MLE)<sp/>from<sp/>all<sp/>the<sp/>positive<sp/>instances<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">P(black<sp/>|<sp/>M(x,y))<sp/>=<sp/>#(black<sp/>at<sp/>I(x,y))/(#(black<sp/>at<sp/>I(x,y))<sp/>+<sp/>#(white<sp/>at<sp/>I(x,y))),<sp/>for<sp/>all<sp/>I<sp/>in<sp/>the<sp/>training<sp/>set</highlight></codeline>
<codeline><highlight class="normal">P(white<sp/>|<sp/>M(x,y))<sp/>=<sp/>1<sp/>-<sp/>P(black<sp/>|<sp/>M(x,y))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">3,<sp/>Thresholding<sp/>for<sp/>candidate<sp/>detection</highlight></codeline>
<codeline><highlight class="normal">For<sp/>test<sp/>image<sp/>I,<sp/>we<sp/>obtain<sp/>the<sp/>background<sp/>model<sp/>B<sp/>by<sp/>counting<sp/>the<sp/>number<sp/>of<sp/>all<sp/>black&apos;s<sp/>and<sp/>white&apos;s<sp/>on<sp/>the<sp/>image.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">P(black<sp/>|<sp/>B)<sp/>=<sp/>#(black<sp/>on<sp/>I)/#(pixels<sp/>on<sp/>I)</highlight></codeline>
<codeline><highlight class="normal">P(white<sp/>|<sp/>B)<sp/>=<sp/>1<sp/>-<sp/>P(black<sp/>|<sp/>B)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Then<sp/>the<sp/>candidate<sp/>scoring<sp/>function<sp/>can<sp/>be<sp/>written<sp/>as</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">S(I(i,j))<sp/>=<sp/>log(P(I(i,j)|M)<sp/>/<sp/>P(I(i,j)|B))<sp/>=<sp/>Sum(<sp/>log(P(p(i+ii,j+jj)|M))<sp/>-<sp/>log(P(p(i+ii,j+jj)|B))),<sp/>where<sp/>p(i+ii,j+jj)<sp/>is<sp/>the<sp/>pixel<sp/>value<sp/>(0<sp/>or<sp/>1)<sp/>at<sp/>position<sp/>(i+ii,<sp/>j+jj).</highlight></codeline>
<codeline><highlight class="normal">If<sp/>S(I(i,j))<sp/>is<sp/>larger<sp/>than<sp/>0,<sp/>we<sp/>say<sp/>at<sp/>position<sp/>(i,j)<sp/>there&apos;s<sp/>a<sp/>symbols<sp/>candidate.<sp/>This<sp/>threshold<sp/>0<sp/>is<sp/>automatically<sp/>determined<sp/>by<sp/>our<sp/>background<sp/>model,<sp/>but<sp/>can<sp/>also<sp/>be<sp/>tuned<sp/>according<sp/>to<sp/>our<sp/>request<sp/>(e.g.<sp/>for<sp/>higher<sp/>precision<sp/>than<sp/>recall<sp/>the<sp/>threshold<sp/>should<sp/>be<sp/>larger).--&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###Demo</highlight></codeline>
<codeline><highlight class="normal">[Screenshots<sp/>of<sp/>some<sp/>results](https://musescore.org/en/node/110306#comment-500796)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###Todo</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Add<sp/>robust<sp/>note<sp/>detector<sp/>to<sp/>impose<sp/>negative<sp/>constraints<sp/>for<sp/>bar<sp/>line<sp/>identification.<sp/>(see<sp/>[here](https://github.com/musescore/MuseScore/blob/master/omr/omrpage.cpp#L292))</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Fix<sp/>staff<sp/>detection<sp/>for<sp/>vector<sp/>graphs</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Optimize<sp/>OMR<sp/>performance<sp/>and<sp/>add<sp/>clef/key<sp/>recognitions</highlight></codeline>
    </programlisting>
    <location file="omr/README.md"/>
  </compounddef>
</doxygen>
