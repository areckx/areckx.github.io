<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_q_xml_utils" kind="class" language="C++" prot="public">
    <compoundname>QXmlUtils</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_q_xml_utils_1a93172edbe26612cc4fcfcfdae4f4c310" prot="private" static="no">
        <type>const <ref refid="class_q_xml_char_range" kindref="compound">QXmlCharRange</ref> *</type>
        <definition>typedef const QXmlCharRange* QXmlUtils::RangeIter</definition>
        <argsstring></argsstring>
        <name>RangeIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="81" column="1" bodyfile="thirdparty/xmlstream/xmlutils_p.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_q_xml_utils_1aa216476b6d10fce4af23136661409a19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isEncName</definition>
        <argsstring>(const QString &amp;encName)</argsstring>
        <name>isEncName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>encName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="72" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="233" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a6c8405a364492eb2e6a7c2fb13fe8512" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isChar</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isChar</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="73" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="268" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1af3dcc74b96d75c043101b9fecbdc7f4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isNameChar</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isNameChar</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="74" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="287" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1ad51eb13489a4a65ddbaace2f2ba5035c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isLetter</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isLetter</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="75" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a36721d0d8d86e275ce20d8823a6543cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isNCName</definition>
        <argsstring>(const QStringRef &amp;ncName)</argsstring>
        <name>isNCName</name>
        <param>
          <type>const QStringRef &amp;</type>
          <declname>ncName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="76" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="369" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a9853a0a61bae162ed23a6b1d89ae0661" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool QXmlUtils::isNCName</definition>
        <argsstring>(const QString &amp;ncName)</argsstring>
        <name>isNCName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>ncName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="77" column="1" bodyfile="thirdparty/xmlstream/xmlutils_p.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a1447d5b88004f46af331a594343caf35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isPublicID</definition>
        <argsstring>(const QString &amp;candidate)</argsstring>
        <name>isPublicID</name>
        <param>
          <type>const QString &amp;</type>
          <declname>candidate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="78" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="310" bodyend="357"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_q_xml_utils_1a72a79978f368dec6bea3f97b744222f3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::rangeContains</definition>
        <argsstring>(RangeIter begin, RangeIter end, const QChar c)</argsstring>
        <name>rangeContains</name>
        <param>
          <type><ref refid="class_q_xml_char_range" kindref="compound">RangeIter</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="class_q_xml_char_range" kindref="compound">RangeIter</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs a binary search between <emphasis>begin</emphasis> and <emphasis>end</emphasis> inclusive, to check whether <emphasis>c</emphasis> is contained. Remember that the <ref refid="class_q_xml_char_range" kindref="compound">QXmlCharRange</ref> instances must be in numeric order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="82" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="67" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a989044626c3bc8eea2a844d8927d4fda" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isBaseChar</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isBaseChar</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="83" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a9d7e84d512e3b5b9ebfd6c34c05f267b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isDigit</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isDigit</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="84" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a7a24ef0c449f1e308d052d2df6a3ee93" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isExtender</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isExtender</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="85" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1af62f22522c0ef9ef89941963340461c2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isIdeographic</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isIdeographic</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="86" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_q_xml_utils_1a1ab83ea5cbfb16693d44e34c7c8988da" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QXmlUtils::isCombiningChar</definition>
        <argsstring>(const QChar c)</argsstring>
        <name>isCombiningChar</name>
        <param>
          <type>const QChar</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlutils_p.h" line="87" column="1" bodyfile="thirdparty/xmlstream/xmlutils.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="thirdparty/xmlstream/xmlutils_p.h" line="70" column="1" bodyfile="thirdparty/xmlstream/xmlutils_p.h" bodystart="69" bodyend="88"/>
    <listofallmembers>
      <member refid="class_q_xml_utils_1a989044626c3bc8eea2a844d8927d4fda" prot="private" virt="non-virtual"><scope>QXmlUtils</scope><name>isBaseChar</name></member>
      <member refid="class_q_xml_utils_1a6c8405a364492eb2e6a7c2fb13fe8512" prot="public" virt="non-virtual"><scope>QXmlUtils</scope><name>isChar</name></member>
      <member refid="class_q_xml_utils_1a1ab83ea5cbfb16693d44e34c7c8988da" prot="private" virt="non-virtual"><scope>QXmlUtils</scope><name>isCombiningChar</name></member>
      <member refid="class_q_xml_utils_1a9d7e84d512e3b5b9ebfd6c34c05f267b" prot="private" virt="non-virtual"><scope>QXmlUtils</scope><name>isDigit</name></member>
      <member refid="class_q_xml_utils_1aa216476b6d10fce4af23136661409a19" prot="public" virt="non-virtual"><scope>QXmlUtils</scope><name>isEncName</name></member>
      <member refid="class_q_xml_utils_1a7a24ef0c449f1e308d052d2df6a3ee93" prot="private" virt="non-virtual"><scope>QXmlUtils</scope><name>isExtender</name></member>
      <member refid="class_q_xml_utils_1af62f22522c0ef9ef89941963340461c2" prot="private" virt="non-virtual"><scope>QXmlUtils</scope><name>isIdeographic</name></member>
      <member refid="class_q_xml_utils_1ad51eb13489a4a65ddbaace2f2ba5035c" prot="public" virt="non-virtual"><scope>QXmlUtils</scope><name>isLetter</name></member>
      <member refid="class_q_xml_utils_1af3dcc74b96d75c043101b9fecbdc7f4c" prot="public" virt="non-virtual"><scope>QXmlUtils</scope><name>isNameChar</name></member>
      <member refid="class_q_xml_utils_1a36721d0d8d86e275ce20d8823a6543cb" prot="public" virt="non-virtual"><scope>QXmlUtils</scope><name>isNCName</name></member>
      <member refid="class_q_xml_utils_1a9853a0a61bae162ed23a6b1d89ae0661" prot="public" virt="non-virtual"><scope>QXmlUtils</scope><name>isNCName</name></member>
      <member refid="class_q_xml_utils_1a1447d5b88004f46af331a594343caf35" prot="public" virt="non-virtual"><scope>QXmlUtils</scope><name>isPublicID</name></member>
      <member refid="class_q_xml_utils_1a72a79978f368dec6bea3f97b744222f3" prot="private" virt="non-virtual"><scope>QXmlUtils</scope><name>rangeContains</name></member>
      <member refid="class_q_xml_utils_1a93172edbe26612cc4fcfcfdae4f4c310" prot="private" virt="non-virtual"><scope>QXmlUtils</scope><name>RangeIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
