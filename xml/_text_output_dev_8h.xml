<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_text_output_dev_8h" kind="file" language="C++">
    <compoundname>TextOutputDev.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_gfx_font_8h" local="yes">GfxFont.h</includes>
    <includes refid="_gfx_state_8h" local="yes">GfxState.h</includes>
    <includes refid="_output_dev_8h" local="yes">OutputDev.h</includes>
    <includedby refid="_cairo_output_dev_8h" local="yes">thirdparty/poppler/poppler/CairoOutputDev.h</includedby>
    <includedby refid="_page_8cc" local="yes">thirdparty/poppler/poppler/Page.cc</includedby>
    <includedby refid="_text_output_dev_8cc" local="yes">thirdparty/poppler/poppler/TextOutputDev.cc</includedby>
    <includedby refid="poppler-page_8cc" local="no">thirdparty/poppler/qt5/poppler-page.cc</includedby>
    <incdepgraph>
      <node id="90399">
        <label>thirdparty/poppler/poppler/TextOutputDev.h</label>
        <link refid="_text_output_dev_8h"/>
        <childnode refid="90400" relation="include">
        </childnode>
        <childnode refid="90401" relation="include">
        </childnode>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90403" relation="include">
        </childnode>
        <childnode refid="90420" relation="include">
        </childnode>
        <childnode refid="90424" relation="include">
        </childnode>
      </node>
      <node id="90406">
        <label>stdarg.h</label>
      </node>
      <node id="90421">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90408" relation="include">
        </childnode>
        <childnode refid="90409" relation="include">
        </childnode>
      </node>
      <node id="90422">
        <label>assert.h</label>
      </node>
      <node id="90420">
        <label>GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="90400" relation="include">
        </childnode>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90408" relation="include">
        </childnode>
        <childnode refid="90421" relation="include">
        </childnode>
        <childnode refid="90422" relation="include">
        </childnode>
        <childnode refid="90423" relation="include">
        </childnode>
      </node>
      <node id="90403">
        <label>GfxFont.h</label>
        <link refid="_gfx_font_8h_source"/>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90404" relation="include">
        </childnode>
        <childnode refid="90408" relation="include">
        </childnode>
        <childnode refid="90419" relation="include">
        </childnode>
      </node>
      <node id="90407">
        <label>stdlib.h</label>
      </node>
      <node id="90411">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="90401" relation="include">
        </childnode>
        <childnode refid="90400" relation="include">
        </childnode>
      </node>
      <node id="90414">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="90400" relation="include">
        </childnode>
        <childnode refid="90408" relation="include">
        </childnode>
        <childnode refid="90415" relation="include">
        </childnode>
      </node>
      <node id="90423">
        <label>map</label>
      </node>
      <node id="90413">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="90406" relation="include">
        </childnode>
        <childnode refid="90400" relation="include">
        </childnode>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90404" relation="include">
        </childnode>
      </node>
      <node id="90417">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="90400" relation="include">
        </childnode>
        <childnode refid="90408" relation="include">
        </childnode>
        <childnode refid="90415" relation="include">
        </childnode>
      </node>
      <node id="90405">
        <label>limits.h</label>
      </node>
      <node id="90400">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="90401" relation="include">
        </childnode>
      </node>
      <node id="90412">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="90418">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="90400" relation="include">
        </childnode>
        <childnode refid="90401" relation="include">
        </childnode>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90408" relation="include">
        </childnode>
        <childnode refid="90415" relation="include">
        </childnode>
      </node>
      <node id="90416">
        <label>pthread.h</label>
      </node>
      <node id="90425">
        <label>PopplerCache.h</label>
        <link refid="_poppler_cache_8h_source"/>
        <childnode refid="90408" relation="include">
        </childnode>
      </node>
      <node id="90410">
        <label>string.h</label>
      </node>
      <node id="90404">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="90405" relation="include">
        </childnode>
        <childnode refid="90406" relation="include">
        </childnode>
        <childnode refid="90407" relation="include">
        </childnode>
        <childnode refid="90402" relation="include">
        </childnode>
      </node>
      <node id="90408">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="90409" relation="include">
        </childnode>
        <childnode refid="90401" relation="include">
        </childnode>
        <childnode refid="90410" relation="include">
        </childnode>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90411" relation="include">
        </childnode>
        <childnode refid="90404" relation="include">
        </childnode>
        <childnode refid="90412" relation="include">
        </childnode>
        <childnode refid="90413" relation="include">
        </childnode>
        <childnode refid="90414" relation="include">
        </childnode>
        <childnode refid="90417" relation="include">
        </childnode>
        <childnode refid="90418" relation="include">
        </childnode>
      </node>
      <node id="90424">
        <label>OutputDev.h</label>
        <link refid="_output_dev_8h_source"/>
        <childnode refid="90400" relation="include">
        </childnode>
        <childnode refid="90402" relation="include">
        </childnode>
        <childnode refid="90419" relation="include">
        </childnode>
        <childnode refid="90408" relation="include">
        </childnode>
        <childnode refid="90425" relation="include">
        </childnode>
      </node>
      <node id="90415">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="90416" relation="include">
        </childnode>
      </node>
      <node id="90419">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="90402">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="90400" relation="include">
        </childnode>
      </node>
      <node id="90409">
        <label>set</label>
      </node>
      <node id="90401">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="90426">
        <label>thirdparty/poppler/poppler/TextOutputDev.h</label>
        <link refid="_text_output_dev_8h"/>
        <childnode refid="90427" relation="include">
        </childnode>
        <childnode refid="90430" relation="include">
        </childnode>
        <childnode refid="90431" relation="include">
        </childnode>
        <childnode refid="90432" relation="include">
        </childnode>
      </node>
      <node id="90428">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="90431">
        <label>thirdparty/poppler/poppler/TextOutputDev.cc</label>
        <link refid="_text_output_dev_8cc_source"/>
      </node>
      <node id="90432">
        <label>thirdparty/poppler/qt5/poppler-page.cc</label>
        <link refid="poppler-page_8cc_source"/>
      </node>
      <node id="90429">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="90427">
        <label>thirdparty/poppler/poppler/CairoOutputDev.h</label>
        <link refid="_cairo_output_dev_8h_source"/>
        <childnode refid="90428" relation="include">
        </childnode>
        <childnode refid="90429" relation="include">
        </childnode>
      </node>
      <node id="90430">
        <label>thirdparty/poppler/poppler/Page.cc</label>
        <link refid="_page_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_text_font_info" prot="public">TextFontInfo</innerclass>
    <innerclass refid="class_text_word" prot="public">TextWord</innerclass>
    <innerclass refid="class_text_pool" prot="public">TextPool</innerclass>
    <innerclass refid="class_text_line" prot="public">TextLine</innerclass>
    <innerclass refid="class_text_block" prot="public">TextBlock</innerclass>
    <innerclass refid="class_text_flow" prot="public">TextFlow</innerclass>
    <innerclass refid="class_text_word_list" prot="public">TextWordList</innerclass>
    <innerclass refid="class_text_word_selection" prot="public">TextWordSelection</innerclass>
    <innerclass refid="class_text_page" prot="public">TextPage</innerclass>
    <innerclass refid="class_actual_text" prot="public">ActualText</innerclass>
    <innerclass refid="class_text_output_dev" prot="public">TextOutputDev</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_text_output_dev_8h_1a5cb7b51fef39714fcf8dd7e0288fa96e" prot="public" static="no">
        <name>SelectionStyle</name>
        <enumvalue id="_text_output_dev_8h_1a5cb7b51fef39714fcf8dd7e0288fa96eae2e21c75b34076dba6f8d5dbca4d8006" prot="public">
          <name>selectionStyleGlyph</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_text_output_dev_8h_1a5cb7b51fef39714fcf8dd7e0288fa96ea406634d67257937470e905e972ab82ae" prot="public">
          <name>selectionStyleWord</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_text_output_dev_8h_1a5cb7b51fef39714fcf8dd7e0288fa96eafde2c3c715c392cc025139efba184a5a" prot="public">
          <name>selectionStyleLine</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/TextOutputDev.h" line="66" column="1" bodyfile="thirdparty/poppler/poppler/TextOutputDev.h" bodystart="66" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_text_output_dev_8h_1a13267cb65957e28b71e318215972addc" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TextOutputFunc) (void *stream, const char *text, int len)</definition>
        <argsstring>)(void *stream, const char *text, int len)</argsstring>
        <name>TextOutputFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/TextOutputDev.h" line="64" column="1" bodyfile="thirdparty/poppler/poppler/TextOutputDev.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextOutputDev.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1997-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005-2007<sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Ed<sp/>Catmur<sp/>&lt;ed@catmur.co.uk&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007,<sp/>2008,<sp/>2011,<sp/>2013<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008,<sp/>2010,<sp/>2015<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Brian<sp/>Ewins<sp/>&lt;brian.ewins@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012,<sp/>2013,<sp/>2015,<sp/>2016<sp/>Jason<sp/>Crain<sp/>&lt;jason@aquaticape.us&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TEXTOUTPUTDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEXTOUTPUTDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxFont.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxState.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;OutputDev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_string" kindref="compound">GooString</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_list" kindref="compound">GooList</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx" kindref="compound">Gfx</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font" kindref="compound">GfxFont</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_state" kindref="compound">GfxState</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_unicode_map" kindref="compound">UnicodeMap</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_annot_link" kindref="compound">AnnotLink</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word" kindref="compound">TextWord</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_pool" kindref="compound">TextPool</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line" kindref="compound">TextLine</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line_frag" kindref="compound">TextLineFrag</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_block" kindref="compound">TextBlock</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_flow" kindref="compound">TextFlow</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_list" kindref="compound">TextWordList</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_visitor" kindref="compound">TextSelectionVisitor</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*TextOutputFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SelectionStyle<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>selectionStyleGlyph,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>selectionStyleWord,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>selectionStyleLine</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextFontInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_text_font_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref>(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>GBool<sp/>matches(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>GBool<sp/>matches(<ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>*fontInfo);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>font<sp/>ascent,<sp/>or<sp/>a<sp/>default<sp/>value<sp/>if<sp/>the<sp/>font<sp/>is<sp/>not<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getAscent();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>font<sp/>descent,<sp/>or<sp/>a<sp/>default<sp/>value<sp/>if<sp/>the<sp/>font<sp/>is<sp/>not<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDescent();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>writing<sp/>mode<sp/>(0<sp/>or<sp/>1),<sp/>or<sp/>0<sp/>if<sp/>the<sp/>font<sp/>is<sp/>not<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWMode();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>font<sp/>name<sp/>(which<sp/>may<sp/>be<sp/>NULL).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getFontName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fontName;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>descriptor<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>GBool<sp/>isFixedWidth()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontFixedWidth;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>GBool<sp/>isSerif()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontSerif;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>GBool<sp/>isSymbolic()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontSymbolic;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>GBool<sp/>isItalic()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontItalic;<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>GBool<sp/>isBold()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontBold;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*gfxFont;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fontName;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word" kindref="compound">TextWord</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_painter" kindref="compound">TextSelectionPainter</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextWord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_text_word" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref>(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontSize);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_word" kindref="compound">TextWord</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>character<sp/>to<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addChar(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>*fontA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charPosA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charLen,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>c,<sp/>Unicode<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>&amp;textMatA);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>add<sp/>a<sp/>character<sp/>to<sp/>the<sp/>word<sp/>as<sp/>a<sp/>combining<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>character<sp/>u<sp/>or<sp/>the<sp/>last<sp/>character<sp/>in<sp/>the<sp/>word<sp/>must<sp/>be<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>acute,<sp/>dieresis,<sp/>or<sp/>other<sp/>combining<sp/>character.<sp/><sp/>Returns<sp/>true<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>character<sp/>was<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>GBool<sp/>addCombining(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>*fontA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontSizeA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charPosA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charLen,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>c,<sp/>Unicode<sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>&amp;textMatA);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>&lt;word&gt;<sp/>onto<sp/>the<sp/>end<sp/>of<sp/>&lt;this&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>merge(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compares<sp/>&lt;this&gt;<sp/>to<sp/>&lt;word&gt;,<sp/>returning<sp/>-1<sp/>(&lt;),<sp/>0<sp/>(=),<sp/>or<sp/>+1<sp/>(&gt;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>a<sp/>primary-axis<sp/>comparison,<sp/>e.g.,<sp/>x<sp/>ordering<sp/>if<sp/>rot=0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primaryCmp(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>distance<sp/>along<sp/>the<sp/>primary<sp/>axis<sp/>between<sp/>&lt;this&gt;<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;word&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>primaryDelta(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmpYX(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visitSelection(<ref refid="class_text_selection_visitor" kindref="compound">TextSelectionVisitor</ref><sp/>*visitor,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>TextFontInfo<sp/>object<sp/>associated<sp/>with<sp/>a<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>*getFontInfo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structfont" kindref="compound">font</ref>[idx];<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>TextWord<sp/>on<sp/>the<sp/>linked<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*getNext()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLength()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Unicode<sp/>*getChar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;text[idx];<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getText();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getFontName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structfont" kindref="compound">font</ref>[idx]-&gt;fontName;<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getColor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*g,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*r<sp/>=<sp/>colorR;<sp/>*g<sp/>=<sp/>colorG;<sp/>*b<sp/>=<sp/>colorB;<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBBox(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMinA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMinA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMaxA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMaxA)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*xMinA<sp/>=<sp/>xMin;<sp/>*yMinA<sp/>=<sp/>yMin;<sp/>*xMaxA<sp/>=<sp/>xMax;<sp/>*yMaxA<sp/>=<sp/>yMax;<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCharBBox(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charIdx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMinA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMinA,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMaxA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMaxA);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getFontSize()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fontSize;<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRotation()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rot;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getCharPos()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>charPos[0];<sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getCharLen()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>charPos[len]<sp/>-<sp/>charPos[0];<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>GBool<sp/>getSpaceAfter()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spaceAfter;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>GBool<sp/>isUnderlined()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>underlined;<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="class_annot_link" kindref="compound">AnnotLink</ref><sp/>*getLink()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>link;<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getEdge(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge[i];<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBaseline<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>GBool<sp/>hasSpaceAfter<sp/><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spaceAfter;<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref>*<sp/>nextWord<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;<sp/>};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ensureCapacity(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>capacity);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInitialBounds(<ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>*fontA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rotation,<sp/>multiple<sp/>of<sp/>90<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(0,<sp/>1,<sp/>2,<sp/>or<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/>xMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>x<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,<sp/>yMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>base;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>baseline<sp/>x<sp/>or<sp/>y<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>Unicode<sp/>*text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>CharCode<sp/>*charcode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>glyph<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*edge;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;near&quot;<sp/>edge<sp/>x<sp/>or<sp/>y<sp/>coord<sp/>of<sp/>each<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(plus<sp/>one<sp/>extra<sp/>entry<sp/>for<sp/>the<sp/>last<sp/>char)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*charPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>position<sp/>(within<sp/>content<sp/>stream)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>of<sp/>each<sp/>char<sp/>(plus<sp/>one<sp/>extra<sp/>entry<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>last<sp/>char)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>text/edge/charPos/font<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>text/edge/charPos/font<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>**<ref refid="structfont" kindref="compound">font</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>information<sp/>for<sp/>each<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*textMat;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transformation<sp/>matrix<sp/>for<sp/>each<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontSize;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>GBool<sp/>spaceAfter;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>there<sp/>is<sp/>a<sp/>space<sp/>between<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>word<sp/>and<sp/>the<sp/>next<sp/>word<sp/>on<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>word<sp/>in<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>(0)<sp/>or<sp/>vertical<sp/>(1)<sp/>writing<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>colorR,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorG,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorB;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>GBool<sp/>underlined;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="class_annot_link" kindref="compound">AnnotLink</ref><sp/>*link;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_pool" kindref="compound">TextPool</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line" kindref="compound">TextLine</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_block" kindref="compound">TextBlock</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_flow" kindref="compound">TextFlow</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_list" kindref="compound">TextWordList</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_painter" kindref="compound">TextSelectionPainter</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_dumper" kindref="compound">TextSelectionDumper</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextPool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_text_pool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_pool" kindref="compound">TextPool</ref><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="class_text_pool" kindref="compound">TextPool</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_pool" kindref="compound">TextPool</ref>();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*getPool(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baseIdx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pool[baseIdx<sp/>-<sp/>minBaseIdx];<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPool(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baseIdx,<sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*p)<sp/>{<sp/>pool[baseIdx<sp/>-<sp/>minBaseIdx]<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getBaseIdx(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addWord(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minBaseIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min<sp/>baseline<sp/>bucket<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBaseIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>baseline<sp/>bucket<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>**pool;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>linked<sp/>lists,<sp/>one<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>baseline<sp/>value<sp/>(multiple<sp/>of<sp/>4<sp/>pts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*cursor;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>last-accessed<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursorBaseIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>baseline<sp/>bucket<sp/>index<sp/>of<sp/>last-accessed<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_block" kindref="compound">TextBlock</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TextFlowData;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_text_line" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="class_text_line" kindref="compound">TextLine</ref>(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blkA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseA);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_line" kindref="compound">TextLine</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addWord(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>distance<sp/>along<sp/>the<sp/>primary<sp/>axis<sp/>between<sp/>&lt;this&gt;<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;line&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>primaryDelta(<ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*line);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compares<sp/>&lt;this&gt;<sp/>to<sp/>&lt;line&gt;,<sp/>returning<sp/>-1<sp/>(&lt;),<sp/>0<sp/>(=),<sp/>or<sp/>+1<sp/>(&gt;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>a<sp/>primary-axis<sp/>comparison,<sp/>e.g.,<sp/>x<sp/>ordering<sp/>if<sp/>rot=0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primaryCmp(<ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*line);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compares<sp/>&lt;this&gt;<sp/>to<sp/>&lt;line&gt;,<sp/>returning<sp/>-1<sp/>(&lt;),<sp/>0<sp/>(=),<sp/>or<sp/>+1<sp/>(&gt;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>a<sp/>secondary-axis<sp/>comparison<sp/>of<sp/>the<sp/>baselines,<sp/>e.g.,<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ordering<sp/>if<sp/>rot=0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secondaryCmp(<ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*line);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmpYX(<ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*line);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmpXY(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coalesce(<ref refid="class_unicode_map" kindref="compound">UnicodeMap</ref><sp/>*uMap);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visitSelection(<ref refid="class_text_selection_visitor" kindref="compound">TextSelectionVisitor</ref><sp/>*visitor,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>head<sp/>of<sp/>the<sp/>linked<sp/>list<sp/>of<sp/>TextWords.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*getWords()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>words;<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>TextLine<sp/>on<sp/>the<sp/>linked<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*getNext()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;<sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>last<sp/>char<sp/>of<sp/>the<sp/>line<sp/>is<sp/>a<sp/>hyphen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>GBool<sp/>isHyphenated()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hyphenated;<sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parent<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/>xMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>x<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,<sp/>yMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>base;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>baseline<sp/>x<sp/>or<sp/>y<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*words;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>words<sp/>in<sp/>this<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*lastWord;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>word<sp/>in<sp/>this<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>Unicode<sp/>*text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unicode<sp/>text<sp/>of<sp/>the<sp/>line,<sp/>including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>spaces<sp/>between<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*edge;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;near&quot;<sp/>edge<sp/>x<sp/>or<sp/>y<sp/>coord<sp/>of<sp/>each<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(plus<sp/>one<sp/>extra<sp/>entry<sp/>for<sp/>the<sp/>last<sp/>char)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*col;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>starting<sp/>column<sp/>number<sp/>of<sp/>each<sp/>Unicode<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>Unicode<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>convertedLen;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>number<sp/>of<sp/>converted<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>GBool<sp/>hyphenated;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>last<sp/>char<sp/>is<sp/>a<sp/>hyphen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>line<sp/>in<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>Unicode<sp/>*normalized;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalized<sp/>form<sp/>of<sp/>Unicode<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normalized_len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>normalized<sp/>Unicode<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*normalized_idx;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indices<sp/>of<sp/>normalized<sp/>chars<sp/>into<sp/>Unicode<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line_frag" kindref="compound">TextLineFrag</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_block" kindref="compound">TextBlock</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_flow" kindref="compound">TextFlow</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_list" kindref="compound">TextWordList</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_painter" kindref="compound">TextSelectionPainter</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_sizer" kindref="compound">TextSelectionSizer</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_dumper" kindref="compound">TextSelectionDumper</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="class_text_block" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref>(<ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*pageA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotA);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_block" kindref="compound">TextBlock</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addWord(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coalesce(<ref refid="class_unicode_map" kindref="compound">UnicodeMap</ref><sp/>*uMap,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fixedPitch);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>this<sp/>block&apos;s<sp/>priMin<sp/>and<sp/>priMax<sp/>values,<sp/>looking<sp/>at<sp/>&lt;blk&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updatePriMinMax(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmpXYPrimaryRot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmpYXPrimaryRot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primaryCmp(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>secondaryDelta(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>&lt;this&gt;<sp/>is<sp/>below<sp/>&lt;blk&gt;,<sp/>relative<sp/>to<sp/>the<sp/>page&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>GBool<sp/>isBelow(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visitSelection(<ref refid="class_text_selection_visitor" kindref="compound">TextSelectionVisitor</ref><sp/>*visitor,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>head<sp/>of<sp/>the<sp/>linked<sp/>list<sp/>of<sp/>TextLines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*getLines()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lines;<sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>TextBlock<sp/>on<sp/>the<sp/>linked<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*getNext()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;<sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBBox(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMinA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMinA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMaxA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMaxA)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*xMinA<sp/>=<sp/>xMin;<sp/>*yMinA<sp/>=<sp/>yMin;<sp/>*xMaxA<sp/>=<sp/>xMax;<sp/>*yMaxA<sp/>=<sp/>yMax;<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLineCount()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nLines;<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>GBool<sp/>isBeforeByRule1(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk1);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>GBool<sp/>isBeforeByRepeatedRule1(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blkList,<sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk1);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>GBool<sp/>isBeforeByRule2(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk1);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>visitDepthFirst(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blkList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos1,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>**sorted,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sortPos,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool*<sp/>visited);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>visitDepthFirst(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blkList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos1,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>**sorted,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sortPos,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool*<sp/>visited,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>**cache,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cacheSize);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*page;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>parent<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/>xMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>x<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,<sp/>yMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>priMin,<sp/>priMax;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whitespace<sp/>bounding<sp/>box<sp/>along<sp/>primary<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ExMin,<sp/>ExMax;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extended<sp/>bounding<sp/>box<sp/>x<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EyMin,<sp/>EyMax;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extended<sp/>bounding<sp/>box<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>id<sp/>of<sp/>table<sp/>to<sp/>which<sp/>this<sp/>block<sp/>belongs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>GBool<sp/>tableEnd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>this<sp/>block<sp/>at<sp/>end<sp/>of<sp/>line<sp/>of<sp/>actual<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="class_text_pool" kindref="compound">TextPool</ref><sp/>*pool;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pool<sp/>of<sp/>words<sp/>(used<sp/>only<sp/>until<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>are<sp/>built)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*lines;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>linked<sp/>list<sp/>of<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><ref refid="class_text_line" kindref="compound">TextLine</ref><sp/>*curLine;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>most<sp/>recently<sp/>added<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLines;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>characters<sp/>in<sp/>the<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>starting<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nColumns;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>columns<sp/>in<sp/>the<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*next;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*stackNext;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line" kindref="compound">TextLine</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line_frag" kindref="compound">TextLineFrag</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_flow" kindref="compound">TextFlow</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_list" kindref="compound">TextWordList</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_painter" kindref="compound">TextSelectionPainter</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_dumper" kindref="compound">TextSelectionDumper</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">};</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextFlow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="class_text_flow" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_flow" kindref="compound">TextFlow</ref><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="class_text_flow" kindref="compound">TextFlow</ref>(<ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*pageA,<sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_flow" kindref="compound">TextFlow</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>block<sp/>to<sp/>the<sp/>end<sp/>of<sp/>this<sp/>flow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addBlock(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>&lt;blk&gt;<sp/>fits<sp/>below<sp/>&lt;prevBlk&gt;<sp/>in<sp/>the<sp/>flow,<sp/>i.e.,<sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>uses<sp/>a<sp/>font<sp/>no<sp/>larger<sp/>than<sp/>the<sp/>last<sp/>block<sp/>added<sp/>to<sp/>the<sp/>flow,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>(2)<sp/>it<sp/>fits<sp/>within<sp/>the<sp/>flow&apos;s<sp/>[priMin,<sp/>priMax]<sp/>along<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>GBool<sp/>blockFits(<ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blk,<sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*prevBlk);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>head<sp/>of<sp/>the<sp/>linked<sp/>list<sp/>of<sp/>TextBlocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*getBlocks()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocks;<sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>TextFlow<sp/>on<sp/>the<sp/>linked<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="class_text_flow" kindref="compound">TextFlow</ref><sp/>*getNext()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;<sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*page;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>parent<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/>xMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>x<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,<sp/>yMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>priMin,<sp/>priMax;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whitespace<sp/>bounding<sp/>box<sp/>along<sp/>primary<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*blocks;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blocks<sp/>in<sp/>flow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>*lastBlk;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>block<sp/>in<sp/>this<sp/>flow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="class_text_flow" kindref="compound">TextFlow</ref><sp/>*next;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_list" kindref="compound">TextWordList</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">};</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextWordList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_text_word_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_list" kindref="compound">TextWordList</ref><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>flat<sp/>word<sp/>list,<sp/>in<sp/>content<sp/>stream<sp/>order<sp/>(if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text-&gt;rawOrder<sp/>is<sp/>true),<sp/>physical<sp/>layout<sp/>order<sp/>(if<sp/>&lt;physLayout&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>true<sp/>and<sp/>text-&gt;rawOrder<sp/>is<sp/>false),<sp/>or<sp/>reading<sp/>order<sp/>(if<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flags<sp/>are<sp/>false).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="class_text_word_list" kindref="compound">TextWordList</ref>(<ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*text,<sp/>GBool<sp/>physLayout);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_word_list" kindref="compound">TextWordList</ref>();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>words<sp/>on<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLength();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>&lt;idx&gt;th<sp/>word<sp/>from<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*</highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*words;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[TextWord]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="class_text_word_selection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_selection" kindref="compound">TextWordSelection</ref><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><ref refid="class_text_word_selection" kindref="compound">TextWordSelection</ref>(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>word(word),<sp/>begin(begin),<sp/>end(end)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*<sp/>getWord()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>word;<sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getBegin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin;<sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getEnd()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end;<sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_painter" kindref="compound">TextSelectionPainter</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_dumper" kindref="compound">TextSelectionDumper</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">};</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextPage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="class_text_page" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="class_text_page" kindref="compound">TextPage</ref>(GBool<sp/>rawOrderA);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incRefCnt();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decRefCnt();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>new<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>the<sp/>current<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endPage();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>current<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFont(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin<sp/>a<sp/>new<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginWord(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>character<sp/>to<sp/>the<sp/>current<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addChar(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytes,<sp/>Unicode<sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uLen);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>&lt;nChars&gt;<sp/>invisible<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incCharCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>the<sp/>current<sp/>word,<sp/>sorting<sp/>it<sp/>into<sp/>the<sp/>list<sp/>of<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endWord();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>word,<sp/>sorting<sp/>it<sp/>into<sp/>the<sp/>list<sp/>of<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addWord(<ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*word);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>(potential)<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addUnderline(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>hyperlink.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addLink(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yMax,<sp/><ref refid="class_annot_link" kindref="compound">AnnotLink</ref><sp/>*link);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Coalesce<sp/>strings<sp/>that<sp/>look<sp/>like<sp/>parts<sp/>of<sp/>the<sp/>same<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coalesce(GBool<sp/>physLayout,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fixedPitch,<sp/>GBool<sp/>doHTML);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>a<sp/>string.<sp/><sp/>If<sp/>&lt;startAtTop&gt;<sp/>is<sp/>true,<sp/>starts<sp/>looking<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>of<sp/>the<sp/>page;<sp/>else<sp/>if<sp/>&lt;startAtLast&gt;<sp/>is<sp/>true,<sp/>starts<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>immediately<sp/>after<sp/>the<sp/>last<sp/>find<sp/>result;<sp/>else<sp/>starts<sp/>looking<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;xMin&gt;,&lt;yMin&gt;.<sp/><sp/>If<sp/>&lt;stopAtBottom&gt;<sp/>is<sp/>true,<sp/>stops<sp/>looking<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>of<sp/>the<sp/>page;<sp/>else<sp/>if<sp/>&lt;stopAtLast&gt;<sp/>is<sp/>true,<sp/>stops<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>before<sp/>the<sp/>last<sp/>find<sp/>result;<sp/>else<sp/>stops<sp/>looking<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;xMax&gt;,&lt;yMax&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>GBool<sp/>findText(Unicode<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>startAtTop,<sp/>GBool<sp/>stopAtBottom,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>startAtLast,<sp/>GBool<sp/>stopAtLast,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>caseSensitive,<sp/>GBool<sp/>backward,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>wholeWord,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMin,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMax);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>text<sp/>which<sp/>is<sp/>inside<sp/>the<sp/>specified<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getText(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visitSelection(<ref refid="class_text_selection_visitor" kindref="compound">TextSelectionVisitor</ref><sp/>*visitor,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawSelection(<ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotation,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*glyph_color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*box_color);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*getSelectionRegion(<ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getSelectionText(<ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>**getSelectionWords(<ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nLines);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>a<sp/>string<sp/>by<sp/>character<sp/>position<sp/>and<sp/>length.<sp/><sp/>If<sp/>found,<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>text<sp/>bounding<sp/>rectangle<sp/>and<sp/>returns<sp/>true;<sp/>otherwise<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>GBool<sp/>findCharRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMin,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMax);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>contents<sp/>of<sp/>page<sp/>to<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputStream,<sp/>TextOutputFunc<sp/>outputFunc,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>physLayout);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>head<sp/>of<sp/>the<sp/>linked<sp/>list<sp/>of<sp/>TextFlows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><ref refid="class_text_flow" kindref="compound">TextFlow</ref><sp/>*getFlows()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flows;<sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>true,<sp/>will<sp/>combine<sp/>characters<sp/>when<sp/>a<sp/>base<sp/>and<sp/>combining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>are<sp/>drawn<sp/>on<sp/>eachother.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMergeCombining(GBool<sp/>merge);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>flat<sp/>word<sp/>list,<sp/>in<sp/>content<sp/>stream<sp/>order<sp/>(if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;rawOrder<sp/>is<sp/>true),<sp/>physical<sp/>layout<sp/>order<sp/>(if<sp/>&lt;physLayout&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>true<sp/>and<sp/>this-&gt;rawOrder<sp/>is<sp/>false),<sp/>or<sp/>reading<sp/>order<sp/>(if<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flags<sp/>are<sp/>false).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="class_text_word_list" kindref="compound">TextWordList</ref><sp/>*makeWordList(GBool<sp/>physLayout);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>~<ref refid="class_text_page" kindref="compound">TextPage</ref>();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignColumns(<ref refid="class_text_line_frag" kindref="compound">TextLineFrag</ref><sp/>*frags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFrags,<sp/>GBool<sp/>rot);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dumpFragment(Unicode<sp/>*text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="class_unicode_map" kindref="compound">UnicodeMap</ref><sp/>*uMap,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*s);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>GBool<sp/>rawOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>text<sp/>in<sp/>content<sp/>stream<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>GBool<sp/>mergeCombining;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merge<sp/>when<sp/>combining<sp/>and<sp/>base<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>drawn<sp/>on<sp/>top<sp/>of<sp/>each<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pageWidth,<sp/>pageHeight;<sp/></highlight><highlight class="comment">//<sp/>width<sp/>and<sp/>height<sp/>of<sp/>current<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*curWord;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currently<sp/>active<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charPos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>character<sp/>position<sp/>(within<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>stream)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><ref refid="class_text_font_info" kindref="compound">TextFontInfo</ref><sp/>*curFont;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>curFontSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>font<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nest;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>nesting<sp/>level<sp/>(for<sp/>Type<sp/>3<sp/>fonts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTinyChars;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>&quot;tiny&quot;<sp/>chars<sp/>seen<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>GBool<sp/>lastCharOverlap;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>the<sp/>last<sp/>added<sp/>char<sp/>overlapped<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>previous<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="class_text_pool" kindref="compound">TextPool</ref><sp/>*pools[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>&quot;pool&quot;<sp/>of<sp/>TextWords<sp/>for<sp/>each<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="class_text_flow" kindref="compound">TextFlow</ref><sp/>*flows;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>linked<sp/>list<sp/>of<sp/>flows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><ref refid="class_text_block" kindref="compound">TextBlock</ref><sp/>**blocks;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>blocks,<sp/>in<sp/>yx<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBlocks;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primaryRot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>GBool<sp/>primaryLR;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>direction<sp/>(true<sp/>means<sp/>L-to-R,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>false<sp/>means<sp/>R-to-L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*rawWords;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>words,<sp/>in<sp/>raw<sp/>order<sp/>(only<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>rawOrder<sp/>is<sp/>set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><ref refid="class_text_word" kindref="compound">TextWord</ref><sp/>*rawLastWord;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>word<sp/>on<sp/>rawWords<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*fonts;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>font<sp/>info<sp/>objects<sp/>used<sp/>on<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>page<sp/>[TextFontInfo]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastFindXMin,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinates<sp/>of<sp/>the<sp/>last<sp/>&quot;find&quot;<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastFindYMin;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>GBool<sp/>haveLastFind;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*underlines;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[TextUnderline]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*links;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[TextLink]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refCnt;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line" kindref="compound">TextLine</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_line_frag" kindref="compound">TextLineFrag</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_block" kindref="compound">TextBlock</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_flow" kindref="compound">TextFlow</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_word_list" kindref="compound">TextWordList</ref>;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_painter" kindref="compound">TextSelectionPainter</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_selection_dumper" kindref="compound">TextSelectionDumper</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">};</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ActualText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="class_actual_text" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_actual_text" kindref="compound">ActualText</ref><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>ActualText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><ref refid="class_actual_text" kindref="compound">ActualText</ref>(<ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*out);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>~<ref refid="class_actual_text" kindref="compound">ActualText</ref>();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addChar(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytes,<sp/>Unicode<sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uLen);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>begin(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*text);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>end(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*text;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*actualText;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replacement<sp/>text<sp/>for<sp/>the<sp/>span</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actualTextX0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actualTextY0;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actualTextX1;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actualTextY1;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actualTextNBytes;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">};</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TextOutputDev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="class_text_output_dev" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_text_output_dev" kindref="compound">TextOutputDev</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>a<sp/>text<sp/>output<sp/>file.<sp/><sp/>If<sp/>&lt;fileName&gt;<sp/>is<sp/>NULL,<sp/>no<sp/>file<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>written<sp/>(this<sp/>is<sp/>useful,<sp/>e.g.,<sp/>for<sp/>searching<sp/>text).<sp/><sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;physLayoutA&gt;<sp/>is<sp/>true,<sp/>the<sp/>original<sp/>physical<sp/>layout<sp/>of<sp/>the<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>maintained.<sp/><sp/>If<sp/>&lt;rawOrder&gt;<sp/>is<sp/>true,<sp/>the<sp/>text<sp/>is<sp/>kept<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>content<sp/>stream<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="class_text_output_dev" kindref="compound">TextOutputDev</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>GBool<sp/>physLayoutA,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fixedPitchA,<sp/>GBool<sp/>rawOrderA,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>append);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>TextOutputDev<sp/>which<sp/>will<sp/>write<sp/>to<sp/>a<sp/>generic<sp/>stream.<sp/><sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;physLayoutA&gt;<sp/>is<sp/>true,<sp/>the<sp/>original<sp/>physical<sp/>layout<sp/>of<sp/>the<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>maintained.<sp/><sp/>If<sp/>&lt;rawOrder&gt;<sp/>is<sp/>true,<sp/>the<sp/>text<sp/>is<sp/>kept<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>content<sp/>stream<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><ref refid="class_text_output_dev" kindref="compound">TextOutputDev</ref>(TextOutputFunc<sp/>func,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stream,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>physLayoutA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fixedPitchA,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>rawOrderA);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_text_output_dev" kindref="compound">TextOutputDev</ref>();</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>file<sp/>was<sp/>successfully<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isOk()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;<sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----<sp/>get<sp/>info<sp/>about<sp/>output<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>upside-down<sp/>coordinates?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(Upside-down<sp/>means<sp/>(0,0)<sp/>is<sp/>the<sp/>top<sp/>left<sp/>corner<sp/>of<sp/>the<sp/>page.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>upsideDown()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>drawChar()<sp/>or<sp/>drawString()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useDrawChar()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>beginType3Char/endType3Char?<sp/><sp/>Otherwise,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>in<sp/>Type<sp/>3<sp/>fonts<sp/>will<sp/>be<sp/>drawn<sp/>with<sp/>drawChar/drawString.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>interpretType3Chars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>need<sp/>non-text<sp/>content?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>needNonText()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>require<sp/>incCharCount<sp/>to<sp/>be<sp/>called<sp/>for<sp/>text<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-shown<sp/>layers?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>needCharCount()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>initialization<sp/>and<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPage(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNum,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>a<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endPage();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>save/restore<sp/>graphics<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restoreState(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>update<sp/>text<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateFont(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>text<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginString(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*s);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endString(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawChar(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>originY,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytes,<sp/>Unicode<sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uLen);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incCharCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginActualText(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*text);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endActualText(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>path<sp/>painting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stroke(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eoFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>link<sp/>borders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processLink(<ref refid="class_annot_link" kindref="compound">AnnotLink</ref><sp/>*link);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>special<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>a<sp/>string.<sp/><sp/>If<sp/>&lt;startAtTop&gt;<sp/>is<sp/>true,<sp/>starts<sp/>looking<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>of<sp/>the<sp/>page;<sp/>else<sp/>if<sp/>&lt;startAtLast&gt;<sp/>is<sp/>true,<sp/>starts<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>immediately<sp/>after<sp/>the<sp/>last<sp/>find<sp/>result;<sp/>else<sp/>starts<sp/>looking<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;xMin&gt;,&lt;yMin&gt;.<sp/><sp/>If<sp/>&lt;stopAtBottom&gt;<sp/>is<sp/>true,<sp/>stops<sp/>looking<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>of<sp/>the<sp/>page;<sp/>else<sp/>if<sp/>&lt;stopAtLast&gt;<sp/>is<sp/>true,<sp/>stops<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>before<sp/>the<sp/>last<sp/>find<sp/>result;<sp/>else<sp/>stops<sp/>looking<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;xMax&gt;,&lt;yMax&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>GBool<sp/>findText(Unicode<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>startAtTop,<sp/>GBool<sp/>stopAtBottom,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>startAtLast,<sp/>GBool<sp/>stopAtLast,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>caseSensitive,<sp/>GBool<sp/>backward,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>wholeWord,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMin,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMax);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>text<sp/>which<sp/>is<sp/>inside<sp/>the<sp/>specified<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getText(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>a<sp/>string<sp/>by<sp/>character<sp/>position<sp/>and<sp/>length.<sp/><sp/>If<sp/>found,<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>text<sp/>bounding<sp/>rectangle<sp/>and<sp/>returns<sp/>true;<sp/>otherwise<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>GBool<sp/>findCharRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMin,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMax);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawSelection(<ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotation,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*glyph_color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*box_color);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*getSelectionRegion(<ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getSelectionText(<ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*selection,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectionStyle<sp/>style);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>true,<sp/>will<sp/>combine<sp/>characters<sp/>when<sp/>a<sp/>base<sp/>and<sp/>combining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>are<sp/>drawn<sp/>on<sp/>eachother.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMergeCombining(GBool<sp/>merge);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEXTOUT_WORD_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>flat<sp/>word<sp/>list,<sp/>in<sp/>content<sp/>stream<sp/>order<sp/>(if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;rawOrder<sp/>is<sp/>true),<sp/>physical<sp/>layout<sp/>order<sp/>(if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;physLayout<sp/>is<sp/>true<sp/>and<sp/>this-&gt;rawOrder<sp/>is<sp/>false),<sp/>or<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>order<sp/>(if<sp/>both<sp/>flags<sp/>are<sp/>false).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><ref refid="class_text_word_list" kindref="compound">TextWordList</ref><sp/>*makeWordList();</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>TextPage<sp/>object<sp/>for<sp/>the<sp/>last<sp/>rasterized<sp/>page,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transferring<sp/>ownership<sp/>to<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*takeText();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>extra<sp/>processing<sp/>for<sp/>HTML<sp/>conversion<sp/>on<sp/>or<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enableHTMLExtras(GBool<sp/>doHTMLA)<sp/>{<sp/>doHTML<sp/>=<sp/>doHTMLA;<sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>TextOutputFunc<sp/>outputFunc;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputStream;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>GBool<sp/>needClose;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>close<sp/>the<sp/>output<sp/>file?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(only<sp/>if<sp/>outputStream<sp/>is<sp/>a<sp/>FILE*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><ref refid="class_text_page" kindref="compound">TextPage</ref><sp/>*text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>for<sp/>the<sp/>current<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>GBool<sp/>physLayout;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maintain<sp/>original<sp/>physical<sp/>layout<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>dumping<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fixedPitch;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>physLayout<sp/>is<sp/>true<sp/>and<sp/>this<sp/>is<sp/>non-zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>assume<sp/>fixed-pitch<sp/>characters<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>GBool<sp/>rawOrder;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>text<sp/>in<sp/>content<sp/>stream<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>GBool<sp/>doHTML;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extra<sp/>processing<sp/>for<sp/>HTML<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>GBool<sp/>ok;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>ok?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><ref refid="class_actual_text" kindref="compound">ActualText</ref><sp/>*actualText;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">};</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/TextOutputDev.h"/>
  </compounddef>
</doxygen>
