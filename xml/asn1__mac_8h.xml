<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="asn1__mac_8h" kind="file" language="C++">
    <compoundname>asn1_mac.h</compoundname>
    <includes refid="asn1_8h" local="no">openssl/asn1.h</includes>
    <incdepgraph>
      <node id="82187">
        <label>stdarg.h</label>
      </node>
      <node id="82192">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82195">
        <label>stdint.h</label>
      </node>
      <node id="82189">
        <label>stdlib.h</label>
      </node>
      <node id="82185">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="82183" relation="include">
        </childnode>
        <childnode refid="82186" relation="include">
        </childnode>
        <childnode refid="82187" relation="include">
        </childnode>
        <childnode refid="82188" relation="include">
        </childnode>
        <childnode refid="82195" relation="include">
        </childnode>
      </node>
      <node id="82190">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82180">
        <label>thirdparty/openssl/include/openssl/asn1_mac.h</label>
        <link refid="asn1__mac_8h"/>
        <childnode refid="82181" relation="include">
        </childnode>
      </node>
      <node id="82196">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="82183" relation="include">
        </childnode>
        <childnode refid="82186" relation="include">
        </childnode>
        <childnode refid="82193" relation="include">
        </childnode>
        <childnode refid="82188" relation="include">
        </childnode>
      </node>
      <node id="82194">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82183" relation="include">
        </childnode>
      </node>
      <node id="82181">
        <label>openssl/asn1.h</label>
        <link refid="asn1_8h_source"/>
        <childnode refid="82182" relation="include">
        </childnode>
        <childnode refid="82183" relation="include">
        </childnode>
        <childnode refid="82185" relation="include">
        </childnode>
        <childnode refid="82190" relation="include">
        </childnode>
        <childnode refid="82191" relation="include">
        </childnode>
        <childnode refid="82194" relation="include">
        </childnode>
        <childnode refid="82193" relation="include">
        </childnode>
        <childnode refid="82196" relation="include">
        </childnode>
      </node>
      <node id="82191">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82190" relation="include">
        </childnode>
      </node>
      <node id="82182">
        <label>time.h</label>
      </node>
      <node id="82184">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82183">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82184" relation="include">
        </childnode>
      </node>
      <node id="82186">
        <label>stdio.h</label>
      </node>
      <node id="82193">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82183" relation="include">
        </childnode>
      </node>
      <node id="82188">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82189" relation="include">
        </childnode>
        <childnode refid="82183" relation="include">
        </childnode>
        <childnode refid="82186" relation="include">
        </childnode>
        <childnode refid="82190" relation="include">
        </childnode>
        <childnode refid="82191" relation="include">
        </childnode>
        <childnode refid="82192" relation="include">
        </childnode>
        <childnode refid="82193" relation="include">
        </childnode>
        <childnode refid="82194" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="asn1__mac_8h_1a6bc6aa072712f06498bdecaecbec051e" prot="public" static="no">
        <name>ASN1_MAC_ERR_LIB</name>
        <initializer>ERR_LIB_ASN1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="69" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a5c3cdc9f1691da531322a434b4ff1dc4" prot="public" static="no">
        <name>ASN1_MAC_H_err</name>
        <param><defname>f</defname></param>
        <param><defname>r</defname></param>
        <param><defname>line</defname></param>
        <initializer>ERR_PUT_error(ASN1_MAC_ERR_LIB,(f),(r),__FILE__,(line))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="72" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a09375f263d98c3a549d4b6ab3c3a558e" prot="public" static="no">
        <name>M_ASN1_D2I_vars</name>
        <param><defname>a</defname></param>
        <param><defname>type</defname></param>
        <param><defname>func</defname></param>
        <initializer><ref refid="structasn1__const__ctx__st" kindref="compound">ASN1_const_CTX</ref> c; \
	type ret=NULL; \
	\
	c.pp=(const unsigned char **)pp; \
	c.q= *(const unsigned char **)pp; \
	c.error=ERR_R_NESTED_ASN1_ERROR; \
	if ((a == NULL) || ((*a) == NULL)) \
		{ if ((ret=(type)func()) == NULL) \
			{ c.line=__LINE__; goto err; } } \
	else	ret=(*a);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="75" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1ae590e3f195e54d40b1bf8a21e207115a" prot="public" static="no">
        <name>M_ASN1_D2I_Init</name>
        <param></param>
        <initializer>c.p= *(const unsigned char **)pp; \
	c.max=(length == 0)?0:(c.p+length);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="87" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1aabb41d728de622c0b28dced371dd6def" prot="public" static="no">
        <name>M_ASN1_D2I_Finish_2</name>
        <param><defname>a</defname></param>
        <initializer>if (!asn1_const_Finish(&amp;c)) \
		{ c.line=__LINE__; goto err; } \
	*(const unsigned char **)pp=c.p; \
	if (a != NULL) (*a)=ret; \
	return(ret);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="91" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1ac20b069592337c7a67a56789e6e92184" prot="public" static="no">
        <name>M_ASN1_D2I_Finish</name>
        <param><defname>a</defname></param>
        <param><defname>func</defname></param>
        <param><defname>e</defname></param>
        <initializer>M_ASN1_D2I_Finish_2(a); \
err:\
	ASN1_MAC_H_err((e),c.error,c.line); \
	asn1_add_error(*(const unsigned char **)pp,(int)(c.q- *pp)); \
	if ((ret != NULL) &amp;&amp; ((a == NULL) || (*a != ret))) func(ret); \
	return(NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="98" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a70611257a49e177421aed7c80111a387" prot="public" static="no">
        <name>M_ASN1_D2I_start_sequence</name>
        <param></param>
        <initializer>if (!asn1_GetSequence(&amp;c,&amp;length)) \
		{ c.line=__LINE__; goto err; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="106" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a3493118fa75c5455febde9e7048a67a5" prot="public" static="no">
        <name>M_ASN1_D2I_begin</name>
        <param></param>
        <initializer>c.slen = length;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="110" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1ab0cfd833ae82190b780cf866afe3dc2e" prot="public" static="no">
        <name>M_ASN1_D2I_Finish_nolen</name>
        <param><defname>a</defname></param>
        <param><defname>func</defname></param>
        <param><defname>e</defname></param>
        <initializer>*pp=c.p; \
	if (a != NULL) (*a)=ret; \
	return(ret); \
err:\
	ASN1_MAC_H_err((e),c.error,c.line); \
	asn1_add_error(*pp,(int)(c.q- *pp)); \
	if ((ret != NULL) &amp;&amp; ((a == NULL) || (*a != ret))) func(ret); \
	return(NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="114" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a3a83a1b795f93faf52c4c69a5d7deedf" prot="public" static="no">
        <name>M_ASN1_D2I_end_sequence</name>
        <param></param>
        <initializer>(((c.inf&amp;1) == 0)?(c.slen &lt;= 0): \
		(c.eos=ASN1_const_check_infinite_end(&amp;c.p,c.slen)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="124" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a52ee0676b7b25650de999a655b6dc8a9" prot="public" static="no">
        <name>M_ASN1_D2I_get</name>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <initializer>c.q=c.p; \
	if (func(&amp;(b),&amp;c.p,c.slen) == NULL) \
		{c.line=__LINE__; goto err; } \
	c.slen-=(c.p-c.q);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="129" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a6642173c55208c7ac438d0bd2b0c8731" prot="public" static="no">
        <name>M_ASN1_D2I_get_x</name>
        <param><defname>type</defname></param>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <initializer>c.q=c.p; \
	if (((D2I_OF(type))func)(&amp;(b),&amp;c.p,c.slen) == NULL) \
		{c.line=__LINE__; goto err; } \
	c.slen-=(c.p-c.q);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="136" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a5864e1c1f19154e9ec755a204059eaa0" prot="public" static="no">
        <name>M_ASN1_D2I_get_int</name>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <initializer>c.q=c.p; \
	if (func(&amp;(b),&amp;c.p,c.slen) &lt; 0) \
		{c.line=__LINE__; goto err; } \
	c.slen-=(c.p-c.q);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="143" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1ad940cbab372a3c7e9550ce9d8a8b16fe" prot="public" static="no">
        <name>M_ASN1_D2I_get_opt</name>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <param><defname>type</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; ((M_ASN1_next &amp; (~V_ASN1_CONSTRUCTED)) \
		== (V_ASN1_UNIVERSAL|(type)))) \
		{ \
		M_ASN1_D2I_get(b,func); \
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="149" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a76d0648bd1d7d82e8fdcc8cb59f9d6e0" prot="public" static="no">
        <name>M_ASN1_D2I_get_int_opt</name>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <param><defname>type</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; ((M_ASN1_next &amp; (~V_ASN1_CONSTRUCTED)) \
		== (V_ASN1_UNIVERSAL|(type)))) \
		{ \
		M_ASN1_D2I_get_int(b,func); \
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="156" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1ad488d07d85c15589cf3bb164903b236b" prot="public" static="no">
        <name>M_ASN1_D2I_get_imp</name>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <param><defname>type</defname></param>
        <initializer>M_ASN1_next=(_tmp&amp; V_ASN1_CONSTRUCTED)|type; \
	c.q=c.p; \
	if (func(&amp;(b),&amp;c.p,c.slen) == NULL) \
		{c.line=__LINE__; M_ASN1_next_prev = _tmp; goto err; } \
	c.slen-=(c.p-c.q);\
	M_ASN1_next_prev=_tmp;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="163" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a5b47a12a63c6c764cb21c1bdcfba57f5" prot="public" static="no">
        <name>M_ASN1_D2I_get_IMP_opt</name>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>type</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; ((M_ASN1_next &amp; (~V_ASN1_CONSTRUCTED)) == \
		(V_ASN1_CONTEXT_SPECIFIC|(tag)))) \
		{ \
		unsigned char _tmp = M_ASN1_next; \
		M_ASN1_D2I_get_imp(b,func, type);\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="171" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a8d39837211958bf7f9452dc00ed24354" prot="public" static="no">
        <name>M_ASN1_D2I_get_set</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>M_ASN1_D2I_get_imp_set(r,func,free_func, \
			V_ASN1_SET,V_ASN1_UNIVERSAL);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="179" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a35f8686f79b2c85a030689d3e823e070" prot="public" static="no">
        <name>M_ASN1_D2I_get_set_type</name>
        <param><defname>type</defname></param>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>M_ASN1_D2I_get_imp_set_type(type,r,func,free_func, \
			V_ASN1_SET,V_ASN1_UNIVERSAL);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="183" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a64559e6246dc028f810becc063a9aa1a" prot="public" static="no">
        <name>M_ASN1_D2I_get_set_opt</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; (M_ASN1_next == (V_ASN1_UNIVERSAL| \
		V_ASN1_CONSTRUCTED|V_ASN1_SET)))\
		{ M_ASN1_D2I_get_set(r,func,free_func); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="187" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1aa2c6cce68a650633838e05b8a5f4f067" prot="public" static="no">
        <name>M_ASN1_D2I_get_set_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; (M_ASN1_next == (V_ASN1_UNIVERSAL| \
		V_ASN1_CONSTRUCTED|V_ASN1_SET)))\
		{ M_ASN1_D2I_get_set_type(type,r,func,free_func); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="192" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a18206156a6a2a2ef85ce02b3c27a74e7" prot="public" static="no">
        <name>M_ASN1_I2D_len_SET_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
		M_ASN1_I2D_len_SET(a,f);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="197" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1acaea69f51e03aac9d7a5cbf1f24b9f30" prot="public" static="no">
        <name>M_ASN1_I2D_put_SET_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
		M_ASN1_I2D_put_SET(a,f);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="201" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a1ae677512e0e571b16e323c5839d836f" prot="public" static="no">
        <name>M_ASN1_I2D_put_SEQUENCE_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
		M_ASN1_I2D_put_SEQUENCE(a,f);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="205" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1abc24fa493aee8308f068aa5a12091068" prot="public" static="no">
        <name>M_ASN1_I2D_put_SEQUENCE_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0)) \
		M_ASN1_I2D_put_SEQUENCE_type(type,a,f);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="209" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a528502f48ed6267a2ceb3e7caf575d62" prot="public" static="no">
        <name>M_ASN1_D2I_get_IMP_set_opt</name>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>tag</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; \
		(M_ASN1_next == \
		(V_ASN1_CONTEXT_SPECIFIC|V_ASN1_CONSTRUCTED|(tag))))\
		{ \
		M_ASN1_D2I_get_imp_set(b,func,free_func,\
			tag,V_ASN1_CONTEXT_SPECIFIC); \
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="213" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1af790e537bcffe41b2b5702c7297c8f1d" prot="public" static="no">
        <name>M_ASN1_D2I_get_IMP_set_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>b</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>tag</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; \
		(M_ASN1_next == \
		(V_ASN1_CONTEXT_SPECIFIC|V_ASN1_CONSTRUCTED|(tag))))\
		{ \
		M_ASN1_D2I_get_imp_set_type(type,b,func,free_func,\
			tag,V_ASN1_CONTEXT_SPECIFIC); \
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="222" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a4c84700ed511d7cedee717585518b215" prot="public" static="no">
        <name>M_ASN1_D2I_get_seq</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>M_ASN1_D2I_get_imp_set(r,func,free_func,\
			V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="231" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a1ef813f83cce29e68237403f0fdf54b8" prot="public" static="no">
        <name>M_ASN1_D2I_get_seq_type</name>
        <param><defname>type</defname></param>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>M_ASN1_D2I_get_imp_set_type(type,r,func,free_func,\
					    V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="235" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a1f3a435d753770e4101c85e2cdd2fe17" prot="public" static="no">
        <name>M_ASN1_D2I_get_seq_opt</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; (M_ASN1_next == (V_ASN1_UNIVERSAL| \
		V_ASN1_CONSTRUCTED|V_ASN1_SEQUENCE)))\
		{ M_ASN1_D2I_get_seq(r,func,free_func); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="239" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a6c16b13dc89a201a4ddcdf8697ed0cff" prot="public" static="no">
        <name>M_ASN1_D2I_get_seq_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; (M_ASN1_next == (V_ASN1_UNIVERSAL| \
		V_ASN1_CONSTRUCTED|V_ASN1_SEQUENCE)))\
		{ M_ASN1_D2I_get_seq_type(type,r,func,free_func); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="244" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a99f2173d7521349e9515e6fc358a547d" prot="public" static="no">
        <name>M_ASN1_D2I_get_IMP_set</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>x</defname></param>
        <initializer>M_ASN1_D2I_get_imp_set(r,func,free_func,\
			x,V_ASN1_CONTEXT_SPECIFIC);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="249" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a608732b76c643a4164a7369b3d38928a" prot="public" static="no">
        <name>M_ASN1_D2I_get_IMP_set_type</name>
        <param><defname>type</defname></param>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>x</defname></param>
        <initializer>M_ASN1_D2I_get_imp_set_type(type,r,func,free_func,\
			x,V_ASN1_CONTEXT_SPECIFIC);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="253" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a6216402653954f33ef26b8c4a16596cb" prot="public" static="no">
        <name>M_ASN1_D2I_get_imp_set</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>c.q=c.p; \
	if (d2i_ASN1_SET(&amp;(r),&amp;c.p,c.slen,(char *(*)())func,\
		(void (*)())free_func,a,b) == NULL) \
		{ c.line=__LINE__; goto err; } \
	c.slen-=(c.p-c.q);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="257" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a9092658c4481b39cf7cbbc205054cfb7" prot="public" static="no">
        <name>M_ASN1_D2I_get_imp_set_type</name>
        <param><defname>type</defname></param>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>c.q=c.p; \
	if (d2i_ASN1_SET_OF_##type(&amp;(r),&amp;c.p,c.slen,func,\
				   free_func,a,b) == NULL) \
		{ c.line=__LINE__; goto err; } \
	c.slen-=(c.p-c.q);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="264" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a32a0b34195a7c91a39a1ae5986a128e7" prot="public" static="no">
        <name>M_ASN1_D2I_get_set_strings</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>c.q=c.p; \
	if (d2i_ASN1_STRING_SET(&amp;(r),&amp;c.p,c.slen,a,b) == NULL) \
		{ c.line=__LINE__; goto err; } \
	c.slen-=(c.p-c.q);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="271" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a97faf871455a50f4a151c00b7a1af146" prot="public" static="no">
        <name>M_ASN1_D2I_get_EXP_opt</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>tag</defname></param>
        <initializer>if ((c.slen != 0L) &amp;&amp; (M_ASN1_next == \
		(V_ASN1_CONSTRUCTED|V_ASN1_CONTEXT_SPECIFIC|tag))) \
		{ \
		int Tinf,Ttag,Tclass; \
		long Tlen; \
		\
		c.q=c.p; \
		Tinf=ASN1_get_object(&amp;c.p,&amp;Tlen,&amp;Ttag,&amp;Tclass,c.slen); \
		if (Tinf &amp; 0x80) \
			{ c.error=ERR_R_BAD_ASN1_OBJECT_HEADER; \
			c.line=__LINE__; goto err; } \
		if (Tinf == (V_ASN1_CONSTRUCTED+1)) \
					Tlen = c.slen - (c.p - c.q) - 2; \
		if (func(&amp;(r),&amp;c.p,Tlen) == NULL) \
			{ c.line=__LINE__; goto err; } \
		if (Tinf == (V_ASN1_CONSTRUCTED+1)) { \
			Tlen = c.slen - (c.p - c.q); \
			if(!ASN1_const_check_infinite_end(&amp;c.p, Tlen)) \
				{ c.error=ERR_R_MISSING_ASN1_EOS; \
				c.line=__LINE__; goto err; } \
		}\
		c.slen-=(c.p-c.q); \
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="277" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a7053f193953dfbf4b894eb11ea142bae" prot="public" static="no">
        <name>M_ASN1_D2I_get_EXP_set_opt</name>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>b</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; (M_ASN1_next == \
		(V_ASN1_CONSTRUCTED|V_ASN1_CONTEXT_SPECIFIC|tag))) \
		{ \
		int Tinf,Ttag,Tclass; \
		long Tlen; \
		\
		c.q=c.p; \
		Tinf=ASN1_get_object(&amp;c.p,&amp;Tlen,&amp;Ttag,&amp;Tclass,c.slen); \
		if (Tinf &amp; 0x80) \
			{ c.error=ERR_R_BAD_ASN1_OBJECT_HEADER; \
			c.line=__LINE__; goto err; } \
		if (Tinf == (V_ASN1_CONSTRUCTED+1)) \
					Tlen = c.slen - (c.p - c.q) - 2; \
		if (d2i_ASN1_SET(&amp;(r),&amp;c.p,Tlen,(char *(*)())func, \
			(void (*)())free_func, \
			b,V_ASN1_UNIVERSAL) == NULL) \
			{ c.line=__LINE__; goto err; } \
		if (Tinf == (V_ASN1_CONSTRUCTED+1)) { \
			Tlen = c.slen - (c.p - c.q); \
			if(!ASN1_check_infinite_end(&amp;c.p, Tlen)) \
				{ c.error=ERR_R_MISSING_ASN1_EOS; \
				c.line=__LINE__; goto err; } \
		}\
		c.slen-=(c.p-c.q); \
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="302" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a1e75a70aab2360a5d851450b38dc45bd" prot="public" static="no">
        <name>M_ASN1_D2I_get_EXP_set_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>r</defname></param>
        <param><defname>func</defname></param>
        <param><defname>free_func</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>b</defname></param>
        <initializer>if ((c.slen != 0) &amp;&amp; (M_ASN1_next == \
		(V_ASN1_CONSTRUCTED|V_ASN1_CONTEXT_SPECIFIC|tag))) \
		{ \
		int Tinf,Ttag,Tclass; \
		long Tlen; \
		\
		c.q=c.p; \
		Tinf=ASN1_get_object(&amp;c.p,&amp;Tlen,&amp;Ttag,&amp;Tclass,c.slen); \
		if (Tinf &amp; 0x80) \
			{ c.error=ERR_R_BAD_ASN1_OBJECT_HEADER; \
			c.line=__LINE__; goto err; } \
		if (Tinf == (V_ASN1_CONSTRUCTED+1)) \
					Tlen = c.slen - (c.p - c.q) - 2; \
		if (d2i_ASN1_SET_OF_##type(&amp;(r),&amp;c.p,Tlen,func, \
			free_func,b,V_ASN1_UNIVERSAL) == NULL) \
			{ c.line=__LINE__; goto err; } \
		if (Tinf == (V_ASN1_CONSTRUCTED+1)) { \
			Tlen = c.slen - (c.p - c.q); \
			if(!ASN1_check_infinite_end(&amp;c.p, Tlen)) \
				{ c.error=ERR_R_MISSING_ASN1_EOS; \
				c.line=__LINE__; goto err; } \
		}\
		c.slen-=(c.p-c.q); \
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="329" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1af50934823940b2d1529094988d88794a" prot="public" static="no">
        <name>M_ASN1_New_Malloc</name>
        <param><defname>ret</defname></param>
        <param><defname>type</defname></param>
        <initializer>if ((ret=(type *)OPENSSL_malloc(sizeof(type))) == NULL) \
		{ c.line=__LINE__; goto err2; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="356" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a7a8db21cdf260f890d1e8dc89a037705" prot="public" static="no">
        <name>M_ASN1_New</name>
        <param><defname>arg</defname></param>
        <param><defname>func</defname></param>
        <initializer>if (((arg)=func()) == NULL) return(NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="360" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a177786c098d7fe4769880a8032260b5c" prot="public" static="no">
        <name>M_ASN1_New_Error</name>
        <param><defname>a</defname></param>
        <initializer>/*	err:	ASN1_MAC_H_err((a),ERR_R_NESTED_ASN1_ERROR,c.line); \
		return(NULL);*/ \
	err2:	ASN1_MAC_H_err((a),ERR_R_MALLOC_FAILURE,c.line); \
		return(NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="364" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a5ef7843905449178b036ac411150f748" prot="public" static="no">
        <name>M_ASN1_next</name>
        <initializer>(*((unsigned char *)(c.p)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="374" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a032c428232a87dc5f6cd7fb03fb2c72b" prot="public" static="no">
        <name>M_ASN1_next_prev</name>
        <initializer>(*((unsigned char *)(c.q)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="375" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a4387952d78306e24c8acb9eb37006938" prot="public" static="no">
        <name>M_ASN1_I2D_vars</name>
        <param><defname>a</defname></param>
        <initializer>int r=0,ret=0; \
				unsigned char *p; \
				if (a == NULL) return(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="379" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1aed07b4c4905cc35287275d8fd8a9760e" prot="public" static="no">
        <name>M_ASN1_I2D_len</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>ret+=f(a,NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="384" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a39164b3228308e8615e5a3a24da359d8" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if (a != NULL) M_ASN1_I2D_len(a,f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="385" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a2d1745e299c85edeb4db82bfbbdc44f9" prot="public" static="no">
        <name>M_ASN1_I2D_len_SET</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>ret+=i2d_ASN1_SET(a,NULL,f,V_ASN1_SET,V_ASN1_UNIVERSAL,IS_SET);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="387" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a7ff7115c240cc20cfbe53ee0afda726c" prot="public" static="no">
        <name>M_ASN1_I2D_len_SET_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,V_ASN1_SET, \
					    V_ASN1_UNIVERSAL,IS_SET);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="390" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1acfba70c6b2da7c90fb54a5395bb033fb" prot="public" static="no">
        <name>M_ASN1_I2D_len_SEQUENCE</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>ret+=i2d_ASN1_SET(a,NULL,f,V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL, \
				  IS_SEQUENCE);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="394" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a8f3052868f12c8b4499a7107bd7cf9ef" prot="public" static="no">
        <name>M_ASN1_I2D_len_SEQUENCE_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,V_ASN1_SEQUENCE, \
					    V_ASN1_UNIVERSAL,IS_SEQUENCE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="398" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1aeafac5a5e5668e2155f0144dbbd45a7c" prot="public" static="no">
        <name>M_ASN1_I2D_len_SEQUENCE_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			M_ASN1_I2D_len_SEQUENCE(a,f);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="402" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a5738b6f122ac70a172469141eb484b4b" prot="public" static="no">
        <name>M_ASN1_I2D_len_SEQUENCE_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0)) \
			M_ASN1_I2D_len_SEQUENCE_type(type,a,f);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="406" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a34af3dfd1208bfa619a2c8360af7570e" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_SET</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC,IS_SET);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="410" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a7d29c645305b91b5f818ac2fe5d28130" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_SET_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,x, \
					    V_ASN1_CONTEXT_SPECIFIC,IS_SET);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="413" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a6c5b3038005680467c067a5c01681aa7" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_SET_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC, \
					  IS_SET);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="417" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a5e3f547c05b3d01c78ac515709486a67" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_SET_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0)) \
			ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,x, \
					       V_ASN1_CONTEXT_SPECIFIC,IS_SET);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="422" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1af8f132533700738f8f8fb8f8b9be25fd" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_SEQUENCE</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC, \
				  IS_SEQUENCE);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="427" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a49ba3ba10162f4e21fa0045b2d05b746" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_SEQUENCE_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC, \
					  IS_SEQUENCE);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="431" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a63280713736e9f0dfa9f303cdc68254a" prot="public" static="no">
        <name>M_ASN1_I2D_len_IMP_SEQUENCE_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0)) \
			ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,x, \
						    V_ASN1_CONTEXT_SPECIFIC, \
						    IS_SEQUENCE);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="436" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1aa5dfbbf0979a8109d982cd0c916e1a92" prot="public" static="no">
        <name>M_ASN1_I2D_len_EXP_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>mtag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if (a != NULL)\
			{ \
			v=f(a,NULL); \
			ret+=ASN1_object_size(1,v,mtag); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="442" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a3b0bd3f8b765259a51fd25e3f7fab409" prot="public" static="no">
        <name>M_ASN1_I2D_len_EXP_SET_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>mtag</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0))\
			{ \
			v=i2d_ASN1_SET(a,NULL,f,tag,V_ASN1_UNIVERSAL,IS_SET); \
			ret+=ASN1_object_size(1,v,mtag); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="449" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a9e72356d3bcc3f42a5fa3bee1029920c" prot="public" static="no">
        <name>M_ASN1_I2D_len_EXP_SEQUENCE_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>mtag</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0))\
			{ \
			v=i2d_ASN1_SET(a,NULL,f,tag,V_ASN1_UNIVERSAL, \
				       IS_SEQUENCE); \
			ret+=ASN1_object_size(1,v,mtag); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="456" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a230fadd085c1eb574de963173eff222b" prot="public" static="no">
        <name>M_ASN1_I2D_len_EXP_SEQUENCE_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>mtag</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0))\
			{ \
			v=i2d_ASN1_SET_OF_##type(a,NULL,f,tag, \
						 V_ASN1_UNIVERSAL, \
						 IS_SEQUENCE); \
			ret+=ASN1_object_size(1,v,mtag); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="464" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a022d6710f23e8731ae26f693070c4d72" prot="public" static="no">
        <name>M_ASN1_I2D_put</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>f(a,&amp;p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="474" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1aedce5d00b619dadafee9761bb2ab1bb6" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>t</defname></param>
        <initializer>if (a != NULL) \
			{ \
			unsigned char *q=p; \
			f(a,&amp;p); \
			*q=(V_ASN1_CONTEXT_SPECIFIC|t|(*q&amp;V_ASN1_CONSTRUCTED));\
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="476" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1af80cb6fb787330531a31f245bfd62ebc" prot="public" static="no">
        <name>M_ASN1_I2D_put_SET</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>i2d_ASN1_SET(a,&amp;p,f,V_ASN1_SET,\
			V_ASN1_UNIVERSAL,IS_SET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="484" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a6bf2c03ab15f50e555919b5144333408" prot="public" static="no">
        <name>M_ASN1_I2D_put_SET_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>i2d_ASN1_SET_OF_##type(a,&amp;p,f,V_ASN1_SET,V_ASN1_UNIVERSAL,IS_SET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="486" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a320b8c41658e67fbc792ec0bbe1a7ab0" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_SET</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>i2d_ASN1_SET(a,&amp;p,f,x,\
			V_ASN1_CONTEXT_SPECIFIC,IS_SET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="488" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a32f71127400991cae175ed5a3188f45c" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_SET_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>i2d_ASN1_SET_OF_##type(a,&amp;p,f,x,V_ASN1_CONTEXT_SPECIFIC,IS_SET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="490" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a5dc7f4f7395b6435649b317b7d568e87" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_SEQUENCE</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>i2d_ASN1_SET(a,&amp;p,f,x,\
			V_ASN1_CONTEXT_SPECIFIC,IS_SEQUENCE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="492" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a36f93446735057da475c10a4674a0978" prot="public" static="no">
        <name>M_ASN1_I2D_put_SEQUENCE</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>i2d_ASN1_SET(a,&amp;p,f,V_ASN1_SEQUENCE,\
					     V_ASN1_UNIVERSAL,IS_SEQUENCE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="495" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a25dfee186d1cde61f7316d6e7f8501a6" prot="public" static="no">
        <name>M_ASN1_I2D_put_SEQUENCE_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>i2d_ASN1_SET_OF_##type(a,&amp;p,f,V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL, \
			    IS_SEQUENCE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="498" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a1ae677512e0e571b16e323c5839d836f" prot="public" static="no">
        <name>M_ASN1_I2D_put_SEQUENCE_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			M_ASN1_I2D_put_SEQUENCE(a,f);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="502" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a7c8b2e31a189cdf956eaf822898b7285" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_SET_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			{ i2d_ASN1_SET(a,&amp;p,f,x,V_ASN1_CONTEXT_SPECIFIC, \
				       IS_SET); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="506" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1adea0cb1f7c82e96b3995bdb2071f2c74" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_SET_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0)) \
			{ i2d_ASN1_SET_OF_##type(a,&amp;p,f,x, \
						 V_ASN1_CONTEXT_SPECIFIC, \
						 IS_SET); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="511" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a98e8b2a6d9ab2fb0085cd95fc89428c5" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_SEQUENCE_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			{ i2d_ASN1_SET(a,&amp;p,f,x,V_ASN1_CONTEXT_SPECIFIC, \
				       IS_SEQUENCE); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="517" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a8dac0e513e498c7681b94ea70babf106" prot="public" static="no">
        <name>M_ASN1_I2D_put_IMP_SEQUENCE_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>x</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0)) \
			{ i2d_ASN1_SET_OF_##type(a,&amp;p,f,x, \
						 V_ASN1_CONTEXT_SPECIFIC, \
						 IS_SEQUENCE); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="522" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1ae22c04f4a14eef08a3ee854e2f347911" prot="public" static="no">
        <name>M_ASN1_I2D_put_EXP_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if (a != NULL) \
			{ \
			ASN1_put_object(&amp;p,1,v,tag,V_ASN1_CONTEXT_SPECIFIC); \
			f(a,&amp;p); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="528" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a8f77efbdb874539643b4fdc6f663572c" prot="public" static="no">
        <name>M_ASN1_I2D_put_EXP_SET_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>mtag</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			{ \
			ASN1_put_object(&amp;p,1,v,mtag,V_ASN1_CONTEXT_SPECIFIC); \
			i2d_ASN1_SET(a,&amp;p,f,tag,V_ASN1_UNIVERSAL,IS_SET); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="535" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a042901f4d41ff6644d77cbb260ec7d2b" prot="public" static="no">
        <name>M_ASN1_I2D_put_EXP_SEQUENCE_opt</name>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>mtag</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_num(a) != 0)) \
			{ \
			ASN1_put_object(&amp;p,1,v,mtag,V_ASN1_CONTEXT_SPECIFIC); \
			i2d_ASN1_SET(a,&amp;p,f,tag,V_ASN1_UNIVERSAL,IS_SEQUENCE); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="542" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a2c43afc6e25b2aaa513aaf85f3dd85f2" prot="public" static="no">
        <name>M_ASN1_I2D_put_EXP_SEQUENCE_opt_type</name>
        <param><defname>type</defname></param>
        <param><defname>a</defname></param>
        <param><defname>f</defname></param>
        <param><defname>mtag</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>v</defname></param>
        <initializer>if ((a != NULL) &amp;&amp; (sk_##type##_num(a) != 0)) \
			{ \
			ASN1_put_object(&amp;p,1,v,mtag,V_ASN1_CONTEXT_SPECIFIC); \
			i2d_ASN1_SET_OF_##type(a,&amp;p,f,tag,V_ASN1_UNIVERSAL, \
					       IS_SEQUENCE); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="549" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a50dacfc88eae8d6eecf91e4797155631" prot="public" static="no">
        <name>M_ASN1_I2D_seq_total</name>
        <param></param>
        <initializer>r=ASN1_object_size(1,ret,V_ASN1_SEQUENCE); \
		if (pp == NULL) return(r); \
		p= *pp; \
		ASN1_put_object(&amp;p,1,ret,V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="557" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1aec1c40140ad96aeff9ed8d52ed679733" prot="public" static="no">
        <name>M_ASN1_I2D_INF_seq_start</name>
        <param><defname>tag</defname></param>
        <param><defname>ctx</defname></param>
        <initializer>*(p++)=(V_ASN1_CONSTRUCTED|(tag)|(ctx)); \
		*(p++)=0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="563" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a7921a5b76f9fea58f01f41a62e4b908d" prot="public" static="no">
        <name>M_ASN1_I2D_INF_seq_end</name>
        <param></param>
        <initializer>*(p++)=0x00; *(p++)=0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="567" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1__mac_8h_1a45a188d03233253423e550e2ac38de39" prot="public" static="no">
        <name>M_ASN1_I2D_finish</name>
        <param></param>
        <initializer>*pp=p; \
				return(r);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="569" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1_mac.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="asn1__mac_8h_1a721d90b2fe6d940eac887fbff05f43c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_GetSequence</definition>
        <argsstring>(ASN1_const_CTX *c, long *length)</argsstring>
        <name>asn1_GetSequence</name>
        <param>
          <type><ref refid="structasn1__const__ctx__st" kindref="compound">ASN1_const_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1__mac_8h_1a02d92bd6e41dcd83a7ac1d4a62b3bb8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1_add_error</definition>
        <argsstring>(const unsigned char *address, int offset)</argsstring>
        <name>asn1_add_error</name>
        <param>
          <type>const unsigned char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1_mac.h" line="573" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/asn1/asn1_mac.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1998<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_ASN1_MAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_ASN1_MAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/asn1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASN1_MAC_ERR_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_MAC_ERR_LIB<sp/><sp/><sp/><sp/>ERR_LIB_ASN1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_MAC_H_err(f,r,line)<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ERR_PUT_error(ASN1_MAC_ERR_LIB,(f),(r),__FILE__,(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_vars(a,type,func)<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_const_CTX<sp/>c;<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>type<sp/>ret=NULL;<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.pp=(const<sp/>unsigned<sp/>char<sp/>**)pp;<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=<sp/>*(const<sp/>unsigned<sp/>char<sp/>**)pp;<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.error=ERR_R_NESTED_ASN1_ERROR;<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>==<sp/>NULL)<sp/>||<sp/>((*a)<sp/>==<sp/>NULL))<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>if<sp/>((ret=(type)func())<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/>ret=(*a);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_Init()<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.p=<sp/>*(const<sp/>unsigned<sp/>char<sp/>**)pp;<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.max=(length<sp/>==<sp/>0)?0:(c.p+length);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_Finish_2(a)<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!asn1_const_Finish(&amp;c))<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(const<sp/>unsigned<sp/>char<sp/>**)pp=c.p;<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(a<sp/>!=<sp/>NULL)<sp/>(*a)=ret;<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(ret);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_Finish(a,func,e)<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>M_ASN1_D2I_Finish_2(a);<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor">err:\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_MAC_H_err((e),c.error,c.line);<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asn1_add_error(*(const<sp/>unsigned<sp/>char<sp/>**)pp,(int)(c.q-<sp/>*pp));<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((ret<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>((a<sp/>==<sp/>NULL)<sp/>||<sp/>(*a<sp/>!=<sp/>ret)))<sp/>func(ret);<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_start_sequence()<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!asn1_GetSequence(&amp;c,&amp;length))<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Begin<sp/>reading<sp/>ASN1<sp/>without<sp/>a<sp/>surrounding<sp/>sequence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_begin()<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen<sp/>=<sp/>length;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>reading<sp/>ASN1<sp/>with<sp/>no<sp/>check<sp/>on<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_Finish_nolen(a,<sp/>func,<sp/>e)<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*pp=c.p;<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(a<sp/>!=<sp/>NULL)<sp/>(*a)=ret;<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(ret);<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor">err:\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_MAC_H_err((e),c.error,c.line);<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asn1_add_error(*pp,(int)(c.q-<sp/>*pp));<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((ret<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>((a<sp/>==<sp/>NULL)<sp/>||<sp/>(*a<sp/>!=<sp/>ret)))<sp/>func(ret);<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return(NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_end_sequence()<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((c.inf&amp;1)<sp/>==<sp/>0)?(c.slen<sp/>&lt;=<sp/>0):<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c.eos=ASN1_const_check_infinite_end(&amp;c.p,c.slen)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>use<sp/>this<sp/>with<sp/>d2i_ASN1_BOOLEAN()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get(b,<sp/>func)<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(func(&amp;(b),&amp;c.p,c.slen)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>use<sp/>this<sp/>with<sp/>d2i_ASN1_BOOLEAN()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_x(type,b,func)<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((D2I_OF(type))func)(&amp;(b),&amp;c.p,c.slen)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>this<sp/>instead<sp/>()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_int(b,func)<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(func(&amp;(b),&amp;c.p,c.slen)<sp/>&lt;<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_opt(b,func,type)<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((M_ASN1_next<sp/>&amp;<sp/>(~V_ASN1_CONSTRUCTED))<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>(V_ASN1_UNIVERSAL|(type))))<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get(b,func);<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_int_opt(b,func,type)<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((M_ASN1_next<sp/>&amp;<sp/>(~V_ASN1_CONSTRUCTED))<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>(V_ASN1_UNIVERSAL|(type))))<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_int(b,func);<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_imp(b,func,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>M_ASN1_next=(_tmp&amp;<sp/>V_ASN1_CONSTRUCTED)|type;<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(func(&amp;(b),&amp;c.p,c.slen)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{c.line=__LINE__;<sp/>M_ASN1_next_prev<sp/>=<sp/>_tmp;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>M_ASN1_next_prev=_tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_IMP_opt(b,func,tag,type)<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((M_ASN1_next<sp/>&amp;<sp/>(~V_ASN1_CONSTRUCTED))<sp/>==<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(V_ASN1_CONTEXT_SPECIFIC|(tag))))<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>_tmp<sp/>=<sp/>M_ASN1_next;<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp(b,func,<sp/>type);\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_set(r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set(r,func,free_func,<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SET,V_ASN1_UNIVERSAL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_set_type(type,r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set_type(type,r,func,free_func,<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SET,V_ASN1_UNIVERSAL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_set_opt(r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(M_ASN1_next<sp/>==<sp/>(V_ASN1_UNIVERSAL|<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONSTRUCTED|V_ASN1_SET)))\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>M_ASN1_D2I_get_set(r,func,free_func);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_set_opt_type(type,r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(M_ASN1_next<sp/>==<sp/>(V_ASN1_UNIVERSAL|<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONSTRUCTED|V_ASN1_SET)))\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>M_ASN1_D2I_get_set_type(type,r,func,free_func);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_SET_opt(a,f)<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_I2D_len_SET(a,f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SET_opt(a,f)<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_I2D_put_SET(a,f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SEQUENCE_opt(a,f)<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_I2D_put_SEQUENCE(a,f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SEQUENCE_opt_type(type,a,f)<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_I2D_put_SEQUENCE_type(type,a,f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_IMP_set_opt(b,func,free_func,tag)<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(M_ASN1_next<sp/>==<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(V_ASN1_CONTEXT_SPECIFIC|V_ASN1_CONSTRUCTED|(tag))))\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set(b,func,free_func,\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag,V_ASN1_CONTEXT_SPECIFIC);<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_IMP_set_opt_type(type,b,func,free_func,tag)<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(M_ASN1_next<sp/>==<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(V_ASN1_CONTEXT_SPECIFIC|V_ASN1_CONSTRUCTED|(tag))))\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set_type(type,b,func,free_func,\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag,V_ASN1_CONTEXT_SPECIFIC);<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_seq(r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set(r,func,free_func,\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_seq_type(type,r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set_type(type,r,func,free_func,\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_seq_opt(r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(M_ASN1_next<sp/>==<sp/>(V_ASN1_UNIVERSAL|<sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONSTRUCTED|V_ASN1_SEQUENCE)))\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>M_ASN1_D2I_get_seq(r,func,free_func);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_seq_opt_type(type,r,func,free_func)<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(M_ASN1_next<sp/>==<sp/>(V_ASN1_UNIVERSAL|<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONSTRUCTED|V_ASN1_SEQUENCE)))\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>M_ASN1_D2I_get_seq_type(type,r,func,free_func);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_IMP_set(r,func,free_func,x)<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set(r,func,free_func,\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,V_ASN1_CONTEXT_SPECIFIC);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_IMP_set_type(type,r,func,free_func,x)<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_D2I_get_imp_set_type(type,r,func,free_func,\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,V_ASN1_CONTEXT_SPECIFIC);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_imp_set(r,func,free_func,a,b)<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(d2i_ASN1_SET(&amp;(r),&amp;c.p,c.slen,(char<sp/>*(*)())func,\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void<sp/>(*)())free_func,a,b)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_imp_set_type(type,r,func,free_func,a,b)<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(d2i_ASN1_SET_OF_##type(&amp;(r),&amp;c.p,c.slen,func,\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_func,a,b)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_set_strings(r,func,a,b)<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(d2i_ASN1_STRING_SET(&amp;(r),&amp;c.p,c.slen,a,b)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_EXP_opt(r,func,tag)<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0L)<sp/>&amp;&amp;<sp/>(M_ASN1_next<sp/>==<sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(V_ASN1_CONSTRUCTED|V_ASN1_CONTEXT_SPECIFIC|tag)))<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>Tinf,Ttag,Tclass;<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>Tlen;<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinf=ASN1_get_object(&amp;c.p,&amp;Tlen,&amp;Ttag,&amp;Tclass,c.slen);<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>&amp;<sp/>0x80)<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.error=ERR_R_BAD_ASN1_OBJECT_HEADER;<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>==<sp/>(V_ASN1_CONSTRUCTED+1))<sp/>\</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tlen<sp/>=<sp/>c.slen<sp/>-<sp/>(c.p<sp/>-<sp/>c.q)<sp/>-<sp/>2;<sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(func(&amp;(r),&amp;c.p,Tlen)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>==<sp/>(V_ASN1_CONSTRUCTED+1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tlen<sp/>=<sp/>c.slen<sp/>-<sp/>(c.p<sp/>-<sp/>c.q);<sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!ASN1_const_check_infinite_end(&amp;c.p,<sp/>Tlen))<sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.error=ERR_R_MISSING_ASN1_EOS;<sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_EXP_set_opt(r,func,free_func,tag,b)<sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(M_ASN1_next<sp/>==<sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(V_ASN1_CONSTRUCTED|V_ASN1_CONTEXT_SPECIFIC|tag)))<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>Tinf,Ttag,Tclass;<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>Tlen;<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinf=ASN1_get_object(&amp;c.p,&amp;Tlen,&amp;Ttag,&amp;Tclass,c.slen);<sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>&amp;<sp/>0x80)<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.error=ERR_R_BAD_ASN1_OBJECT_HEADER;<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>==<sp/>(V_ASN1_CONSTRUCTED+1))<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tlen<sp/>=<sp/>c.slen<sp/>-<sp/>(c.p<sp/>-<sp/>c.q)<sp/>-<sp/>2;<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(d2i_ASN1_SET(&amp;(r),&amp;c.p,Tlen,(char<sp/>*(*)())func,<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void<sp/>(*)())free_func,<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b,V_ASN1_UNIVERSAL)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>==<sp/>(V_ASN1_CONSTRUCTED+1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tlen<sp/>=<sp/>c.slen<sp/>-<sp/>(c.p<sp/>-<sp/>c.q);<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!ASN1_check_infinite_end(&amp;c.p,<sp/>Tlen))<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.error=ERR_R_MISSING_ASN1_EOS;<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_D2I_get_EXP_set_opt_type(type,r,func,free_func,tag,b)<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((c.slen<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(M_ASN1_next<sp/>==<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(V_ASN1_CONSTRUCTED|V_ASN1_CONTEXT_SPECIFIC|tag)))<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>Tinf,Ttag,Tclass;<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>Tlen;<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.q=c.p;<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinf=ASN1_get_object(&amp;c.p,&amp;Tlen,&amp;Ttag,&amp;Tclass,c.slen);<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>&amp;<sp/>0x80)<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.error=ERR_R_BAD_ASN1_OBJECT_HEADER;<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>==<sp/>(V_ASN1_CONSTRUCTED+1))<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tlen<sp/>=<sp/>c.slen<sp/>-<sp/>(c.p<sp/>-<sp/>c.q)<sp/>-<sp/>2;<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(d2i_ASN1_SET_OF_##type(&amp;(r),&amp;c.p,Tlen,func,<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_func,b,V_ASN1_UNIVERSAL)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Tinf<sp/>==<sp/>(V_ASN1_CONSTRUCTED+1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tlen<sp/>=<sp/>c.slen<sp/>-<sp/>(c.p<sp/>-<sp/>c.q);<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!ASN1_check_infinite_end(&amp;c.p,<sp/>Tlen))<sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.error=ERR_R_MISSING_ASN1_EOS;<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.line=__LINE__;<sp/>goto<sp/>err;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.slen-=(c.p-c.q);<sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>New<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_New_Malloc(ret,type)<sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((ret=(type<sp/>*)OPENSSL_malloc(sizeof(type)))<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>c.line=__LINE__;<sp/>goto<sp/>err2;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_New(arg,func)<sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((arg)=func())<sp/>==<sp/>NULL)<sp/>return(NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_New_Error(a)<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/><sp/>err:<sp/><sp/><sp/><sp/>ASN1_MAC_H_err((a),ERR_R_NESTED_ASN1_ERROR,c.line);<sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return(NULL);*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>err2:<sp/><sp/><sp/>ASN1_MAC_H_err((a),ERR_R_MALLOC_FAILURE,c.line);<sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return(NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BIG<sp/>UGLY<sp/>WARNING!<sp/><sp/>This<sp/>is<sp/>so<sp/>damn<sp/>ugly<sp/>I<sp/>wanna<sp/>puke.<sp/><sp/>Unfortunately,</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>some<sp/>macros<sp/>that<sp/>use<sp/>ASN1_const_CTX<sp/>still<sp/>insist<sp/>on<sp/>writing<sp/>in<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>stream.<sp/><sp/>ARGH!<sp/><sp/>ARGH!<sp/><sp/>ARGH!<sp/><sp/>Let&apos;s<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>macro<sp/>package.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>Please?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>Richard<sp/>Levitte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_next<sp/><sp/><sp/><sp/><sp/>(*((unsigned<sp/>char<sp/>*)(c.p)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_next_prev<sp/><sp/><sp/><sp/>(*((unsigned<sp/>char<sp/>*)(c.q)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_vars(a)<sp/><sp/>int<sp/>r=0,ret=0;<sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*p;<sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(a<sp/>==<sp/>NULL)<sp/>return(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Length<sp/>Macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len(a,f)<sp/>ret+=f(a,NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_opt(a,f)<sp/>if<sp/>(a<sp/>!=<sp/>NULL)<sp/>M_ASN1_I2D_len(a,f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_SET(a,f)<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET(a,NULL,f,V_ASN1_SET,V_ASN1_UNIVERSAL,IS_SET);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_SET_type(type,a,f)<sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,V_ASN1_SET,<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL,IS_SET);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_SEQUENCE(a,f)<sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET(a,NULL,f,V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL,<sp/>\</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_SEQUENCE_type(type,a,f)<sp/>\</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,V_ASN1_SEQUENCE,<sp/>\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL,IS_SEQUENCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_SEQUENCE_opt(a,f)<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_I2D_len_SEQUENCE(a,f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_SEQUENCE_opt_type(type,a,f)<sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_I2D_len_SEQUENCE_type(type,a,f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_SET(a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC,IS_SET);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_SET_type(type,a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,x,<sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONTEXT_SPECIFIC,IS_SET);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_SET_opt(a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SET);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_SET_opt_type(type,a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,x,<sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONTEXT_SPECIFIC,IS_SET);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_SEQUENCE(a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_SEQUENCE_opt(a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET(a,NULL,f,x,V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_IMP_SEQUENCE_opt_type(type,a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=i2d_ASN1_SET_OF_##type(a,NULL,f,x,<sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_EXP_opt(a,f,mtag,v)<sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(a<sp/>!=<sp/>NULL)\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v=f(a,NULL);<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=ASN1_object_size(1,v,mtag);<sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_EXP_SET_opt(a,f,mtag,tag,v)<sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v=i2d_ASN1_SET(a,NULL,f,tag,V_ASN1_UNIVERSAL,IS_SET);<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=ASN1_object_size(1,v,mtag);<sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_EXP_SEQUENCE_opt(a,f,mtag,tag,v)<sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v=i2d_ASN1_SET(a,NULL,f,tag,V_ASN1_UNIVERSAL,<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);<sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=ASN1_object_size(1,v,mtag);<sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_len_EXP_SEQUENCE_opt_type(type,a,f,mtag,tag,v)<sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))\</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v=i2d_ASN1_SET_OF_##type(a,NULL,f,tag,<sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL,<sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);<sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret+=ASN1_object_size(1,v,mtag);<sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>Macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put(a,f)<sp/>f(a,&amp;p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_opt(a,f,t)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(a<sp/>!=<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*q=p;<sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(a,&amp;p);<sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q=(V_ASN1_CONTEXT_SPECIFIC|t|(*q&amp;V_ASN1_CONSTRUCTED));\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SET(a,f)<sp/>i2d_ASN1_SET(a,&amp;p,f,V_ASN1_SET,\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL,IS_SET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SET_type(type,a,f)<sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_SET_OF_##type(a,&amp;p,f,V_ASN1_SET,V_ASN1_UNIVERSAL,IS_SET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_SET(a,f,x)<sp/>i2d_ASN1_SET(a,&amp;p,f,x,\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONTEXT_SPECIFIC,IS_SET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_SET_type(type,a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_SET_OF_##type(a,&amp;p,f,x,V_ASN1_CONTEXT_SPECIFIC,IS_SET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_SEQUENCE(a,f,x)<sp/>i2d_ASN1_SET(a,&amp;p,f,x,\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONTEXT_SPECIFIC,IS_SEQUENCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SEQUENCE(a,f)<sp/>i2d_ASN1_SET(a,&amp;p,f,V_ASN1_SEQUENCE,\</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_UNIVERSAL,IS_SEQUENCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SEQUENCE_type(type,a,f)<sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_SET_OF_##type(a,&amp;p,f,V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL,<sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_SEQUENCE_opt(a,f)<sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_ASN1_I2D_put_SEQUENCE(a,f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_SET_opt(a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>i2d_ASN1_SET(a,&amp;p,f,x,V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SET);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_SET_opt_type(type,a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>i2d_ASN1_SET_OF_##type(a,&amp;p,f,x,<sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SET);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_SEQUENCE_opt(a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>i2d_ASN1_SET(a,&amp;p,f,x,V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_IMP_SEQUENCE_opt_type(type,a,f,x)<sp/>\</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>i2d_ASN1_SET_OF_##type(a,&amp;p,f,x,<sp/>\</highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_CONTEXT_SPECIFIC,<sp/>\</highlight></codeline>
<codeline lineno="526"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_EXP_opt(a,f,tag,v)<sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(a<sp/>!=<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_put_object(&amp;p,1,v,tag,V_ASN1_CONTEXT_SPECIFIC);<sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(a,&amp;p);<sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_EXP_SET_opt(a,f,mtag,tag,v)<sp/>\</highlight></codeline>
<codeline lineno="536"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="537"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_put_object(&amp;p,1,v,mtag,V_ASN1_CONTEXT_SPECIFIC);<sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_SET(a,&amp;p,f,tag,V_ASN1_UNIVERSAL,IS_SET);<sp/>\</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_EXP_SEQUENCE_opt(a,f,mtag,tag,v)<sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_put_object(&amp;p,1,v,mtag,V_ASN1_CONTEXT_SPECIFIC);<sp/>\</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_SET(a,&amp;p,f,tag,V_ASN1_UNIVERSAL,IS_SEQUENCE);<sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_put_EXP_SEQUENCE_opt_type(type,a,f,mtag,tag,v)<sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(sk_##type##_num(a)<sp/>!=<sp/>0))<sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_put_object(&amp;p,1,v,mtag,V_ASN1_CONTEXT_SPECIFIC);<sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2d_ASN1_SET_OF_##type(a,&amp;p,f,tag,V_ASN1_UNIVERSAL,<sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_SEQUENCE);<sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_seq_total()<sp/>\</highlight></codeline>
<codeline lineno="558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=ASN1_object_size(1,ret,V_ASN1_SEQUENCE);<sp/>\</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(pp<sp/>==<sp/>NULL)<sp/>return(r);<sp/>\</highlight></codeline>
<codeline lineno="560"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p=<sp/>*pp;<sp/>\</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_put_object(&amp;p,1,ret,V_ASN1_SEQUENCE,V_ASN1_UNIVERSAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_INF_seq_start(tag,ctx)<sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p++)=(V_ASN1_CONSTRUCTED|(tag)|(ctx));<sp/>\</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p++)=0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_INF_seq_end()<sp/>*(p++)=0x00;<sp/>*(p++)=0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_ASN1_I2D_finish()<sp/>*pp=p;<sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return(r);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_GetSequence(<ref refid="structasn1__const__ctx__st" kindref="compound">ASN1_const_CTX</ref><sp/>*c,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*length);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asn1_add_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*address,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/asn1_mac.h"/>
  </compounddef>
</doxygen>
