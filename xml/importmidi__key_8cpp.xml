<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="importmidi__key_8cpp" kind="file" language="C++">
    <compoundname>importmidi_key.cpp</compoundname>
    <includes refid="importmidi__key_8h" local="yes">importmidi_key.h</includes>
    <includes refid="importmidi__fraction_8h" local="yes">importmidi_fraction.h</includes>
    <includes refid="importmidi__chord_8h" local="yes">importmidi_chord.h</includes>
    <includes refid="importmidi__inner_8h" local="yes">importmidi_inner.h</includes>
    <includes refid="key_8h" local="yes">libmscore/key.h</includes>
    <includes refid="keysig_8h" local="yes">libmscore/keysig.h</includes>
    <includes refid="keylist_8h" local="yes">libmscore/keylist.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="staff_8h" local="yes">libmscore/staff.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <incdepgraph>
      <node id="53278">
        <label>list</label>
      </node>
      <node id="53270">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="53254" relation="include">
        </childnode>
      </node>
      <node id="53289">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="53237" relation="include">
        </childnode>
        <childnode refid="53290" relation="include">
        </childnode>
      </node>
      <node id="53242">
        <label>libmscore/key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="53228">
        <label>mscore/importmidi/importmidi_key.cpp</label>
        <link refid="importmidi__key_8cpp"/>
        <childnode refid="53229" relation="include">
        </childnode>
        <childnode refid="53230" relation="include">
        </childnode>
        <childnode refid="53233" relation="include">
        </childnode>
        <childnode refid="53236" relation="include">
        </childnode>
        <childnode refid="53242" relation="include">
        </childnode>
        <childnode refid="53243" relation="include">
        </childnode>
        <childnode refid="53248" relation="include">
        </childnode>
        <childnode refid="53249" relation="include">
        </childnode>
        <childnode refid="53257" relation="include">
        </childnode>
        <childnode refid="53274" relation="include">
        </childnode>
        <childnode refid="53285" relation="include">
        </childnode>
      </node>
      <node id="53285">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="53286" relation="include">
        </childnode>
        <childnode refid="53287" relation="include">
        </childnode>
        <childnode refid="53289" relation="include">
        </childnode>
      </node>
      <node id="53236">
        <label>importmidi_inner.h</label>
        <link refid="importmidi__inner_8h_source"/>
        <childnode refid="53230" relation="include">
        </childnode>
        <childnode refid="53234" relation="include">
        </childnode>
        <childnode refid="53237" relation="include">
        </childnode>
        <childnode refid="53239" relation="include">
        </childnode>
        <childnode refid="53240" relation="include">
        </childnode>
        <childnode refid="53241" relation="include">
        </childnode>
      </node>
      <node id="53252">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="53253" relation="include">
        </childnode>
      </node>
      <node id="53249">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="53250" relation="include">
        </childnode>
        <childnode refid="53231" relation="include">
        </childnode>
        <childnode refid="53252" relation="include">
        </childnode>
      </node>
      <node id="53247">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="53287">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="53288" relation="include">
        </childnode>
        <childnode refid="53286" relation="include">
        </childnode>
      </node>
      <node id="53279">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="53259">
        <label>pitch.h</label>
        <link refid="pitch_8h_source"/>
      </node>
      <node id="53253">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53247" relation="include">
        </childnode>
        <childnode refid="53254" relation="include">
        </childnode>
      </node>
      <node id="53248">
        <label>libmscore/keylist.h</label>
        <link refid="keylist_8h_source"/>
        <childnode refid="53242" relation="include">
        </childnode>
      </node>
      <node id="53256">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="53267">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53268" relation="include">
        </childnode>
      </node>
      <node id="53235">
        <label>map</label>
      </node>
      <node id="53261">
        <label>clef.h</label>
        <link refid="clef_8h"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53254" relation="include">
        </childnode>
      </node>
      <node id="53264">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="53231" relation="include">
        </childnode>
        <childnode refid="53265" relation="include">
        </childnode>
      </node>
      <node id="53234">
        <label>importmidi_tuplet.h</label>
        <link refid="importmidi__tuplet_8h_source"/>
        <childnode refid="53230" relation="include">
        </childnode>
      </node>
      <node id="53288">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="53257">
        <label>libmscore/staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="53254" relation="include">
        </childnode>
        <childnode refid="53258" relation="include">
        </childnode>
        <childnode refid="53259" relation="include">
        </childnode>
        <childnode refid="53260" relation="include">
        </childnode>
        <childnode refid="53248" relation="include">
        </childnode>
        <childnode refid="53262" relation="include">
        </childnode>
        <childnode refid="53272" relation="include">
        </childnode>
        <childnode refid="53246" relation="include">
        </childnode>
      </node>
      <node id="53280">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="53281" relation="include">
        </childnode>
      </node>
      <node id="53230">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="53231" relation="include">
        </childnode>
      </node>
      <node id="53233">
        <label>importmidi_chord.h</label>
        <link refid="importmidi__chord_8h_source"/>
        <childnode refid="53230" relation="include">
        </childnode>
        <childnode refid="53234" relation="include">
        </childnode>
        <childnode refid="53235" relation="include">
        </childnode>
      </node>
      <node id="53237">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="53230" relation="include">
        </childnode>
        <childnode refid="53238" relation="include">
        </childnode>
      </node>
      <node id="53281">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="53239" relation="include">
        </childnode>
        <childnode refid="53282" relation="include">
        </childnode>
        <childnode refid="53283" relation="include">
        </childnode>
      </node>
      <node id="53262">
        <label>stafftypelist.h</label>
        <link refid="stafftypelist_8h_source"/>
        <childnode refid="53263" relation="include">
        </childnode>
      </node>
      <node id="53250">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53251" relation="include">
        </childnode>
      </node>
      <node id="53243">
        <label>libmscore/keysig.h</label>
        <link refid="keysig_8h_source"/>
        <childnode refid="53242" relation="include">
        </childnode>
        <childnode refid="53244" relation="include">
        </childnode>
      </node>
      <node id="53271">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="53266" relation="include">
        </childnode>
      </node>
      <node id="53239">
        <label>vector</label>
      </node>
      <node id="53268">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="53245">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="53229">
        <label>importmidi_key.h</label>
        <link refid="importmidi__key_8h_source"/>
      </node>
      <node id="53284">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="53241">
        <label>utility</label>
      </node>
      <node id="53231">
        <label>libmscore/fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="53232" relation="include">
        </childnode>
      </node>
      <node id="53266">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="53267" relation="include">
        </childnode>
      </node>
      <node id="53255">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="53256" relation="include">
        </childnode>
      </node>
      <node id="53286">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="53290">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="53291" relation="include">
        </childnode>
        <childnode refid="53292" relation="include">
        </childnode>
      </node>
      <node id="53273">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53264" relation="include">
        </childnode>
      </node>
      <node id="53251">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="53244" relation="include">
        </childnode>
      </node>
      <node id="53244">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="53245" relation="include">
        </childnode>
        <childnode refid="53231" relation="include">
        </childnode>
        <childnode refid="53246" relation="include">
        </childnode>
        <childnode refid="53247" relation="include">
        </childnode>
      </node>
      <node id="53277">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="53278" relation="include">
        </childnode>
      </node>
      <node id="53283">
        <label>iostream</label>
      </node>
      <node id="53258">
        <label>velo.h</label>
        <link refid="velo_8h"/>
      </node>
      <node id="53254">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="53232" relation="include">
        </childnode>
        <childnode refid="53255" relation="include">
        </childnode>
      </node>
      <node id="53272">
        <label>groups.h</label>
        <link refid="groups_8h_source"/>
        <childnode refid="53231" relation="include">
        </childnode>
        <childnode refid="53254" relation="include">
        </childnode>
        <childnode refid="53264" relation="include">
        </childnode>
        <childnode refid="53273" relation="include">
        </childnode>
      </node>
      <node id="53240">
        <label>cstddef</label>
      </node>
      <node id="53275">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="53254" relation="include">
        </childnode>
        <childnode refid="53264" relation="include">
        </childnode>
        <childnode refid="53273" relation="include">
        </childnode>
      </node>
      <node id="53269">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="53263">
        <label>stafftype.h</label>
        <link refid="stafftype_8h_source"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53245" relation="include">
        </childnode>
        <childnode refid="53254" relation="include">
        </childnode>
        <childnode refid="53264" relation="include">
        </childnode>
      </node>
      <node id="53238">
        <label>set</label>
      </node>
      <node id="53232">
        <label>config.h</label>
      </node>
      <node id="53282">
        <label>algorithm</label>
      </node>
      <node id="53274">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="53232" relation="include">
        </childnode>
        <childnode refid="53275" relation="include">
        </childnode>
        <childnode refid="53276" relation="include">
        </childnode>
        <childnode refid="53277" relation="include">
        </childnode>
        <childnode refid="53279" relation="include">
        </childnode>
        <childnode refid="53280" relation="include">
        </childnode>
        <childnode refid="53251" relation="include">
        </childnode>
        <childnode refid="53284" relation="include">
        </childnode>
      </node>
      <node id="53292">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="53235" relation="include">
        </childnode>
      </node>
      <node id="53291">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="53231" relation="include">
        </childnode>
      </node>
      <node id="53246">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="53260">
        <label>cleflist.h</label>
        <link refid="cleflist_8h_source"/>
        <childnode refid="53254" relation="include">
        </childnode>
        <childnode refid="53261" relation="include">
        </childnode>
      </node>
      <node id="53276">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="53270" relation="include">
        </childnode>
        <childnode refid="53254" relation="include">
        </childnode>
        <childnode refid="53264" relation="include">
        </childnode>
      </node>
      <node id="53265">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53266" relation="include">
        </childnode>
        <childnode refid="53269" relation="include">
        </childnode>
        <childnode refid="53270" relation="include">
        </childnode>
        <childnode refid="53247" relation="include">
        </childnode>
        <childnode refid="53271" relation="include">
        </childnode>
        <childnode refid="53242" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_ms_1_1_midi_key_1_1_key_data" prot="public">Ms::MidiKey::KeyData</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
    <innernamespace refid="namespace_ms_1_1_midi_key">Ms::MidiKey</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;importmidi_key.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;importmidi_fraction.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;importmidi_chord.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;importmidi_inner.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/key.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/keysig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/keylist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="staff_8h" kindref="compound">libmscore/staff.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>simple<sp/>key<sp/>detection<sp/>algorithm<sp/>is<sp/>from<sp/>thesis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Inferring<sp/>Score<sp/>Level<sp/>Musical<sp/>Information<sp/>From<sp/>Low-Level<sp/>Musical<sp/>Data&quot;,<sp/>2004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>Jürgen<sp/>Kilian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">MidiKey<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_ms_1_1_midi_key_1_1_key_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_midi_key_1_1_key_data" kindref="compound">KeyData</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_key_1_1_key_data" kindref="compound">KeyData</ref>(Key<sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/>:<sp/>key_(key),<sp/>count_(count)<sp/>{}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/>key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key_;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_midi_key_1_1_key_data" kindref="compound">KeyData</ref><sp/>&amp;second)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="28"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose<sp/>key<sp/>with<sp/>max<sp/>sum<sp/>count<sp/>of<sp/>transitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_<sp/>&gt;<sp/>second.count_)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_<sp/>&lt;<sp/>second.count_)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>equal<sp/>-<sp/>prefer<sp/>key<sp/>with<sp/>less<sp/>accitential<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qAbs((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)key_)<sp/>&lt;<sp/>qAbs((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)second.key_);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/>key_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignKeyListToStaff(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_key_list" kindref="compound">KeyList</ref><sp/>&amp;kl,<sp/><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref><sp/>*staff)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/>staff-&gt;score();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track<sp/>=<sp/>staff-&gt;idx()<sp/>*<sp/>VOICES;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/>pkey<sp/>=<sp/>Key::C;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>kl.begin();<sp/>it<sp/>!=<sp/>kl.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tick<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/>key<sp/><sp/>=<sp/>it-&gt;second.key();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((key<sp/>==<sp/>Key::C)<sp/>&amp;&amp;<sp/>(key<sp/>==<sp/>pkey))<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dont<sp/>insert<sp/>uneccessary<sp/>C<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkey<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*<sp/>ks<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>(score);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ks-&gt;setTrack(track);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ks-&gt;setGenerated(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ks-&gt;setKey(key);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ks-&gt;setMag(staff-&gt;mag(tick));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m<sp/>=<sp/>score-&gt;tick2measure(tick);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>seg<sp/>=<sp/>m-&gt;<ref refid="class_ms_1_1_measure_1a4fe8e5a83c238d686df4930a59ad6861" kindref="member">getSegment</ref>(SegmentType::KeySig,<sp/>tick);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;add(ks);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">Key<sp/>findKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;MTrack&gt;<sp/>&amp;tracks)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>octave<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>counts(octave);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;track:<sp/>tracks)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track.mtrack-&gt;drumTrack())</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>track.chords.begin();<sp/>it<sp/>!=<sp/>track.chords.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>std::next(it);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>==<sp/>track.chords.end())</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;note1:<sp/>it-&gt;second.notes)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;note2:<sp/>next-&gt;second.notes)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qAbs(note1.pitch<sp/>-<sp/>note2.pitch)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++counts[qMin(note1.pitch,<sp/>note2.pitch)<sp/>%<sp/>octave];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;KeyData&gt;<sp/>keys<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Key::C_B,<sp/>counts[3]<sp/>+<sp/>counts[10]}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::G_B,<sp/>counts[10]<sp/>+<sp/>counts[5]}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::D_B,<sp/>counts[5]<sp/>+<sp/>counts[0]}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::A_B,<sp/>counts[0]<sp/>+<sp/>counts[7]}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::E_B,<sp/>counts[7]<sp/>+<sp/>counts[2]}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::B_B,<sp/>counts[2]<sp/>+<sp/>counts[9]}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::F,<sp/>counts[9]<sp/>+<sp/>counts[4]}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::C,<sp/>counts[4]<sp/>+<sp/>counts[11]}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::G,<sp/>counts[11]<sp/>+<sp/>counts[6]}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::D,<sp/>counts[6]<sp/>+<sp/>counts[1]}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::A,<sp/>counts[1]<sp/>+<sp/>counts[8]}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::E,<sp/>counts[8]<sp/>+<sp/>counts[3]}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::B,<sp/>counts[3]<sp/>+<sp/>counts[10]}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::F_S,<sp/>counts[10]<sp/>+<sp/>counts[5]}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{Key::C_S,<sp/>counts[5]<sp/>+<sp/>counts[0]}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(keys.begin(),<sp/>keys.end());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys[0].key();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recognizeMainKeySig(QList&lt;MTrack&gt;<sp/>&amp;tracks)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needToFindKey<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHuman<sp/>=<sp/>opers.data()-&gt;trackOpers.isHumanPerformance.value();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isHuman)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needToFindKey<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!needToFindKey)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref><sp/>&amp;track:<sp/>tracks)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track.mtrack-&gt;drumTrack())</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!track.hasKey)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needToFindKey<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!needToFindKey)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key<sp/>key<sp/>=<sp/>findKey(tracks);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref><sp/>&amp;track:<sp/>tracks)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track.mtrack-&gt;drumTrack())</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!track.hasKey<sp/>||<sp/>isHuman)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig_event" kindref="compound">KeySigEvent</ref><sp/>ke;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ke.setKey(key);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_list" kindref="compound">KeyList</ref><sp/>&amp;staffKeyList<sp/>=<sp/>*track.staff-&gt;keyList();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staffKeyList[0]<sp/>=<sp/>ke;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assignKeyListToStaff(staffKeyList,<sp/>track.staff);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>MidiKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ms</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mscore/importmidi/importmidi_key.cpp"/>
  </compounddef>
</doxygen>
