<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="porttime_8h" kind="file" language="C++">
    <compoundname>porttime.h</compoundname>
    <includedby refid="pm_8cpp" local="no">mscore/pm.cpp</includedby>
    <includedby refid="seq_8cpp" local="no">mscore/seq.cpp</includedby>
    <includedby refid="portmidi_8c" local="yes">thirdparty/portmidi/pm_common/portmidi.c</includedby>
    <includedby refid="pmmacosxcm_8c" local="yes">thirdparty/portmidi/pm_mac/pmmacosxcm.c</includedby>
    <includedby refid="latency_8c" local="yes">thirdparty/portmidi/pm_test/latency.c</includedby>
    <includedby refid="midithread_8c" local="yes">thirdparty/portmidi/pm_test/midithread.c</includedby>
    <includedby refid="midithru_8c" local="yes">thirdparty/portmidi/pm_test/midithru.c</includedby>
    <includedby refid="mm_8c" local="yes">thirdparty/portmidi/pm_test/mm.c</includedby>
    <includedby refid="sysex_8c" local="yes">thirdparty/portmidi/pm_test/sysex.c</includedby>
    <includedby refid="test_8c" local="yes">thirdparty/portmidi/pm_test/test.c</includedby>
    <includedby refid="pmwinmm_8c" local="yes">thirdparty/portmidi/pm_win/pmwinmm.c</includedby>
    <includedby refid="ptlinux_8c" local="yes">thirdparty/portmidi/porttime/ptlinux.c</includedby>
    <includedby refid="ptmacosx__cf_8c" local="yes">thirdparty/portmidi/porttime/ptmacosx_cf.c</includedby>
    <includedby refid="ptmacosx__mach_8c" local="yes">thirdparty/portmidi/porttime/ptmacosx_mach.c</includedby>
    <includedby refid="ptwinmm_8c" local="yes">thirdparty/portmidi/porttime/ptwinmm.c</includedby>
    <invincdepgraph>
      <node id="93084">
        <label>thirdparty/portmidi/pm_test/mm.c</label>
        <link refid="mm_8c_source"/>
      </node>
      <node id="93091">
        <label>thirdparty/portmidi/porttime/ptwinmm.c</label>
        <link refid="ptwinmm_8c_source"/>
      </node>
      <node id="93090">
        <label>thirdparty/portmidi/porttime/ptmacosx_mach.c</label>
        <link refid="ptmacosx__mach_8c_source"/>
      </node>
      <node id="93083">
        <label>thirdparty/portmidi/pm_test/midithru.c</label>
        <link refid="midithru_8c_source"/>
      </node>
      <node id="93079">
        <label>thirdparty/portmidi/pm_common/portmidi.c</label>
        <link refid="portmidi_8c_source"/>
      </node>
      <node id="93078">
        <label>mscore/seq.cpp</label>
        <link refid="seq_8cpp_source"/>
      </node>
      <node id="93080">
        <label>thirdparty/portmidi/pm_mac/pmmacosxcm.c</label>
        <link refid="pmmacosxcm_8c_source"/>
      </node>
      <node id="93088">
        <label>thirdparty/portmidi/porttime/ptlinux.c</label>
        <link refid="ptlinux_8c_source"/>
      </node>
      <node id="93086">
        <label>thirdparty/portmidi/pm_test/test.c</label>
        <link refid="test_8c_source"/>
      </node>
      <node id="93085">
        <label>thirdparty/portmidi/pm_test/sysex.c</label>
        <link refid="sysex_8c_source"/>
      </node>
      <node id="93081">
        <label>thirdparty/portmidi/pm_test/latency.c</label>
        <link refid="latency_8c_source"/>
      </node>
      <node id="93089">
        <label>thirdparty/portmidi/porttime/ptmacosx_cf.c</label>
        <link refid="ptmacosx__cf_8c_source"/>
      </node>
      <node id="93082">
        <label>thirdparty/portmidi/pm_test/midithread.c</label>
        <link refid="midithread_8c_source"/>
      </node>
      <node id="93087">
        <label>thirdparty/portmidi/pm_win/pmwinmm.c</label>
        <link refid="pmwinmm_8c_source"/>
      </node>
      <node id="93076">
        <label>thirdparty/portmidi/porttime/porttime.h</label>
        <link refid="porttime_8h"/>
        <childnode refid="93077" relation="include">
        </childnode>
        <childnode refid="93078" relation="include">
        </childnode>
        <childnode refid="93079" relation="include">
        </childnode>
        <childnode refid="93080" relation="include">
        </childnode>
        <childnode refid="93081" relation="include">
        </childnode>
        <childnode refid="93082" relation="include">
        </childnode>
        <childnode refid="93083" relation="include">
        </childnode>
        <childnode refid="93084" relation="include">
        </childnode>
        <childnode refid="93085" relation="include">
        </childnode>
        <childnode refid="93086" relation="include">
        </childnode>
        <childnode refid="93087" relation="include">
        </childnode>
        <childnode refid="93088" relation="include">
        </childnode>
        <childnode refid="93089" relation="include">
        </childnode>
        <childnode refid="93090" relation="include">
        </childnode>
        <childnode refid="93091" relation="include">
        </childnode>
      </node>
      <node id="93077">
        <label>mscore/pm.cpp</label>
        <link refid="pm_8cpp_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484" prot="public" static="no">
        <name>PtError</name>
        <enumvalue id="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484acbc4fa9cb00ea6f0e5ca6b97e0d3cf02" prot="public">
          <name>ptNoError</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484a72ce5f2ca96bd5c8d7d556c66ce6881e" prot="public">
          <name>ptHostError</name>
          <initializer>= -10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484aa9df98e3a7d8fba5ee778b544adff531" prot="public">
          <name>ptAlreadyStarted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484a8e213bd7a0efd207bbd52b1bf3ccccc0" prot="public">
          <name>ptAlreadyStopped</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484a05521ab2716ca523bf4d7d31c6ba90e1" prot="public">
          <name>ptInsufficientMemory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="15" column="1" bodyfile="thirdparty/portmidi/porttime/porttime.h" bodystart="15" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="porttime_8h_1afe13ddbff17b450b11236ce8013f35f3" prot="public" static="no">
        <type>long</type>
        <definition>typedef long PtTimestamp</definition>
        <argsstring></argsstring>
        <name>PtTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="24" column="1" bodyfile="thirdparty/portmidi/porttime/porttime.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="porttime_8h_1ab0109b633efa518d2b7e93e12078bf75" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() PtCallback(PtTimestamp timestamp, void *userData)</definition>
        <argsstring>(PtTimestamp timestamp, void *userData)</argsstring>
        <name>PtCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="26" column="1" bodyfile="thirdparty/portmidi/porttime/porttime.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="porttime_8h_1a67205dae78222df6fa27d3c20dd574f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PtError</type>
        <definition>PtError Pt_Start</definition>
        <argsstring>(int resolution, PtCallback *callback, void *userData)</argsstring>
        <name>Pt_Start</name>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>PtCallback *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="41" column="1" bodyfile="thirdparty/portmidi/porttime/ptlinux.c" bodystart="78" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="porttime_8h_1a1ec792a0ae207b7243018b84de1bae4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PtError</type>
        <definition>PtError Pt_Stop</definition>
        <argsstring>()</argsstring>
        <name>Pt_Stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="49" column="1" bodyfile="thirdparty/portmidi/porttime/ptlinux.c" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="porttime_8h_1a8e5fb8ff92c50c61a25d63911b30efc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Pt_Started</definition>
        <argsstring>()</argsstring>
        <name>Pt_Started</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="54" column="1" bodyfile="thirdparty/portmidi/porttime/ptlinux.c" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="porttime_8h_1adc561fd1f67132ffd377ac585477b3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PtTimestamp</type>
        <definition>PtTimestamp Pt_Time</definition>
        <argsstring>()</argsstring>
        <name>Pt_Time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="59" column="1" bodyfile="thirdparty/portmidi/porttime/ptlinux.c" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="porttime_8h_1a8d0fbfbf7c8cab76abdc236e42dcca9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pt_Sleep</definition>
        <argsstring>(long duration)</argsstring>
        <name>Pt_Sleep</name>
        <param>
          <type>long</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/porttime.h" line="68" column="1" bodyfile="thirdparty/portmidi/porttime/ptlinux.c" bodystart="127" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>porttime.h<sp/>--<sp/>portable<sp/>interface<sp/>to<sp/>millisecond<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG<sp/>FOR<sp/>PORTTIME</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>10-Jun-03<sp/>Mark<sp/>Nelson<sp/>&amp;<sp/>RBD</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>boost<sp/>priority<sp/>of<sp/>timer<sp/>thread<sp/>in<sp/>ptlinux.c<sp/>implementation</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Should<sp/>there<sp/>be<sp/>a<sp/>way<sp/>to<sp/>choose<sp/>the<sp/>source<sp/>of<sp/>time<sp/>here?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>ptNoError<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>ptHostError<sp/>=<sp/>-10000,<sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>system-specific<sp/>error<sp/>occurred<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ptAlreadyStarted,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cannot<sp/>start<sp/>timer<sp/>because<sp/>it<sp/>is<sp/>already<sp/>started<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>ptAlreadyStopped,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cannot<sp/>stop<sp/>timer<sp/>because<sp/>it<sp/>is<sp/>already<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>ptInsufficientMemory<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>memory<sp/>could<sp/>not<sp/>be<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/>PtError;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PtTimestamp;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(PtCallback)(<sp/>PtTimestamp<sp/>timestamp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userData<sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/>Pt_Start()<sp/>starts<sp/>a<sp/>real-time<sp/>service.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>resolution<sp/>is<sp/>the<sp/>timer<sp/>resolution<sp/>in<sp/>ms.<sp/>The<sp/>time<sp/>will<sp/>advance<sp/>every</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>resolution<sp/>ms.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>callback<sp/>is<sp/>a<sp/>function<sp/>pointer<sp/>to<sp/>be<sp/>called<sp/>every<sp/>resolution<sp/>ms.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/>userData<sp/>is<sp/>passed<sp/>to<sp/>callback<sp/>as<sp/>a<sp/>parameter.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>value:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>Upon<sp/>success,<sp/>returns<sp/>ptNoError.<sp/>See<sp/>PtError<sp/>for<sp/>other<sp/>values.</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">PtError<sp/>Pt_Start(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/>PtCallback<sp/>*callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userData);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>Pt_Stop()<sp/>stops<sp/>the<sp/>timer.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>value:</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>Upon<sp/>success,<sp/>returns<sp/>ptNoError.<sp/>See<sp/>PtError<sp/>for<sp/>other<sp/>values.</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">PtError<sp/>Pt_Stop();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/>Pt_Started()<sp/>returns<sp/>true<sp/>iff<sp/>the<sp/>timer<sp/>is<sp/>running.</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pt_Started();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>Pt_Time()<sp/>returns<sp/>the<sp/>current<sp/>time<sp/>in<sp/>ms.</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">PtTimestamp<sp/>Pt_Time();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>Pt_Sleep()<sp/>pauses,<sp/>allowing<sp/>other<sp/>threads<sp/>to<sp/>run.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>duration<sp/>is<sp/>the<sp/>length<sp/>of<sp/>the<sp/>pause<sp/>in<sp/>ms.<sp/>The<sp/>true<sp/>duration<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>pause<sp/>may<sp/>be<sp/>rounded<sp/>to<sp/>the<sp/>nearest<sp/>or<sp/>next<sp/>clock<sp/>tick</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>determined<sp/>by<sp/>resolution<sp/>in<sp/>Pt_Start().</highlight></codeline>
<codeline lineno="67"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pt_Sleep(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>duration);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/portmidi/porttime/porttime.h"/>
  </compounddef>
</doxygen>
