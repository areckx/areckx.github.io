<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__midi_8cpp" kind="file" language="C++">
    <compoundname>tst_midi.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes local="no">QFile</includes>
    <includes local="no">QCoreApplication</includes>
    <includes local="no">QTextStream</includes>
    <includes refid="mscore_8h" local="yes">libmscore/mscore.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="durationtype_8h" local="yes">libmscore/durationtype.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="segment_8h" local="yes">libmscore/segment.h</includes>
    <includes refid="chord_8h" local="yes">libmscore/chord.h</includes>
    <includes refid="note_8h" local="yes">libmscore/note.h</includes>
    <includes refid="keysig_8h" local="yes">libmscore/keysig.h</includes>
    <includes refid="exportmidi_8h" local="yes">mscore/exportmidi.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <includes local="no">QIODevice</includes>
    <includes refid="mcursor_8h" local="yes">libmscore/mcursor.h</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes local="yes">tst_midi.moc</includes>
    <incdepgraph>
      <node id="73385">
        <label>list</label>
      </node>
      <node id="73379">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="73362" relation="include">
        </childnode>
      </node>
      <node id="73412">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="73413" relation="include">
        </childnode>
        <childnode refid="73404" relation="include">
        </childnode>
      </node>
      <node id="73381">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="73399">
        <label>functional</label>
      </node>
      <node id="73401">
        <label>duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="73363" relation="include">
        </childnode>
        <childnode refid="73371" relation="include">
        </childnode>
        <childnode refid="73368" relation="include">
        </childnode>
      </node>
      <node id="73408">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="73409" relation="include">
        </childnode>
        <childnode refid="73410" relation="include">
        </childnode>
        <childnode refid="73412" relation="include">
        </childnode>
      </node>
      <node id="73396">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="73397" relation="include">
        </childnode>
      </node>
      <node id="73394">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="73395" relation="include">
        </childnode>
        <childnode refid="73369" relation="include">
        </childnode>
        <childnode refid="73396" relation="include">
        </childnode>
      </node>
      <node id="73374">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="73410">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="73411" relation="include">
        </childnode>
        <childnode refid="73409" relation="include">
        </childnode>
      </node>
      <node id="73386">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="73397">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="73371" relation="include">
        </childnode>
        <childnode refid="73374" relation="include">
        </childnode>
        <childnode refid="73362" relation="include">
        </childnode>
      </node>
      <node id="73365">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="73419">
        <label>tst_midi.moc</label>
      </node>
      <node id="73376">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="73371" relation="include">
        </childnode>
        <childnode refid="73377" relation="include">
        </childnode>
      </node>
      <node id="73357">
        <label>mtest/libmscore/midi/tst_midi.cpp</label>
        <link refid="tst__midi_8cpp"/>
        <childnode refid="73358" relation="include">
        </childnode>
        <childnode refid="73359" relation="include">
        </childnode>
        <childnode refid="73360" relation="include">
        </childnode>
        <childnode refid="73361" relation="include">
        </childnode>
        <childnode refid="73362" relation="include">
        </childnode>
        <childnode refid="73366" relation="include">
        </childnode>
        <childnode refid="73368" relation="include">
        </childnode>
        <childnode refid="73394" relation="include">
        </childnode>
        <childnode refid="73397" relation="include">
        </childnode>
        <childnode refid="73398" relation="include">
        </childnode>
        <childnode refid="73370" relation="include">
        </childnode>
        <childnode refid="73402" relation="include">
        </childnode>
        <childnode refid="73403" relation="include">
        </childnode>
        <childnode refid="73408" relation="include">
        </childnode>
        <childnode refid="73416" relation="include">
        </childnode>
        <childnode refid="73417" relation="include">
        </childnode>
        <childnode refid="73418" relation="include">
        </childnode>
        <childnode refid="73419" relation="include">
        </childnode>
      </node>
      <node id="73407">
        <label>map</label>
      </node>
      <node id="73368">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="73369" relation="include">
        </childnode>
        <childnode refid="73370" relation="include">
        </childnode>
      </node>
      <node id="73403">
        <label>mscore/exportmidi.h</label>
        <link refid="exportmidi_8h_source"/>
        <childnode refid="73404" relation="include">
        </childnode>
      </node>
      <node id="73411">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="73387">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="73388" relation="include">
        </childnode>
      </node>
      <node id="73414">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="73369" relation="include">
        </childnode>
      </node>
      <node id="73413">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="73414" relation="include">
        </childnode>
        <childnode refid="73415" relation="include">
        </childnode>
      </node>
      <node id="73388">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="73389" relation="include">
        </childnode>
        <childnode refid="73390" relation="include">
        </childnode>
        <childnode refid="73391" relation="include">
        </childnode>
      </node>
      <node id="73416">
        <label>QIODevice</label>
      </node>
      <node id="73398">
        <label>libmscore/chord.h</label>
        <link refid="chord_8h"/>
        <childnode refid="73399" relation="include">
        </childnode>
        <childnode refid="73400" relation="include">
        </childnode>
      </node>
      <node id="73395">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="73371" relation="include">
        </childnode>
        <childnode refid="73392" relation="include">
        </childnode>
      </node>
      <node id="73402">
        <label>libmscore/keysig.h</label>
        <link refid="keysig_8h_source"/>
        <childnode refid="73381" relation="include">
        </childnode>
        <childnode refid="73371" relation="include">
        </childnode>
      </node>
      <node id="73380">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="73375" relation="include">
        </childnode>
      </node>
      <node id="73418">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="73371" relation="include">
        </childnode>
      </node>
      <node id="73389">
        <label>vector</label>
      </node>
      <node id="73377">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="73372">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="73393">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="73369">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="73363" relation="include">
        </childnode>
      </node>
      <node id="73375">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="73376" relation="include">
        </childnode>
      </node>
      <node id="73364">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="73365" relation="include">
        </childnode>
      </node>
      <node id="73359">
        <label>QFile</label>
      </node>
      <node id="73409">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="73404">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="73405" relation="include">
        </childnode>
        <childnode refid="73406" relation="include">
        </childnode>
      </node>
      <node id="73382">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="73371" relation="include">
        </childnode>
        <childnode refid="73368" relation="include">
        </childnode>
      </node>
      <node id="73392">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="73371" relation="include">
        </childnode>
      </node>
      <node id="73371">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="73372" relation="include">
        </childnode>
        <childnode refid="73369" relation="include">
        </childnode>
        <childnode refid="73373" relation="include">
        </childnode>
        <childnode refid="73374" relation="include">
        </childnode>
      </node>
      <node id="73384">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="73385" relation="include">
        </childnode>
      </node>
      <node id="73391">
        <label>iostream</label>
      </node>
      <node id="73362">
        <label>libmscore/mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="73363" relation="include">
        </childnode>
        <childnode refid="73364" relation="include">
        </childnode>
      </node>
      <node id="73367">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="73362" relation="include">
        </childnode>
        <childnode refid="73368" relation="include">
        </childnode>
        <childnode refid="73382" relation="include">
        </childnode>
      </node>
      <node id="73378">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="73417">
        <label>libmscore/mcursor.h</label>
        <link refid="mcursor_8h_source"/>
        <childnode refid="73369" relation="include">
        </childnode>
      </node>
      <node id="73361">
        <label>QTextStream</label>
      </node>
      <node id="73400">
        <label>chordrest.h</label>
        <link refid="chordrest_8h_source"/>
        <childnode refid="73399" relation="include">
        </childnode>
        <childnode refid="73375" relation="include">
        </childnode>
        <childnode refid="73401" relation="include">
        </childnode>
        <childnode refid="73382" relation="include">
        </childnode>
        <childnode refid="73374" relation="include">
        </childnode>
      </node>
      <node id="73415">
        <label>set</label>
      </node>
      <node id="73363">
        <label>config.h</label>
      </node>
      <node id="73390">
        <label>algorithm</label>
      </node>
      <node id="73366">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="73363" relation="include">
        </childnode>
        <childnode refid="73367" relation="include">
        </childnode>
        <childnode refid="73383" relation="include">
        </childnode>
        <childnode refid="73384" relation="include">
        </childnode>
        <childnode refid="73386" relation="include">
        </childnode>
        <childnode refid="73387" relation="include">
        </childnode>
        <childnode refid="73392" relation="include">
        </childnode>
        <childnode refid="73393" relation="include">
        </childnode>
      </node>
      <node id="73406">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="73407" relation="include">
        </childnode>
      </node>
      <node id="73405">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="73369" relation="include">
        </childnode>
      </node>
      <node id="73373">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="73383">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="73379" relation="include">
        </childnode>
        <childnode refid="73362" relation="include">
        </childnode>
        <childnode refid="73368" relation="include">
        </childnode>
      </node>
      <node id="73370">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="73371" relation="include">
        </childnode>
        <childnode refid="73375" relation="include">
        </childnode>
        <childnode refid="73378" relation="include">
        </childnode>
        <childnode refid="73379" relation="include">
        </childnode>
        <childnode refid="73374" relation="include">
        </childnode>
        <childnode refid="73380" relation="include">
        </childnode>
        <childnode refid="73381" relation="include">
        </childnode>
      </node>
      <node id="73358">
        <label>QtTest/QtTest</label>
      </node>
      <node id="73360">
        <label>QCoreApplication</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_midi" prot="public">TestMidi</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__midi_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;libmscore/midi/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/midi/tst_midi.cpp" line="32" column="11" bodyfile="mtest/libmscore/midi/tst_midi.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tst__midi_8cpp_1a0f6eb2d6e2c969bc3c8eb874fe2864c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool saveMidi</definition>
        <argsstring>(Score *score, const QString &amp;name)</argsstring>
        <name>saveMidi</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/midi/tst_midi.cpp" line="128" column="1" bodyfile="mtest/libmscore/midi/tst_midi.cpp" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="tst__midi_8cpp_1a9fdc63582f4cfa4e579a87ae90a18968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool compareElements</definition>
        <argsstring>(Element *e1, Element *e2)</argsstring>
        <name>compareElements</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/midi/tst_midi.cpp" line="139" column="1" bodyfile="mtest/libmscore/midi/tst_midi.cpp" bodystart="139" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="tst__midi_8cpp_1a7b9e3e6aad133056a9106bb1f84500e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool compareScores</definition>
        <argsstring>(Score *score1, Score *score2)</argsstring>
        <name>compareScores</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score1</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/midi/tst_midi.cpp" line="195" column="1" bodyfile="mtest/libmscore/midi/tst_midi.cpp" bodystart="195" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCoreApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTextStream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/mscore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/durationtype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/segment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chord_8h" kindref="compound">libmscore/chord.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="note_8h" kindref="compound">libmscore/note.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/keysig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/exportmidi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QIODevice&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/mcursor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;libmscore/midi/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Score::FileError<sp/>importMidi(<ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestMidi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_test_midi" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_midi" kindref="compound">TestMidi</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiExportTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>file);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midi01();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midi02();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midi03();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>events_data();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>events();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiBendsExport1()<sp/>{<sp/>midiExportTestRef(</highlight><highlight class="stringliteral">&quot;testBends1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiBendsExport2()<sp/>{<sp/>midiExportTestRef(</highlight><highlight class="stringliteral">&quot;testBends2&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Play<sp/>property<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiPortExport()<sp/><sp/><sp/>{<sp/>midiExportTestRef(</highlight><highlight class="stringliteral">&quot;testMidiPort&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midi184376ExportMidiInitialKeySig()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiExportTestRef(</highlight><highlight class="stringliteral">&quot;testInitialKeySigThenRepeatToMeas2&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tick<sp/>0<sp/>has<sp/>Bb<sp/>keysig.<sp/><sp/>Meas<sp/>2<sp/>has<sp/>no<sp/>key<sp/>sig.<sp/>Meas<sp/>2<sp/>repeats<sp/>back<sp/>to<sp/>start<sp/>of<sp/>Meas<sp/>2.<sp/><sp/>Result<sp/>should<sp/>have<sp/>intial<sp/>Bb<sp/>keysig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiExportTestRef(</highlight><highlight class="stringliteral">&quot;testRepeatsWithKeySigs&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5<sp/>measures,<sp/>with<sp/>a<sp/>key<sp/>sig<sp/>on<sp/>every<sp/>measure.<sp/>Meas<sp/>3-4<sp/>are<sp/>repeated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiExportTestRef(</highlight><highlight class="stringliteral">&quot;testRepeatsWithKeySigsExceptFirstMeas&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>5<sp/>measures,<sp/>with<sp/>a<sp/>key<sp/>sig<sp/>on<sp/>every<sp/>measure<sp/>except<sp/>meas<sp/>0.<sp/><sp/>Meas<sp/>3-4<sp/>are<sp/>repeated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidi::initTestCase()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidi::events_data()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QString&gt;(</highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>Metronome</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testMetronomeSimple&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testMetronomeSimple&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testMetronomeCompound&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testMetronomeCompound&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testMetronomeAnacrusis&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testMetronomeAnacrusis&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>Eighth<sp/>Swing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing8thSimple&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing8thSimple&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing8thTies&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing8thTies&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing8thTriplets&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing8thTriplets&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing8thDots&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing8thDots&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>Sixteenth<sp/>Swing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing16thSimple&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing16thSimple&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing16thTies&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing16thTies&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing16thTriplets&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing16thTriplets&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwing16thDots&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwing16thDots&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwingOdd&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwingOdd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwingPickup&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwingPickup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>Text<sp/>Cominations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwingStyleText&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwingStyleText&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testSwingTexts&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testSwingTexts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ornaments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testMordents&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testMordents&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//QTest::newRow(&quot;testBaroqueOrnaments&quot;)<sp/>&lt;&lt;<sp/>&quot;testBaroqueOrnaments&quot;;<sp/>//<sp/>fail,<sp/>at<sp/>least<sp/>a<sp/>problem<sp/>with<sp/>the<sp/>first<sp/>note<sp/>and<sp/>stretch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testOrnamentAccidentals&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testOrnamentAccidentals&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(&quot;testGraceBefore&quot;)<sp/>&lt;&lt;<sp/><sp/>&quot;testGraceBefore&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testBeforeAfterGraceTrill&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testBeforeAfterGraceTrill&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testBeforeAfterGraceTrillPlay=false&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testBeforeAfterGraceTrillPlay=false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testKantataBWV140Excerpts&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testKantataBWV140Excerpts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testTrillTransposingInstrument&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testTrillTransposingInstrument&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testAndanteExcerpts&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;testAndanteExcerpts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testTrillLines&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testTrillLines&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testTrillTempos&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testTrillTempos&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(&quot;testTrillCrossStaff&quot;)<sp/>&lt;&lt;<sp/>&quot;testTrillCrossStaff&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testOrnaments&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testOrnaments&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testTieTrill&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testTieTrill&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>glissando</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testGlissando&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testGlissando&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testGlissandoAcrossStaffs&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testGlissandoAcrossStaffs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testGlissando-71826&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testGlissando-71826&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pedal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(&quot;testPedal&quot;)<sp/>&lt;&lt;<sp/><sp/>&quot;testPedal&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multi<sp/>note<sp/>tremolo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;testMultiNoteTremolo&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;testMultiNoteTremolo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>saveMidi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saveMidi(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>name)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_export_midi" kindref="compound">ExportMidi</ref><sp/>em(score);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>em.write(name,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>compareElements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compareElements(<ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e1,<sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e2)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1-&gt;type()<sp/>!=<sp/>e2-&gt;type())</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1-&gt;type()<sp/>==<sp/>ElementType::TIMESIG)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1-&gt;type()<sp/>==<sp/>ElementType::KEYSIG)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*<sp/>ks1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*<sp/>ks2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e2);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ks1-&gt;key()<sp/>!=<sp/>ks2-&gt;key())<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>signature<sp/>%d<sp/><sp/>!=<sp/><sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(ks1-&gt;key()),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(ks2-&gt;key()));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1-&gt;type()<sp/>==<sp/>ElementType::CLEF)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1-&gt;type()<sp/>==<sp/>ElementType::REST)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1-&gt;type()<sp/>==<sp/>ElementType::CHORD)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_chord" kindref="compound">Ms::Chord</ref>*<sp/>c1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_chord" kindref="compound">Ms::Chord</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_chord" kindref="compound">Ms::Chord</ref>*<sp/>c2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_chord" kindref="compound">Ms::Chord</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e2);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;duration()<sp/>!=<sp/>c2-&gt;duration())<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref><sp/>f1<sp/>=<sp/>c1-&gt;duration();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref><sp/>f2<sp/>=<sp/>c2-&gt;duration();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>chord<sp/>duration<sp/>%d/%d<sp/><sp/>!=<sp/><sp/>%d/%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1.numerator(),<sp/>f1.denominator(),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2.numerator(),<sp/>f2.denominator()</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1-&gt;notes().size()<sp/>!=<sp/>c2-&gt;notes().size())<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>note<sp/>count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>c1-&gt;notes().size();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_note" kindref="compound">Note</ref>*<sp/>n1<sp/>=<sp/>c1-&gt;notes()[i];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_note" kindref="compound">Note</ref>*<sp/>n2<sp/>=<sp/>c2-&gt;notes()[i];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1-&gt;pitch()<sp/>!=<sp/>n2-&gt;pitch())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>pitch<sp/>note<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1-&gt;tpc()<sp/>!=<sp/>n2-&gt;tpc())<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>note<sp/>tcp<sp/>%d<sp/>!=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>n1-&gt;tpc(),<sp/>n2-&gt;tpc());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>compareScores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compareScores(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score1,<sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score2)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staves<sp/>=<sp/>score1-&gt;nstaves();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score2-&gt;nstaves()<sp/>!=<sp/>staves)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>stave<sp/>count<sp/>different<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>staves,<sp/>score2-&gt;nstaves());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s1<sp/>=<sp/>score1-&gt;firstMeasure()-&gt;first();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s2<sp/>=<sp/>score2-&gt;firstMeasure()-&gt;first();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tracks<sp/>=<sp/>staves<sp/>*<sp/>VOICES;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track<sp/>=<sp/>0;<sp/>track<sp/>&lt;<sp/>tracks;<sp/>++track)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e1<sp/>=<sp/>s1-&gt;element(track);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e2<sp/>=<sp/>s2-&gt;element(track);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((e1<sp/>&amp;&amp;<sp/>!e2)<sp/>||<sp/>(e2<sp/>&amp;&amp;<sp/>!e1))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>elements<sp/>different\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compareElements(e1,<sp/>e2))<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>%s<sp/>!=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>e1-&gt;name(),<sp/>e2-&gt;name());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>ok:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>e1-&gt;name());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s1-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>s2-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s1<sp/>&amp;&amp;<sp/>!s2)<sp/>||<sp/>(s2<sp/>&amp;&amp;<sp/>!s2))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>segment<sp/>count<sp/>different\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="237"><highlight class="comment"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidi::midi01()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_m_cursor" kindref="compound">MCursor</ref><sp/>c;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.setTimeSig(<ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(4,4));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.createScore(</highlight><highlight class="stringliteral">&quot;test1a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addPart(</highlight><highlight class="stringliteral">&quot;voice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.move(0,<sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>track<sp/>0<sp/>tick<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addKeySig(Key(1));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addTimeSig(<ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(4,4));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(60,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(61,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(62,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(63,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/>c.score();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.saveScore();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saveMidi(score,<sp/></highlight><highlight class="stringliteral">&quot;test1.mid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>(mscore-&gt;baseStyle());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;setName(</highlight><highlight class="stringliteral">&quot;test1b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(importMidi(score2,<sp/></highlight><highlight class="stringliteral">&quot;test1.mid&quot;</highlight><highlight class="normal">),<sp/>Score::FileError::FILE_NO_ERROR);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;doLayout();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_m_cursor" kindref="compound">MCursor</ref><sp/>c2(score2);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2.saveScore();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(compareScores(score,<sp/>score2));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score2;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidi::midi02()</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_m_cursor" kindref="compound">MCursor</ref><sp/>c;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.setTimeSig(<ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(3,4));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.createScore(</highlight><highlight class="stringliteral">&quot;test2a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addPart(</highlight><highlight class="stringliteral">&quot;voice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.move(0,<sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>track<sp/>0<sp/>tick<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addKeySig(Key(2));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addTimeSig(<ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(3,4));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(60,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(61,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(62,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/>c.score();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.saveScore();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saveMidi(score,<sp/></highlight><highlight class="stringliteral">&quot;test2.mid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>(mscore-&gt;baseStyle());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;setName(</highlight><highlight class="stringliteral">&quot;test2b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(importMidi(score2,<sp/></highlight><highlight class="stringliteral">&quot;test2.mid&quot;</highlight><highlight class="normal">),<sp/>Score::FileError::FILE_NO_ERROR);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;doLayout();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_m_cursor" kindref="compound">MCursor</ref><sp/>c2(score2);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2.saveScore();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(compareScores(score,<sp/>score2));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score2;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight></codeline>
<codeline lineno="319"><highlight class="comment"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidi::midi03()</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_m_cursor" kindref="compound">MCursor</ref><sp/>c;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.setTimeSig(<ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(4,4));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.createScore(</highlight><highlight class="stringliteral">&quot;test3a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addPart(</highlight><highlight class="stringliteral">&quot;voice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.move(0,<sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>track<sp/>0<sp/>tick<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addKeySig(Key(1));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addTimeSig(<ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(4,4));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(60,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(61,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(62,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.addChord(63,<sp/><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref>(TDuration::DurationType::V_QUARTER));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/>c.score();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.saveScore();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saveMidi(score,<sp/></highlight><highlight class="stringliteral">&quot;test3.mid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>(mscore-&gt;baseStyle());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;setName(</highlight><highlight class="stringliteral">&quot;test3b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(importMidi(score2,<sp/></highlight><highlight class="stringliteral">&quot;test3.mid&quot;</highlight><highlight class="normal">),<sp/>Score::FileError::FILE_NO_ERROR);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;doLayout();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score2-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_m_cursor" kindref="compound">MCursor</ref><sp/>c2(score2);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2.saveScore();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(compareScores(score,<sp/>score2));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score2;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidi::events()</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QFETCH(QString,<sp/>file);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>readFile(DIR<sp/><sp/><sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>writeFile(file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-test.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>reference(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-ref.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(readFile);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_event_map" kindref="compound">EventMap</ref><sp/>events;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;renderMidi(&amp;events);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>score<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>readFile;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QFile<sp/>filehandler(writeFile);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filehandler.open(QIODevice::WriteOnly<sp/>|<sp/>QIODevice::Text);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>out(&amp;filehandler);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>events.begin();<sp/>iter!=<sp/>events.end();<sp/>++iter){</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tick<sp/><sp/>=<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Type<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/>iter-&gt;second.type();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Pitch<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/>iter-&gt;second.dataA();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Velocity<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/>iter-&gt;second.dataB();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Channel<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>qSetFieldWidth(5)<sp/>&lt;&lt;<sp/>iter-&gt;second.channel();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filehandler.close();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(compareFiles(writeFile,<sp/>reference));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>QVERIFY(saveCompareScore(score,<sp/>writeFile,<sp/>reference));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>midiExportTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>MuseScore<sp/>mscx<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>MIDI<sp/>file<sp/>and<sp/>verify<sp/>against<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidi::midiExportTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>file)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.midiExportRPNs<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMidi(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(compareFiles(QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mid&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-ref.mid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_midi" kindref="compound">TestMidi</ref>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_midi.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/libmscore/midi/tst_midi.cpp"/>
  </compounddef>
</doxygen>
