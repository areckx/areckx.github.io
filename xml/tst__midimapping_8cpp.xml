<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__midimapping_8cpp" kind="file" language="C++">
    <compoundname>tst_midimapping.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="staff_8h" local="yes">libmscore/staff.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <includes local="yes">tst_midimapping.moc</includes>
    <incdepgraph>
      <node id="73447">
        <label>list</label>
      </node>
      <node id="73441">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="73432" relation="include">
        </childnode>
      </node>
      <node id="73473">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="73474" relation="include">
        </childnode>
        <childnode refid="73477" relation="include">
        </childnode>
      </node>
      <node id="73443">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="73469">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="73470" relation="include">
        </childnode>
        <childnode refid="73471" relation="include">
        </childnode>
        <childnode refid="73473" relation="include">
        </childnode>
      </node>
      <node id="73458">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="73459" relation="include">
        </childnode>
      </node>
      <node id="73456">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="73457" relation="include">
        </childnode>
        <childnode refid="73426" relation="include">
        </childnode>
        <childnode refid="73458" relation="include">
        </childnode>
      </node>
      <node id="73429">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="73471">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="73472" relation="include">
        </childnode>
        <childnode refid="73470" relation="include">
        </childnode>
      </node>
      <node id="73448">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="73462">
        <label>pitch.h</label>
        <link refid="pitch_8h_source"/>
      </node>
      <node id="73459">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="73424" relation="include">
        </childnode>
        <childnode refid="73429" relation="include">
        </childnode>
        <childnode refid="73432" relation="include">
        </childnode>
      </node>
      <node id="73465">
        <label>keylist.h</label>
        <link refid="keylist_8h_source"/>
        <childnode refid="73443" relation="include">
        </childnode>
      </node>
      <node id="73434">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="73438">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="73424" relation="include">
        </childnode>
        <childnode refid="73439" relation="include">
        </childnode>
      </node>
      <node id="73480">
        <label>map</label>
      </node>
      <node id="73464">
        <label>clef.h</label>
        <link refid="clef_8h"/>
        <childnode refid="73424" relation="include">
        </childnode>
        <childnode refid="73432" relation="include">
        </childnode>
      </node>
      <node id="73435">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="73426" relation="include">
        </childnode>
        <childnode refid="73436" relation="include">
        </childnode>
      </node>
      <node id="73472">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="73460">
        <label>libmscore/staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="73432" relation="include">
        </childnode>
        <childnode refid="73461" relation="include">
        </childnode>
        <childnode refid="73462" relation="include">
        </childnode>
        <childnode refid="73463" relation="include">
        </childnode>
        <childnode refid="73465" relation="include">
        </childnode>
        <childnode refid="73466" relation="include">
        </childnode>
        <childnode refid="73468" relation="include">
        </childnode>
        <childnode refid="73428" relation="include">
        </childnode>
      </node>
      <node id="73449">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="73450" relation="include">
        </childnode>
      </node>
      <node id="73475">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="73426" relation="include">
        </childnode>
      </node>
      <node id="73474">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="73475" relation="include">
        </childnode>
        <childnode refid="73476" relation="include">
        </childnode>
      </node>
      <node id="73450">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="73451" relation="include">
        </childnode>
        <childnode refid="73452" relation="include">
        </childnode>
        <childnode refid="73453" relation="include">
        </childnode>
      </node>
      <node id="73466">
        <label>stafftypelist.h</label>
        <link refid="stafftypelist_8h_source"/>
        <childnode refid="73467" relation="include">
        </childnode>
      </node>
      <node id="73457">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="73424" relation="include">
        </childnode>
        <childnode refid="73454" relation="include">
        </childnode>
      </node>
      <node id="73442">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="73437" relation="include">
        </childnode>
      </node>
      <node id="73423">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="73424" relation="include">
        </childnode>
      </node>
      <node id="73451">
        <label>vector</label>
      </node>
      <node id="73439">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="73425">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="73455">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="73426">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="73427" relation="include">
        </childnode>
      </node>
      <node id="73437">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="73438" relation="include">
        </childnode>
      </node>
      <node id="73433">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="73434" relation="include">
        </childnode>
      </node>
      <node id="73470">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="73477">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="73478" relation="include">
        </childnode>
        <childnode refid="73479" relation="include">
        </childnode>
      </node>
      <node id="73444">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="73424" relation="include">
        </childnode>
        <childnode refid="73435" relation="include">
        </childnode>
      </node>
      <node id="73454">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="73424" relation="include">
        </childnode>
      </node>
      <node id="73424">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="73425" relation="include">
        </childnode>
        <childnode refid="73426" relation="include">
        </childnode>
        <childnode refid="73428" relation="include">
        </childnode>
        <childnode refid="73429" relation="include">
        </childnode>
      </node>
      <node id="73446">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="73447" relation="include">
        </childnode>
      </node>
      <node id="73453">
        <label>iostream</label>
      </node>
      <node id="73461">
        <label>velo.h</label>
        <link refid="velo_8h"/>
      </node>
      <node id="73432">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="73427" relation="include">
        </childnode>
        <childnode refid="73433" relation="include">
        </childnode>
      </node>
      <node id="73468">
        <label>groups.h</label>
        <link refid="groups_8h_source"/>
        <childnode refid="73426" relation="include">
        </childnode>
        <childnode refid="73432" relation="include">
        </childnode>
        <childnode refid="73435" relation="include">
        </childnode>
        <childnode refid="73444" relation="include">
        </childnode>
      </node>
      <node id="73431">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="73432" relation="include">
        </childnode>
        <childnode refid="73435" relation="include">
        </childnode>
        <childnode refid="73444" relation="include">
        </childnode>
      </node>
      <node id="73481">
        <label>tst_midimapping.moc</label>
      </node>
      <node id="73440">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="73467">
        <label>stafftype.h</label>
        <link refid="stafftype_8h_source"/>
        <childnode refid="73424" relation="include">
        </childnode>
        <childnode refid="73425" relation="include">
        </childnode>
        <childnode refid="73432" relation="include">
        </childnode>
        <childnode refid="73435" relation="include">
        </childnode>
      </node>
      <node id="73476">
        <label>set</label>
      </node>
      <node id="73427">
        <label>config.h</label>
      </node>
      <node id="73452">
        <label>algorithm</label>
      </node>
      <node id="73430">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="73427" relation="include">
        </childnode>
        <childnode refid="73431" relation="include">
        </childnode>
        <childnode refid="73445" relation="include">
        </childnode>
        <childnode refid="73446" relation="include">
        </childnode>
        <childnode refid="73448" relation="include">
        </childnode>
        <childnode refid="73449" relation="include">
        </childnode>
        <childnode refid="73454" relation="include">
        </childnode>
        <childnode refid="73455" relation="include">
        </childnode>
      </node>
      <node id="73479">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="73480" relation="include">
        </childnode>
      </node>
      <node id="73478">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="73426" relation="include">
        </childnode>
      </node>
      <node id="73428">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="73463">
        <label>cleflist.h</label>
        <link refid="cleflist_8h_source"/>
        <childnode refid="73432" relation="include">
        </childnode>
        <childnode refid="73464" relation="include">
        </childnode>
      </node>
      <node id="73421">
        <label>mtest/libmscore/midimapping/tst_midimapping.cpp</label>
        <link refid="tst__midimapping_8cpp"/>
        <childnode refid="73422" relation="include">
        </childnode>
        <childnode refid="73423" relation="include">
        </childnode>
        <childnode refid="73430" relation="include">
        </childnode>
        <childnode refid="73456" relation="include">
        </childnode>
        <childnode refid="73460" relation="include">
        </childnode>
        <childnode refid="73469" relation="include">
        </childnode>
        <childnode refid="73481" relation="include">
        </childnode>
      </node>
      <node id="73445">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="73441" relation="include">
        </childnode>
        <childnode refid="73432" relation="include">
        </childnode>
        <childnode refid="73435" relation="include">
        </childnode>
      </node>
      <node id="73436">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="73424" relation="include">
        </childnode>
        <childnode refid="73437" relation="include">
        </childnode>
        <childnode refid="73440" relation="include">
        </childnode>
        <childnode refid="73441" relation="include">
        </childnode>
        <childnode refid="73429" relation="include">
        </childnode>
        <childnode refid="73442" relation="include">
        </childnode>
        <childnode refid="73443" relation="include">
        </childnode>
      </node>
      <node id="73422">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_midi_mapping" prot="public">TestMidiMapping</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__midimapping_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;libmscore/midimapping/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/midimapping/tst_midimapping.cpp" line="21" column="9" bodyfile="mtest/libmscore/midimapping/tst_midimapping.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="staff_8h" kindref="compound">libmscore/staff.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;libmscore/midimapping/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Score::FileError<sp/>importMidi(<ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestMidiMapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_test_midi_mapping" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_midi_mapping" kindref="compound">TestMidiMapping</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testReadWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testReadChangeWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>part<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testReadChangeWrite2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>last<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testReadChangeOrderWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p2);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>parts<sp/>p1<sp/>and<sp/>p2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testReadWriteMusicXML(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ref);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testReadWriteOther(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping1()<sp/>{<sp/>testReadWrite(</highlight><highlight class="stringliteral">&quot;test1withDrums.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>channels<sp/>=&gt;<sp/>no<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping2()<sp/>{<sp/>testReadWrite(</highlight><highlight class="stringliteral">&quot;test1withoutDrums.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>No<sp/>channels<sp/>=&gt;<sp/>no<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping3()<sp/>{<sp/>testReadWrite(</highlight><highlight class="stringliteral">&quot;test2.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>Instrument<sp/>Change<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping4()<sp/>{<sp/>testReadWrite(</highlight><highlight class="stringliteral">&quot;test3withMapping.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping5()<sp/>{<sp/>testReadWrite(</highlight><highlight class="stringliteral">&quot;test3withoutMapping.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>channels<sp/>=&gt;<sp/>no<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>first<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping6()<sp/>{<sp/>testReadChangeWrite(</highlight><highlight class="stringliteral">&quot;test1withDrums&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test6-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>0);<sp/>}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>channels<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>part<sp/>#13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping7()<sp/>{<sp/>testReadChangeWrite2(</highlight><highlight class="stringliteral">&quot;test3withMapping&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test7-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>no<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>two<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping8()<sp/>{<sp/>testReadChangeOrderWrite(</highlight><highlight class="stringliteral">&quot;test2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test8-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>no<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping9()<sp/>{<sp/>testReadChangeOrderWrite(</highlight><highlight class="stringliteral">&quot;test1withDrums&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test9-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>No<sp/>channels<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MusicXML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping10()<sp/>{<sp/>testReadWriteMusicXML(</highlight><highlight class="stringliteral">&quot;test10&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test10-ref&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>No<sp/>channels<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping11()<sp/>{<sp/>testReadWriteMusicXML(</highlight><highlight class="stringliteral">&quot;test11&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test11&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping12()<sp/>{<sp/>testReadWriteMusicXML(</highlight><highlight class="stringliteral">&quot;test12&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test12-ref&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Partial<sp/>channels(&gt;16<sp/>drum<sp/>tracks)<sp/>=&gt;<sp/>Partial<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping13()<sp/>{<sp/>testReadWriteMusicXML(</highlight><highlight class="stringliteral">&quot;test13&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test13-ref&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Partial<sp/>channels<sp/>(port<sp/>and<sp/>channel<sp/>are<sp/>absent)<sp/>=&gt;<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Guitar<sp/>pro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping14()<sp/>{<sp/>testReadWriteOther(</highlight><highlight class="stringliteral">&quot;test14.gp3&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test14-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping15()<sp/>{<sp/>testReadWriteOther(</highlight><highlight class="stringliteral">&quot;test15.gp4&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test15-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping16()<sp/>{<sp/>testReadWriteOther(</highlight><highlight class="stringliteral">&quot;test16.gp5&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test16-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping17()<sp/>{<sp/>testReadWriteOther(</highlight><highlight class="stringliteral">&quot;test17.gpx&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test17-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiMapping18()<sp/>{<sp/>testReadWriteOther(</highlight><highlight class="stringliteral">&quot;test18.mid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;test18-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>=&gt;<sp/>Mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidiMapping::initTestCase()</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>testReadWrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidiMapping::testReadWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>f1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>f1,<sp/>DIR<sp/>+<sp/>QString(f1)));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>testReadChangeWrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>file;<sp/>delete<sp/>part<sp/>p;<sp/>write<sp/>and<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidiMapping::testReadChangeWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>f1<sp/>+QString(</highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdRemovePart(score-&gt;parts()[p]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>f1+QString(</highlight><highlight class="stringliteral">&quot;_changed.mscx&quot;</highlight><highlight class="normal">),<sp/>DIR<sp/>+<sp/>ref));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>testReadChangeWrite2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>file;<sp/>delete<sp/>last<sp/>measure;<sp/>write<sp/>and<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidiMapping::testReadChangeWrite2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>f1<sp/>+QString(</highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref>*<sp/>mb<sp/>=<sp/>score-&gt;measures()-&gt;last();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mb<sp/>&amp;&amp;<sp/>mb-&gt;type()<sp/>!=<sp/>Element::Type::MEASURE)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mb<sp/>=<sp/>mb-&gt;prev();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;deleteItem(static_cast&lt;Measure*&gt;(mb));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>f1+QString(</highlight><highlight class="stringliteral">&quot;_changed.mscx&quot;</highlight><highlight class="normal">),<sp/>DIR<sp/>+<sp/>ref));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>testReadChangeOrderWrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>file;<sp/>change<sp/>order<sp/>of<sp/>parts<sp/>p1<sp/>and<sp/>p2;<sp/>write<sp/>and<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidiMapping::testReadChangeOrderWrite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p2)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>f1+QString(</highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;int&gt;<sp/>dl;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref>*<sp/>staff<sp/>:<sp/>score-&gt;staves())<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>score-&gt;staves().indexOf(staff);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((idx<sp/>==<sp/>p1<sp/>||<sp/>idx<sp/>==<sp/>p2)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((idx<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>staff-&gt;part()<sp/>==<sp/>score-&gt;staves()[idx-1]-&gt;part())</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(idx<sp/>!=<sp/>score-&gt;nstaves()<sp/>&amp;&amp;<sp/>staff-&gt;part()<sp/>==<sp/>score-&gt;staves()[idx+1]-&gt;part())))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;</highlight><highlight class="stringliteral">&quot;You&apos;re<sp/>probably<sp/>trying<sp/>to<sp/>swap<sp/>a<sp/>part<sp/>with<sp/>several<sp/>staves.<sp/>This<sp/>can<sp/>lead<sp/>to<sp/>wrong<sp/>results!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl.push_back(idx);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dl.swap(p1,<sp/>p2);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;sortStaves(dl);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>f1+QString(</highlight><highlight class="stringliteral">&quot;_changed3.mscx&quot;</highlight><highlight class="normal">),<sp/>DIR<sp/>+<sp/>ref));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>testReadWriteMusicXML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>MusicXML<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>new<sp/>file<sp/>and<sp/>verify<sp/>both<sp/>files<sp/>are<sp/>identical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidiMapping::testReadWriteMusicXML(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlImportBreaks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMusicXml(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>ref<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>testReadWriteOther</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>file;<sp/>write<sp/>to<sp/>mscx<sp/>and<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMidiMapping::testReadWriteOther(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qf<sp/>=<sp/>QFileInfo(f1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qf.suffix()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mid&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>(mscore-&gt;baseStyle());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>fullPath<sp/>=<sp/>QString(root<sp/>+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+<sp/>DIR<sp/>+<sp/>f1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(importMidi(score,<sp/><sp/>fullPath),<sp/>Score::FileError::FILE_NO_ERROR);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>f1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>qf.completeBaseName()+QString(</highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">),<sp/>DIR<sp/>+<sp/>ref));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_midi_mapping" kindref="compound">TestMidiMapping</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_midimapping.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="mtest/libmscore/midimapping/tst_midimapping.cpp"/>
  </compounddef>
</doxygen>
