<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_j_b_i_g2_stream_8cc" kind="file" language="C++">
    <compoundname>JBIG2Stream.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">limits.h</includes>
    <includes refid="_goo_list_8h" local="yes">goo/GooList.h</includes>
    <includes refid="_error_8h" local="yes">Error.h</includes>
    <includes refid="_j_arithmetic_decoder_8h" local="yes">JArithmeticDecoder.h</includes>
    <includes refid="_j_b_i_g2_stream_8h" local="yes">JBIG2Stream.h</includes>
    <includes refid="_stream-_c_c_i_t_t_8h" local="yes">Stream-CCITT.h</includes>
    <incdepgraph>
      <node id="87734">
        <label>JBIG2Stream.h</label>
        <link refid="_j_b_i_g2_stream_8h_source"/>
        <childnode refid="87727" relation="include">
        </childnode>
        <childnode refid="87735" relation="include">
        </childnode>
        <childnode refid="87744" relation="include">
        </childnode>
      </node>
      <node id="87731">
        <label>stdarg.h</label>
      </node>
      <node id="87724">
        <label>stdlib.h</label>
      </node>
      <node id="87738">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="87729" relation="include">
        </childnode>
        <childnode refid="87728" relation="include">
        </childnode>
      </node>
      <node id="87740">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="87728" relation="include">
        </childnode>
        <childnode refid="87735" relation="include">
        </childnode>
        <childnode refid="87741" relation="include">
        </childnode>
      </node>
      <node id="87730">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="87731" relation="include">
        </childnode>
        <childnode refid="87728" relation="include">
        </childnode>
        <childnode refid="87727" relation="include">
        </childnode>
        <childnode refid="87732" relation="include">
        </childnode>
      </node>
      <node id="87726">
        <label>goo/GooList.h</label>
        <link refid="_goo_list_8h_source"/>
        <childnode refid="87727" relation="include">
        </childnode>
      </node>
      <node id="87743">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="87728" relation="include">
        </childnode>
        <childnode refid="87735" relation="include">
        </childnode>
        <childnode refid="87741" relation="include">
        </childnode>
      </node>
      <node id="87725">
        <label>limits.h</label>
      </node>
      <node id="87728">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="87729" relation="include">
        </childnode>
      </node>
      <node id="87739">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="87744">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="87728" relation="include">
        </childnode>
        <childnode refid="87729" relation="include">
        </childnode>
        <childnode refid="87727" relation="include">
        </childnode>
        <childnode refid="87735" relation="include">
        </childnode>
        <childnode refid="87741" relation="include">
        </childnode>
      </node>
      <node id="87733">
        <label>JArithmeticDecoder.h</label>
        <link refid="_j_arithmetic_decoder_8h_source"/>
        <childnode refid="87727" relation="include">
        </childnode>
      </node>
      <node id="87742">
        <label>pthread.h</label>
      </node>
      <node id="87737">
        <label>string.h</label>
      </node>
      <node id="87732">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="87725" relation="include">
        </childnode>
        <childnode refid="87731" relation="include">
        </childnode>
        <childnode refid="87724" relation="include">
        </childnode>
        <childnode refid="87727" relation="include">
        </childnode>
      </node>
      <node id="87735">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="87736" relation="include">
        </childnode>
        <childnode refid="87729" relation="include">
        </childnode>
        <childnode refid="87737" relation="include">
        </childnode>
        <childnode refid="87727" relation="include">
        </childnode>
        <childnode refid="87738" relation="include">
        </childnode>
        <childnode refid="87732" relation="include">
        </childnode>
        <childnode refid="87739" relation="include">
        </childnode>
        <childnode refid="87730" relation="include">
        </childnode>
        <childnode refid="87740" relation="include">
        </childnode>
        <childnode refid="87743" relation="include">
        </childnode>
        <childnode refid="87744" relation="include">
        </childnode>
      </node>
      <node id="87722">
        <label>thirdparty/poppler/poppler/JBIG2Stream.cc</label>
        <link refid="_j_b_i_g2_stream_8cc"/>
        <childnode refid="87723" relation="include">
        </childnode>
        <childnode refid="87724" relation="include">
        </childnode>
        <childnode refid="87725" relation="include">
        </childnode>
        <childnode refid="87726" relation="include">
        </childnode>
        <childnode refid="87730" relation="include">
        </childnode>
        <childnode refid="87733" relation="include">
        </childnode>
        <childnode refid="87734" relation="include">
        </childnode>
        <childnode refid="87745" relation="include">
        </childnode>
      </node>
      <node id="87741">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="87742" relation="include">
        </childnode>
      </node>
      <node id="87727">
        <label>gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="87728" relation="include">
        </childnode>
      </node>
      <node id="87745">
        <label>Stream-CCITT.h</label>
        <link refid="_stream-_c_c_i_t_t_8h_source"/>
      </node>
      <node id="87736">
        <label>set</label>
      </node>
      <node id="87723">
        <label>config.h</label>
      </node>
      <node id="87729">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_j_b_i_g2_huffman_table" prot="public">JBIG2HuffmanTable</innerclass>
    <innerclass refid="class_j_b_i_g2_huffman_decoder" prot="public">JBIG2HuffmanDecoder</innerclass>
    <innerclass refid="class_j_b_i_g2_m_m_r_decoder" prot="public">JBIG2MMRDecoder</innerclass>
    <innerclass refid="class_j_b_i_g2_segment" prot="public">JBIG2Segment</innerclass>
    <innerclass refid="struct_j_b_i_g2_bitmap_ptr" prot="public">JBIG2BitmapPtr</innerclass>
    <innerclass refid="class_j_b_i_g2_bitmap" prot="public">JBIG2Bitmap</innerclass>
    <innerclass refid="class_j_b_i_g2_symbol_dict" prot="public">JBIG2SymbolDict</innerclass>
    <innerclass refid="class_j_b_i_g2_pattern_dict" prot="public">JBIG2PatternDict</innerclass>
    <innerclass refid="class_j_b_i_g2_code_table" prot="public">JBIG2CodeTable</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_j_b_i_g2_stream_8cc_1a1bc9894b96cde2103e4727da84ef920c" prot="public" static="no">
        <name>jbig2HuffmanLOW</name>
        <initializer>0xfffffffd</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="57" column="9" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_j_b_i_g2_stream_8cc_1a34eb7007a1e599313486cdf8da86caf8" prot="public" static="no">
        <name>jbig2HuffmanOOB</name>
        <initializer>0xfffffffe</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="58" column="9" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_j_b_i_g2_stream_8cc_1a6887a81784d4e2af1e7de3b2bbacce63" prot="public" static="no">
        <name>jbig2HuffmanEOT</name>
        <initializer>0xffffffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="59" column="9" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_j_b_i_g2_stream_8cc_1a26fa60e79b644294ed50cc93bb630b04" prot="public" static="no">
        <name>JBIG2SegmentType</name>
        <enumvalue id="_j_b_i_g2_stream_8cc_1a26fa60e79b644294ed50cc93bb630b04ac90bde559e6900d998a7cb015c74252d" prot="public">
          <name>jbig2SegBitmap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_j_b_i_g2_stream_8cc_1a26fa60e79b644294ed50cc93bb630b04ab6c358abf025e60032cb9a829864776f" prot="public">
          <name>jbig2SegSymbolDict</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_j_b_i_g2_stream_8cc_1a26fa60e79b644294ed50cc93bb630b04adc5b8566d604a342f085bc0fb1f4cca7" prot="public">
          <name>jbig2SegPatternDict</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_j_b_i_g2_stream_8cc_1a26fa60e79b644294ed50cc93bb630b04a5afd39bd57b14a7f2e345549962d17a4" prot="public">
          <name>jbig2SegCodeTable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="642" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="642" bodyend="647"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1ad9dd75879eecbbeda5d3c2d40eb7b068" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int contextSize[4]</definition>
        <argsstring>[4]</argsstring>
        <name>contextSize</name>
        <initializer>= { 16, 13, 10, 10 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="50" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a870b927ee4fc97e5cf86fbea64b0a850" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int refContextSize[2]</definition>
        <argsstring>[2]</argsstring>
        <name>refContextSize</name>
        <initializer>= { 13, 10 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="51" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a63807e50e3884643f752efa140c701cf" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableA[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableA</name>
        <initializer>= {
  {     0, 1,  4,              0x000 },
  {    16, 2,  8,              0x002 },
  {   272, 3, 16,              0x006 },
  { 65808, 3, 32,              0x007 },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="68" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a925d9b11cdfbab779922885abc79886d" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableB[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableB</name>
        <initializer>= {
  {     0, 1,  0,              0x000 },
  {     1, 2,  0,              0x002 },
  {     2, 3,  0,              0x006 },
  {     3, 4,  3,              0x00e },
  {    11, 5,  6,              0x01e },
  {    75, 6, 32,              0x03e },
  {     0, 6, jbig2HuffmanOOB, 0x03f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="76" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1ac6dc9453a06794596e1f7e74b37917c0" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableC[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableC</name>
        <initializer>= {
  {     0, 1,  0,              0x000 },
  {     1, 2,  0,              0x002 },
  {     2, 3,  0,              0x006 },
  {     3, 4,  3,              0x00e },
  {    11, 5,  6,              0x01e },
  {     0, 6, jbig2HuffmanOOB, 0x03e },
  {    75, 7, 32,              0x0fe },
  {  -256, 8,  8,              0x0fe },
  {  -257, 8, jbig2HuffmanLOW, 0x0ff },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="87" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a89840369440cefb115f0b2c2abaac726" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableD[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableD</name>
        <initializer>= {
  {     1, 1,  0,              0x000 },
  {     2, 2,  0,              0x002 },
  {     3, 3,  0,              0x006 },
  {     4, 4,  3,              0x00e },
  {    12, 5,  6,              0x01e },
  {    76, 5, 32,              0x01f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="100" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1aa40458d400f35af2f02c4c547e05e78b" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableE[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableE</name>
        <initializer>= {
  {     1, 1,  0,              0x000 },
  {     2, 2,  0,              0x002 },
  {     3, 3,  0,              0x006 },
  {     4, 4,  3,              0x00e },
  {    12, 5,  6,              0x01e },
  {    76, 6, 32,              0x03e },
  {  -255, 7,  8,              0x07e },
  {  -256, 7, jbig2HuffmanLOW, 0x07f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="110" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a80b9de332bcf7f202013fadbb49f43af" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableF[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableF</name>
        <initializer>= {
  {     0, 2,  7,              0x000 },
  {   128, 3,  7,              0x002 },
  {   256, 3,  8,              0x003 },
  { -1024, 4,  9,              0x008 },
  {  -512, 4,  8,              0x009 },
  {  -256, 4,  7,              0x00a },
  {   -32, 4,  5,              0x00b },
  {   512, 4,  9,              0x00c },
  {  1024, 4, 10,              0x00d },
  { -2048, 5, 10,              0x01c },
  {  -128, 5,  6,              0x01d },
  {   -64, 5,  5,              0x01e },
  { -2049, 6, jbig2HuffmanLOW, 0x03e },
  {  2048, 6, 32,              0x03f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="122" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1ab10a76d83d9a8d8ed4a25d8230e98a30" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableG[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableG</name>
        <initializer>= {
  {  -512, 3,  8,              0x000 },
  {   256, 3,  8,              0x001 },
  {   512, 3,  9,              0x002 },
  {  1024, 3, 10,              0x003 },
  { -1024, 4,  9,              0x008 },
  {  -256, 4,  7,              0x009 },
  {   -32, 4,  5,              0x00a },
  {     0, 4,  5,              0x00b },
  {   128, 4,  7,              0x00c },
  {  -128, 5,  6,              0x01a },
  {   -64, 5,  5,              0x01b },
  {    32, 5,  5,              0x01c },
  {    64, 5,  6,              0x01d },
  { -1025, 5, jbig2HuffmanLOW, 0x01e },
  {  2048, 5, 32,              0x01f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="140" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1aea93b52fab0358ca9c29a6bd6ee104e0" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableH[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableH</name>
        <initializer>= {
  {     0, 2,  1,              0x000 },
  {     0, 2, jbig2HuffmanOOB, 0x001 },
  {     4, 3,  4,              0x004 },
  {    -1, 4,  0,              0x00a },
  {    22, 4,  4,              0x00b },
  {    38, 4,  5,              0x00c },
  {     2, 5,  0,              0x01a },
  {    70, 5,  6,              0x01b },
  {   134, 5,  7,              0x01c },
  {     3, 6,  0,              0x03a },
  {    20, 6,  1,              0x03b },
  {   262, 6,  7,              0x03c },
  {   646, 6, 10,              0x03d },
  {    -2, 7,  0,              0x07c },
  {   390, 7,  8,              0x07d },
  {   -15, 8,  3,              0x0fc },
  {    -5, 8,  1,              0x0fd },
  {    -7, 9,  1,              0x1fc },
  {    -3, 9,  0,              0x1fd },
  {   -16, 9, jbig2HuffmanLOW, 0x1fe },
  {  1670, 9, 32,              0x1ff },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="159" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1ae255ae288ba7bfc21931a70f7c9bcc3e" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableI[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableI</name>
        <initializer>= {
  {     0, 2, jbig2HuffmanOOB, 0x000 },
  {    -1, 3,  1,              0x002 },
  {     1, 3,  1,              0x003 },
  {     7, 3,  5,              0x004 },
  {    -3, 4,  1,              0x00a },
  {    43, 4,  5,              0x00b },
  {    75, 4,  6,              0x00c },
  {     3, 5,  1,              0x01a },
  {   139, 5,  7,              0x01b },
  {   267, 5,  8,              0x01c },
  {     5, 6,  1,              0x03a },
  {    39, 6,  2,              0x03b },
  {   523, 6,  8,              0x03c },
  {  1291, 6, 11,              0x03d },
  {    -5, 7,  1,              0x07c },
  {   779, 7,  9,              0x07d },
  {   -31, 8,  4,              0x0fc },
  {   -11, 8,  2,              0x0fd },
  {   -15, 9,  2,              0x1fc },
  {    -7, 9,  1,              0x1fd },
  {   -32, 9, jbig2HuffmanLOW, 0x1fe },
  {  3339, 9, 32,              0x1ff },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="184" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a93140d872480d4635548998333db9103" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableJ[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableJ</name>
        <initializer>= {
  {    -2, 2,  2,              0x000 },
  {     6, 2,  6,              0x001 },
  {     0, 2, jbig2HuffmanOOB, 0x002 },
  {    -3, 5,  0,              0x018 },
  {     2, 5,  0,              0x019 },
  {    70, 5,  5,              0x01a },
  {     3, 6,  0,              0x036 },
  {   102, 6,  5,              0x037 },
  {   134, 6,  6,              0x038 },
  {   198, 6,  7,              0x039 },
  {   326, 6,  8,              0x03a },
  {   582, 6,  9,              0x03b },
  {  1094, 6, 10,              0x03c },
  {   -21, 7,  4,              0x07a },
  {    -4, 7,  0,              0x07b },
  {     4, 7,  0,              0x07c },
  {  2118, 7, 11,              0x07d },
  {    -5, 8,  0,              0x0fc },
  {     5, 8,  0,              0x0fd },
  {   -22, 8, jbig2HuffmanLOW, 0x0fe },
  {  4166, 8, 32,              0x0ff },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="210" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a54bc5d646925b6c5096dfc448dc857c3" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableK[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableK</name>
        <initializer>= {
  {     1, 1,  0,              0x000 },
  {     2, 2,  1,              0x002 },
  {     4, 4,  0,              0x00c },
  {     5, 4,  1,              0x00d },
  {     7, 5,  1,              0x01c },
  {     9, 5,  2,              0x01d },
  {    13, 6,  2,              0x03c },
  {    17, 7,  2,              0x07a },
  {    21, 7,  3,              0x07b },
  {    29, 7,  4,              0x07c },
  {    45, 7,  5,              0x07d },
  {    77, 7,  6,              0x07e },
  {   141, 7, 32,              0x07f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="235" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1abadd8526351289b06c0c58c303e3141f" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableL[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableL</name>
        <initializer>= {
  {     1, 1,  0,              0x000 },
  {     2, 2,  0,              0x002 },
  {     3, 3,  1,              0x006 },
  {     5, 5,  0,              0x01c },
  {     6, 5,  1,              0x01d },
  {     8, 6,  1,              0x03c },
  {    10, 7,  0,              0x07a },
  {    11, 7,  1,              0x07b },
  {    13, 7,  2,              0x07c },
  {    17, 7,  3,              0x07d },
  {    25, 7,  4,              0x07e },
  {    41, 8,  5,              0x0fe },
  {    73, 8, 32,              0x0ff },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="252" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a6ad46187d5e02f7e4341b60078426cad" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableM[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableM</name>
        <initializer>= {
  {     1, 1,  0,              0x000 },
  {     2, 3,  0,              0x004 },
  {     7, 3,  3,              0x005 },
  {     3, 4,  0,              0x00c },
  {     5, 4,  1,              0x00d },
  {     4, 5,  0,              0x01c },
  {    15, 6,  1,              0x03a },
  {    17, 6,  2,              0x03b },
  {    21, 6,  3,              0x03c },
  {    29, 6,  4,              0x03d },
  {    45, 6,  5,              0x03e },
  {    77, 7,  6,              0x07e },
  {   141, 7, 32,              0x07f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="269" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1af6fa15c070a41c5cec499cfa56c786fe" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableN[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableN</name>
        <initializer>= {
  {     0, 1,  0,              0x000 },
  {    -2, 3,  0,              0x004 },
  {    -1, 3,  0,              0x005 },
  {     1, 3,  0,              0x006 },
  {     2, 3,  0,              0x007 },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="286" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_j_b_i_g2_stream_8cc_1a1cb4d180d73feb4500c8e2978cbd1d49" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref></type>
        <definition>JBIG2HuffmanTable huffTableO[]</definition>
        <argsstring>[]</argsstring>
        <name>huffTableO</name>
        <initializer>= {
  {     0, 1,  0,              0x000 },
  {    -1, 3,  0,              0x004 },
  {     1, 3,  0,              0x005 },
  {    -2, 4,  0,              0x00c },
  {     2, 4,  0,              0x00d },
  {    -4, 5,  1,              0x01c },
  {     3, 5,  1,              0x01d },
  {    -8, 6,  2,              0x03c },
  {     5, 6,  2,              0x03d },
  {   -24, 7,  4,              0x07c },
  {     9, 7,  4,              0x07d },
  {   -25, 7, jbig2HuffmanLOW, 0x07e },
  {    25, 7, 32,              0x07f },
  {     0, 0, jbig2HuffmanEOT, 0     }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/JBIG2Stream.cc" line="295" column="1" bodyfile="thirdparty/poppler/poppler/JBIG2Stream.cc" bodystart="295" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2Stream.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2002-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Raj<sp/>Kumar<sp/>&lt;rkumar@archive.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Paul<sp/>Walmsley<sp/>&lt;paul@booyaka.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006-2010,<sp/>2012,<sp/>2014-2016<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>David<sp/>Benjamin<sp/>&lt;davidben@mit.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Edward<sp/>Jiang<sp/>&lt;ejiang@google.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>William<sp/>Bader<sp/>&lt;williambader@hotmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013,<sp/>2014<sp/>Fabio<sp/>D&apos;Urso<sp/>&lt;fabiodurso@hotmail.it&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>Suzuki<sp/>Toshiya<sp/>&lt;mpsuzuki@hiroshima-u.ac.jp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JArithmeticDecoder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JBIG2Stream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//~<sp/>share<sp/>these<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Stream-CCITT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contextSize[4]<sp/>=<sp/>{<sp/>16,<sp/>13,<sp/>10,<sp/>10<sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refContextSize[2]<sp/>=<sp/>{<sp/>13,<sp/>10<sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2HuffmanTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>jbig2HuffmanLOW<sp/>0xfffffffd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>jbig2HuffmanOOB<sp/>0xfffffffe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>jbig2HuffmanEOT<sp/>0xffffffff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct_j_b_i_g2_huffman_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>Guint<sp/>prefixLen;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>Guint<sp/>rangeLen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>also<sp/>be<sp/>LOW,<sp/>OOB,<sp/>or<sp/>EOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>Guint<sp/>prefix;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableA[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>16,<sp/>2,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>272,<sp/>3,<sp/>16,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x006<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{<sp/>65808,<sp/>3,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x007<sp/>},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableB[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>2,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x006<sp/>},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>4,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00e<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>11,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01e<sp/>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>75,<sp/>6,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03e<sp/>},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>6,<sp/>jbig2HuffmanOOB,<sp/>0x03f<sp/>},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableC[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>2,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x006<sp/>},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>4,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00e<sp/>},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>11,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01e<sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>6,<sp/>jbig2HuffmanOOB,<sp/>0x03e<sp/>},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>75,<sp/>7,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fe<sp/>},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-256,<sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fe<sp/>},</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-257,<sp/>8,<sp/>jbig2HuffmanLOW,<sp/>0x0ff<sp/>},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableD[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x006<sp/>},</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00e<sp/>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>12,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01e<sp/>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>76,<sp/>5,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01f<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableE[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x006<sp/>},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00e<sp/>},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>12,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01e<sp/>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>76,<sp/>6,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03e<sp/>},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-255,<sp/>7,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07e<sp/>},</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-256,<sp/>7,<sp/>jbig2HuffmanLOW,<sp/>0x07f<sp/>},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableF[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>2,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>128,<sp/>3,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>256,<sp/>3,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x003<sp/>},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{<sp/>-1024,<sp/>4,<sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x008<sp/>},</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-512,<sp/>4,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x009<sp/>},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-256,<sp/>4,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00a<sp/>},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-32,<sp/>4,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00b<sp/>},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>512,<sp/>4,<sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00c<sp/>},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{<sp/><sp/>1024,<sp/>4,<sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00d<sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{<sp/>-2048,<sp/>5,<sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-128,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01d<sp/>},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-64,<sp/>5,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01e<sp/>},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{<sp/>-2049,<sp/>6,<sp/>jbig2HuffmanLOW,<sp/>0x03e<sp/>},</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{<sp/><sp/>2048,<sp/>6,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03f<sp/>},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableG[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-512,<sp/>3,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>256,<sp/>3,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x001<sp/>},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>512,<sp/>3,<sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{<sp/><sp/>1024,<sp/>3,<sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x003<sp/>},</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{<sp/>-1024,<sp/>4,<sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x008<sp/>},</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-256,<sp/>4,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x009<sp/>},</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-32,<sp/>4,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00a<sp/>},</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>4,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00b<sp/>},</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>128,<sp/>4,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00c<sp/>},</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{<sp/><sp/>-128,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01a<sp/>},</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-64,<sp/>5,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01b<sp/>},</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>32,<sp/>5,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>64,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01d<sp/>},</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{<sp/>-1025,<sp/>5,<sp/>jbig2HuffmanLOW,<sp/>0x01e<sp/>},</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{<sp/><sp/>2048,<sp/>5,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01f<sp/>},</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableH[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>2,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>2,<sp/>jbig2HuffmanOOB,<sp/>0x001<sp/>},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>4,<sp/>3,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x004<sp/>},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-1,<sp/>4,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00a<sp/>},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>22,<sp/>4,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00b<sp/>},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>38,<sp/>4,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00c<sp/>},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>5,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01a<sp/>},</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>70,<sp/>5,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01b<sp/>},</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>134,<sp/>5,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>6,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03a<sp/>},</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>20,<sp/>6,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03b<sp/>},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>262,<sp/>6,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03c<sp/>},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>646,<sp/>6,<sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03d<sp/>},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-2,<sp/>7,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07c<sp/>},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>390,<sp/>7,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07d<sp/>},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-15,<sp/>8,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fc<sp/>},</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-5,<sp/>8,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fd<sp/>},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-7,<sp/>9,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1fc<sp/>},</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-3,<sp/>9,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1fd<sp/>},</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-16,<sp/>9,<sp/>jbig2HuffmanLOW,<sp/>0x1fe<sp/>},</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{<sp/><sp/>1670,<sp/>9,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1ff<sp/>},</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableI[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>2,<sp/>jbig2HuffmanOOB,<sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-1,<sp/>3,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>3,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x003<sp/>},</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>7,<sp/>3,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x004<sp/>},</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-3,<sp/>4,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00a<sp/>},</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>43,<sp/>4,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00b<sp/>},</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>75,<sp/>4,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00c<sp/>},</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>5,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01a<sp/>},</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>139,<sp/>5,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01b<sp/>},</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>267,<sp/>5,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>5,<sp/>6,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03a<sp/>},</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>39,<sp/>6,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03b<sp/>},</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>523,<sp/>6,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03c<sp/>},</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{<sp/><sp/>1291,<sp/>6,<sp/>11,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03d<sp/>},</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-5,<sp/>7,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07c<sp/>},</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>779,<sp/>7,<sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07d<sp/>},</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-31,<sp/>8,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fc<sp/>},</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-11,<sp/>8,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fd<sp/>},</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-15,<sp/>9,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1fc<sp/>},</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-7,<sp/>9,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1fd<sp/>},</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-32,<sp/>9,<sp/>jbig2HuffmanLOW,<sp/>0x1fe<sp/>},</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>{<sp/><sp/>3339,<sp/>9,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1ff<sp/>},</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableJ[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-2,<sp/>2,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>6,<sp/>2,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x001<sp/>},</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>2,<sp/>jbig2HuffmanOOB,<sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-3,<sp/>5,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x018<sp/>},</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>5,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x019<sp/>},</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>70,<sp/>5,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01a<sp/>},</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>6,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x036<sp/>},</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>102,<sp/>6,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x037<sp/>},</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>134,<sp/>6,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x038<sp/>},</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>198,<sp/>6,<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x039<sp/>},</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>326,<sp/>6,<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03a<sp/>},</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>582,<sp/>6,<sp/><sp/>9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03b<sp/>},</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{<sp/><sp/>1094,<sp/>6,<sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03c<sp/>},</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-21,<sp/>7,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07a<sp/>},</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-4,<sp/>7,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07b<sp/>},</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>4,<sp/>7,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07c<sp/>},</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>{<sp/><sp/>2118,<sp/>7,<sp/>11,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07d<sp/>},</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-5,<sp/>8,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fc<sp/>},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>5,<sp/>8,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fd<sp/>},</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-22,<sp/>8,<sp/>jbig2HuffmanLOW,<sp/>0x0fe<sp/>},</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>{<sp/><sp/>4166,<sp/>8,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0ff<sp/>},</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableK[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>4,<sp/>4,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00c<sp/>},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>5,<sp/>4,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00d<sp/>},</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>7,<sp/>5,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>9,<sp/>5,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01d<sp/>},</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>13,<sp/>6,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03c<sp/>},</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>17,<sp/>7,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07a<sp/>},</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>21,<sp/>7,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07b<sp/>},</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>29,<sp/>7,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07c<sp/>},</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>45,<sp/>7,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07d<sp/>},</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>77,<sp/>7,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07e<sp/>},</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>141,<sp/>7,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07f<sp/>},</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableL[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x002<sp/>},</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x006<sp/>},</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>5,<sp/>5,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>6,<sp/>5,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01d<sp/>},</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>8,<sp/>6,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03c<sp/>},</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>10,<sp/>7,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07a<sp/>},</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>11,<sp/>7,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07b<sp/>},</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>13,<sp/>7,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07c<sp/>},</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>17,<sp/>7,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07d<sp/>},</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>25,<sp/>7,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07e<sp/>},</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>41,<sp/>8,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0fe<sp/>},</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>73,<sp/>8,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0ff<sp/>},</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableM[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x004<sp/>},</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>7,<sp/>3,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x005<sp/>},</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>4,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00c<sp/>},</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>5,<sp/>4,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00d<sp/>},</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>4,<sp/>5,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>15,<sp/>6,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03a<sp/>},</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>17,<sp/>6,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03b<sp/>},</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>21,<sp/>6,<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03c<sp/>},</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>29,<sp/>6,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03d<sp/>},</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>45,<sp/>6,<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03e<sp/>},</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>77,<sp/>7,<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07e<sp/>},</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>141,<sp/>7,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07f<sp/>},</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableN[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-2,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x004<sp/>},</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-1,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x005<sp/>},</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x006<sp/>},</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x007<sp/>},</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal">};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>huffTableO[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000<sp/>},</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-1,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x004<sp/>},</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>1,<sp/>3,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x005<sp/>},</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-2,<sp/>4,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00c<sp/>},</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>2,<sp/>4,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00d<sp/>},</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-4,<sp/>5,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01c<sp/>},</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>3,<sp/>5,<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01d<sp/>},</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>-8,<sp/>6,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03c<sp/>},</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>5,<sp/>6,<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03d<sp/>},</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-24,<sp/>7,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07c<sp/>},</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>9,<sp/>7,<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07d<sp/>},</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/>-25,<sp/>7,<sp/>jbig2HuffmanLOW,<sp/>0x07e<sp/>},</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/>25,<sp/>7,<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07f<sp/>},</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>jbig2HuffmanEOT,<sp/>0<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2HuffmanDecoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="class_j_b_i_g2_huffman_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_b_i_g2_huffman_decoder" kindref="compound">JBIG2HuffmanDecoder</ref><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_huffman_decoder" kindref="compound">JBIG2HuffmanDecoder</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>~<ref refid="class_j_b_i_g2_huffman_decoder" kindref="compound">JBIG2HuffmanDecoder</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStream(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA)<sp/>{<sp/>str<sp/>=<sp/>strA;<sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>for<sp/>OOB,<sp/>otherwise<sp/>sets<sp/>*&lt;x&gt;<sp/>and<sp/>returns<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>GBool<sp/>decodeInt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*<ref refid="classtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>Guint<sp/>readBits(Guint<sp/>n);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>Guint<sp/>readBit();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>the<sp/>table<sp/>by<sp/>prefix<sp/>length<sp/>and<sp/>assign<sp/>prefix<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildTable(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*table,<sp/>Guint<sp/>len);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>Guint<sp/>buf;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>Guint<sp/>bufLen;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">JBIG2HuffmanDecoder::JBIG2HuffmanDecoder()<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">JBIG2HuffmanDecoder::~JBIG2HuffmanDecoder()<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2HuffmanDecoder::reset()<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>bufLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//~<sp/>optimize<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">GBool<sp/>JBIG2HuffmanDecoder::decodeInt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*<ref refid="classtable" kindref="compound">table</ref>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>Guint<sp/>i,<sp/>len,<sp/>prefix;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>prefix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(table[i].rangeLen<sp/>!=<sp/>jbig2HuffmanEOT)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>table[i].prefixLen)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/>(prefix<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>readBit();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++len;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix<sp/>==<sp/>table[i].prefix)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table[i].rangeLen<sp/>==<sp/>jbig2HuffmanOOB)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table[i].rangeLen<sp/>==<sp/>jbig2HuffmanLOW)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>table[i].val<sp/>-<sp/>readBits(32);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table[i].rangeLen<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>table[i].val<sp/>+<sp/>readBits(table[i].rangeLen);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>table[i].val;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">Guint<sp/>JBIG2HuffmanDecoder::readBits(Guint<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>Guint<sp/>x,<sp/>mask,<sp/>nLeft;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>mask<sp/>=<sp/>(n<sp/>==<sp/>32)<sp/>?<sp/>0xffffffff<sp/>:<sp/>((1<sp/>&lt;&lt;<sp/>n)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&gt;=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>n))<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>buf<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>bufLen)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>nLeft<sp/>=<sp/>n<sp/>-<sp/>bufLen;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nLeft<sp/>&gt;=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(str-&gt;getChar()<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nLeft<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLeft<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>str-&gt;getChar();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufLen<sp/>=<sp/>8<sp/>-<sp/>nLeft;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>&lt;&lt;<sp/>nLeft)<sp/>|<sp/>((buf<sp/>&gt;&gt;<sp/>bufLen)<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>nLeft)<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">Guint<sp/>JBIG2HuffmanDecoder::readBit()<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>str-&gt;getChar();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>--bufLen;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(buf<sp/>&gt;&gt;<sp/>bufLen)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2HuffmanDecoder::buildTable(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*table,<sp/>Guint<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>Guint<sp/>i,<sp/>j,<sp/>k,<sp/>prefix;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>tab;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stable<sp/>selection<sp/>sort:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>entries<sp/>with<sp/>prefixLen<sp/>&gt;<sp/>0,<sp/>in<sp/>ascending<sp/>prefixLen<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>entry<sp/>with<sp/>prefixLen<sp/>=<sp/>0,<sp/>rangeLen<sp/>=<sp/>EOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>all<sp/>other<sp/>entries<sp/>with<sp/>prefixLen<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(on<sp/>entry,<sp/>table[len]<sp/>has<sp/>prefixLen<sp/>=<sp/>0,<sp/>rangeLen<sp/>=<sp/>EOT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>table[j].prefixLen<sp/>==<sp/>0;<sp/>++j)<sp/>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>j<sp/>+<sp/>1;<sp/>k<sp/>&lt;<sp/>len;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table[k].prefixLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table[k].prefixLen<sp/>&lt;<sp/>table[j].prefixLen)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tab<sp/>=<sp/>table[j];</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>j;<sp/>k<sp/>&gt;<sp/>i;<sp/>--k)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>table[k]<sp/>=<sp/>table[k<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table[i]<sp/>=<sp/>tab;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>table[i]<sp/>=<sp/>table[len];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assign<sp/>prefixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table[0].rangeLen<sp/>!=<sp/>jbig2HuffmanEOT)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>table[i++].prefix<sp/>=<sp/>prefix++;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>table[i].rangeLen<sp/>!=<sp/>jbig2HuffmanEOT;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>&lt;&lt;=<sp/>table[i].prefixLen<sp/>-<sp/>table[i-1].prefixLen;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table[i].prefix<sp/>=<sp/>prefix++;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2MMRDecoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="class_j_b_i_g2_m_m_r_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_b_i_g2_m_m_r_decoder" kindref="compound">JBIG2MMRDecoder</ref><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_m_m_r_decoder" kindref="compound">JBIG2MMRDecoder</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>~<ref refid="class_j_b_i_g2_m_m_r_decoder" kindref="compound">JBIG2MMRDecoder</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStream(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA)<sp/>{<sp/>str<sp/>=<sp/>strA;<sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get2DCode();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getBlackCode();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWhiteCode();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>Guint<sp/>get24Bits();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>skipTo(Guint<sp/>length);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>Guint<sp/>buf;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>Guint<sp/>bufLen;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>Guint<sp/>nBytesRead;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">JBIG2MMRDecoder::JBIG2MMRDecoder()<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">JBIG2MMRDecoder::~JBIG2MMRDecoder()<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2MMRDecoder::reset()<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>buf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>bufLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>nBytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JBIG2MMRDecoder::get2DCode()<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_c_i_t_t_code" kindref="compound">CCITTCode</ref><sp/>*p;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>str-&gt;getChar()<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;twoDimTab1[(buf<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x7f];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;twoDimTab1[(buf<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x7f];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;twoDimTab1[(buf<sp/>&lt;&lt;<sp/>(7<sp/>-<sp/>bufLen))<sp/>&amp;<sp/>0x7f];</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;bits<sp/>&lt;<sp/>0<sp/>||<sp/>p-&gt;bits<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bufLen)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(buf<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(str-&gt;getChar()<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufLen<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;twoDimTab1[(buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>7))<sp/>&amp;<sp/>0x7f];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;bits<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>str-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>two<sp/>dim<sp/>code<sp/>in<sp/>JBIG2<sp/>MMR<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>bufLen<sp/>-=<sp/>p-&gt;bits;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;n;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JBIG2MMRDecoder::getWhiteCode()<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_c_i_t_t_code" kindref="compound">CCITTCode</ref><sp/>*p;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>Guint<sp/>code;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>str-&gt;getChar()<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&gt;=<sp/>11<sp/>&amp;&amp;<sp/>((buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>7))<sp/>&amp;<sp/>0x7f)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&lt;=<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&lt;&lt;<sp/>(12<sp/>-<sp/>bufLen);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>12);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;whiteTab1[code<sp/>&amp;<sp/>0x1f];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&lt;=<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&lt;&lt;<sp/>(9<sp/>-<sp/>bufLen);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>9);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;whiteTab2[code<sp/>&amp;<sp/>0x1ff];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;bits<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>p-&gt;bits<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bufLen)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufLen<sp/>-=<sp/>p-&gt;bits;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;n;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&gt;=<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(buf<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(str-&gt;getChar()<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>str-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>white<sp/>code<sp/>in<sp/>JBIG2<sp/>MMR<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>eat<sp/>a<sp/>bit<sp/>and<sp/>return<sp/>a<sp/>positive<sp/>number<sp/>so<sp/>that<sp/>the<sp/>caller<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>into<sp/>an<sp/>infinite<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>--bufLen;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JBIG2MMRDecoder::getBlackCode()<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_c_i_t_t_code" kindref="compound">CCITTCode</ref><sp/>*p;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>Guint<sp/>code;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>str-&gt;getChar()<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&gt;=<sp/>10<sp/>&amp;&amp;<sp/>((buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>6))<sp/>&amp;<sp/>0x3f)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&lt;=<sp/>13)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&lt;&lt;<sp/>(13<sp/>-<sp/>bufLen);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>13);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;blackTab1[code<sp/>&amp;<sp/>0x7f];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&gt;=<sp/>7<sp/>&amp;&amp;<sp/>((buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>4))<sp/>&amp;<sp/>0x0f)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>6))<sp/>&amp;<sp/>0x03)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&lt;=<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&lt;&lt;<sp/>(12<sp/>-<sp/>bufLen);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>12);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((code<sp/>&amp;<sp/>0xff)<sp/>&lt;<sp/>64))<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;blackTab2[(code<sp/>&amp;<sp/>0xff)<sp/>-<sp/>64];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&lt;=<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&lt;&lt;<sp/>(6<sp/>-<sp/>bufLen);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>6);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;blackTab3[code<sp/>&amp;<sp/>0x3f];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;bits<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>p-&gt;bits<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bufLen)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufLen<sp/>-=<sp/>p-&gt;bits;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;n;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufLen<sp/>&gt;=<sp/>13)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(buf<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(str-&gt;getChar()<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>str-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>black<sp/>code<sp/>in<sp/>JBIG2<sp/>MMR<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>eat<sp/>a<sp/>bit<sp/>and<sp/>return<sp/>a<sp/>positive<sp/>number<sp/>so<sp/>that<sp/>the<sp/>caller<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>into<sp/>an<sp/>infinite<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>--bufLen;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">Guint<sp/>JBIG2MMRDecoder::get24Bits()<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bufLen<sp/>&lt;<sp/>24)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(buf<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(str-&gt;getChar()<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>bufLen<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(buf<sp/>&gt;&gt;<sp/>(bufLen<sp/>-<sp/>24))<sp/>&amp;<sp/>0xffffff;</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2MMRDecoder::skipTo(Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nBytesRead<sp/>&lt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>str-&gt;getChar();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2Segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>JBIG2SegmentType<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>jbig2SegBitmap,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>jbig2SegSymbolDict,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>jbig2SegPatternDict,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>jbig2SegCodeTable</highlight></codeline>
<codeline lineno="647"><highlight class="normal">};</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="class_j_b_i_g2_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>(Guint<sp/>segNumA)<sp/>{<sp/>segNum<sp/>=<sp/>segNumA;<sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSegNum(Guint<sp/>segNumA)<sp/>{<sp/>segNum<sp/>=<sp/>segNumA;<sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>Guint<sp/>getSegNum()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segNum;<sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>JBIG2SegmentType<sp/>getType()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>Guint<sp/>segNum;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">};</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2Bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="struct_j_b_i_g2_bitmap_ptr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>Guchar<sp/>*p;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">};</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="class_j_b_i_g2_bitmap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(Guint<sp/>segNumA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hA);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>JBIG2SegmentType<sp/>getType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jbig2SegBitmap;<sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*copy()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*getSlice(Guint<sp/>x,<sp/>Guint<sp/>y,<sp/>Guint<sp/>wA,<sp/>Guint<sp/>hA);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expand(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newH,<sp/>Guint<sp/>pixel);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearToZero();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearToOne();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWidth()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getHeight()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;<sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLineSize()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line;<sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPixel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0<sp/>||<sp/>x<sp/>&gt;=<sp/>w<sp/>||<sp/>y<sp/>&lt;<sp/>0<sp/>||<sp/>y<sp/>&gt;=<sp/>h)<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data[y<sp/>*<sp/>line<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>3)]<sp/>&gt;&gt;<sp/>(7<sp/>-<sp/>(x<sp/>&amp;<sp/>7)))<sp/>&amp;<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPixel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>data[y<sp/>*<sp/>line<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>3)]<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>(7<sp/>-<sp/>(x<sp/>&amp;<sp/>7));<sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearPixel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>data[y<sp/>*<sp/>line<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>3)]<sp/>&amp;=<sp/>0x7f7f<sp/>&gt;&gt;<sp/>(x<sp/>&amp;<sp/>7);<sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getPixelPtr(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextPixel(<ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>duplicateRow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ySrc);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>combine(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>Guint<sp/>combOp);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>Guchar<sp/>*getDataPtr()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getDataSize()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h<sp/>*<sp/>line;<sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>GBool<sp/>isOk()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data<sp/>!=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(Guint<sp/>segNumA,<sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h,<sp/>line;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>Guchar<sp/>*data;</highlight></codeline>
<codeline lineno="708"><highlight class="normal">};</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal">JBIG2Bitmap::JBIG2Bitmap(Guint<sp/>segNumA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hA):</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>(segNumA)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>wA;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>hA;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>line<sp/>=<sp/>(wA<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&lt;=<sp/>0<sp/>||<sp/>h<sp/>&lt;=<sp/>0<sp/>||<sp/>line<sp/>&lt;=<sp/>0<sp/>||<sp/>h<sp/>&gt;=<sp/>(INT_MAX<sp/>-<sp/>1)<sp/>/<sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>width/height&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>allocate<sp/>one<sp/>extra<sp/>guard<sp/>byte<sp/>for<sp/>use<sp/>in<sp/>combine()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>(Guchar<sp/>*)gmalloc_checkoverflow(h<sp/>*<sp/>line<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>data[h<sp/>*<sp/>line]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">JBIG2Bitmap::JBIG2Bitmap(Guint<sp/>segNumA,<sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap):</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>(segNumA)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(bitmap<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;NULL<sp/>bitmap<sp/>in<sp/>JBIG2Bitmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>h<sp/>=<sp/>line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>bitmap-&gt;w;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>bitmap-&gt;h;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>line<sp/>=<sp/>bitmap-&gt;line;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&lt;=<sp/>0<sp/>||<sp/>h<sp/>&lt;=<sp/>0<sp/>||<sp/>line<sp/>&lt;=<sp/>0<sp/>||<sp/>h<sp/>&gt;=<sp/>(INT_MAX<sp/>-<sp/>1)<sp/>/<sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>width/height&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>allocate<sp/>one<sp/>extra<sp/>guard<sp/>byte<sp/>for<sp/>use<sp/>in<sp/>combine()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>(Guchar<sp/>*)gmalloc(h<sp/>*<sp/>line<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>memcpy(data,<sp/>bitmap-&gt;data,<sp/>h<sp/>*<sp/>line);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>data[h<sp/>*<sp/>line]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">JBIG2Bitmap::~JBIG2Bitmap()<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>gfree(data);</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">//~<sp/>optimize<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*JBIG2Bitmap::getSlice(Guint<sp/>x,<sp/>Guint<sp/>y,<sp/>Guint<sp/>wA,<sp/>Guint<sp/>hA)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*slice;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>Guint<sp/>xx,<sp/>yy;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>slice<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/>wA,<sp/>hA);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slice-&gt;isOk())<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>slice-&gt;clearToZero();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>hA;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0;<sp/>xx<sp/>&lt;<sp/>wA;<sp/>++xx)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getPixel(x<sp/>+<sp/>xx,<sp/>y<sp/>+<sp/>yy))<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slice-&gt;setPixel(xx,<sp/>yy);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>slice;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>slice<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slice;</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Bitmap::expand(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newH,<sp/>Guint<sp/>pixel)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newH<sp/>&lt;=<sp/>h<sp/>||<sp/>line<sp/>&lt;=<sp/>0<sp/>||<sp/>newH<sp/>&gt;=<sp/>(INT_MAX<sp/>-<sp/>1)<sp/>/<sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>width/height&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(data);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>allocate<sp/>one<sp/>extra<sp/>guard<sp/>byte<sp/>for<sp/>use<sp/>in<sp/>combine()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>(Guchar<sp/>*)grealloc(data,<sp/>newH<sp/>*<sp/>line<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(data<sp/>+<sp/>h<sp/>*<sp/>line,<sp/>0xff,<sp/>(newH<sp/>-<sp/>h)<sp/>*<sp/>line);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(data<sp/>+<sp/>h<sp/>*<sp/>line,<sp/>0x00,<sp/>(newH<sp/>-<sp/>h)<sp/>*<sp/>line);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>newH;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>data[h<sp/>*<sp/>line]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Bitmap::clearToZero()<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>memset(data,<sp/>0,<sp/>h<sp/>*<sp/>line);</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Bitmap::clearToOne()<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>memset(data,<sp/>0xff,<sp/>h<sp/>*<sp/>line);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Bitmap::getPixelPtr(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>0<sp/>||<sp/>y<sp/>&gt;=<sp/>h<sp/>||<sp/>x<sp/>&gt;=<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;shift<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;x<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;p<sp/>=<sp/>&amp;data[y<sp/>*<sp/>line];</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;shift<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;p<sp/>=<sp/>&amp;data[y<sp/>*<sp/>line<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>3)];</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;shift<sp/>=<sp/>7<sp/>-<sp/>(x<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JBIG2Bitmap::nextPixel(<ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr-&gt;p)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr-&gt;x<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>++ptr-&gt;x;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>(*ptr-&gt;p<sp/>&gt;&gt;<sp/>ptr-&gt;shift)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++ptr-&gt;x<sp/>==<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr-&gt;shift<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ptr-&gt;p;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;shift<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--ptr-&gt;shift;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pix;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Bitmap::duplicateRow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ySrc)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>memcpy(data<sp/>+<sp/>yDest<sp/>*<sp/>line,<sp/>data<sp/>+<sp/>ySrc<sp/>*<sp/>line,<sp/>line);</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Bitmap::combine(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>combOp)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>x1,<sp/>y0,<sp/>y1,<sp/>xx,<sp/>yy;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>Guchar<sp/>*srcPtr,<sp/>*destPtr;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>Guint<sp/>src0,<sp/>src1,<sp/>src,<sp/>dest,<sp/>s1,<sp/>s2,<sp/>m1,<sp/>m2,<sp/>m3;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>GBool<sp/>oneByte;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>the<sp/>pathological<sp/>case<sp/>where<sp/>y<sp/>=<sp/>-2^31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>-0x7fffffff)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>-y;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>bitmap-&gt;h<sp/>&gt;<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>h<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>bitmap-&gt;h;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;=<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>x<sp/>&amp;<sp/>~7;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>x1<sp/>=<sp/>x<sp/>+<sp/>bitmap-&gt;w;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&gt;=<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>s1<sp/>=<sp/>x<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>s2<sp/>=<sp/>8<sp/>-<sp/>s1;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>m1<sp/>=<sp/>0xff<sp/>&gt;&gt;<sp/>(x1<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>m2<sp/>=<sp/>0xff<sp/>&lt;&lt;<sp/>(((x1<sp/>&amp;<sp/>7)<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>8<sp/>-<sp/>(x1<sp/>&amp;<sp/>7));</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>m3<sp/>=<sp/>(0xff<sp/>&gt;&gt;<sp/>s1)<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>oneByte<sp/>=<sp/>x0<sp/>==<sp/>((x1<sp/>-<sp/>1)<sp/>&amp;<sp/>~7);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>y0;<sp/>yy<sp/>&lt;<sp/>y1;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>byte<sp/>per<sp/>line<sp/>--<sp/>need<sp/>to<sp/>mask<sp/>both<sp/>left<sp/>and<sp/>right<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oneByte)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>data<sp/>+<sp/>(y<sp/>+<sp/>yy)<sp/>*<sp/>line<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>srcPtr<sp/>=<sp/>bitmap-&gt;data<sp/>+<sp/>yy<sp/>*<sp/>bitmap-&gt;line;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>*destPtr;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>src1<sp/>=<sp/>*srcPtr;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(combOp)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">//<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>|=<sp/>(src1<sp/>&gt;&gt;<sp/>s1)<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>&amp;=<sp/>((0xff00<sp/>|<sp/>src1)<sp/>&gt;&gt;<sp/>s1)<sp/>|<sp/>m1;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>xor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>(src1<sp/>&gt;&gt;<sp/>s1)<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>xnor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>((src1<sp/>^<sp/>0xff)<sp/>&gt;&gt;<sp/>s1)<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="comment">//<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>(dest<sp/>&amp;<sp/>~m3)<sp/>|<sp/>((src1<sp/>&gt;&gt;<sp/>s1)<sp/>&amp;<sp/>m3);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>data<sp/>+<sp/>(y<sp/>+<sp/>yy)<sp/>*<sp/>line;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>srcPtr<sp/>=<sp/>bitmap-&gt;data<sp/>+<sp/>yy<sp/>*<sp/>bitmap-&gt;line<sp/>+<sp/>(-x<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>*destPtr;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>src1<sp/>=<sp/>*srcPtr;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(combOp)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">//<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>|=<sp/>src1<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>&amp;=<sp/>src1<sp/>|<sp/>m1;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>xor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>src1<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>xnor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>(src1<sp/>^<sp/>0xff)<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="comment">//<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>(src1<sp/>&amp;<sp/>m2)<sp/>|<sp/>(dest<sp/>&amp;<sp/>m1);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>bytes<sp/>per<sp/>line<sp/>--<sp/>need<sp/>to<sp/>mask<sp/>left<sp/>side<sp/>of<sp/>left-most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>byte<sp/>and<sp/>right<sp/>side<sp/>of<sp/>right-most<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left-most<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>data<sp/>+<sp/>(y<sp/>+<sp/>yy)<sp/>*<sp/>line<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>srcPtr<sp/>=<sp/>bitmap-&gt;data<sp/>+<sp/>yy<sp/>*<sp/>bitmap-&gt;line;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>src1<sp/>=<sp/>*srcPtr++;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>*destPtr;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(combOp)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">//<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>|=<sp/>src1<sp/>&gt;&gt;<sp/>s1;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>&amp;=<sp/>(0xff00<sp/>|<sp/>src1)<sp/>&gt;&gt;<sp/>s1;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>xor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>src1<sp/>&gt;&gt;<sp/>s1;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>xnor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>(src1<sp/>^<sp/>0xff)<sp/>&gt;&gt;<sp/>s1;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="comment">//<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>(dest<sp/>&amp;<sp/>(0xff<sp/>&lt;&lt;<sp/>s2))<sp/>|<sp/>(src1<sp/>&gt;&gt;<sp/>s1);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>x0<sp/>+<sp/>8;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>data<sp/>+<sp/>(y<sp/>+<sp/>yy)<sp/>*<sp/>line;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>srcPtr<sp/>=<sp/>bitmap-&gt;data<sp/>+<sp/>yy<sp/>*<sp/>bitmap-&gt;line<sp/>+<sp/>(-x<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>src1<sp/>=<sp/>*srcPtr++;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>middle<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>xx<sp/>&lt;<sp/>x1<sp/>-<sp/>8;<sp/>xx<sp/>+=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>*destPtr;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>src0<sp/>=<sp/>src1;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>src1<sp/>=<sp/>*srcPtr++;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>src<sp/>=<sp/>(((src0<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>src1)<sp/>&gt;&gt;<sp/>s1)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(combOp)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">//<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>|=<sp/>src;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>&amp;=<sp/>src;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>xor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>src;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>xnor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>src<sp/>^<sp/>0xff;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="comment">//<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right-most<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>this<sp/>last<sp/>byte<sp/>(src1)<sp/>may<sp/>not<sp/>actually<sp/>be<sp/>used,<sp/>depending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>values<sp/>of<sp/>s1,<sp/>m1,<sp/>and<sp/>m2<sp/>-<sp/>and<sp/>in<sp/>fact,<sp/>it<sp/>may<sp/>be<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>edge<sp/>of<sp/>the<sp/>source<sp/>bitmap,<sp/>which<sp/>means<sp/>we<sp/>need<sp/>to<sp/>allocate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>extra<sp/>guard<sp/>byte<sp/>at<sp/>the<sp/>end<sp/>of<sp/>each<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>*destPtr;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src0<sp/>=<sp/>src1;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src1<sp/>=<sp/>*srcPtr++;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>=<sp/>(((src0<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>src1)<sp/>&gt;&gt;<sp/>s1)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(combOp)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">//<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>|=<sp/>src<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>&amp;=<sp/>src<sp/>|<sp/>m1;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>xor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>src<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>xnor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>^=<sp/>(src<sp/>^<sp/>0xff)<sp/>&amp;<sp/>m2;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="comment">//<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>(src<sp/>&amp;<sp/>m2)<sp/>|<sp/>(dest<sp/>&amp;<sp/>m1);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2SymbolDict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043" refid="class_j_b_i_g2_symbol_dict" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref>(Guint<sp/>segNumA,<sp/>Guint<sp/>sizeA);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref>();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>JBIG2SegmentType<sp/>getType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jbig2SegSymbolDict;<sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>Guint<sp/>getSize()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBitmap(Guint<sp/>idx,<sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap)<sp/>{<sp/>bitmaps[idx]<sp/>=<sp/>bitmap;<sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*getBitmap(Guint<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitmaps[idx];<sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>GBool<sp/>isOk()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitmaps<sp/>!=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setGenericRegionStats(<ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>genericRegionStats<sp/>=<sp/>stats;<sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRefinementRegionStats(<ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>refinementRegionStats<sp/>=<sp/>stats;<sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*getGenericRegionStats()</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>genericRegionStats;<sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*getRefinementRegionStats()</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>refinementRegionStats;<sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>Guint<sp/>size;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**bitmaps;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*genericRegionStats;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*refinementRegionStats;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal">JBIG2SymbolDict::JBIG2SymbolDict(Guint<sp/>segNumA,<sp/>Guint<sp/>sizeA):</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>(segNumA)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>size<sp/>=<sp/>sizeA;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>bitmaps<sp/>=<sp/>(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**)gmallocn_checkoverflow(size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*));</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmaps)<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmaps[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>genericRegionStats<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>refinementRegionStats<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal">JBIG2SymbolDict::~JBIG2SymbolDict()<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmaps[i];</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>gfree(bitmaps);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(genericRegionStats)<sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>genericRegionStats;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refinementRegionStats)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>refinementRegionStats;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2PatternDict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="class_j_b_i_g2_pattern_dict" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_b_i_g2_pattern_dict" kindref="compound">JBIG2PatternDict</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_pattern_dict" kindref="compound">JBIG2PatternDict</ref>(Guint<sp/>segNumA,<sp/>Guint<sp/>sizeA);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_j_b_i_g2_pattern_dict" kindref="compound">JBIG2PatternDict</ref>();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>JBIG2SegmentType<sp/>getType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jbig2SegPatternDict;<sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>Guint<sp/>getSize()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBitmap(Guint<sp/>idx,<sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(idx<sp/>&lt;<sp/>size))<sp/>bitmaps[idx]<sp/>=<sp/>bitmap;<sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*getBitmap(Guint<sp/>idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>size)<sp/>?<sp/>bitmaps[idx]<sp/>:<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>Guint<sp/>size;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**bitmaps;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal">JBIG2PatternDict::JBIG2PatternDict(Guint<sp/>segNumA,<sp/>Guint<sp/>sizeA):</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>(segNumA)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>bitmaps<sp/>=<sp/>(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**)gmallocn_checkoverflow(sizeA,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*));</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmaps)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>sizeA;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;JBIG2PatternDict:<sp/>can&apos;t<sp/>allocate<sp/>bitmaps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal">JBIG2PatternDict::~JBIG2PatternDict()<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmaps[i];</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>gfree(bitmaps);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2CodeTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145" refid="class_j_b_i_g2_code_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref>(Guint<sp/>segNumA,<sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*tableA);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref>();</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>JBIG2SegmentType<sp/>getType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jbig2SegCodeTable;<sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*getHuffTable()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;<sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*table;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal">JBIG2CodeTable::JBIG2CodeTable(Guint<sp/>segNumA,<sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*tableA):</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>(segNumA)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>table<sp/>=<sp/>tableA;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal">JBIG2CodeTable::~JBIG2CodeTable()<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>gfree(table);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JBIG2Stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal">JBIG2Stream::JBIG2Stream(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*globalsStreamA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*globalsStreamRefA):</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref>(strA)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>pageBitmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>arithDecoder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder" kindref="compound">JArithmeticDecoder</ref>();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>genericRegionStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>refinementRegionStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>iadhStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>iadwStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>iaexStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>iaaiStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>iadtStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>iaitStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>iafsStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>iadsStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>iardxStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>iardyStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>iardwStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>iardhStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>iariStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>iaidStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>huffDecoder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_huffman_decoder" kindref="compound">JBIG2HuffmanDecoder</ref>();</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>mmrDecoder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_m_m_r_decoder" kindref="compound">JBIG2MMRDecoder</ref>();</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalsStreamA-&gt;isStream())<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>globalsStreamA-&gt;copy(&amp;globalsStream);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalsStreamRefA-&gt;isRef())</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalsStreamRef<sp/>=<sp/>globalsStreamRefA-&gt;getRef();</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>segments<sp/>=<sp/>globalSegments<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>curStr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>dataPtr<sp/>=<sp/>dataEnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal">JBIG2Stream::~JBIG2Stream()<sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>close();</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>globalsStream.free();</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arithDecoder;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>genericRegionStats;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>refinementRegionStats;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iadhStats;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iadwStats;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iaexStats;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iaaiStats;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iadtStats;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iaitStats;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iafsStats;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iadsStats;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iardxStats;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iardyStats;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iardwStats;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iardhStats;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iariStats;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iaidStats;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>huffDecoder;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mmrDecoder;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::reset()<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>globals<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>globalSegments<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref>();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalsStream.isStream())<sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>segments<sp/>=<sp/>globalSegments;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>curStr<sp/>=<sp/>globalsStream.getStream();</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>curStr-&gt;reset();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;setStream(curStr);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDecoder-&gt;setStream(curStr);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>mmrDecoder-&gt;setStream(curStr);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>readSegments();</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>curStr-&gt;close();</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>main<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>segments<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref>();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>curStr<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>curStr-&gt;reset();</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>arithDecoder-&gt;setStream(curStr);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>huffDecoder-&gt;setStream(curStr);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>mmrDecoder-&gt;setStream(curStr);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>readSegments();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageBitmap)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>pageBitmap-&gt;getDataPtr();</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>dataEnd<sp/>=<sp/>dataPtr<sp/>+<sp/>pageBitmap-&gt;getDataSize();</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>dataEnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::close()<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageBitmap)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pageBitmap;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>pageBitmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segments)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteGooList(segments,<sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>segments<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalSegments)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteGooList(globalSegments,<sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>globalSegments<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>dataPtr<sp/>=<sp/>dataEnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>FilterStream::close();</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JBIG2Stream::getChar()<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataPtr<sp/>&amp;&amp;<sp/>dataPtr<sp/>&lt;<sp/>dataEnd)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*dataPtr++<sp/>^<sp/>0xff)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JBIG2Stream::lookChar()<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataPtr<sp/>&amp;&amp;<sp/>dataPtr<sp/>&lt;<sp/>dataEnd)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*dataPtr<sp/>^<sp/>0xff)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal">Goffset<sp/>JBIG2Stream::getPos()<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageBitmap<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataPtr<sp/>-<sp/>pageBitmap-&gt;getDataPtr();</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JBIG2Stream::getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer)<sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>i;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nChars<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataEnd<sp/>-<sp/>dataPtr<sp/>&lt;<sp/>nChars)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(int)(dataEnd<sp/>-<sp/>dataPtr);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>nChars;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>*dataPtr++<sp/>^<sp/>0xff;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*JBIG2Stream::getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal">GBool<sp/>JBIG2Stream::isBinary(GBool<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;isBinary(gTrue);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readSegments()<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>Guint<sp/>segNum,<sp/>segFlags,<sp/>segType,<sp/>page,<sp/>segLength;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>Guint<sp/>refFlags,<sp/>nRefSegs;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>Guint<sp/>*refSegs;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>Goffset<sp/>segDataPos;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/>c2,<sp/>c3;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(readULong(&amp;segNum))<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>header<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;segFlags))<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError1;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>segType<sp/>=<sp/>segFlags<sp/>&amp;<sp/>0x3f;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referred-to<sp/>segment<sp/>count<sp/>and<sp/>retention<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;refFlags))<sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError1;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>nRefSegs<sp/>=<sp/>refFlags<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRefSegs<sp/>==<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c1<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c2<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c3<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError1;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refFlags<sp/>=<sp/>(refFlags<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(c1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(c2<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>c3;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nRefSegs<sp/>=<sp/>refFlags<sp/>&amp;<sp/>0x1fffffff;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(nRefSegs<sp/>+<sp/>9)<sp/>&gt;&gt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c1<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError1;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referred-to<sp/>segment<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>refSegs<sp/>=<sp/>(Guint<sp/>*)gmallocn(nRefSegs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guint));</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segNum<sp/>&lt;=<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nRefSegs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;refSegs[i]))<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError2;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segNum<sp/>&lt;=<sp/>65536)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nRefSegs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUWord(&amp;refSegs[i]))<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError2;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nRefSegs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;refSegs[i]))<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError2;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>page<sp/>association</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segFlags<sp/>&amp;<sp/>0x40)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;page))<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError2;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;page))<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError2;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>data<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;segLength))<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError2;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>start<sp/>of<sp/>the<sp/>segment<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>segDataPos<sp/>=<sp/>curStr-&gt;getPos();</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>missing<sp/>page<sp/>information<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pageBitmap<sp/>&amp;&amp;<sp/>((segType<sp/>&gt;=<sp/>4<sp/>&amp;&amp;<sp/>segType<sp/>&lt;=<sp/>7)<sp/>||</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(segType<sp/>&gt;=<sp/>20<sp/>&amp;&amp;<sp/>segType<sp/>&lt;=<sp/>43)))<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;First<sp/>JBIG2<sp/>segment<sp/>associated<sp/>with<sp/>a<sp/>page<sp/>must<sp/>be<sp/>a<sp/>page<sp/>information<sp/>segment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>segment<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(segType)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readSymbolDictSeg(segNum,<sp/>segLength,<sp/>refSegs,<sp/>nRefSegs))<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readTextRegionSeg(segNum,<sp/>gFalse,<sp/>gFalse,<sp/>segLength,<sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readTextRegionSeg(segNum,<sp/>gTrue,<sp/>gFalse,<sp/>segLength,<sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readTextRegionSeg(segNum,<sp/>gTrue,<sp/>gTrue,<sp/>segLength,<sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readPatternDictSeg(segNum,<sp/>segLength);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>20:</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readHalftoneRegionSeg(segNum,<sp/>gFalse,<sp/>gFalse,<sp/>segLength,</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>22:</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readHalftoneRegionSeg(segNum,<sp/>gTrue,<sp/>gFalse,<sp/>segLength,</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>23:</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readHalftoneRegionSeg(segNum,<sp/>gTrue,<sp/>gTrue,<sp/>segLength,</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>36:</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRegionSeg(segNum,<sp/>gFalse,<sp/>gFalse,<sp/>segLength);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>38:</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRegionSeg(segNum,<sp/>gTrue,<sp/>gFalse,<sp/>segLength);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>39:</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRegionSeg(segNum,<sp/>gTrue,<sp/>gTrue,<sp/>segLength);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>40:</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRefinementRegionSeg(segNum,<sp/>gFalse,<sp/>gFalse,<sp/>segLength,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>42:</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRefinementRegionSeg(segNum,<sp/>gTrue,<sp/>gFalse,<sp/>segLength,</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>43:</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRefinementRegionSeg(segNum,<sp/>gTrue,<sp/>gTrue,<sp/>segLength,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refSegs,<sp/>nRefSegs);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>48:</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readPageInfoSeg(segLength);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>50:</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readEndOfStripeSeg(segLength);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>52:</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readProfilesSeg(segLength);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>53:</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readCodeTableSeg(segNum,<sp/>segLength);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>62:</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readExtensionSeg(segLength);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>segment<sp/>type<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>segLength;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c1<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError2;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>segment<sp/>handler<sp/>read<sp/>all<sp/>of<sp/>the<sp/>bytes<sp/>in<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>data,<sp/>unless<sp/>this<sp/>segment<sp/>is<sp/>marked<sp/>as<sp/>having<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unknown<sp/>length<sp/>(section<sp/>7.2.7<sp/>of<sp/>the<sp/>JBIG2<sp/>Final<sp/>Committee<sp/>Draft)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segLength<sp/>!=<sp/>0xffffffff)<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>segExtraBytes<sp/>=<sp/>segDataPos<sp/>+<sp/>segLength<sp/>-<sp/>curStr-&gt;getPos();</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segExtraBytes<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>read<sp/>all<sp/>of<sp/>the<sp/>bytes<sp/>in<sp/>the<sp/>segment<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indicate<sp/>an<sp/>error,<sp/>and<sp/>throw<sp/>away<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>v.3.1.01.13<sp/>of<sp/>the<sp/>LuraTech<sp/>PDF<sp/>Compressor<sp/>Server<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sometimes<sp/>generate<sp/>an<sp/>extraneous<sp/>NULL<sp/>byte<sp/>at<sp/>the<sp/>end<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arithmetic-coded<sp/>symbol<sp/>dictionary<sp/>segments<sp/>when<sp/>numNewSyms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>0.<sp/><sp/>Segments<sp/>like<sp/>this<sp/>often<sp/>occur<sp/>for<sp/>blank<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;{0:lld}<sp/>extraneous<sp/>byte{1:s}<sp/>after<sp/>segment&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segExtraBytes,<sp/>(segExtraBytes<sp/>&gt;<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Burn<sp/>through<sp/>the<sp/>remaining<sp/>bytes<sp/>--<sp/>inefficient,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hopefully<sp/>we&apos;re<sp/>not<sp/>doing<sp/>this<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trash;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Goffset<sp/>i<sp/>=<sp/>segExtraBytes;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readByte(&amp;trash);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segExtraBytes<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>read<sp/>more<sp/>bytes<sp/>than<sp/>we<sp/>should<sp/>have,<sp/>according<sp/>to<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>length<sp/>field,<sp/>note<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Previous<sp/>segment<sp/>handler<sp/>read<sp/>too<sp/>many<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(refSegs);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/>syntaxError:</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>gfree(refSegs);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/>eofError2:</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>gfree(refSegs);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/>eofError1:</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal">GBool<sp/>JBIG2Stream::readSymbolDictSeg(Guint<sp/>segNum,<sp/>Guint<sp/>length,</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>*refSegs,<sp/>Guint<sp/>nRefSegs)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref><sp/>*symbolDict;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffDHTable,<sp/>*huffDWTable;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffBMSizeTable,<sp/>*huffAggInstTable;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*codeTables;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref><sp/>*inputSymbolDict;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>Guint<sp/>flags,<sp/>sdTemplate,<sp/>sdrTemplate,<sp/>huff,<sp/>refAgg;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/>Guint<sp/>huffDH,<sp/>huffDW,<sp/>huffBMSize,<sp/>huffAggInst;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>Guint<sp/>contextUsed,<sp/>contextRetained;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sdATX[4],<sp/>sdATY[4],<sp/>sdrATX[2],<sp/>sdrATY[2];</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/>Guint<sp/>numExSyms,<sp/>numNewSyms,<sp/>numInputSyms,<sp/>symCodeLen;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**bitmaps;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*collBitmap,<sp/>*refBitmap;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/>Guint<sp/>*symWidths;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>Guint<sp/>symHeight,<sp/>symWidth,<sp/>totalWidth,<sp/>x,<sp/>symID;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dh,<sp/>dw,<sp/>refAggNum,<sp/>refDX,<sp/>refDY,<sp/>bmSize;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>GBool<sp/>ex;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run,<sp/>cnt,<sp/>c;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/>Guint<sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>Guchar<sp/>*p;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>symWidths<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>dictionary<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUWord(&amp;flags))<sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/>sdTemplate<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>10)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>sdrTemplate<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/>huff<sp/>=<sp/>flags<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>refAgg<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>huffDH<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>huffDW<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>huffBMSize<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>huffAggInst<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>7)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>contextUsed<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>contextRetained<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>9)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>dictionary<sp/>AT<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!huff)<sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdTemplate<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readByte(&amp;sdATX[0])<sp/>||</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATY[0])<sp/>||</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATX[1])<sp/>||</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATY[1])<sp/>||</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATX[2])<sp/>||</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATY[2])<sp/>||</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATX[3])<sp/>||</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATY[3]))<sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readByte(&amp;sdATX[0])<sp/>||</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;sdATY[0]))<sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>dictionary<sp/>refinement<sp/>AT<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refAgg<sp/>&amp;&amp;<sp/>!sdrTemplate)<sp/>{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readByte(&amp;sdrATX[0])<sp/>||</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>!readByte(&amp;sdrATY[0])<sp/>||</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>!readByte(&amp;sdrATX[1])<sp/>||</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>!readByte(&amp;sdrATY[1]))<sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SDNUMEXSYMS<sp/>and<sp/>SDNUMNEWSYMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;numExSyms)<sp/>||<sp/>!readULong(&amp;numNewSyms))<sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>referenced<sp/>segments:<sp/>input<sp/>symbol<sp/>dictionaries<sp/>and<sp/>code<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>codeTables<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref>();</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>numInputSyms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nRefSegs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>need<sp/>by<sp/>bug<sp/>12014,<sp/>returning<sp/>gFalse<sp/>makes<sp/>it<sp/>not<sp/>crash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>end<sp/>up<sp/>with<sp/>a<sp/>empty<sp/>page<sp/>while<sp/>acroread<sp/>is<sp/>able<sp/>to<sp/>render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((seg<sp/>=<sp/>findSegment(refSegs[i])))<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getType()<sp/>==<sp/>jbig2SegSymbolDict)<sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>((<ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref><sp/>*)seg)-&gt;getSize();</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numInputSyms<sp/>&gt;<sp/>UINT_MAX<sp/>-<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>input<sp/>symbols<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>numInputSyms<sp/>+=<sp/>j;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getType()<sp/>==<sp/>jbig2SegCodeTable)<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codeTables-&gt;append(seg);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numInputSyms<sp/>&gt;<sp/>UINT_MAX<sp/>-<sp/>numNewSyms)<sp/>{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>input<sp/>symbols<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>symbol<sp/>code<sp/>length,<sp/>per<sp/>6.5.8.2.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>symCodeLen<sp/>=<sp/>ceil(<sp/>log2(<sp/>numInputSyms<sp/>+<sp/>numNewSyms<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>numInputSyms<sp/>+<sp/>numNewSyms;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeLen<sp/>=<sp/>huff<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i<sp/>=<sp/>floor((numSyms-1)<sp/>/<sp/>2^symCodeLen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++symCodeLen;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>input<sp/>symbol<sp/>bitmaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>bitmaps<sp/>=<sp/>(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**)gmallocn_checkoverflow(numInputSyms<sp/>+<sp/>numNewSyms,</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*));</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmaps<sp/>&amp;&amp;<sp/>(numInputSyms<sp/>+<sp/>numNewSyms<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>input<sp/>symbols<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numInputSyms<sp/>+<sp/>numNewSyms;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmaps[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>inputSymbolDict<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nRefSegs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>findSegment(refSegs[i]);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>seg-&gt;getType()<sp/>==<sp/>jbig2SegSymbolDict)<sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputSymbolDict<sp/>=<sp/>(<ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>inputSymbolDict-&gt;getSize();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmaps[k++]<sp/>=<sp/>inputSymbolDict-&gt;getBitmap(j);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>Huffman<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>huffDHTable<sp/>=<sp/>huffDWTable<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/>huffBMSizeTable<sp/>=<sp/>huffAggInstTable<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDH<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDHTable<sp/>=<sp/>huffTableD;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDH<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDHTable<sp/>=<sp/>huffTableE;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDHTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDW<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDWTable<sp/>=<sp/>huffTableB;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDW<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDWTable<sp/>=<sp/>huffTableC;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDWTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffBMSize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffBMSizeTable<sp/>=<sp/>huffTableA;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffBMSizeTable<sp/>=</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffAggInst<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffAggInstTable<sp/>=<sp/>huffTableA;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffAggInstTable<sp/>=</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>Huffman<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>arithmetic<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contextUsed<sp/>&amp;&amp;<sp/>inputSymbolDict)<sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetGenericStats(sdTemplate,<sp/>inputSymbolDict-&gt;getGenericRegionStats());</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetGenericStats(sdTemplate,<sp/>NULL);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>resetIntStats(symCodeLen);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>arithmetic<sp/>decoder<sp/>for<sp/>refinement/aggregation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refAgg)<sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contextUsed<sp/>&amp;&amp;<sp/>inputSymbolDict)<sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetRefinementStats(sdrTemplate,</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputSymbolDict-&gt;getRefinementRegionStats());</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetRefinementStats(sdrTemplate,<sp/>NULL);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>symbol<sp/>widths<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff<sp/>&amp;&amp;<sp/>!refAgg)<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>symWidths<sp/>=<sp/>(Guint<sp/>*)gmallocn(numNewSyms,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guint));</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/>symHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>numNewSyms)<sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>height<sp/>class<sp/>delta<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;dh,<sp/>huffDHTable);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;dh,<sp/>iadhStats);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dh<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>(Guint)-dh<sp/>&gt;=<sp/>symHeight)<sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>delta-height<sp/>value<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>symHeight<sp/>+=<sp/>dh;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(symHeight<sp/>&gt;<sp/>0x40000000))<sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>height<sp/>value<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>symWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>totalWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>symbols<sp/>in<sp/>this<sp/>height<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>delta<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!huffDecoder-&gt;decodeInt(&amp;dw,<sp/>huffDWTable))<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arithDecoder-&gt;decodeInt(&amp;dw,<sp/>iadwStats))<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dw<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>(Guint)-dw<sp/>&gt;=<sp/>symWidth)<sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>delta-height<sp/>value<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symWidth<sp/>+=<sp/>dw;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>numNewSyms)<sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>symbols<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>a<sp/>collective<sp/>bitmap,<sp/>so<sp/>don&apos;t<sp/>read<sp/>a<sp/>bitmap<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff<sp/>&amp;&amp;<sp/>!refAgg)<sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>symWidths[i]<sp/>=<sp/>symWidth;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>totalWidth<sp/>+=<sp/>symWidth;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refinement/aggregate<sp/>coding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refAgg)<sp/>{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!huffDecoder-&gt;decodeInt(&amp;refAggNum,<sp/>huffAggInstTable))<sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arithDecoder-&gt;decodeInt(&amp;refAggNum,<sp/>iaaiStats))<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/>//~<sp/>This<sp/>special<sp/>case<sp/>was<sp/>added<sp/>about<sp/>a<sp/>year<sp/>before<sp/>the<sp/>final<sp/>draft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~<sp/>of<sp/>the<sp/>JBIG2<sp/>spec<sp/>was<sp/>released.<sp/><sp/>I<sp/>have<sp/>encountered<sp/>some<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~<sp/>JBIG2<sp/>images<sp/>that<sp/>predate<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0)<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refAggNum<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symID<sp/>=<sp/>huffDecoder-&gt;readBits(symCodeLen);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;refDX,<sp/>huffTableO);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;refDY,<sp/>huffTableO);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;bmSize,<sp/>huffTableA);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symID<sp/>=<sp/>arithDecoder-&gt;decodeIAID(symCodeLen,<sp/>iaidStats);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;refDX,<sp/>iardxStats);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;refDY,<sp/>iardyStats);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symID<sp/>&gt;=<sp/>numInputSyms<sp/>+<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>symbol<sp/>ID<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap<sp/>=<sp/>bitmaps[symID];</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(refBitmap<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>ref<sp/>bitmap<sp/>for<sp/>symbol<sp/>ID<sp/>{0:ud}<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">,<sp/>symID);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmaps[numInputSyms<sp/>+<sp/>i]<sp/>=</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRefinementRegion(symWidth,<sp/>symHeight,</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdrTemplate,<sp/>gFalse,</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap,<sp/>refDX,<sp/>refDY,</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdrATX,<sp/>sdrATY);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~<sp/>do<sp/>we<sp/>need<sp/>to<sp/>use<sp/>the<sp/>bmSize<sp/>value<sp/>here<sp/>(in<sp/>Huffman<sp/>mode)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmaps[numInputSyms<sp/>+<sp/>i]<sp/>=</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readTextRegion(huff,<sp/>gTrue,<sp/>symWidth,<sp/>symHeight,</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refAggNum,<sp/>0,<sp/>numInputSyms<sp/>+<sp/>i,<sp/>NULL,</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symCodeLen,<sp/>bitmaps,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffTableF,<sp/>huffTableH,<sp/>huffTableK,<sp/>huffTableO,</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffTableO,<sp/>huffTableO,<sp/>huffTableO,<sp/>huffTableA,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdrTemplate,<sp/>sdrATX,<sp/>sdrATY);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-ref/agg<sp/>coding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmaps[numInputSyms<sp/>+<sp/>i]<sp/>=</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readGenericBitmap(gFalse,<sp/>symWidth,<sp/>symHeight,</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdTemplate,<sp/>gFalse,<sp/>gFalse,<sp/>NULL,</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdATX,<sp/>sdATY,<sp/>0);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>collective<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff<sp/>&amp;&amp;<sp/>!refAgg)<sp/>{</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;bmSize,<sp/>huffBMSizeTable);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bmSize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>collBitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/>totalWidth,<sp/>symHeight);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>bmSize<sp/>=<sp/>symHeight<sp/>*<sp/>((totalWidth<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>collBitmap-&gt;getDataPtr();</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(p<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>collBitmap;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>(Guint)bmSize;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>(Guchar)c;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>collBitmap<sp/>=<sp/>readGenericBitmap(gTrue,<sp/>totalWidth,<sp/>symHeight,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>gFalse,<sp/>gFalse,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmSize);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(collBitmap<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/>i;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmaps[numInputSyms<sp/>+<sp/>j]<sp/>=</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collBitmap-&gt;getSlice(x,<sp/>0,<sp/>symWidths[j],<sp/>symHeight);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>symWidths[j];</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>collBitmap;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;collBitmap<sp/>was<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>symbol<sp/>dict<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/>symbolDict<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref>(segNum,<sp/>numExSyms);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!symbolDict-&gt;isOk())<sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolDict;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>exported<sp/>symbol<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/>ex<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>numInputSyms<sp/>+<sp/>numNewSyms)<sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;run,<sp/>huffTableA);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;run,<sp/>iaexStats);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>run<sp/>&gt;<sp/>numInputSyms<sp/>+<sp/>numNewSyms<sp/>||</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>(ex<sp/>&amp;&amp;<sp/>j<sp/>+<sp/>run<sp/>&gt;<sp/>numExSyms))<sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>exported<sp/>symbols<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>j<sp/>&lt;<sp/>numExSyms;<sp/>++j)<sp/>symbolDict-&gt;setBitmap(j,<sp/>NULL);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolDict;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex)<sp/>{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cnt<sp/>=<sp/>0;<sp/>cnt<sp/>&lt;<sp/>run;<sp/>++cnt)<sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>symbolDict-&gt;setBitmap(j++,<sp/>bitmaps[i++]-&gt;copy());</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>run;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>ex<sp/>=<sp/>!ex;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>numExSyms)<sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>few<sp/>symbols<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>j<sp/>&lt;<sp/>numExSyms;<sp/>++j)<sp/>symbolDict-&gt;setBitmap(j,<sp/>NULL);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolDict;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>syntaxError;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numNewSyms;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmaps[numInputSyms<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/>gfree(bitmaps);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symWidths)<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(symWidths);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>arithmetic<sp/>decoder<sp/>stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!huff<sp/>&amp;&amp;<sp/>contextRetained)<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>symbolDict-&gt;setGenericRegionStats(genericRegionStats-&gt;copy());</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refAgg)<sp/>{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbolDict-&gt;setRefinementRegionStats(refinementRegionStats-&gt;copy());</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>new<sp/>symbol<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/>segments-&gt;append(symbolDict);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/>codeTableError:</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>code<sp/>table<sp/>in<sp/>JBIG2<sp/>symbol<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/>syntaxError:</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numNewSyms;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmaps[numInputSyms<sp/>+<sp/>i])<sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmaps[numInputSyms<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/>gfree(bitmaps);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symWidths)<sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(symWidths);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readTextRegionSeg(Guint<sp/>segNum,<sp/>GBool<sp/>imm,</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>lossless,<sp/>Guint<sp/>length,</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>*refSegs,<sp/>Guint<sp/>nRefSegs)<sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>runLengthTab[36];</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*symCodeTab;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffFSTable,<sp/>*huffDSTable,<sp/>*huffDTTable;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffRDWTable,<sp/>*huffRDHTable;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffRDXTable,<sp/>*huffRDYTable,<sp/>*huffRSizeTable;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*codeTables;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref><sp/>*symbolDict;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**syms;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/>Guint<sp/>w,<sp/>h,<sp/>x,<sp/>y,<sp/>segInfoFlags,<sp/>extCombOp;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/>Guint<sp/>flags,<sp/>huff,<sp/>refine,<sp/>logStrips,<sp/>refCorner,<sp/>transposed;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>Guint<sp/>combOp,<sp/>defPixel,<sp/>templ;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sOffset;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/>Guint<sp/>huffFlags,<sp/>huffFS,<sp/>huffDS,<sp/>huffDT;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>Guint<sp/>huffRDW,<sp/>huffRDH,<sp/>huffRDX,<sp/>huffRDY,<sp/>huffRSize;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>Guint<sp/>numInstances,<sp/>numSyms,<sp/>symCodeLen;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atx[2],<sp/>aty[2];</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>Guint<sp/>i,<sp/>k,<sp/>kk;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>region<sp/>segment<sp/>info<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;w)<sp/>||<sp/>!readULong(&amp;h)<sp/>||</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readULong(&amp;x)<sp/>||<sp/>!readULong(&amp;y)<sp/>||</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUByte(&amp;segInfoFlags))<sp/>{</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>extCombOp<sp/>=<sp/>segInfoFlags<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rest<sp/>of<sp/>the<sp/>text<sp/>region<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUWord(&amp;flags))<sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>huff<sp/>=<sp/>flags<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>refine<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>logStrips<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/>refCorner<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>transposed<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>combOp<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>7)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/>defPixel<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>9)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>sOffset<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>10)<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sOffset<sp/>&amp;<sp/>0x10)<sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>sOffset<sp/>|=<sp/>-1<sp/>-<sp/>0x0f;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>templ<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>15)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>huffFS<sp/>=<sp/>huffDS<sp/>=<sp/>huffDT<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>huffRDW<sp/>=<sp/>huffRDH<sp/>=<sp/>huffRDX<sp/>=<sp/>huffRDY<sp/>=<sp/>huffRSize<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUWord(&amp;huffFlags))<sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>huffFS<sp/>=<sp/>huffFlags<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDS<sp/>=<sp/>(huffFlags<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDT<sp/>=<sp/>(huffFlags<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>huffRDW<sp/>=<sp/>(huffFlags<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>huffRDH<sp/>=<sp/>(huffFlags<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>huffRDX<sp/>=<sp/>(huffFlags<sp/>&gt;&gt;<sp/>10)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>huffRDY<sp/>=<sp/>(huffFlags<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>huffRSize<sp/>=<sp/>(huffFlags<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refine<sp/>&amp;&amp;<sp/>templ<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readByte(&amp;atx[0])<sp/>||<sp/>!readByte(&amp;aty[0])<sp/>||</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>!readByte(&amp;atx[1])<sp/>||<sp/>!readByte(&amp;aty[1]))<sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;numInstances))<sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>symbol<sp/>dictionaries<sp/>and<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/>codeTables<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref>();</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/>numSyms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nRefSegs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((seg<sp/>=<sp/>findSegment(refSegs[i])))<sp/>{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getType()<sp/>==<sp/>jbig2SegSymbolDict)<sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>numSyms<sp/>+=<sp/>((<ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref><sp/>*)seg)-&gt;getSize();</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getType()<sp/>==<sp/>jbig2SegCodeTable)<sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>codeTables-&gt;append(seg);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>segment<sp/>reference<sp/>in<sp/>JBIG2<sp/>text<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>numSyms;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeLen<sp/>=<sp/>huff<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i<sp/>=<sp/>floor((numSyms-1)<sp/>/<sp/>2^symCodeLen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++symCodeLen;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>symbol<sp/>bitmaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/>syms<sp/>=<sp/>(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**)gmallocn(numSyms,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*));</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>kk<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nRefSegs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((seg<sp/>=<sp/>findSegment(refSegs[i])))<sp/>{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getType()<sp/>==<sp/>jbig2SegSymbolDict)<sp/>{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>symbolDict<sp/>=<sp/>(<ref refid="class_j_b_i_g2_symbol_dict" kindref="compound">JBIG2SymbolDict</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>symbolDict-&gt;getSize();<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>syms[kk++]<sp/>=<sp/>symbolDict-&gt;getBitmap(k);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>Huffman<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>huffFSTable<sp/>=<sp/>huffDSTable<sp/>=<sp/>huffDTTable<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>huffRDWTable<sp/>=<sp/>huffRDHTable<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>huffRDXTable<sp/>=<sp/>huffRDYTable<sp/>=<sp/>huffRSizeTable<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffFS<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffFSTable<sp/>=<sp/>huffTableF;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffFS<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffFSTable<sp/>=<sp/>huffTableG;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffFSTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDS<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDSTable<sp/>=<sp/>huffTableH;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDS<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDSTable<sp/>=<sp/>huffTableI;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDS<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDSTable<sp/>=<sp/>huffTableJ;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDSTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDT<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDTTable<sp/>=<sp/>huffTableK;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDT<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDTTable<sp/>=<sp/>huffTableL;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffDT<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDTTable<sp/>=<sp/>huffTableM;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDTTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDW<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDWTable<sp/>=<sp/>huffTableN;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDW<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDWTable<sp/>=<sp/>huffTableO;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDWTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDH<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDHTable<sp/>=<sp/>huffTableN;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDH<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDHTable<sp/>=<sp/>huffTableO;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDHTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDX<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDXTable<sp/>=<sp/>huffTableN;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDX<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDXTable<sp/>=<sp/>huffTableO;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDXTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDY<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDYTable<sp/>=<sp/>huffTableN;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRDY<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDYTable<sp/>=<sp/>huffTableO;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRDYTable<sp/>=<sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huffRSize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRSizeTable<sp/>=<sp/>huffTableA;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(Guint)codeTables-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>codeTableError;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffRSizeTable<sp/>=</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref><sp/>*)codeTables-&gt;get(i++))-&gt;getHuffTable();</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>ID<sp/>Huffman<sp/>decoding<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>runLengthTab[i].val<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>runLengthTab[i].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(4);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>runLengthTab[i].rangeLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[32].val<sp/>=<sp/>0x103;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[32].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(4);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[32].rangeLen<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[33].val<sp/>=<sp/>0x203;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[33].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(4);</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[33].rangeLen<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[34].val<sp/>=<sp/>0x20b;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[34].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(4);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[34].rangeLen<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[35].prefixLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>runLengthTab[35].rangeLen<sp/>=<sp/>jbig2HuffmanEOT;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDecoder-&gt;buildTable(runLengthTab,<sp/>35);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeTab<sp/>=<sp/>(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*)gmallocn(numSyms<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref>));</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numSyms;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symCodeTab[i].val<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symCodeTab[i].rangeLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>numSyms)<sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;j,<sp/>runLengthTab);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>0x200)<sp/>{</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>-=<sp/>0x200;<sp/>j<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>numSyms;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symCodeTab[i++].prefixLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>0x100)<sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(i<sp/>==<sp/>0))<sp/>++i;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>-=<sp/>0x100;<sp/>j<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>numSyms;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symCodeTab[i].prefixLen<sp/>=<sp/>symCodeTab[i-1].prefixLen;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeTab[i++].prefixLen<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeTab[numSyms].prefixLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeTab[numSyms].rangeLen<sp/>=<sp/>jbig2HuffmanEOT;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDecoder-&gt;buildTable(symCodeTab,<sp/>numSyms);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>arithmetic<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/>symCodeTab<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>resetIntStats(symCodeLen);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refine)<sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>resetRefinementStats(templ,<sp/>NULL);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/>readTextRegion(huff,<sp/>refine,<sp/>w,<sp/>h,<sp/>numInstances,</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logStrips,<sp/>numSyms,<sp/>symCodeTab,<sp/>symCodeLen,<sp/>syms,</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defPixel,<sp/>combOp,<sp/>transposed,<sp/>refCorner,<sp/>sOffset,</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffFSTable,<sp/>huffDSTable,<sp/>huffDTTable,</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffRDWTable,<sp/>huffRDHTable,</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffRDXTable,<sp/>huffRDYTable,<sp/>huffRSizeTable,</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templ,<sp/>atx,<sp/>aty);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/>gfree(syms);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap)<sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>combine<sp/>the<sp/>region<sp/>bitmap<sp/>into<sp/>the<sp/>page<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm)<sp/>{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageH<sp/>==<sp/>0xffffffff<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>h<sp/>&gt;<sp/>curPageH)<sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pageBitmap-&gt;expand(y<sp/>+<sp/>h,<sp/>pageDefPixel);</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pageBitmap-&gt;combine(bitmap,<sp/>x,<sp/>y,<sp/>extCombOp);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>region<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;setSegNum(segNum);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segments-&gt;append(bitmap);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up<sp/>the<sp/>Huffman<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(symCodeTab);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/>codeTableError:</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>code<sp/>table<sp/>in<sp/>JBIG2<sp/>text<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>codeTables;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/>gfree(syms);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*JBIG2Stream::readTextRegion(GBool<sp/>huff,<sp/>GBool<sp/>refine,</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>numInstances,</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>logStrips,</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSyms,</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*symCodeTab,</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>symCodeLen,</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>**syms,</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>defPixel,<sp/>Guint<sp/>combOp,</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>transposed,<sp/>Guint<sp/>refCorner,</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sOffset,</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffFSTable,</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffDSTable,</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffDTTable,</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffRDWTable,</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffRDHTable,</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffRDXTable,</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffRDYTable,</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffRSizeTable,</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>templ,</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*atx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*aty)<sp/>{</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*symbolBitmap;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>Guint<sp/>strips;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t,<sp/>dt,<sp/>tt,<sp/>s,<sp/>ds,<sp/>sFirst,<sp/>j;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rdw,<sp/>rdh,<sp/>rdx,<sp/>rdy,<sp/>ri,<sp/>refDX,<sp/>refDY,<sp/>bmSize;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/>Guint<sp/>symID,<sp/>inst,<sp/>bw,<sp/>bh;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/>strips<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>logStrips;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmap-&gt;isOk())<sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defPixel)<sp/>{</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;clearToOne();</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;clearToZero();</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>initial<sp/>T<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;t,<sp/>huffDTTable);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;t,<sp/>iadtStats);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/>t<sp/>*=<sp/>-(int)strips;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/>inst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/>sFirst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(inst<sp/>&lt;<sp/>numInstances)<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>delta-T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;dt,<sp/>huffDTTable);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;dt,<sp/>iadtStats);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dt<sp/>*<sp/>strips;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>S<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;ds,<sp/>huffFSTable);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;ds,<sp/>iafsStats);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>sFirst<sp/>+=<sp/>ds;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sFirst;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>loop<sp/>test<sp/>is<sp/>here<sp/>to<sp/>avoid<sp/>an<sp/>infinite<sp/>loop<sp/>with<sp/>damaged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JBIG2<sp/>streams<sp/>where<sp/>the<sp/>normal<sp/>loop<sp/>exit<sp/>doesn&apos;t<sp/>get<sp/>triggered)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(inst<sp/>&lt;<sp/>numInstances)<sp/>{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strips<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>huffDecoder-&gt;readBits(logStrips);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;dt,<sp/>iaitStats);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tt<sp/>=<sp/>t<sp/>+<sp/>dt;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symCodeTab)<sp/>{</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;decodeInt(&amp;j,<sp/>symCodeTab);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symID<sp/>=<sp/>(Guint)j;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symID<sp/>=<sp/>huffDecoder-&gt;readBits(symCodeLen);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/>symID<sp/>=<sp/>arithDecoder-&gt;decodeIAID(symCodeLen,<sp/>iaidStats);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symID<sp/>&gt;=<sp/>(Guint)numSyms)<sp/>{</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>symbol<sp/>number<sp/>in<sp/>JBIG2<sp/>text<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(numInstances<sp/>-<sp/>inst<sp/>&gt;<sp/>0x800))<sp/>{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>loop<sp/>too<sp/>often<sp/>with<sp/>damaged<sp/>JBIg2<sp/>streams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>symbol<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>symbolBitmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refine)<sp/>{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ri<sp/>=<sp/>(int)huffDecoder-&gt;readBit();</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;decodeInt(&amp;ri,<sp/>iariStats);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ri<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>decodeSuccess;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>huffDecoder-&gt;decodeInt(&amp;rdw,<sp/>huffRDWTable);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>decodeSuccess<sp/>&amp;&amp;<sp/>huffDecoder-&gt;decodeInt(&amp;rdh,<sp/>huffRDHTable);</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>decodeSuccess<sp/>&amp;&amp;<sp/>huffDecoder-&gt;decodeInt(&amp;rdx,<sp/>huffRDXTable);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>decodeSuccess<sp/>&amp;&amp;<sp/>huffDecoder-&gt;decodeInt(&amp;rdy,<sp/>huffRDYTable);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>decodeSuccess<sp/>&amp;&amp;<sp/>huffDecoder-&gt;decodeInt(&amp;bmSize,<sp/>huffRSizeTable);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huffDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>arithDecoder-&gt;decodeInt(&amp;rdw,<sp/>iardwStats);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>decodeSuccess<sp/>&amp;&amp;<sp/>arithDecoder-&gt;decodeInt(&amp;rdh,<sp/>iardhStats);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>decodeSuccess<sp/>&amp;&amp;<sp/>arithDecoder-&gt;decodeInt(&amp;rdx,<sp/>iardxStats);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeSuccess<sp/>=<sp/>decodeSuccess<sp/>&amp;&amp;<sp/>arithDecoder-&gt;decodeInt(&amp;rdy,<sp/>iardyStats);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decodeSuccess<sp/>&amp;&amp;<sp/>syms[symID])</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refDX<sp/>=<sp/>((rdw<sp/>&gt;=<sp/>0)<sp/>?<sp/>rdw<sp/>:<sp/>rdw<sp/>-<sp/>1)<sp/>/<sp/>2<sp/>+<sp/>rdx;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refDY<sp/>=<sp/>((rdh<sp/>&gt;=<sp/>0)<sp/>?<sp/>rdh<sp/>:<sp/>rdh<sp/>-<sp/>1)<sp/>/<sp/>2<sp/>+<sp/>rdy;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolBitmap<sp/>=</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readGenericRefinementRegion(rdw<sp/>+<sp/>syms[symID]-&gt;getWidth(),</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdh<sp/>+<sp/>syms[symID]-&gt;getHeight(),</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templ,<sp/>gFalse,<sp/>syms[symID],</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refDX,<sp/>refDY,<sp/>atx,<sp/>aty);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~<sp/>do<sp/>we<sp/>need<sp/>to<sp/>use<sp/>the<sp/>bmSize<sp/>value<sp/>here<sp/>(in<sp/>Huffman<sp/>mode)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbolBitmap<sp/>=<sp/>syms[symID];</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbolBitmap)<sp/>{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>combine<sp/>the<sp/>symbol<sp/>bitmap<sp/>into<sp/>the<sp/>region<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~<sp/>something<sp/>is<sp/>wrong<sp/>here<sp/>-<sp/>refCorner<sp/>shouldn&apos;t<sp/>degenerate<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~<sp/><sp/><sp/>two<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bw<sp/>=<sp/>symbolBitmap-&gt;getWidth()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(symbolBitmap-&gt;getHeight()<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>symbol<sp/>bitmap<sp/>height&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolBitmap;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bh<sp/>=<sp/>symbolBitmap-&gt;getHeight()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transposed)<sp/>{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(s<sp/>&gt;<sp/>2<sp/>*<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JBIG2<sp/>combine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolBitmap;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(refCorner)<sp/>{</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>tt,<sp/>s,<sp/>combOp);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>tt,<sp/>s,<sp/>combOp);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>tt<sp/>-<sp/>bw,<sp/>s,<sp/>combOp);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>tt<sp/>-<sp/>bw,<sp/>s,<sp/>combOp);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>bh;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(refCorner)<sp/>{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(tt<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>bh<sp/>&gt;<sp/>2<sp/>*<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JBIG2<sp/>combine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolBitmap;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>s,<sp/>tt<sp/>-<sp/>bh,<sp/>combOp);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(tt<sp/>&gt;<sp/>2<sp/>*<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JBIG2<sp/>combine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolBitmap;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>s,<sp/>tt,<sp/>combOp);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(tt<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>bh<sp/>&gt;<sp/>2<sp/>*<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JBIG2<sp/>combine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolBitmap;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>s,<sp/>tt<sp/>-<sp/>bh,<sp/>combOp);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(tt<sp/>&gt;<sp/>2<sp/>*<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JBIG2<sp/>combine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolBitmap;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;combine(symbolBitmap,<sp/>s,<sp/>tt,<sp/>combOp);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>bw;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri)<sp/>{</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>symbolBitmap;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>symbolBitmap<sp/>only<sp/>happens<sp/>on<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++inst;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>S<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huff)<sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!huffDecoder-&gt;decodeInt(&amp;ds,<sp/>huffDSTable))<sp/>{</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arithDecoder-&gt;decodeInt(&amp;ds,<sp/>iadsStats))<sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>sOffset<sp/>+<sp/>ds;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readPatternDictSeg(Guint<sp/>segNum,<sp/>Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_pattern_dict" kindref="compound">JBIG2PatternDict</ref><sp/>*patternDict;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/>Guint<sp/>flags,<sp/>patternW,<sp/>patternH,<sp/>grayMax,<sp/>templ,<sp/>mmr;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atx[4],<sp/>aty[4];</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/>Guint<sp/>i,<sp/>x;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>halftone<sp/>dictionary<sp/>flags,<sp/>pattern<sp/>width<sp/>and<sp/>height,<sp/>max<sp/>gray<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;flags)<sp/>||</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUByte(&amp;patternW)<sp/>||</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUByte(&amp;patternH)<sp/>||</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readULong(&amp;grayMax))<sp/>{</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/>templ<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/>mmr<sp/>=<sp/>flags<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>arithmetic<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mmr)<sp/>{</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/>resetGenericStats(templ,<sp/>NULL);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/>atx[0]<sp/>=<sp/>-(int)patternW;<sp/>aty[0]<sp/>=<sp/><sp/>0;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/>atx[1]<sp/>=<sp/>-3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aty[1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/>atx[2]<sp/>=<sp/><sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aty[2]<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>atx[3]<sp/>=<sp/>-2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aty[3]<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/>readGenericBitmap(mmr,<sp/>(grayMax<sp/>+<sp/>1)<sp/>*<sp/>patternW,<sp/>patternH,</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templ,<sp/>gFalse,<sp/>gFalse,<sp/>NULL,</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atx,<sp/>aty,<sp/>length<sp/>-<sp/>7);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmap)</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>pattern<sp/>dict<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>patternDict<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_pattern_dict" kindref="compound">JBIG2PatternDict</ref>(segNum,<sp/>grayMax<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>up<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>grayMax<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>patternDict-&gt;getSize();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>patternDict-&gt;setBitmap(i,<sp/>bitmap-&gt;getSlice(x,<sp/>0,<sp/>patternW,<sp/>patternH));</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>patternW;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>new<sp/>pattern<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/>segments-&gt;append(patternDict);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readHalftoneRegionSeg(Guint<sp/>segNum,<sp/>GBool<sp/>imm,</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>lossless,<sp/>Guint<sp/>length,</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>*refSegs,<sp/>Guint<sp/>nRefSegs)<sp/>{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_pattern_dict" kindref="compound">JBIG2PatternDict</ref><sp/>*patternDict;</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*skipBitmap;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/>Guint<sp/>*grayImg;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*grayBitmap;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*patternBitmap;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/>Guint<sp/>w,<sp/>h,<sp/>x,<sp/>y,<sp/>segInfoFlags,<sp/>extCombOp;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/>Guint<sp/>flags,<sp/>mmr,<sp/>templ,<sp/>enableSkip,<sp/>combOp;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/>Guint<sp/>gridW,<sp/>gridH,<sp/>stepX,<sp/>stepY,<sp/>patW,<sp/>patH;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atx[4],<sp/>aty[4];</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridX,<sp/>gridY,<sp/>xx,<sp/>yy,<sp/>bit,<sp/>j;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/>Guint<sp/>bpp,<sp/>m,<sp/>n,<sp/>i;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>region<sp/>segment<sp/>info<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;w)<sp/>||<sp/>!readULong(&amp;h)<sp/>||</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readULong(&amp;x)<sp/>||<sp/>!readULong(&amp;y)<sp/>||</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUByte(&amp;segInfoFlags))<sp/>{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/>extCombOp<sp/>=<sp/>segInfoFlags<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rest<sp/>of<sp/>the<sp/>halftone<sp/>region<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;flags))<sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/>mmr<sp/>=<sp/>flags<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/>templ<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>enableSkip<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/>combOp<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;gridW)<sp/>||<sp/>!readULong(&amp;gridH)<sp/>||</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readLong(&amp;gridX)<sp/>||<sp/>!readLong(&amp;gridY)<sp/>||</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUWord(&amp;stepX)<sp/>||<sp/>!readUWord(&amp;stepY))<sp/>{</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>0<sp/>||<sp/>h<sp/>==<sp/>0<sp/>||<sp/>w<sp/>&gt;=<sp/>INT_MAX<sp/>/<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>bitmap<sp/>size<sp/>in<sp/>JBIG2<sp/>halftone<sp/>segment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gridH<sp/>==<sp/>0<sp/>||<sp/>gridW<sp/>&gt;=<sp/>INT_MAX<sp/>/<sp/>gridH)<sp/>{</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>grid<sp/>size<sp/>in<sp/>JBIG2<sp/>halftone<sp/>segment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>pattern<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRefSegs<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>symbol<sp/>dictionary<sp/>reference<sp/>in<sp/>JBIG2<sp/>halftone<sp/>segment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/>seg<sp/>=<sp/>findSegment(refSegs[0]);</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>==<sp/>NULL<sp/>||<sp/>seg-&gt;getType()<sp/>!=<sp/>jbig2SegPatternDict)<sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>symbol<sp/>dictionary<sp/>reference<sp/>in<sp/>JBIG2<sp/>halftone<sp/>segment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>patternDict<sp/>=<sp/>(<ref refid="class_j_b_i_g2_pattern_dict" kindref="compound">JBIG2PatternDict</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>patternDict-&gt;getSize();</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>bpp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>bpp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i<sp/>=<sp/>floor((size-1)<sp/>/<sp/>2^bpp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++bpp;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/>patternBitmap<sp/>=<sp/>patternDict-&gt;getBitmap(0);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(patternBitmap<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>pattern<sp/>bitmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/>patW<sp/>=<sp/>patternBitmap-&gt;getWidth();</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/>patH<sp/>=<sp/>patternBitmap-&gt;getHeight();</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>arithmetic<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mmr)<sp/>{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>resetGenericStats(templ,<sp/>NULL);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(segNum,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>0x80)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>HDEFPIXEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;clearToOne();</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;clearToZero();</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>skip<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/>skipBitmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enableSkip)<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/>skipBitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/>gridW,<sp/>gridH);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/>skipBitmap-&gt;clearToZero();</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>gridH;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>gridW;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>gridX<sp/>+<sp/>m<sp/>*<sp/>stepY<sp/>+<sp/>n<sp/>*<sp/>stepX;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>gridY<sp/>+<sp/>m<sp/>*<sp/>stepX<sp/>-<sp/>n<sp/>*<sp/>stepY;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((xx<sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)patW)<sp/>&gt;&gt;<sp/>8)<sp/>&lt;=<sp/>0<sp/>||<sp/>(xx<sp/>&gt;&gt;<sp/>8)<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)w<sp/>||</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((yy<sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)patH)<sp/>&gt;&gt;<sp/>8)<sp/>&lt;=<sp/>0<sp/>||<sp/>(yy<sp/>&gt;&gt;<sp/>8)<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)h)<sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>skipBitmap-&gt;setPixel(n,<sp/>m);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>gray-scale<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/>grayImg<sp/>=<sp/>(Guint<sp/>*)gmallocn(gridW<sp/>*<sp/>gridH,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guint));</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>memset(grayImg,<sp/>0,<sp/>gridW<sp/>*<sp/>gridH<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guint));</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/>atx[0]<sp/>=<sp/>templ<sp/>&lt;=<sp/>1<sp/>?<sp/>3<sp/>:<sp/>2;<sp/><sp/>aty[0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/>atx[1]<sp/>=<sp/>-3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aty[1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/>atx[2]<sp/>=<sp/><sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aty[2]<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/>atx[3]<sp/>=<sp/>-2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aty[3]<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>bpp<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>grayBitmap<sp/>=<sp/>readGenericBitmap(mmr,<sp/>gridW,<sp/>gridH,<sp/>templ,<sp/>gFalse,</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enableSkip,<sp/>skipBitmap,<sp/>atx,<sp/>aty,<sp/>-1);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>gridH;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>gridW;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>grayBitmap-&gt;getPixel(n,<sp/>m)<sp/>^<sp/>(grayImg[i]<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>grayImg[i]<sp/>=<sp/>(grayImg[i]<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>bit;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>grayBitmap;</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>gridH;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>gridX<sp/>+<sp/>m<sp/>*<sp/>stepY;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>gridY<sp/>+<sp/>m<sp/>*<sp/>stepX;</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>gridW;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(enableSkip<sp/>&amp;&amp;<sp/>skipBitmap-&gt;getPixel(n,<sp/>m)))<sp/>{</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/>patternBitmap<sp/>=<sp/>patternDict-&gt;getBitmap(grayImg[i]);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(patternBitmap<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>skipBitmap;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gfree(grayImg);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>pattern<sp/>bitmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;combine(patternBitmap,<sp/>xx<sp/>&gt;&gt;<sp/>8,<sp/>yy<sp/>&gt;&gt;<sp/>8,<sp/>combOp);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>stepX;</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>-=<sp/>stepY;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/>gfree(grayImg);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skipBitmap)<sp/>{</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>skipBitmap;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>combine<sp/>the<sp/>region<sp/>bitmap<sp/>into<sp/>the<sp/>page<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm)<sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageH<sp/>==<sp/>0xffffffff<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>h<sp/>&gt;<sp/>curPageH)<sp/>{</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pageBitmap-&gt;expand(y<sp/>+<sp/>h,<sp/>pageDefPixel);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>pageBitmap-&gt;combine(bitmap,<sp/>x,<sp/>y,<sp/>extCombOp);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>region<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/>segments-&gt;append(bitmap);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readGenericRegionSeg(Guint<sp/>segNum,<sp/>GBool<sp/>imm,</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>lossless,<sp/>Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/>Guint<sp/>w,<sp/>h,<sp/>x,<sp/>y,<sp/>segInfoFlags,<sp/>extCombOp,<sp/>rowCount;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/>Guint<sp/>flags,<sp/>mmr,<sp/>templ,<sp/>tpgdOn;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atx[4],<sp/>aty[4];</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>region<sp/>segment<sp/>info<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;w)<sp/>||<sp/>!readULong(&amp;h)<sp/>||</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readULong(&amp;x)<sp/>||<sp/>!readULong(&amp;y)<sp/>||</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUByte(&amp;segInfoFlags))<sp/>{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/>extCombOp<sp/>=<sp/>segInfoFlags<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rest<sp/>of<sp/>the<sp/>generic<sp/>region<sp/>segment<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;flags))<sp/>{</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/>mmr<sp/>=<sp/>flags<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/>templ<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/>tpgdOn<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AT<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mmr)<sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(templ<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readByte(&amp;atx[0])<sp/>||</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;aty[0])<sp/>||</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;atx[1])<sp/>||</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;aty[1])<sp/>||</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;atx[2])<sp/>||</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;aty[2])<sp/>||</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;atx[3])<sp/>||</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;aty[3]))<sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readByte(&amp;atx[0])<sp/>||</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readByte(&amp;aty[0]))<sp/>{</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>arithmetic<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mmr)<sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/>resetGenericStats(templ,<sp/>NULL);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/>readGenericBitmap(mmr,<sp/>w,<sp/>h,<sp/>templ,<sp/>tpgdOn,<sp/>gFalse,</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>atx,<sp/>aty,<sp/>mmr<sp/>?<sp/>length<sp/>-<sp/>18<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmap)</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>combine<sp/>the<sp/>region<sp/>bitmap<sp/>into<sp/>the<sp/>page<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm)<sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageH<sp/>==<sp/>0xffffffff<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>h<sp/>&gt;<sp/>curPageH)<sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pageBitmap-&gt;expand(y<sp/>+<sp/>h,<sp/>pageDefPixel);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/>pageBitmap-&gt;combine(bitmap,<sp/>x,<sp/>y,<sp/>extCombOp);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>region<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;setSegNum(segNum);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>segments-&gt;append(bitmap);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>immediate<sp/>generic<sp/>segments<sp/>can<sp/>have<sp/>an<sp/>unspecified<sp/>length,<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>case,<sp/>a<sp/>row<sp/>count<sp/>is<sp/>stored<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm<sp/>&amp;&amp;<sp/>length<sp/>==<sp/>0xffffffff)<sp/>{</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/>readULong(&amp;rowCount);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::mmrAddPixels(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blackPixels,</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*codingLine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*a0i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1<sp/>&gt;<sp/>codingLine[*a0i])<sp/>{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1<sp/>&gt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;JBIG2<sp/>MMR<sp/>row<sp/>is<sp/>wrong<sp/>length<sp/>({0:d})&quot;</highlight><highlight class="normal">,<sp/>a1);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*a0i<sp/>&amp;<sp/>1)<sp/>^<sp/>blackPixels)<sp/>{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*a0i;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/>codingLine[*a0i]<sp/>=<sp/>a1;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::mmrAddPixelsNeg(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blackPixels,</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*codingLine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*a0i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1<sp/>&gt;<sp/>codingLine[*a0i])<sp/>{</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1<sp/>&gt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;JBIG2<sp/>MMR<sp/>row<sp/>is<sp/>wrong<sp/>length<sp/>({0:d})&quot;</highlight><highlight class="normal">,<sp/>a1);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*a0i<sp/>&amp;<sp/>1)<sp/>^<sp/>blackPixels)<sp/>{</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*a0i;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/>codingLine[*a0i]<sp/>=<sp/>a1;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1<sp/>&lt;<sp/>codingLine[*a0i])<sp/>{</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JBIG2<sp/>MMR<sp/>code&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*a0i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>a1<sp/>&lt;=<sp/>codingLine[*a0i<sp/>-<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--*a0i;</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/>codingLine[*a0i]<sp/>=<sp/>a1;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*JBIG2Stream::readGenericBitmap(GBool<sp/>mmr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>templ,<sp/>GBool<sp/>tpgdOn,</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>useSkip,<sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*skip,</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*atx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*aty,</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mmrDataLength)<sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/>GBool<sp/>ltp;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/>Guint<sp/>ltpCX,<sp/>cx,<sp/>cx0,<sp/>cx1,<sp/>cx2;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*refLine,<sp/>*codingLine;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code1,<sp/>code2,<sp/>code3;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/>Guchar<sp/>*p0,<sp/>*p1,<sp/>*p2,<sp/>*pp;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/>Guchar<sp/>*atP0,<sp/>*atP1,<sp/>*atP2,<sp/>*atP3;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/>Guint<sp/>buf0,<sp/>buf1,<sp/>buf2;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/>Guint<sp/>atBuf0,<sp/>atBuf1,<sp/>atBuf2,<sp/>atBuf3;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atShift0,<sp/>atShift1,<sp/>atShift2,<sp/>atShift3;</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/>Guchar<sp/>mask;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>x0,<sp/>x1,<sp/>a0i,<sp/>b1i,<sp/>blackPixels,<sp/>pix,<sp/>i;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmap-&gt;isOk())<sp/>{</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/>bitmap-&gt;clearToZero();</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>MMR<sp/>decode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmr)<sp/>{</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/>mmrDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;<sp/>INT_MAX<sp/>-<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>width<sp/>in<sp/>JBIG2<sp/>generic<sp/>bitmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>call<sp/>to<sp/>gmalloc(-1),<sp/>which<sp/>will<sp/>throw<sp/>an<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>&lt;=<sp/>codingLine[0]<sp/>&lt;<sp/>codingLine[1]<sp/>&lt;<sp/>...<sp/>&lt;<sp/>codingLine[n]<sp/>=<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---&gt;<sp/>max<sp/>codingLine<sp/>size<sp/>=<sp/>w<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refLine<sp/>has<sp/>one<sp/>extra<sp/>guard<sp/>entry<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---&gt;<sp/>max<sp/>refLine<sp/>size<sp/>=<sp/>w<sp/>+<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>codingLine<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)gmallocn(w<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>refLine<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)gmallocn(w<sp/>+<sp/>2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(refLine,<sp/>0,<sp/>(w<sp/>+<sp/>2)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w<sp/>+<sp/>1;<sp/>++i)<sp/>codingLine[i]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>coding<sp/>line<sp/>to<sp/>ref<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>codingLine[i]<sp/>&lt;<sp/>w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>refLine[i]<sp/>=<sp/>codingLine[i];</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refLine[i++]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refLine[i]<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>a<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>codingLine[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a0i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invariant:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refLine[b1i-1]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&lt;<sp/>refLine[b1i]<sp/>&lt;<sp/>refLine[b1i+1]<sp/>&lt;=<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception<sp/>at<sp/>left<sp/>edge:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>codingLine[a0i<sp/>=<sp/>0]<sp/>=<sp/>refLine[b1i<sp/>=<sp/>0]<sp/>=<sp/>0<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception<sp/>at<sp/>right<sp/>edge:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>refLine[b1i]<sp/>=<sp/>refLine[b1i+1]<sp/>=<sp/>w<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/>code1<sp/>=<sp/>mmrDecoder-&gt;get2DCode();</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(code1)<sp/>{</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimPass:</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>+<sp/>1<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(refLine[b1i<sp/>+<sp/>1],<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refLine[b1i<sp/>+<sp/>1]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimHoriz:</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code1<sp/>=<sp/>code2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blackPixels)<sp/>{</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code1<sp/>+=<sp/>code3<sp/>=<sp/>mmrDecoder-&gt;getBlackCode();</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(code3<sp/>&gt;=<sp/>64);</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code2<sp/>+=<sp/>code3<sp/>=<sp/>mmrDecoder-&gt;getWhiteCode();</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(code3<sp/>&gt;=<sp/>64);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code1<sp/>+=<sp/>code3<sp/>=<sp/>mmrDecoder-&gt;getWhiteCode();</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(code3<sp/>&gt;=<sp/>64);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code2<sp/>+=<sp/>code3<sp/>=<sp/>mmrDecoder-&gt;getBlackCode();</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(code3<sp/>&gt;=<sp/>64);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(codingLine[a0i]<sp/>+<sp/>code1,<sp/>blackPixels,</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(codingLine[a0i]<sp/>+<sp/>code2,<sp/>blackPixels<sp/>^<sp/>1,</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimVertR3:</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(refLine[b1i]<sp/>+<sp/>3,<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++b1i;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimVertR2:</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(refLine[b1i]<sp/>+<sp/>2,<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++b1i;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimVertR1:</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(refLine[b1i]<sp/>+<sp/>1,<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++b1i;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimVert0:</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(refLine[b1i],<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++b1i;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimVertL3:</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixelsNeg(refLine[b1i]<sp/>-<sp/>3,<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b1i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--b1i;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++b1i;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimVertL2:</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixelsNeg(refLine[b1i]<sp/>-<sp/>2,<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b1i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--b1i;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++b1i;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>twoDimVertL1:</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(b1i<sp/>&gt;=<sp/>w<sp/>+<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixelsNeg(refLine[b1i]<sp/>-<sp/>1,<sp/>blackPixels,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blackPixels<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[a0i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b1i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--b1i;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++b1i;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(likely(b1i<sp/>&lt;<sp/>w<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;=<sp/>codingLine[a0i]<sp/>&amp;&amp;<sp/>refLine[b1i]<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EOF:</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(w,<sp/>0,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>code<sp/>in<sp/>JBIG2<sp/>MMR<sp/>bitmap<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmrAddPixels(w,<sp/>0,<sp/>codingLine,<sp/>&amp;a0i,<sp/>w);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>run<sp/>lengths<sp/>to<sp/>a<sp/>bitmap<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>codingLine[i];<sp/>x<sp/>&lt;<sp/>codingLine[i+1];<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;setPixel(x,<sp/>y);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codingLine[i+1]<sp/>&gt;=<sp/>w<sp/>||<sp/>codingLine[i+2]<sp/>&gt;=<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmrDataLength<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mmrDecoder-&gt;skipTo(mmrDataLength);</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmrDecoder-&gt;get24Bits()<sp/>!=<sp/>0x001001)<sp/>{</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>EOFB<sp/>in<sp/>JBIG2<sp/>MMR<sp/>bitmap<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(refLine);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(codingLine);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>arithmetic<sp/>decode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>typical<sp/>row<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/>ltpCX<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgdOn)<sp/>{</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(templ)<sp/>{</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/>ltpCX<sp/>=<sp/>0x3953;<sp/></highlight><highlight class="comment">//<sp/>001<sp/>11001<sp/>0101<sp/>0011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>ltpCX<sp/>=<sp/>0x079a;<sp/></highlight><highlight class="comment">//<sp/>0011<sp/>11001<sp/>101<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/>ltpCX<sp/>=<sp/>0x0e3;<sp/></highlight><highlight class="comment">//<sp/>001<sp/>1100<sp/>01<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>ltpCX<sp/>=<sp/>0x18a;<sp/></highlight><highlight class="comment">//<sp/>01100<sp/>0101<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/>ltp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>cx0<sp/>=<sp/>cx1<sp/>=<sp/>cx2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>&quot;typical&quot;<sp/>(duplicate)<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgdOn)<sp/>{</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arithDecoder-&gt;decodeBit(ltpCX,<sp/>genericRegionStats))<sp/>{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ltp<sp/>=<sp/>!ltp;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ltp)<sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;duplicateRow(y,<sp/>y-1);</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(templ)<sp/>{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>pp<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>y<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/>buf2<sp/>=<sp/>*p2++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>-<sp/>1)<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>*p1++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>-<sp/>2)<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>*p0++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>buf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atx[0]<sp/>&gt;=<sp/>-8<sp/>&amp;&amp;<sp/>atx[0]<sp/>&lt;=<sp/>8<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atx[1]<sp/>&gt;=<sp/>-8<sp/>&amp;&amp;<sp/>atx[1]<sp/>&lt;=<sp/>8<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atx[2]<sp/>&gt;=<sp/>-8<sp/>&amp;&amp;<sp/>atx[2]<sp/>&lt;=<sp/>8<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atx[3]<sp/>&gt;=<sp/>-8<sp/>&amp;&amp;<sp/>atx[3]<sp/>&lt;=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>adaptive<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>aty[0]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>aty[0]<sp/>&lt;<sp/>bitmap-&gt;getHeight())<sp/>{</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>+<sp/>aty[0])<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>*atP0++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atShift0<sp/>=<sp/>15<sp/>-<sp/>atx[0];</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>aty[1]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>aty[1]<sp/>&lt;<sp/>bitmap-&gt;getHeight())<sp/>{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP1<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>+<sp/>aty[1])<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf1<sp/>=<sp/>*atP1++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atShift1<sp/>=<sp/>15<sp/>-<sp/>atx[1];</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>aty[2]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>aty[2]<sp/>&lt;<sp/>bitmap-&gt;getHeight())<sp/>{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP2<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>+<sp/>aty[2])<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf2<sp/>=<sp/>*atP2++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atShift2<sp/>=<sp/>15<sp/>-<sp/>atx[2];</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>aty[3]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>aty[3]<sp/>&lt;<sp/>bitmap-&gt;getHeight())<sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP3<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>+<sp/>aty[3])<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf3<sp/>=<sp/>*atP3++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atShift3<sp/>=<sp/>15<sp/>-<sp/>atx[3];</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p0)<sp/>{</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>|=<sp/>*p0++;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atP0)<sp/>{</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>*atP0++;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atP1)<sp/>{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf1<sp/>|=<sp/>*atP1++;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atP2)<sp/>{</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf2<sp/>|=<sp/>*atP2++;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atP3)<sp/>{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf3<sp/>|=<sp/>*atP3++;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>(buf0<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>13)<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>13)<sp/>|<sp/>(cx1<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((atBuf0<sp/>&gt;&gt;<sp/>atShift0)<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>3)<sp/>|</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((atBuf1<sp/>&gt;&gt;<sp/>atShift1)<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>2)<sp/>|</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((atBuf2<sp/>&gt;&gt;<sp/>atShift2)<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((atBuf3<sp/>&gt;&gt;<sp/>atShift3)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aty[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aty[1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf1<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aty[2]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aty[3]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf3<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf3<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p0)<sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>|=<sp/>*p0++;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>(buf0<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>13)<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>13)<sp/>|<sp/>(cx1<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bitmap-&gt;getPixel(x<sp/>+<sp/>atx[0],<sp/>y<sp/>+<sp/>aty[0])<sp/>&lt;&lt;<sp/>3)<sp/>|</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bitmap-&gt;getPixel(x<sp/>+<sp/>atx[1],<sp/>y<sp/>+<sp/>aty[1])<sp/>&lt;&lt;<sp/>2)<sp/>|</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bitmap-&gt;getPixel(x<sp/>+<sp/>atx[2],<sp/>y<sp/>+<sp/>aty[2])<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixel(x<sp/>+<sp/>atx[3],<sp/>y<sp/>+<sp/>aty[3]);</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>pp<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>y<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>buf2<sp/>=<sp/>*p2++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>-<sp/>1)<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>*p1++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>-<sp/>2)<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>*p0++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>buf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atx[0]<sp/>&gt;=<sp/>-8<sp/>&amp;&amp;<sp/>atx[0]<sp/>&lt;=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>adaptive<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atY<sp/>=<sp/>y<sp/>+<sp/>aty[0];</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((atY<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(atY<sp/>&lt;<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>atY<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>*atP0++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atShift0<sp/>=<sp/>15<sp/>-<sp/>atx[0];</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p0)<sp/>{</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>|=<sp/>*p0++;</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atP0)<sp/>{</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>*atP0++;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>(buf0<sp/>&gt;&gt;<sp/>13)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>13)<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>9)<sp/>|<sp/>(cx1<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((atBuf0<sp/>&gt;&gt;<sp/>atShift0)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aty[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p0)<sp/>{</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>|=<sp/>*p0++;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>(buf0<sp/>&gt;&gt;<sp/>13)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>13)<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>9)<sp/>|<sp/>(cx1<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixel(x<sp/>+<sp/>atx[0],<sp/>y<sp/>+<sp/>aty[0]);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>pp<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>y<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>buf2<sp/>=<sp/>*p2++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>-<sp/>1)<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>*p1++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>-<sp/>2)<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>*p0++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>buf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atx[0]<sp/>&gt;=<sp/>-8<sp/>&amp;&amp;<sp/>atx[0]<sp/>&lt;=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>adaptive<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atY<sp/>=<sp/>y<sp/>+<sp/>aty[0];</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((atY<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(atY<sp/>&lt;<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>atY<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>*atP0++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atShift0<sp/>=<sp/>15<sp/>-<sp/>atx[0];</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p0)<sp/>{</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>|=<sp/>*p0++;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atP0)<sp/>{</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>*atP0++;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>(buf0<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x03;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>7)<sp/>|<sp/>(cx1<sp/>&lt;&lt;<sp/>3)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((atBuf0<sp/>&gt;&gt;<sp/>atShift0)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aty[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p0)<sp/>{</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>|=<sp/>*p0++;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>(buf0<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x03;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>7)<sp/>|<sp/>(cx1<sp/>&lt;&lt;<sp/>3)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixel(x<sp/>+<sp/>atx[0],<sp/>y<sp/>+<sp/>aty[0]);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>pp<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>y<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/>buf2<sp/>=<sp/>*p2++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>(y<sp/>-<sp/>1)<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>*p1++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atx[0]<sp/>&gt;=<sp/>-8<sp/>&amp;&amp;<sp/>atx[0]<sp/>&lt;=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>adaptive<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atY<sp/>=<sp/>y<sp/>+<sp/>aty[0];</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((atY<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(atY<sp/>&lt;<sp/>bitmap-&gt;getHeight()))<sp/>{</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>bitmap-&gt;getDataPtr()<sp/>+<sp/>atY<sp/>*<sp/>bitmap-&gt;getLineSize();</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>*atP0++<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atP0<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atShift0<sp/>=<sp/>15<sp/>-<sp/>atx[0];</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atP0)<sp/>{</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>*atP0++;</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx1<sp/>&lt;&lt;<sp/>5)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((atBuf0<sp/>&gt;&gt;<sp/>atShift0)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aty[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atBuf0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0<sp/>+=<sp/>8,<sp/>++pp)<sp/>{</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>+<sp/>8<sp/>&lt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>|=<sp/>*p1++;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>*p2++;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x1<sp/>=<sp/>0,<sp/>mask<sp/>=<sp/>0x80;<sp/>x1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x1,<sp/>++x,<sp/>mask<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx1<sp/>=<sp/>(buf1<sp/>&gt;&gt;<sp/>14)<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>(buf2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx1<sp/>&lt;&lt;<sp/>5)<sp/>|<sp/>(cx2<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixel(x<sp/>+<sp/>atx[0],<sp/>y<sp/>+<sp/>aty[0]);</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>skipped<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(useSkip<sp/>&amp;&amp;<sp/>skip-&gt;getPixel(x,<sp/>y)))<sp/>{</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>genericRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>|=<sp/>0x8000;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readGenericRefinementRegionSeg(Guint<sp/>segNum,<sp/>GBool<sp/>imm,</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>lossless,<sp/>Guint<sp/>length,</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>*refSegs,</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>nRefSegs)<sp/>{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap,<sp/>*refBitmap;</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/>Guint<sp/>w,<sp/>h,<sp/>x,<sp/>y,<sp/>segInfoFlags,<sp/>extCombOp;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/>Guint<sp/>flags,<sp/>templ,<sp/>tpgrOn;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atx[2],<sp/>aty[2];</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>region<sp/>segment<sp/>info<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;w)<sp/>||<sp/>!readULong(&amp;h)<sp/>||</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readULong(&amp;x)<sp/>||<sp/>!readULong(&amp;y)<sp/>||</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUByte(&amp;segInfoFlags))<sp/>{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/>extCombOp<sp/>=<sp/>segInfoFlags<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rest<sp/>of<sp/>the<sp/>generic<sp/>refinement<sp/>region<sp/>segment<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;flags))<sp/>{</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>templ<sp/>=<sp/>flags<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/>tpgrOn<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AT<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!templ)<sp/>{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readByte(&amp;atx[0])<sp/>||<sp/>!readByte(&amp;aty[0])<sp/>||</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/>!readByte(&amp;atx[1])<sp/>||<sp/>!readByte(&amp;aty[1]))<sp/>{</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>the<sp/>page<sp/>bitmap<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRefSegs<sp/>==<sp/>0<sp/>||<sp/>imm)<sp/>{</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageH<sp/>==<sp/>0xffffffff<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>h<sp/>&gt;<sp/>curPageH)<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pageBitmap-&gt;expand(y<sp/>+<sp/>h,<sp/>pageDefPixel);</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>referenced<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRefSegs<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>reference<sp/>in<sp/>JBIG2<sp/>generic<sp/>refinement<sp/>segment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRefSegs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>findSegment(refSegs[0]);</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>==<sp/>NULL<sp/>||<sp/>seg-&gt;getType()<sp/>!=<sp/>jbig2SegBitmap)<sp/>{</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>bitmap<sp/>reference<sp/>in<sp/>JBIG2<sp/>generic<sp/>refinement<sp/>segment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap<sp/>=<sp/>(<ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap<sp/>=<sp/>pageBitmap-&gt;getSlice(x,<sp/>y,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>arithmetic<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/>resetRefinementStats(templ,<sp/>NULL);</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/>arithDecoder-&gt;start();</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/>readGenericRefinementRegion(w,<sp/>h,<sp/>templ,<sp/>tpgrOn,</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap,<sp/>0,<sp/>0,<sp/>atx,<sp/>aty);</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>combine<sp/>the<sp/>region<sp/>bitmap<sp/>into<sp/>the<sp/>page<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm<sp/>&amp;&amp;<sp/>bitmap)<sp/>{</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>pageBitmap-&gt;combine(bitmap,<sp/>x,<sp/>y,<sp/>extCombOp);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>region<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap)<sp/>{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;setSegNum(segNum);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segments-&gt;append(bitmap);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;readGenericRefinementRegionSeg<sp/>with<sp/>null<sp/>bitmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>referenced<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRefSegs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/>discardSegment(refSegs[0]);</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>refBitmap;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*JBIG2Stream::readGenericRefinementRegion(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>templ,<sp/>GBool<sp/>tpgrOn,</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*refBitmap,</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refDX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refDY,</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*atx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*aty)<sp/>{</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref><sp/>*bitmap;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/>GBool<sp/>ltp;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/>Guint<sp/>ltpCX,<sp/>cx,<sp/>cx0,<sp/>cx2,<sp/>cx3,<sp/>cx4,<sp/>tpgrCX0,<sp/>tpgrCX1,<sp/>tpgrCX2;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>cxPtr0<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>cxPtr1<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>cxPtr2<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>cxPtr3<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>cxPtr4<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>cxPtr5<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>cxPtr6<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>tpgrCXPtr0<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>tpgrCXPtr1<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_bitmap_ptr" kindref="compound">JBIG2BitmapPtr</ref><sp/>tpgrCXPtr2<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>pix;</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmap-&gt;isOk())</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/>bitmap-&gt;clearToZero();</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>typical<sp/>row<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(templ)<sp/>{</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/>ltpCX<sp/>=<sp/>0x008;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/>ltpCX<sp/>=<sp/>0x0010;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/>ltp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(templ)<sp/>{</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixelPtr(0,<sp/>y-1,<sp/>&amp;cxPtr0);</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>bitmap-&gt;nextPixel(&amp;cxPtr0);</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixelPtr(-1,<sp/>y,<sp/>&amp;cxPtr1);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-refDX,<sp/>y-1-refDY,<sp/>&amp;cxPtr2);</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y-refDY,<sp/>&amp;cxPtr3);</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx3<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr3);</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx3<sp/>=<sp/>(cx3<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr3);</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-refDX,<sp/>y+1-refDY,<sp/>&amp;cxPtr4);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx4<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr4);</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>typical<sp/>prediction<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>tpgrCX1<sp/>=<sp/>tpgrCX2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrOn)<sp/>{</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y-1-refDY,<sp/>&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>(tpgrCX0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>(tpgrCX0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y-refDY,<sp/>&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>(tpgrCX1<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>(tpgrCX1<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y+1-refDY,<sp/>&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>(tpgrCX2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>(tpgrCX2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCXPtr0.p<sp/>=<sp/>tpgrCXPtr1.p<sp/>=<sp/>tpgrCXPtr2.p<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCXPtr0.shift<sp/>=<sp/>tpgrCXPtr1.shift<sp/>=<sp/>tpgrCXPtr2.shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCXPtr0.x<sp/>=<sp/>tpgrCXPtr1.x<sp/>=<sp/>tpgrCXPtr2.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>((cx0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>bitmap-&gt;nextPixel(&amp;cxPtr0))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/>cx3<sp/>=<sp/>((cx3<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr3))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/>cx4<sp/>=<sp/>((cx4<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr4))<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrOn)<sp/>{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>typical<sp/>predictor<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>((tpgrCX0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>((tpgrCX1<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>((tpgrCX2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>&quot;typical&quot;<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arithDecoder-&gt;decodeBit(ltpCX,<sp/>refinementRegionStats))<sp/>{</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltp<sp/>=<sp/>!ltp;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrCX0<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tpgrCX1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tpgrCX2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;clearPixel(x,<sp/>y);</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrCX0<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>tpgrCX1<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>tpgrCX2<sp/>==<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;setPixel(x,<sp/>y);</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>7)<sp/>|<sp/>(bitmap-&gt;nextPixel(&amp;cxPtr1)<sp/>&lt;&lt;<sp/>6)<sp/>|</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(refBitmap-&gt;nextPixel(&amp;cxPtr2)<sp/>&lt;&lt;<sp/>5)<sp/>|</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cx3<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>cx4;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>refinementRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;setPixel(x,<sp/>y);</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixelPtr(0,<sp/>y-1,<sp/>&amp;cxPtr0);</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>bitmap-&gt;nextPixel(&amp;cxPtr0);</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixelPtr(-1,<sp/>y,<sp/>&amp;cxPtr1);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-refDX,<sp/>y-1-refDY,<sp/>&amp;cxPtr2);</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr2);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y-refDY,<sp/>&amp;cxPtr3);</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx3<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr3);</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx3<sp/>=<sp/>(cx3<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr3);</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y+1-refDY,<sp/>&amp;cxPtr4);</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx4<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr4);</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx4<sp/>=<sp/>(cx4<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr4);</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getPixelPtr(atx[0],<sp/>y+aty[0],<sp/>&amp;cxPtr5);</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(atx[1]-refDX,<sp/>y+aty[1]-refDY,<sp/>&amp;cxPtr6);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>typical<sp/>prediction<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>tpgrCX1<sp/>=<sp/>tpgrCX2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrOn)<sp/>{</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y-1-refDY,<sp/>&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>(tpgrCX0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>(tpgrCX0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0);</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y-refDY,<sp/>&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>(tpgrCX1<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>(tpgrCX1<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1);</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/>refBitmap-&gt;getPixelPtr(-1-refDX,<sp/>y+1-refDY,<sp/>&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>(tpgrCX2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>(tpgrCX2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2);</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCXPtr0.p<sp/>=<sp/>tpgrCXPtr1.p<sp/>=<sp/>tpgrCXPtr2.p<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCXPtr0.shift<sp/>=<sp/>tpgrCXPtr1.shift<sp/>=<sp/>tpgrCXPtr2.shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/>tpgrCXPtr0.x<sp/>=<sp/>tpgrCXPtr1.x<sp/>=<sp/>tpgrCXPtr2.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/>cx0<sp/>=<sp/>((cx0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>bitmap-&gt;nextPixel(&amp;cxPtr0))<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/>cx2<sp/>=<sp/>((cx2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr2))<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/>cx3<sp/>=<sp/>((cx3<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr3))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/>cx4<sp/>=<sp/>((cx4<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;cxPtr4))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrOn)<sp/>{</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>typical<sp/>predictor<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX0<sp/>=<sp/>((tpgrCX0<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr0))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX1<sp/>=<sp/>((tpgrCX1<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr1))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpgrCX2<sp/>=<sp/>((tpgrCX2<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>refBitmap-&gt;nextPixel(&amp;tpgrCXPtr2))<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>&quot;typical&quot;<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arithDecoder-&gt;decodeBit(ltpCX,<sp/>refinementRegionStats))<sp/>{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltp<sp/>=<sp/>!ltp;</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrCX0<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tpgrCX1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tpgrCX2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;clearPixel(x,<sp/>y);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tpgrCX0<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>tpgrCX1<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>tpgrCX2<sp/>==<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;setPixel(x,<sp/>y);</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>(cx0<sp/>&lt;&lt;<sp/>11)<sp/>|<sp/>(bitmap-&gt;nextPixel(&amp;cxPtr1)<sp/>&lt;&lt;<sp/>10)<sp/>|</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cx2<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(cx3<sp/>&lt;&lt;<sp/>5)<sp/>|<sp/>(cx4<sp/>&lt;&lt;<sp/>2)<sp/>|</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bitmap-&gt;nextPixel(&amp;cxPtr5)<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refBitmap-&gt;nextPixel(&amp;cxPtr6);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pix<sp/>=<sp/>arithDecoder-&gt;decodeBit(cx,<sp/>refinementRegionStats)))<sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;setPixel(x,<sp/>y);</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="3997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readPageInfoSeg(Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/>Guint<sp/>xRes,<sp/>yRes,<sp/>flags,<sp/>striping;</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readULong(&amp;pageW)<sp/>||<sp/>!readULong(&amp;pageH)<sp/>||</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readULong(&amp;xRes)<sp/>||<sp/>!readULong(&amp;yRes)<sp/>||</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!readUByte(&amp;flags)<sp/>||<sp/>!readUWord(&amp;striping))<sp/>{</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/>pageDefPixel<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/>defCombOp<sp/>=<sp/>(flags<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>page<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageH<sp/>==<sp/>0xffffffff)<sp/>{</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/>curPageH<sp/>=<sp/>striping<sp/>&amp;<sp/>0x7fff;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/>curPageH<sp/>=<sp/>pageH;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/>pageBitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_bitmap" kindref="compound">JBIG2Bitmap</ref>(0,<sp/>pageW,<sp/>curPageH);</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pageBitmap-&gt;isOk())<sp/>{</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pageBitmap;</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/>pageBitmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>pixel<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pageDefPixel)<sp/>{</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/>pageBitmap-&gt;clearToOne();</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/>pageBitmap-&gt;clearToZero();</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readEndOfStripeSeg(Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curStr-&gt;getChar()<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readProfilesSeg(Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curStr-&gt;getChar()<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readCodeTableSeg(Guint<sp/>segNum,<sp/>Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*huffTab;</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/>Guint<sp/>flags,<sp/>oob,<sp/>prefixBits,<sp/>rangeBits;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowVal,<sp/>highVal,<sp/>val;</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/>Guint<sp/>huffTabSize,<sp/>i;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readUByte(&amp;flags)<sp/>||<sp/>!readLong(&amp;lowVal)<sp/>||<sp/>!readLong(&amp;highVal))<sp/>{</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eofError;</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/>oob<sp/>=<sp/>flags<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/>prefixBits<sp/>=<sp/>((flags<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>7)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/>rangeBits<sp/>=<sp/>((flags<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>7)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/>huffDecoder-&gt;reset();</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/>huffTabSize<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/>huffTab<sp/>=<sp/>(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*)</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmallocn(huffTabSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref>));</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>lowVal;</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(val<sp/>&lt;<sp/>highVal)<sp/>{</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>huffTabSize)<sp/>{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffTabSize<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huffTab<sp/>=<sp/>(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*)</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greallocn(huffTab,<sp/>huffTabSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref>));</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTab[i].val<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTab[i].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(prefixBits);</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTab[i].rangeLen<sp/>=<sp/>huffDecoder-&gt;readBits(rangeBits);</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>1<sp/>&lt;&lt;<sp/>huffTab[i].rangeLen;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>oob<sp/>+<sp/>3<sp/>&gt;<sp/>huffTabSize)<sp/>{</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTabSize<sp/>=<sp/>i<sp/>+<sp/>oob<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTab<sp/>=<sp/>(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref><sp/>*)</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greallocn(huffTab,<sp/>huffTabSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_j_b_i_g2_huffman_table" kindref="compound">JBIG2HuffmanTable</ref>));</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/>huffTab[i].val<sp/>=<sp/>lowVal<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/>huffTab[i].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(prefixBits);</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/>huffTab[i].rangeLen<sp/>=<sp/>jbig2HuffmanLOW;</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/>huffTab[i].val<sp/>=<sp/>highVal;</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/>huffTab[i].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(prefixBits);</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/>huffTab[i].rangeLen<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oob)<sp/>{</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTab[i].val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTab[i].prefixLen<sp/>=<sp/>huffDecoder-&gt;readBits(prefixBits);</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/>huffTab[i].rangeLen<sp/>=<sp/>jbig2HuffmanOOB;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>huffTab[i].val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>huffTab[i].prefixLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/>huffTab[i].rangeLen<sp/>=<sp/>jbig2HuffmanEOT;</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/>huffDecoder-&gt;buildTable(huffTab,<sp/>i);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>and<sp/>store<sp/>the<sp/>new<sp/>table<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/>segments-&gt;append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_b_i_g2_code_table" kindref="compound">JBIG2CodeTable</ref>(segNum,<sp/>huffTab));</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"></highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/>eofError:</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/>error(errSyntaxError,<sp/>curStr-&gt;getPos(),<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>EOF<sp/>in<sp/>JBIG2<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::readExtensionSeg(Guint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curStr-&gt;getChar()<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*JBIG2Stream::findSegment(Guint<sp/>segNum)<sp/>{</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>globalSegments-&gt;getLength();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>(<ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*)globalSegments-&gt;get(i);</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getSegNum()<sp/>==<sp/>segNum)<sp/>{</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg;</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>segments-&gt;getLength();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>(<ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*)segments-&gt;get(i);</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getSegNum()<sp/>==<sp/>segNum)<sp/>{</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"></highlight></codeline>
<codeline lineno="4153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::discardSegment(Guint<sp/>segNum)<sp/>{</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>globalSegments-&gt;getLength();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>(<ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*)globalSegments-&gt;get(i);</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getSegNum()<sp/>==<sp/>segNum)<sp/>{</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globalSegments-&gt;del(i);</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>segments-&gt;getLength();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>(<ref refid="class_j_b_i_g2_segment" kindref="compound">JBIG2Segment</ref><sp/>*)segments-&gt;get(i);</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;getSegNum()<sp/>==<sp/>segNum)<sp/>{</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segments-&gt;del(i);</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::resetGenericStats(Guint<sp/>templ,</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*prevStats)<sp/>{</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/>size<sp/>=<sp/>contextSize[templ];</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevStats<sp/>&amp;&amp;<sp/>prevStats-&gt;getContextSize()<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(genericRegionStats-&gt;getContextSize()<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>genericRegionStats-&gt;copyFrom(prevStats);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>genericRegionStats;</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>genericRegionStats<sp/>=<sp/>prevStats-&gt;copy();</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(genericRegionStats-&gt;getContextSize()<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>genericRegionStats-&gt;reset();</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>genericRegionStats;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>genericRegionStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>size);</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"></highlight></codeline>
<codeline lineno="4195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::resetRefinementStats(Guint<sp/>templ,</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*prevStats)<sp/>{</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/>size<sp/>=<sp/>refContextSize[templ];</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevStats<sp/>&amp;&amp;<sp/>prevStats-&gt;getContextSize()<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refinementRegionStats-&gt;getContextSize()<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refinementRegionStats-&gt;copyFrom(prevStats);</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>refinementRegionStats;</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refinementRegionStats<sp/>=<sp/>prevStats-&gt;copy();</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refinementRegionStats-&gt;getContextSize()<sp/>==<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refinementRegionStats-&gt;reset();</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>refinementRegionStats;</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refinementRegionStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>size);</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JBIG2Stream::resetIntStats(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>symCodeLen)<sp/>{</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/>iadhStats-&gt;reset();</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/>iadwStats-&gt;reset();</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/>iaexStats-&gt;reset();</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/>iaaiStats-&gt;reset();</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/>iadtStats-&gt;reset();</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>iaitStats-&gt;reset();</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/>iafsStats-&gt;reset();</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/>iadsStats-&gt;reset();</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/>iardxStats-&gt;reset();</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>iardyStats-&gt;reset();</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/>iardwStats-&gt;reset();</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/>iardhStats-&gt;reset();</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/>iariStats-&gt;reset();</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iaidStats-&gt;getContextSize()<sp/>==<sp/>1<sp/>&lt;&lt;<sp/>(symCodeLen<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/>iaidStats-&gt;reset();</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iaidStats;</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/>iaidStats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(1<sp/>&lt;&lt;<sp/>(symCodeLen<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal">GBool<sp/>JBIG2Stream::readUByte(Guint<sp/>*x)<sp/>{</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c0<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/>*x<sp/>=<sp/>(Guint)c0;</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="4247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"></highlight></codeline>
<codeline lineno="4249"><highlight class="normal">GBool<sp/>JBIG2Stream::readByte(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x)<sp/>{</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0;</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c0<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/>*x<sp/>=<sp/>c0;</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c0<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>|=<sp/>-1<sp/>-<sp/>0xff;</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="4260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal">GBool<sp/>JBIG2Stream::readUWord(Guint<sp/>*x)<sp/>{</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,<sp/>c1;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c0<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c1<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/>*x<sp/>=<sp/>(Guint)((c0<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>c1);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="4271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal">GBool<sp/>JBIG2Stream::readULong(Guint<sp/>*x)<sp/>{</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,<sp/>c1,<sp/>c2,<sp/>c3;</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c0<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c1<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c2<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c3<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/>*x<sp/>=<sp/>(Guint)((c0<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(c1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(c2<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>c3);</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="4284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal">GBool<sp/>JBIG2Stream::readLong(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x)<sp/>{</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,<sp/>c1,<sp/>c2,<sp/>c3;</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c0<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c1<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c2<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF<sp/>||</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c3<sp/>=<sp/>curStr-&gt;getChar())<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/>*x<sp/>=<sp/>((c0<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(c1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(c2<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>c3);</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c0<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>|=<sp/>-1<sp/>-<sp/>(int)0xffffffff;</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="4300"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/JBIG2Stream.cc"/>
  </compounddef>
</doxygen>
