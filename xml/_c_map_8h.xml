<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_c_map_8h" kind="file" language="C++">
    <compoundname>CMap.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_char_types_8h" local="yes">CharTypes.h</includes>
    <includes refid="_goo_mutex_8h" local="yes">goo/GooMutex.h</includes>
    <includedby refid="_c_map_8cc" local="yes">thirdparty/poppler/poppler/CMap.cc</includedby>
    <includedby refid="_gfx_font_8cc" local="yes">thirdparty/poppler/poppler/GfxFont.cc</includedby>
    <includedby refid="_global_params_8cc" local="yes">thirdparty/poppler/poppler/GlobalParams.cc</includedby>
    <includedby refid="_global_params_win_8cc" local="yes">thirdparty/poppler/poppler/GlobalParamsWin.cc</includedby>
    <incdepgraph>
      <node id="86091">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="86092" relation="include">
        </childnode>
      </node>
      <node id="86096">
        <label>pthread.h</label>
      </node>
      <node id="86095">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="86096" relation="include">
        </childnode>
      </node>
      <node id="86094">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="86093">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="86091" relation="include">
        </childnode>
      </node>
      <node id="86090">
        <label>thirdparty/poppler/poppler/CMap.h</label>
        <link refid="_c_map_8h"/>
        <childnode refid="86091" relation="include">
        </childnode>
        <childnode refid="86093" relation="include">
        </childnode>
        <childnode refid="86094" relation="include">
        </childnode>
        <childnode refid="86095" relation="include">
        </childnode>
      </node>
      <node id="86092">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="86099">
        <label>thirdparty/poppler/poppler/GfxFont.cc</label>
        <link refid="_gfx_font_8cc_source"/>
      </node>
      <node id="86101">
        <label>thirdparty/poppler/poppler/GlobalParamsWin.cc</label>
        <link refid="_global_params_win_8cc_source"/>
      </node>
      <node id="86098">
        <label>thirdparty/poppler/poppler/CMap.cc</label>
        <link refid="_c_map_8cc_source"/>
      </node>
      <node id="86100">
        <label>thirdparty/poppler/poppler/GlobalParams.cc</label>
        <link refid="_global_params_8cc_source"/>
      </node>
      <node id="86097">
        <label>thirdparty/poppler/poppler/CMap.h</label>
        <link refid="_c_map_8h"/>
        <childnode refid="86098" relation="include">
        </childnode>
        <childnode refid="86099" relation="include">
        </childnode>
        <childnode refid="86100" relation="include">
        </childnode>
        <childnode refid="86101" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_map" prot="public">CMap</innerclass>
    <innerclass refid="class_c_map_cache" prot="public">CMapCache</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_c_map_8h_1a527695b7043f01b2d767fa4cffd6d6a6" prot="public" static="no">
        <name>cMapCacheSize</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/CMap.h" line="124" column="9" bodyfile="thirdparty/poppler/poppler/CMap.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CMap.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2001-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Koji<sp/>Otani<sp/>&lt;sho@bbr.jp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CMAP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMAP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CharTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooMutex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_string" kindref="compound">GooString</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_object" kindref="compound">Object</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_map_vector_entry" kindref="compound">CMapVectorEntry</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_map_cache" kindref="compound">CMapCache</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stream" kindref="compound">Stream</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_c_map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>a<sp/>CMap<sp/>from<sp/>&lt;obj&gt;,<sp/>which<sp/>can<sp/>be<sp/>a<sp/>name<sp/>or<sp/>a<sp/>stream.<sp/><sp/>Sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>initial<sp/>reference<sp/>count<sp/>to<sp/>1.<sp/><sp/>Returns<sp/>NULL<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>*parse(<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>*cache,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collectionA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>CMap<sp/>specified<sp/>by<sp/>&lt;collection&gt;<sp/>and<sp/>&lt;cMapName&gt;.<sp/><sp/>Sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>initial<sp/>reference<sp/>count<sp/>to<sp/>1.<sp/><sp/>Returns<sp/>NULL<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>*parse(<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>*cache,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collectionA,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*cMapNameA);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>a<sp/>CMap<sp/>from<sp/>&lt;str&gt;.<sp/><sp/>Sets<sp/>the<sp/>initial<sp/>reference<sp/>count<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>NULL<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>*parse(<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>*cache,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collectionA,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>CMap<sp/>specified<sp/>by<sp/>&lt;collection&gt;<sp/>and<sp/>&lt;cMapName&gt;.<sp/><sp/>Sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>initial<sp/>reference<sp/>count<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>is<sp/>a<sp/>stream<sp/>containing<sp/>the<sp/>CMap,<sp/>can<sp/>be<sp/>NULL<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>means<sp/>the<sp/>CMap<sp/>will<sp/>be<sp/>searched<sp/>in<sp/>the<sp/>CMap<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>NULL<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>*parse(<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>*cache,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collectionA,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*cMapNameA,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*stream);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>~<ref refid="class_c_map" kindref="compound">CMap</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incRefCnt();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decRefCnt();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>collection<sp/>name<sp/>(&lt;registry&gt;-&lt;ordering&gt;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getCollection()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>collection;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getCMapName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cMapName;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>this<sp/>CMap<sp/>matches<sp/>the<sp/>specified<sp/>&lt;collectionA&gt;,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;cMapNameA&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>GBool<sp/>match(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collectionA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*cMapNameA);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>CID<sp/>corresponding<sp/>to<sp/>the<sp/>character<sp/>code<sp/>starting<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;s&gt;,<sp/>which<sp/>contains<sp/>&lt;len&gt;<sp/>bytes.<sp/><sp/>Sets<sp/>*&lt;c&gt;<sp/>to<sp/>the<sp/>char<sp/>code,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*&lt;nUsed&gt;<sp/>to<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>used<sp/>by<sp/>the<sp/>char<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>CID<sp/>getCID(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>CharCode<sp/>*c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nUsed);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>writing<sp/>mode<sp/>(0=horizontal,<sp/>1=vertical).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wMode;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setReverseMap(Guint<sp/>*rmap,<sp/>Guint<sp/>rmapSize,<sp/>Guint<sp/>ncand);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse2(<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>*cache,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*getCharFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="class_c_map" kindref="compound">CMap</ref>(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collectionA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*cMapNameA);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="class_c_map" kindref="compound">CMap</ref>(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collectionA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*cMapNameA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wModeA);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>useCMap(<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>*cache,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*useName);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>useCMap(<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>*cache,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyVector(<ref refid="struct_c_map_vector_entry" kindref="compound">CMapVectorEntry</ref><sp/>*dest,<sp/><ref refid="struct_c_map_vector_entry" kindref="compound">CMapVectorEntry</ref><sp/>*src);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addCIDs(Guint<sp/>start,<sp/>Guint<sp/>end,<sp/>Guint<sp/>nBytes,<sp/>CID<sp/>firstCID);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeCMapVector(<ref refid="struct_c_map_vector_entry" kindref="compound">CMapVectorEntry</ref><sp/>*vec);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setReverseMapVector(Guint<sp/>startCode,<sp/><ref refid="struct_c_map_vector_entry" kindref="compound">CMapVectorEntry</ref><sp/>*vec,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>*rmap,<sp/>Guint<sp/>rmapSize,<sp/>Guint<sp/>ncand);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collection;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*cMapName;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>GBool<sp/>isIdent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>this<sp/>CMap<sp/>is<sp/>an<sp/>identity<sp/>mapping,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>or<sp/>is<sp/>based<sp/>on<sp/>one<sp/>(via<sp/>usecmap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>mode<sp/>(0=horizontal,<sp/>1=vertical)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="struct_c_map_vector_entry" kindref="compound">CMapVectorEntry</ref><sp/>*vector;<sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>for<sp/>first<sp/>byte<sp/>(NULL<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>identity<sp/>CMap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refCnt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>GooMutex<sp/>mutex;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cMapCacheSize<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_c_map_cache" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_map_cache" kindref="compound">CMapCache</ref><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="class_c_map_cache" kindref="compound">CMapCache</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>~<ref refid="class_c_map_cache" kindref="compound">CMapCache</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>&lt;cMapName&gt;<sp/>CMap<sp/>for<sp/>the<sp/>specified<sp/>character<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increments<sp/>its<sp/>reference<sp/>count;<sp/>there<sp/>will<sp/>be<sp/>one<sp/>reference<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>cache<sp/>plus<sp/>one<sp/>for<sp/>the<sp/>caller<sp/>of<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>is<sp/>a<sp/>stream<sp/>containing<sp/>the<sp/>CMap,<sp/>can<sp/>be<sp/>NULL<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>means<sp/>the<sp/>CMap<sp/>will<sp/>be<sp/>searched<sp/>in<sp/>the<sp/>CMap<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>NULL<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>*getCMap(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collection,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*cMapName,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*stream);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>*cache[cMapCacheSize];</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/CMap.h"/>
  </compounddef>
</doxygen>
