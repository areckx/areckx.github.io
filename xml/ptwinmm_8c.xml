<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ptwinmm_8c" kind="file" language="C++">
    <compoundname>ptwinmm.c</compoundname>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes local="yes">windows.h</includes>
    <includes local="yes">time.h</includes>
    <incdepgraph>
      <node id="93129">
        <label>windows.h</label>
      </node>
      <node id="93127">
        <label>thirdparty/portmidi/porttime/ptwinmm.c</label>
        <link refid="ptwinmm_8c"/>
        <childnode refid="93128" relation="include">
        </childnode>
        <childnode refid="93129" relation="include">
        </childnode>
        <childnode refid="93130" relation="include">
        </childnode>
      </node>
      <node id="93130">
        <label>time.h</label>
      </node>
      <node id="93128">
        <label>porttime.h</label>
        <link refid="porttime_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ptwinmm_8c_1afaf18e680ca830409cafdc4bd0fe004a" prot="public" static="no" mutable="no">
        <type>TIMECAPS</type>
        <definition>TIMECAPS caps</definition>
        <argsstring></argsstring>
        <name>caps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="9" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptwinmm_8c_1a740429e76478300ef613512292b63155" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long time_offset</definition>
        <argsstring></argsstring>
        <name>time_offset</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="11" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptwinmm_8c_1ad33ffb4eb28d971aaf7b80b897548657" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int time_started_flag</definition>
        <argsstring></argsstring>
        <name>time_started_flag</name>
        <initializer>= FALSE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="12" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptwinmm_8c_1ab8cfe23171af5aa1205a3dea1f96d7ae" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long time_resolution</definition>
        <argsstring></argsstring>
        <name>time_resolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="13" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptwinmm_8c_1ab5dc28b4c688ee4c79b7f1a0d8a60743" prot="public" static="yes" mutable="no">
        <type>MMRESULT</type>
        <definition>MMRESULT timer_id</definition>
        <argsstring></argsstring>
        <name>timer_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="14" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptwinmm_8c_1a9857916f36d653dccac8cb6524e4aa12" prot="public" static="yes" mutable="no">
        <type>PtCallback *</type>
        <definition>PtCallback* time_callback</definition>
        <argsstring></argsstring>
        <name>time_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="15" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ptwinmm_8c_1af3d051c28e8dccb24c3d2c9aed9c08d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void CALLBACK</type>
        <definition>void CALLBACK winmm_time_callback</definition>
        <argsstring>(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)</argsstring>
        <name>winmm_time_callback</name>
        <param>
          <type>UINT</type>
          <declname>uID</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>uMsg</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwUser</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dw1</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dw2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="17" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="ptwinmm_8c_1a67205dae78222df6fa27d3c20dd574f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PtError</type>
        <definition>PtError Pt_Start</definition>
        <argsstring>(int resolution, PtCallback *callback, void *userData)</argsstring>
        <name>Pt_Start</name>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>PtCallback *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="24" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="24" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="ptwinmm_8c_1a1ec792a0ae207b7243018b84de1bae4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PtError</type>
        <definition>PtError Pt_Stop</definition>
        <argsstring>()</argsstring>
        <name>Pt_Stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="41" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="41" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="ptwinmm_8c_1a8e5fb8ff92c50c61a25d63911b30efc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Pt_Started</definition>
        <argsstring>()</argsstring>
        <name>Pt_Started</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="55" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="ptwinmm_8c_1adc561fd1f67132ffd377ac585477b3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PtTimestamp</type>
        <definition>PtTimestamp Pt_Time</definition>
        <argsstring>()</argsstring>
        <name>Pt_Time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="61" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="ptwinmm_8c_1a8d0fbfbf7c8cab76abdc236e42dcca9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pt_Sleep</definition>
        <argsstring>(long duration)</argsstring>
        <name>Pt_Sleep</name>
        <param>
          <type>long</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/porttime/ptwinmm.c" line="67" column="1" bodyfile="thirdparty/portmidi/porttime/ptwinmm.c" bodystart="67" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>ptwinmm.c<sp/>--<sp/>portable<sp/>timer<sp/>implementation<sp/>for<sp/>win32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;porttime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;windows.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">TIMECAPS<sp/>caps;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_started_flag<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time_resolution;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MMRESULT<sp/>timer_id;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PtCallback<sp/>*time_callback;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CALLBACK<sp/>winmm_time_callback(UINT<sp/>uID,<sp/>UINT<sp/>uMsg,<sp/>DWORD<sp/>dwUser,<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>dw1,<sp/>DWORD<sp/>dw2)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>(*time_callback)(Pt_Time(),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>dwUser);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">PtError<sp/>Pt_Start(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/>PtCallback<sp/>*callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userData)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_started_flag)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptAlreadyStarted;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>timeBeginPeriod(resolution);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>time_resolution<sp/>=<sp/>resolution;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>time_offset<sp/>=<sp/>timeGetTime();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>time_started_flag<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>time_callback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_id<sp/>=<sp/>timeSetEvent(resolution,<sp/>1,<sp/>winmm_time_callback,<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DWORD)<sp/>userData,<sp/>TIME_PERIODIC<sp/>|<sp/>TIME_CALLBACK_FUNCTION);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timer_id)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptHostError;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptNoError;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">PtError<sp/>Pt_Stop()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!time_started_flag)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptAlreadyStopped;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_callback<sp/>&amp;&amp;<sp/>timer_id)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeKillEvent(timer_id);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_callback<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>time_started_flag<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>timeEndPeriod(time_resolution);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptNoError;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pt_Started()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time_started_flag;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">PtTimestamp<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeGetTime()<sp/>-<sp/>time_offset;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pt_Sleep(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>duration)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(duration);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/portmidi/porttime/ptwinmm.c"/>
  </compounddef>
</doxygen>
