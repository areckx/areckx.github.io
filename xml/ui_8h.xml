<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ui_8h" kind="file" language="C++">
    <compoundname>ui.h</compoundname>
    <includes refid="crypto_8h" local="no">openssl/crypto.h</includes>
    <includes refid="safestack_8h" local="no">openssl/safestack.h</includes>
    <includes refid="ossl__typ_8h" local="no">openssl/ossl_typ.h</includes>
    <includedby refid="engine_8h" local="no">thirdparty/openssl/include/openssl/engine.h</includedby>
    <includedby refid="ui__compat_8h" local="no">thirdparty/openssl/include/openssl/ui_compat.h</includedby>
    <incdepgraph>
      <node id="83768">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="83762">
        <label>stdlib.h</label>
      </node>
      <node id="83766">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="83760">
        <label>thirdparty/openssl/include/openssl/ui.h</label>
        <link refid="ui_8h"/>
        <childnode refid="83761" relation="include">
        </childnode>
        <childnode refid="83767" relation="include">
        </childnode>
        <childnode refid="83769" relation="include">
        </childnode>
      </node>
      <node id="83770">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="83763" relation="include">
        </childnode>
      </node>
      <node id="83767">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="83766" relation="include">
        </childnode>
      </node>
      <node id="83764">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="83763">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="83764" relation="include">
        </childnode>
      </node>
      <node id="83765">
        <label>stdio.h</label>
      </node>
      <node id="83769">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="83763" relation="include">
        </childnode>
      </node>
      <node id="83761">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="83762" relation="include">
        </childnode>
        <childnode refid="83763" relation="include">
        </childnode>
        <childnode refid="83765" relation="include">
        </childnode>
        <childnode refid="83766" relation="include">
        </childnode>
        <childnode refid="83767" relation="include">
        </childnode>
        <childnode refid="83768" relation="include">
        </childnode>
        <childnode refid="83769" relation="include">
        </childnode>
        <childnode refid="83770" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="83772">
        <label>thirdparty/openssl/include/openssl/engine.h</label>
        <link refid="engine_8h_source"/>
      </node>
      <node id="83775">
        <label>thirdparty/openssl/include/openssl/des.h</label>
        <link refid="des_8h_source"/>
      </node>
      <node id="83774">
        <label>thirdparty/openssl/include/openssl/des_old.h</label>
        <link refid="des__old_8h_source"/>
        <childnode refid="83775" relation="include">
        </childnode>
      </node>
      <node id="83771">
        <label>thirdparty/openssl/include/openssl/ui.h</label>
        <link refid="ui_8h"/>
        <childnode refid="83772" relation="include">
        </childnode>
        <childnode refid="83773" relation="include">
        </childnode>
      </node>
      <node id="83773">
        <label>thirdparty/openssl/include/openssl/ui_compat.h</label>
        <link refid="ui__compat_8h_source"/>
        <childnode refid="83774" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ui_8h_1ad582c33b70133d7b88937a8779221164" prot="public" static="no">
        <name>UI_INPUT_FLAG_ECHO</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="151" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a06d42b3732e504b80b88ceb0c995697c" prot="public" static="no">
        <name>UI_INPUT_FLAG_DEFAULT_PWD</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="157" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1afdce6eba11d377933e274d5a867f2cc9" prot="public" static="no">
        <name>UI_INPUT_FLAG_USER_BASE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="168" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a322da02aee0662633afc345b98dfaca1" prot="public" static="no">
        <name>UI_CTRL_PRINT_ERRORS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="220" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a6bbd4912b1924856be7a943eda528d1b" prot="public" static="no">
        <name>UI_CTRL_IS_REDOABLE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="224" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a02862517ab456262197194faf273b695" prot="public" static="no">
        <name>UI_set_app_data</name>
        <param><defname>s</defname></param>
        <param><defname>arg</defname></param>
        <initializer>UI_set_ex_data(s,0,arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="228" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1aeb2e982fd8a9cc621be88fb4c4a5a8a6" prot="public" static="no">
        <name>UI_get_app_data</name>
        <param><defname>s</defname></param>
        <initializer>UI_get_ex_data(s,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="229" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a0d288541ace08c0f9902b17eba74638c" prot="public" static="no">
        <name>UI_F_GENERAL_ALLOCATE_BOOLEAN</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="358" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1abb3f42787a7199324d53ceb610425fbe" prot="public" static="no">
        <name>UI_F_GENERAL_ALLOCATE_PROMPT</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="359" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a814c0d71104d78dfe49ae6cdcd2e3a51" prot="public" static="no">
        <name>UI_F_GENERAL_ALLOCATE_STRING</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="360" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1aab7f7f0ceca92940aeb2c100f400ed3d" prot="public" static="no">
        <name>UI_F_UI_CTRL</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="361" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a6ce841dc1c9682c7078694f2f9655491" prot="public" static="no">
        <name>UI_F_UI_DUP_ERROR_STRING</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="362" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a5fe304e8784e3d8d0e6d1fc1852b5b44" prot="public" static="no">
        <name>UI_F_UI_DUP_INFO_STRING</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="363" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a60feb0c95d7f1945a00f387e9acc1ee2" prot="public" static="no">
        <name>UI_F_UI_DUP_INPUT_BOOLEAN</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="364" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a63416a0fa17533d5574fb24e1aa7f57b" prot="public" static="no">
        <name>UI_F_UI_DUP_INPUT_STRING</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="365" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a4ee459d922f7663d443228b429fa5ad8" prot="public" static="no">
        <name>UI_F_UI_DUP_VERIFY_STRING</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="366" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1aeb754b8c94407995ef22b82371c820e8" prot="public" static="no">
        <name>UI_F_UI_GET0_RESULT</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="367" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a123f13be69f64032c14507dbe8cedd3a" prot="public" static="no">
        <name>UI_F_UI_NEW_METHOD</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="368" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a1db5c50d90909a4e0894d59993819965" prot="public" static="no">
        <name>UI_F_UI_SET_RESULT</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="369" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1ac7822801ec9c80cb04cbb53b586a3cfa" prot="public" static="no">
        <name>UI_R_COMMON_OK_AND_CANCEL_CHARACTERS</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="372" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1ac97669e8123f9e6061a2c9d086a1457b" prot="public" static="no">
        <name>UI_R_INDEX_TOO_LARGE</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="373" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1ac6e31ba5808ac4a437811fdee72e4524" prot="public" static="no">
        <name>UI_R_INDEX_TOO_SMALL</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="374" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1ab6d2f48c908f4992c1a80bc598379d96" prot="public" static="no">
        <name>UI_R_NO_RESULT_BUFFER</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="375" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1ad2706a5b2246385fe5f7254c6ccba413" prot="public" static="no">
        <name>UI_R_RESULT_TOO_LARGE</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="376" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a0f8ce8c0e25d8e82dec1eca00877ca4c" prot="public" static="no">
        <name>UI_R_RESULT_TOO_SMALL</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="377" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ui_8h_1a81ba410670ca84de4bc6c5844fcedc87" prot="public" static="no">
        <name>UI_R_UNKNOWN_CONTROL_COMMAND</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="378" column="9" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ui_8h_1adad09cdb357f365974c55f6cb9f82fa7" prot="public" static="no">
        <name>UI_string_types</name>
        <enumvalue id="ui_8h_1adad09cdb357f365974c55f6cb9f82fa7ab2a8ab2696c53440f2ffd851275592c1" prot="public">
          <name>UIT_NONE</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1adad09cdb357f365974c55f6cb9f82fa7a52241a1765fbad5eb34f1e264b4dffbb" prot="public">
          <name>UIT_PROMPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1adad09cdb357f365974c55f6cb9f82fa7ad8d4dab3c58755074af4a228ded50e5d" prot="public">
          <name>UIT_VERIFY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1adad09cdb357f365974c55f6cb9f82fa7a14441ff3af728a8a28d4cee904a7c851" prot="public">
          <name>UIT_BOOLEAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1adad09cdb357f365974c55f6cb9f82fa7af0c6057507ea676d0aad8d34140b8746" prot="public">
          <name>UIT_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1adad09cdb357f365974c55f6cb9f82fa7aab70e57cacbda7f94b7a7da709068a4e" prot="public">
          <name>UIT_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="296" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="295" bodyend="303"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ui_8h_1ac00ec05cf702eb7ebfa365ae2ba7d7d2" prot="public" static="no">
        <type>struct ui_string_st</type>
        <definition>typedef struct ui_string_st UI_STRING</definition>
        <argsstring></argsstring>
        <name>UI_STRING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="242" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ui_8h_1a4c56ac8069cd350480abf05b7793c472" prot="public" static="no" mutable="no">
        <type>int(*)(UI *)</type>
        <definition>int(*)(UI*) UI_method_get_opener(UI_METHOD *method)</definition>
        <argsstring>(UI_METHOD *method)</argsstring>
        <name>UI_method_get_opener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="314" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1abee01d3e454bcc01486a126edd01a9ac" prot="public" static="no" mutable="no">
        <type>int(*)(UI *, UI_STRING *)</type>
        <definition>int(*)(UI*, UI_STRING*) UI_method_get_writer(UI_METHOD *method)</definition>
        <argsstring>(UI_METHOD *method)</argsstring>
        <name>UI_method_get_writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="315" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1a58b3dd88cced5300780bd523ebcde2fb" prot="public" static="no" mutable="no">
        <type>int(*)(UI *)</type>
        <definition>int(*)(UI*) UI_method_get_flusher(UI_METHOD *method)</definition>
        <argsstring>(UI_METHOD *method)</argsstring>
        <name>UI_method_get_flusher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="316" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1a44fea1783f1563deaa625737d0e62ee9" prot="public" static="no" mutable="no">
        <type>int(*)(UI *, UI_STRING *)</type>
        <definition>int(*)(UI*, UI_STRING*) UI_method_get_reader(UI_METHOD *method)</definition>
        <argsstring>(UI_METHOD *method)</argsstring>
        <name>UI_method_get_reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="317" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1aafa432c8f9f52c176ee8a3c3161d4801" prot="public" static="no" mutable="no">
        <type>int(*)(UI *)</type>
        <definition>int(*)(UI*) UI_method_get_closer(UI_METHOD *method)</definition>
        <argsstring>(UI_METHOD *method)</argsstring>
        <name>UI_method_get_closer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="318" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1a2c5d30cfd197c3a6c4cf2e8d47780f71" prot="public" static="no" mutable="no">
        <type>char *(*)(UI *, const char *, const char *)</type>
        <definition>char*(*)(UI*, const char*, const char*) UI_method_get_prompt_constructor(UI_METHOD *method)</definition>
        <argsstring>(UI_METHOD *method)</argsstring>
        <name>UI_method_get_prompt_constructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="319" column="1" bodyfile="thirdparty/openssl/include/openssl/ui.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ui_8h_1a08536ce1a712a3755ec7273e500bcfd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UI *</type>
        <definition>UI* UI_new</definition>
        <argsstring>(void)</argsstring>
        <name>UI_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a36a6dda193bec4fb382cb56a5d7457d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UI *</type>
        <definition>UI* UI_new_method</definition>
        <argsstring>(const UI_METHOD *method)</argsstring>
        <name>UI_new_method</name>
        <param>
          <type>const UI_METHOD *</type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1aaae55d9b3a6bd7914e5c9d3182d0040f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UI_free</definition>
        <argsstring>(UI *ui)</argsstring>
        <name>UI_free</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a7b57e9c09c84ae31209d6947847e972c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_add_input_string</definition>
        <argsstring>(UI *ui, const char *prompt, int flags, char *result_buf, int minsize, int maxsize)</argsstring>
        <name>UI_add_input_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>result_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1acc920d2bd7d3d8270be0b65df74f3537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_dup_input_string</definition>
        <argsstring>(UI *ui, const char *prompt, int flags, char *result_buf, int minsize, int maxsize)</argsstring>
        <name>UI_dup_input_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>result_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1adbac741cd98f4f4a0c8c5b18cd3e69b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_add_verify_string</definition>
        <argsstring>(UI *ui, const char *prompt, int flags, char *result_buf, int minsize, int maxsize, const char *test_buf)</argsstring>
        <name>UI_add_verify_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>result_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>test_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a3892b47285e353e52a88cdc31e2d13a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_dup_verify_string</definition>
        <argsstring>(UI *ui, const char *prompt, int flags, char *result_buf, int minsize, int maxsize, const char *test_buf)</argsstring>
        <name>UI_dup_verify_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>result_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>test_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ad8d4c49f0747e7110dfabc2a594f8edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_add_input_boolean</definition>
        <argsstring>(UI *ui, const char *prompt, const char *action_desc, const char *ok_chars, const char *cancel_chars, int flags, char *result_buf)</argsstring>
        <name>UI_add_input_boolean</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>action_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ok_chars</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cancel_chars</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>result_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a1e396c2b7ed4b1e788330f75b31b16ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_dup_input_boolean</definition>
        <argsstring>(UI *ui, const char *prompt, const char *action_desc, const char *ok_chars, const char *cancel_chars, int flags, char *result_buf)</argsstring>
        <name>UI_dup_input_boolean</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>action_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ok_chars</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cancel_chars</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>result_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a702bfe5598310cf8ffd1e84f6ce9a73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_add_info_string</definition>
        <argsstring>(UI *ui, const char *text)</argsstring>
        <name>UI_add_info_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a61b71c4250e496c0e1a06a4720eab6d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_dup_info_string</definition>
        <argsstring>(UI *ui, const char *text)</argsstring>
        <name>UI_dup_info_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a6b4ccddd33f896a6ebb1fae839a46c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_add_error_string</definition>
        <argsstring>(UI *ui, const char *text)</argsstring>
        <name>UI_add_error_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a170ede6cb7f861a59bc9971fc423a4ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_dup_error_string</definition>
        <argsstring>(UI *ui, const char *text)</argsstring>
        <name>UI_dup_error_string</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a50f7b6ec1d64cd2564a24d402022e440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* UI_construct_prompt</definition>
        <argsstring>(UI *ui_method, const char *object_desc, const char *object_name)</argsstring>
        <name>UI_construct_prompt</name>
        <param>
          <type>UI *</type>
          <declname>ui_method</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>object_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>object_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ac8410f151df8fbc473d93ae40640fc23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* UI_add_user_data</definition>
        <argsstring>(UI *ui, void *user_data)</argsstring>
        <name>UI_add_user_data</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a289662fdbbcd79dcee68364f00bad975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* UI_get0_user_data</definition>
        <argsstring>(UI *ui)</argsstring>
        <name>UI_get0_user_data</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a6e11367042307b09308d3a9099760ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* UI_get0_result</definition>
        <argsstring>(UI *ui, int i)</argsstring>
        <name>UI_get0_result</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a2d7bd3727c6ed8eed0dca3162f5cdc61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_process</definition>
        <argsstring>(UI *ui)</argsstring>
        <name>UI_process</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ad83e9d95f51ce4cc858f1a82f1106147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_ctrl</definition>
        <argsstring>(UI *ui, int cmd, long i, void *p, void(*f)(void))</argsstring>
        <name>UI_ctrl</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>long</type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ace69d6a87c1fb1dcb534428d97edf75d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_get_ex_new_index</definition>
        <argsstring>(long argl, void *argp, CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func, CRYPTO_EX_free *free_func)</argsstring>
        <name>UI_get_ex_new_index</name>
        <param>
          <type>long</type>
          <declname>argl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argp</declname>
        </param>
        <param>
          <type>CRYPTO_EX_new *</type>
          <declname>new_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_dup *</type>
          <declname>dup_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_free *</type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a436d336638c53a4baab12968e2713b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_set_ex_data</definition>
        <argsstring>(UI *r, int idx, void *arg)</argsstring>
        <name>UI_set_ex_data</name>
        <param>
          <type>UI *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a3dd13757e570fb900b00cc3c5bb540e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* UI_get_ex_data</definition>
        <argsstring>(UI *r, int idx)</argsstring>
        <name>UI_get_ex_data</name>
        <param>
          <type>UI *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ac807a8fa78e5b387bc167f6f2dcfbc01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UI_set_default_method</definition>
        <argsstring>(const UI_METHOD *meth)</argsstring>
        <name>UI_set_default_method</name>
        <param>
          <type>const UI_METHOD *</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1aac5e87f2e0bcd823aa50b7f8d22b3354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const UI_METHOD *</type>
        <definition>const UI_METHOD* UI_get_default_method</definition>
        <argsstring>(void)</argsstring>
        <name>UI_get_default_method</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a5de6f9ea50105627ab6a4bd8723d852b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const UI_METHOD *</type>
        <definition>const UI_METHOD* UI_get_method</definition>
        <argsstring>(UI *ui)</argsstring>
        <name>UI_get_method</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a61f2c3537fdeb2c73912fd468fc29a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const UI_METHOD *</type>
        <definition>const UI_METHOD* UI_set_method</definition>
        <argsstring>(UI *ui, const UI_METHOD *meth)</argsstring>
        <name>UI_set_method</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>const UI_METHOD *</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a8dc92bf3287a546517d1a4c7f7c0bfb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UI_METHOD *</type>
        <definition>UI_METHOD* UI_OpenSSL</definition>
        <argsstring>(void)</argsstring>
        <name>UI_OpenSSL</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a385f90adc8c050498e925d144f05f6d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UI_METHOD *</type>
        <definition>UI_METHOD* UI_create_method</definition>
        <argsstring>(char *name)</argsstring>
        <name>UI_create_method</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a123bc7627f6390ec1a42931ddbf41e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UI_destroy_method</definition>
        <argsstring>(UI_METHOD *ui_method)</argsstring>
        <name>UI_destroy_method</name>
        <param>
          <type>UI_METHOD *</type>
          <declname>ui_method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ada3a01714650ccea966e3dae9e7edf1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_method_set_opener</definition>
        <argsstring>(UI_METHOD *method, int(*opener)(UI *ui))</argsstring>
        <name>UI_method_set_opener</name>
        <param>
          <type>UI_METHOD *</type>
          <declname>method</declname>
        </param>
        <param>
          <type>int(*)(UI *ui)</type>
          <declname>opener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a48faac571b42e45f088b1f7d22e55775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_method_set_writer</definition>
        <argsstring>(UI_METHOD *method, int(*writer)(UI *ui, UI_STRING *uis))</argsstring>
        <name>UI_method_set_writer</name>
        <param>
          <type>UI_METHOD *</type>
          <declname>method</declname>
        </param>
        <param>
          <type>int(*)(UI *ui, UI_STRING *uis)</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a18d5cdc9381c56859477605c9d77a840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_method_set_flusher</definition>
        <argsstring>(UI_METHOD *method, int(*flusher)(UI *ui))</argsstring>
        <name>UI_method_set_flusher</name>
        <param>
          <type>UI_METHOD *</type>
          <declname>method</declname>
        </param>
        <param>
          <type>int(*)(UI *ui)</type>
          <declname>flusher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ad5b1690a685b7dc84f08b9127d36bcfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_method_set_reader</definition>
        <argsstring>(UI_METHOD *method, int(*reader)(UI *ui, UI_STRING *uis))</argsstring>
        <name>UI_method_set_reader</name>
        <param>
          <type>UI_METHOD *</type>
          <declname>method</declname>
        </param>
        <param>
          <type>int(*)(UI *ui, UI_STRING *uis)</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ad003e0891afa2d97434b9ee10582a8e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_method_set_closer</definition>
        <argsstring>(UI_METHOD *method, int(*closer)(UI *ui))</argsstring>
        <name>UI_method_set_closer</name>
        <param>
          <type>UI_METHOD *</type>
          <declname>method</declname>
        </param>
        <param>
          <type>int(*)(UI *ui)</type>
          <declname>closer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1acb3a857fd6b8a94fa17c20c4013eeeb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_method_set_prompt_constructor</definition>
        <argsstring>(UI_METHOD *method, char *(*prompt_constructor)(UI *ui, const char *object_desc, const char *object_name))</argsstring>
        <name>UI_method_set_prompt_constructor</name>
        <param>
          <type>UI_METHOD *</type>
          <declname>method</declname>
        </param>
        <param>
          <type>char *(*)(UI *ui, const char *object_desc, const char *object_name)</type>
          <declname>prompt_constructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a71fd45eff28263ceb39d3d7bbf1d97fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum UI_string_types</type>
        <definition>enum UI_string_types UI_get_string_type</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get_string_type</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a64c47951f219042cf18b9ccdf8d44223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_get_input_flags</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get_input_flags</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1abce72f98c267ef1e6410e23041246874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* UI_get0_output_string</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get0_output_string</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a5e47dfcf23132d0bcbe23d0256aedc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* UI_get0_action_string</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get0_action_string</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a380a916a24a679d7f8747138aad94f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* UI_get0_result_string</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get0_result_string</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1adca75b4c15b80cac564d3b27220ee1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* UI_get0_test_string</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get0_test_string</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a6d0b532f699d5c8ffdc6602cb7e64d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_get_result_minsize</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get_result_minsize</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1afad0375d65364acee4c8738626668e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_get_result_maxsize</definition>
        <argsstring>(UI_STRING *uis)</argsstring>
        <name>UI_get_result_maxsize</name>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a6f8d7776997b3b97cd9547d3d3b0f492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_set_result</definition>
        <argsstring>(UI *ui, UI_STRING *uis, const char *result)</argsstring>
        <name>UI_set_result</name>
        <param>
          <type>UI *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type>UI_STRING *</type>
          <declname>uis</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1aa2cb3e48de6a82d850656e2a55fb6730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_UTIL_read_pw_string</definition>
        <argsstring>(char *buf, int length, const char *prompt, int verify)</argsstring>
        <name>UI_UTIL_read_pw_string</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1aaf87c9bcfe96800fb266e3390ad150a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UI_UTIL_read_pw</definition>
        <argsstring>(char *buf, char *buff, int size, const char *prompt, int verify)</argsstring>
        <name>UI_UTIL_read_pw</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a8d858020b63315a6f5e9a54fb1f3c67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_UI_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_UI_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ui.h" line="353" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/ui/ui.h<sp/>-*-<sp/>mode:C;<sp/>c-file-style:<sp/>&quot;eay&quot;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Written<sp/>by<sp/>Richard<sp/>Levitte<sp/>(richard@levitte.org)<sp/>for<sp/>the<sp/>OpenSSL</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>project<sp/>2001.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001<sp/>The<sp/>OpenSSL<sp/>Project.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgment:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>OpenSSL<sp/>Project</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>for<sp/>use<sp/>in<sp/>the<sp/>OpenSSL<sp/>Toolkit.<sp/>(http://www.openssl.org/)&quot;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>4.<sp/>The<sp/>names<sp/>&quot;OpenSSL<sp/>Toolkit&quot;<sp/>and<sp/>&quot;OpenSSL<sp/>Project&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>prior<sp/>written<sp/>permission.<sp/>For<sp/>written<sp/>permission,<sp/>please<sp/>contact</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>openssl-core@openssl.org.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>5.<sp/>Products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>may<sp/>not<sp/>be<sp/>called<sp/>&quot;OpenSSL&quot;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>nor<sp/>may<sp/>&quot;OpenSSL&quot;<sp/>appear<sp/>in<sp/>their<sp/>names<sp/>without<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>permission<sp/>of<sp/>the<sp/>OpenSSL<sp/>Project.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>6.<sp/>Redistributions<sp/>of<sp/>any<sp/>form<sp/>whatsoever<sp/>must<sp/>retain<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>acknowledgment:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>OpenSSL<sp/>Project</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>for<sp/>use<sp/>in<sp/>the<sp/>OpenSSL<sp/>Toolkit<sp/>(http://www.openssl.org/)&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>OpenSSL<sp/>PROJECT<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>OpenSSL<sp/>PROJECT<sp/>OR</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by<sp/>Eric<sp/>Young</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>(eay@cryptsoft.com).<sp/><sp/>This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_UI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_UI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/safestack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ossl_typ.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declared<sp/>already<sp/>in<sp/>ossl_typ.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>typedef<sp/>struct<sp/>ui_st<sp/>UI;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>typedef<sp/>struct<sp/>ui_method_st<sp/>UI_METHOD;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>following<sp/>functions<sp/>return<sp/>-1<sp/>or<sp/>NULL<sp/>on<sp/>error<sp/>and<sp/>in<sp/>some<sp/>cases</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>(UI_process())<sp/>-2<sp/>if<sp/>interrupted<sp/>or<sp/>in<sp/>some<sp/>other<sp/>way<sp/>cancelled.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>When<sp/>everything<sp/>is<sp/>fine,<sp/>they<sp/>return<sp/>0,<sp/>a<sp/>positive<sp/>value<sp/>or<sp/>a<sp/>non-NULL</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>pointer,<sp/>all<sp/>depending<sp/>on<sp/>their<sp/>purpose.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Creators<sp/>and<sp/>destructor.<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">UI<sp/>*UI_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">UI<sp/>*UI_new_method(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UI_METHOD<sp/>*method);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UI_free(UI<sp/>*ui);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>functions<sp/>are<sp/>used<sp/>to<sp/>add<sp/>strings<sp/>to<sp/>be<sp/>printed<sp/>and<sp/>prompt</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>strings<sp/>to<sp/>prompt<sp/>for<sp/>data.<sp/><sp/>The<sp/>names<sp/>are<sp/>UI_{add,dup}_&lt;function&gt;_string</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>and<sp/>UI_{add,dup}_input_boolean.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>UI_{add,dup}_&lt;function&gt;_string<sp/>have<sp/>the<sp/>following<sp/>meanings:</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>add<sp/>add<sp/>a<sp/>text<sp/>or<sp/>prompt<sp/>string.<sp/><sp/>The<sp/>pointers<sp/>given<sp/>to<sp/>these</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions<sp/>are<sp/>used<sp/>verbatim,<sp/>no<sp/>copying<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>dup<sp/>make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>text<sp/>or<sp/>prompt<sp/>string,<sp/>then<sp/>add<sp/>the<sp/>copy</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>collection<sp/>of<sp/>strings<sp/>in<sp/>the<sp/>user<sp/>interface.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;function&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>is<sp/>a<sp/>name<sp/>for<sp/>the<sp/>functionality<sp/>that<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>shall<sp/>be<sp/>used<sp/>for.<sp/><sp/>It<sp/>can<sp/>be<sp/>one<sp/>of:</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/><sp/><sp/>use<sp/>the<sp/>string<sp/>as<sp/>data<sp/>prompt.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verify<sp/><sp/>use<sp/>the<sp/>string<sp/>as<sp/>verification<sp/>prompt.<sp/><sp/>This</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>used<sp/>to<sp/>verify<sp/>a<sp/>previous<sp/>input.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info<sp/><sp/><sp/><sp/>use<sp/>the<sp/>string<sp/>for<sp/>informational<sp/>output.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/><sp/><sp/>use<sp/>the<sp/>string<sp/>for<sp/>error<sp/>output.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>Honestly,<sp/>there&apos;s<sp/>currently<sp/>no<sp/>difference<sp/>between<sp/>info<sp/>and<sp/>error<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>moment.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>UI_{add,dup}_input_boolean<sp/>have<sp/>the<sp/>same<sp/>semantics<sp/>for<sp/>&quot;add&quot;<sp/>and<sp/>&quot;dup&quot;,</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>and<sp/>are<sp/>typically<sp/>used<sp/>when<sp/>one<sp/>wants<sp/>to<sp/>prompt<sp/>for<sp/>a<sp/>yes/no<sp/>response.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>All<sp/>of<sp/>the<sp/>functions<sp/>in<sp/>this<sp/>group<sp/>take<sp/>a<sp/>UI<sp/>and<sp/>a<sp/>prompt<sp/>string.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>The<sp/>string<sp/>input<sp/>and<sp/>verify<sp/>addition<sp/>functions<sp/>also<sp/>take<sp/>a<sp/>flag<sp/>argument,</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>a<sp/>buffer<sp/>for<sp/>the<sp/>result<sp/>to<sp/>end<sp/>up<sp/>with,<sp/>a<sp/>minimum<sp/>input<sp/>size<sp/>and<sp/>a<sp/>maximum</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>input<sp/>size<sp/>(the<sp/>result<sp/>buffer<sp/>MUST<sp/>be<sp/>large<sp/>enough<sp/>to<sp/>be<sp/>able<sp/>to<sp/>contain</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>characters).<sp/><sp/>Additionally,<sp/>the<sp/>verify<sp/>addition</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>functions<sp/>takes<sp/>another<sp/>buffer<sp/>to<sp/>compare<sp/>the<sp/>result<sp/>against.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>The<sp/>boolean<sp/>input<sp/>functions<sp/>take<sp/>an<sp/>action<sp/>description<sp/>string<sp/>(which<sp/>should</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>be<sp/>safe<sp/>to<sp/>ignore<sp/>if<sp/>the<sp/>expected<sp/>user<sp/>action<sp/>is<sp/>obvious,<sp/>for<sp/>example<sp/>with</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>a<sp/>dialog<sp/>box<sp/>with<sp/>an<sp/>OK<sp/>button<sp/>and<sp/>a<sp/>Cancel<sp/>button),<sp/>a<sp/>string<sp/>of<sp/>acceptable</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>characters<sp/>to<sp/>mean<sp/>OK<sp/>and<sp/>to<sp/>mean<sp/>Cancel.<sp/><sp/>The<sp/>two<sp/>last<sp/>strings<sp/>are<sp/>checked</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>to<sp/>make<sp/>sure<sp/>they<sp/>don&apos;t<sp/>have<sp/>common<sp/>characters.<sp/><sp/>Additionally,<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>flag<sp/>argument<sp/>as<sp/>for<sp/>the<sp/>string<sp/>input<sp/>is<sp/>taken,<sp/>as<sp/>well<sp/>as<sp/>a<sp/>result<sp/>buffer.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>The<sp/>result<sp/>buffer<sp/>is<sp/>required<sp/>to<sp/>be<sp/>at<sp/>least<sp/>one<sp/>byte<sp/>long.<sp/><sp/>Depending<sp/>on</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>the<sp/>answer,<sp/>the<sp/>first<sp/>character<sp/>from<sp/>the<sp/>OK<sp/>or<sp/>the<sp/>Cancel<sp/>character<sp/>strings</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>will<sp/>be<sp/>stored<sp/>in<sp/>the<sp/>first<sp/>byte<sp/>of<sp/>the<sp/>result<sp/>buffer.<sp/><sp/>No<sp/>NUL<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>added,<sp/>so<sp/>the<sp/>result<sp/>is<sp/>*not*<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>On<sp/>success,<sp/>the<sp/>all<sp/>return<sp/>an<sp/>index<sp/>of<sp/>the<sp/>added<sp/>information.<sp/><sp/>That<sp/>index</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>is<sp/>usefull<sp/>when<sp/>retrieving<sp/>results<sp/>with<sp/>UI_get0_result().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_add_input_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsize);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_dup_input_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsize);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_add_verify_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_buf);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_dup_verify_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_buf);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_add_input_boolean(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*action_desc,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ok_chars,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cancel_chars,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result_buf);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_dup_input_boolean(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*action_desc,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ok_chars,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cancel_chars,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result_buf);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_add_info_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_dup_info_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_add_error_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_dup_error_string(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>possible<sp/>flags.<sp/><sp/>They<sp/>can<sp/>be<sp/>or&apos;ed<sp/>together.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>to<sp/>have<sp/>echoing<sp/>of<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_INPUT_FLAG_ECHO<sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>a<sp/>default<sp/>password.<sp/><sp/>Where<sp/>that<sp/>password<sp/>is<sp/>found<sp/>is<sp/>completely</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>up<sp/>to<sp/>the<sp/>application,<sp/>it<sp/>might<sp/>for<sp/>example<sp/>be<sp/>in<sp/>the<sp/>user<sp/>data<sp/>set</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>with<sp/>UI_add_user_data().<sp/><sp/>It<sp/>is<sp/>not<sp/>recommended<sp/>to<sp/>have<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>one<sp/>input<sp/>in<sp/>each<sp/>UI<sp/>being<sp/>marked<sp/>with<sp/>this<sp/>flag,<sp/>or<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>might<sp/>get<sp/>confused.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_INPUT_FLAG_DEFAULT_PWD<sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>user<sp/>of<sp/>these<sp/>routines<sp/>may<sp/>want<sp/>to<sp/>define<sp/>flags<sp/>of<sp/>their<sp/>own.<sp/><sp/>The<sp/>core</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>UI<sp/>won&apos;t<sp/>look<sp/>at<sp/>those,<sp/>but<sp/>will<sp/>pass<sp/>them<sp/>on<sp/>to<sp/>the<sp/>method<sp/>routines.<sp/><sp/>They</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>must<sp/>use<sp/>higher<sp/>bits<sp/>so<sp/>they<sp/>don&apos;t<sp/>get<sp/>confused<sp/>with<sp/>the<sp/>UI<sp/>bits<sp/>above.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>UI_INPUT_FLAG_USER_BASE<sp/>tells<sp/>which<sp/>is<sp/>the<sp/>lowest<sp/>bit<sp/>to<sp/>use.<sp/><sp/>A<sp/>good</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>example<sp/>of<sp/>use<sp/>is<sp/>this:</highlight></codeline>
<codeline lineno="164"><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>MY_UI_FLAG1<sp/>(0x01<sp/>&lt;&lt;<sp/>UI_INPUT_FLAG_USER_BASE)</highlight></codeline>
<codeline lineno="166"><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_INPUT_FLAG_USER_BASE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>function<sp/>helps<sp/>construct<sp/>a<sp/>prompt.<sp/><sp/>object_desc<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>textual<sp/>short<sp/>description<sp/>of<sp/>the<sp/>object,<sp/>for<sp/>example<sp/>&quot;pass<sp/>phrase&quot;,</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>and<sp/>object_name<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>object<sp/>(might<sp/>be<sp/>a<sp/>card<sp/>name<sp/>or</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>a<sp/>file<sp/>name.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>The<sp/>returned<sp/>string<sp/>shall<sp/>always<sp/>be<sp/>allocated<sp/>on<sp/>the<sp/>heap<sp/>with</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>OPENSSL_malloc(),<sp/>and<sp/>need<sp/>to<sp/>be<sp/>free&apos;d<sp/>with<sp/>OPENSSL_free().</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>If<sp/>the<sp/>ui_method<sp/>doesn&apos;t<sp/>contain<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>user-defined<sp/>prompt</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>constructor,<sp/>a<sp/>default<sp/>string<sp/>is<sp/>built,<sp/>looking<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="180"><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;Enter<sp/>{object_desc}<sp/>for<sp/>{object_name}:&quot;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>So,<sp/>if<sp/>object_desc<sp/>has<sp/>the<sp/>value<sp/>&quot;pass<sp/>phrase&quot;<sp/>and<sp/>object_name<sp/>has</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>the<sp/>value<sp/>&quot;foo.key&quot;,<sp/>the<sp/>resulting<sp/>string<sp/>is:</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;Enter<sp/>pass<sp/>phrase<sp/>for<sp/>foo.key:&quot;</highlight></codeline>
<codeline lineno="187"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*UI_construct_prompt(UI<sp/>*ui_method,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*object_desc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*object_name);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>function<sp/>is<sp/>used<sp/>to<sp/>store<sp/>a<sp/>pointer<sp/>to<sp/>user-specific<sp/>data.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>Any<sp/>previous<sp/>such<sp/>pointer<sp/>will<sp/>be<sp/>returned<sp/>and<sp/>replaced.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>For<sp/>callback<sp/>purposes,<sp/>this<sp/>function<sp/>makes<sp/>a<sp/>lot<sp/>more<sp/>sense<sp/>than<sp/>using</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/>ex_data,<sp/>since<sp/>the<sp/>latter<sp/>requires<sp/>that<sp/>different<sp/>parts<sp/>of<sp/>OpenSSL<sp/>or</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/>applications<sp/>share<sp/>the<sp/>same<sp/>ex_data<sp/>index.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>UI_OpenSSL()<sp/>method<sp/>completely<sp/>ignores<sp/>the<sp/>user<sp/>data.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>Other<sp/>methods<sp/>may<sp/>not,<sp/>however.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*UI_add_user_data(UI<sp/>*ui,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>a<sp/>user<sp/>data<sp/>retrieving<sp/>function<sp/>as<sp/>well.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*UI_get0_user_data(UI<sp/>*ui);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>result<sp/>associated<sp/>with<sp/>a<sp/>prompt<sp/>given<sp/>with<sp/>the<sp/>index<sp/>i.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*UI_get0_result(UI<sp/>*ui,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>When<sp/>all<sp/>strings<sp/>have<sp/>been<sp/>added,<sp/>process<sp/>the<sp/>whole<sp/>thing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_process(UI<sp/>*ui);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Give<sp/>a<sp/>user<sp/>interface<sp/>parametrised<sp/>control<sp/>commands.<sp/><sp/>This<sp/>can<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>send<sp/>down<sp/>an<sp/>integer,<sp/>a<sp/>data<sp/>pointer<sp/>or<sp/>a<sp/>function<sp/>pointer,<sp/>as<sp/>well<sp/>as</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>be<sp/>used<sp/>to<sp/>get<sp/>information<sp/>from<sp/>a<sp/>UI.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_ctrl(UI<sp/>*ui,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>UI_CONTROL_PRINT_ERRORS<sp/>with<sp/>the<sp/>value<sp/>1<sp/>to<sp/>have<sp/>UI_process<sp/>print<sp/>the</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/>OpenSSL<sp/>error<sp/>stack<sp/>before<sp/>printing<sp/>any<sp/>info<sp/>or<sp/>added<sp/>error<sp/>messages<sp/>and</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>before<sp/>any<sp/>prompting.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_CTRL_PRINT_ERRORS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>a<sp/>UI_process()<sp/>is<sp/>possible<sp/>to<sp/>do<sp/>again<sp/>with<sp/>the<sp/>same<sp/>instance<sp/>of</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>a<sp/>user<sp/>interface.<sp/><sp/>This<sp/>makes<sp/>UI_ctrl()<sp/>return<sp/>1<sp/>if<sp/>it<sp/>is<sp/>redoable,<sp/>and<sp/>0</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>if<sp/>not.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_CTRL_IS_REDOABLE<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>methods<sp/>may<sp/>use<sp/>extra<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_set_app_data(s,arg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UI_set_ex_data(s,0,arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_get_app_data(s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UI_get_ex_data(s,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_get_ex_new_index(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>argl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argp,<sp/>CRYPTO_EX_new<sp/>*new_func,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_EX_dup<sp/>*dup_func,<sp/>CRYPTO_EX_free<sp/>*free_func);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_set_ex_data(UI<sp/>*r,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*UI_get_ex_data(UI<sp/>*r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>specific<sp/>methods<sp/>instead<sp/>of<sp/>the<sp/>built-in<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UI_set_default_method(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UI_METHOD<sp/>*meth);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UI_METHOD<sp/>*UI_get_default_method(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UI_METHOD<sp/>*UI_get_method(UI<sp/>*ui);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UI_METHOD<sp/>*UI_set_method(UI<sp/>*ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UI_METHOD<sp/>*meth);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>method<sp/>with<sp/>all<sp/>the<sp/>built-in<sp/>thingies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">UI_METHOD<sp/>*UI_OpenSSL(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------<sp/>For<sp/>method<sp/>writers<sp/>----------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>method<sp/>contains<sp/>a<sp/>number<sp/>of<sp/>functions<sp/>that<sp/>implement<sp/>the<sp/>low<sp/>level</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>of<sp/>the<sp/>User<sp/>Interface.<sp/><sp/>The<sp/>functions<sp/>are:</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/>an<sp/>opener<sp/><sp/><sp/>This<sp/>function<sp/>starts<sp/>a<sp/>session,<sp/>maybe<sp/>by<sp/>opening</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>channel<sp/>to<sp/>a<sp/>tty,<sp/>or<sp/>by<sp/>opening<sp/>a<sp/>window.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>writer<sp/><sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>called<sp/>to<sp/>write<sp/>a<sp/>given<sp/>string,</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maybe<sp/>to<sp/>the<sp/>tty,<sp/>maybe<sp/>as<sp/>a<sp/>field<sp/>label<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>flusher<sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>called<sp/>to<sp/>flush<sp/>everything<sp/>that</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>been<sp/>output<sp/>so<sp/>far.<sp/><sp/>It<sp/>can<sp/>be<sp/>used<sp/>to<sp/>actually</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display<sp/>a<sp/>dialog<sp/>box<sp/>after<sp/>it<sp/>has<sp/>been<sp/>built.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>reader<sp/><sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>called<sp/>to<sp/>read<sp/>a<sp/>given<sp/>prompt,</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maybe<sp/>from<sp/>the<sp/>tty,<sp/>maybe<sp/>from<sp/>a<sp/>field<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window.<sp/><sp/>Note<sp/>that<sp/>it&apos;s<sp/>called<sp/>wth<sp/>all<sp/>string</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structures,<sp/>not<sp/>only<sp/>the<sp/>prompt<sp/>ones,<sp/>so<sp/>it<sp/>must</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check<sp/>such<sp/>things<sp/>itself.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>closer<sp/><sp/><sp/><sp/>This<sp/>function<sp/>closes<sp/>the<sp/>session,<sp/>maybe<sp/>by<sp/>closing</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>channel<sp/>to<sp/>the<sp/>tty,<sp/>or<sp/>closing<sp/>the<sp/>window.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"></highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/>All<sp/>these<sp/>functions<sp/>are<sp/>expected<sp/>to<sp/>return:</highlight></codeline>
<codeline lineno="266"><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/>on<sp/>error.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/>on<sp/>success.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/>-1<sp/><sp/>on<sp/>out-of-band<sp/>events,<sp/>for<sp/>example<sp/>if<sp/>some<sp/>prompting<sp/>has</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>been<sp/>canceled<sp/>(by<sp/>pressing<sp/>Ctrl-C,<sp/>for<sp/>example).<sp/><sp/>This<sp/>is</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>checked<sp/>when<sp/>returned<sp/>by<sp/>the<sp/>flusher<sp/>or<sp/>the<sp/>reader.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>The<sp/>way<sp/>this<sp/>is<sp/>used,<sp/>the<sp/>opener<sp/>is<sp/>first<sp/>called,<sp/>then<sp/>the<sp/>writer<sp/>for<sp/>all</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>strings,<sp/>then<sp/>the<sp/>flusher,<sp/>then<sp/>the<sp/>reader<sp/>for<sp/>all<sp/>strings<sp/>and<sp/>finally<sp/>the</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>closer.<sp/><sp/>Note<sp/>that<sp/>if<sp/>you<sp/>want<sp/>to<sp/>prompt<sp/>from<sp/>a<sp/>terminal<sp/>or<sp/>other<sp/>command</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/>line<sp/>interface,<sp/>the<sp/>best<sp/>is<sp/>to<sp/>have<sp/>the<sp/>reader<sp/>also<sp/>write<sp/>the<sp/>prompts</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/>instead<sp/>of<sp/>having<sp/>the<sp/>writer<sp/>do<sp/>it.<sp/><sp/>If<sp/>you<sp/>want<sp/>to<sp/>prompt<sp/>from<sp/>a<sp/>dialog</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/>box,<sp/>the<sp/>writer<sp/>can<sp/>be<sp/>used<sp/>to<sp/>build<sp/>up<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>box,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/>flusher<sp/>to<sp/>actually<sp/>display<sp/>the<sp/>box<sp/>and<sp/>run<sp/>the<sp/>event<sp/>loop<sp/>until<sp/>all<sp/>data</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/>has<sp/>been<sp/>given,<sp/>after<sp/>which<sp/>the<sp/>reader<sp/>only<sp/>grabs<sp/>the<sp/>given<sp/>data<sp/>and<sp/>puts</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/>them<sp/>back<sp/>into<sp/>the<sp/>UI<sp/>strings.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>All<sp/>method<sp/>functions<sp/>take<sp/>a<sp/>UI<sp/>as<sp/>argument.<sp/><sp/>Additionally,<sp/>the<sp/>writer<sp/>and</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>the<sp/>reader<sp/>take<sp/>a<sp/>UI_STRING.</highlight></codeline>
<codeline lineno="285"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>UI_STRING<sp/>type<sp/>is<sp/>the<sp/>data<sp/>structure<sp/>that<sp/>contains<sp/>all<sp/>the<sp/>needed<sp/>info</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/>about<sp/>a<sp/>string<sp/>or<sp/>a<sp/>prompt,<sp/>including<sp/>test<sp/>data<sp/>for<sp/>a<sp/>verification<sp/>prompt.</highlight></codeline>
<codeline lineno="289"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ui_string_st<sp/>UI_STRING;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">DECLARE_STACK_OF(UI_STRING)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>different<sp/>types<sp/>of<sp/>strings<sp/>that<sp/>are<sp/>currently<sp/>supported.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>This<sp/>is<sp/>only<sp/>needed<sp/>by<sp/>method<sp/>authors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>UI_string_types</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>UIT_NONE=0,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>UIT_PROMPT,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prompt<sp/>for<sp/>a<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>UIT_VERIFY,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prompt<sp/>for<sp/>a<sp/>string<sp/>and<sp/>verify<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>UIT_BOOLEAN,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prompt<sp/>for<sp/>a<sp/>yes/no<sp/>response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>UIT_INFO,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>info<sp/>to<sp/>the<sp/>user<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>UIT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>an<sp/>error<sp/>message<sp/>to<sp/>the<sp/>user<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Create<sp/>and<sp/>manipulate<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">UI_METHOD<sp/>*UI_create_method(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UI_destroy_method(UI_METHOD<sp/>*ui_method);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_method_set_opener(UI_METHOD<sp/>*method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*opener)(UI<sp/>*ui));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_method_set_writer(UI_METHOD<sp/>*method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*writer)(UI<sp/>*ui,<sp/>UI_STRING<sp/>*uis));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_method_set_flusher(UI_METHOD<sp/>*method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*flusher)(UI<sp/>*ui));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_method_set_reader(UI_METHOD<sp/>*method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*reader)(UI<sp/>*ui,<sp/>UI_STRING<sp/>*uis));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_method_set_closer(UI_METHOD<sp/>*method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*closer)(UI<sp/>*ui));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_method_set_prompt_constructor(UI_METHOD<sp/>*method,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(*prompt_constructor)(UI*<sp/>ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>object_desc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>object_name));</highlight></codeline>
<codeline lineno="314"><highlight class="normal">int<sp/>(*UI_method_get_opener(UI_METHOD<sp/>*method))(UI*);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">int<sp/>(*UI_method_get_writer(UI_METHOD<sp/>*method))(UI*,UI_STRING*);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">int<sp/>(*UI_method_get_flusher(UI_METHOD<sp/>*method))(UI*);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">int<sp/>(*UI_method_get_reader(UI_METHOD<sp/>*method))(UI*,UI_STRING*);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">int<sp/>(*UI_method_get_closer(UI_METHOD<sp/>*method))(UI*);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>(*UI_method_get_prompt_constructor(UI_METHOD<sp/>*method))(UI*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>functions<sp/>are<sp/>helpers<sp/>for<sp/>method<sp/>writers<sp/>to<sp/>access<sp/>relevant</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/>data<sp/>from<sp/>a<sp/>UI_STRING.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>type<sp/>of<sp/>the<sp/>UI_STRING<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>UI_string_types<sp/>UI_get_string_type(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>input<sp/>flags<sp/>of<sp/>the<sp/>UI_STRING<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_get_input_flags(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>actual<sp/>string<sp/>to<sp/>output<sp/>(the<sp/>prompt,<sp/>info<sp/>or<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*UI_get0_output_string(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>optional<sp/>action<sp/>string<sp/>to<sp/>output<sp/>(the<sp/>boolean<sp/>promtp<sp/>instruction)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*UI_get0_action_string(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>result<sp/>of<sp/>a<sp/>prompt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*UI_get0_result_string(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>string<sp/>to<sp/>test<sp/>the<sp/>result<sp/>against.<sp/><sp/>Only<sp/>useful<sp/>with<sp/>verifies.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*UI_get0_test_string(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>required<sp/>minimum<sp/>size<sp/>of<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_get_result_minsize(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>required<sp/>maximum<sp/>size<sp/>of<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_get_result_maxsize(UI_STRING<sp/>*uis);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>result<sp/>of<sp/>a<sp/>UI_STRING.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_set_result(UI<sp/>*ui,<sp/>UI_STRING<sp/>*uis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>couple<sp/>of<sp/>popular<sp/>utility<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_UTIL_read_pw_string(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verify);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_UTIL_read_pw(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buff,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verify);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_UI_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>UI<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_GENERAL_ALLOCATE_BOOLEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_GENERAL_ALLOCATE_PROMPT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_GENERAL_ALLOCATE_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_CTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_DUP_ERROR_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_DUP_INFO_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_DUP_INPUT_BOOLEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_DUP_INPUT_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_DUP_VERIFY_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_GET0_RESULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_NEW_METHOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_F_UI_SET_RESULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_R_COMMON_OK_AND_CANCEL_CHARACTERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_R_INDEX_TOO_LARGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_R_INDEX_TOO_SMALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_R_NO_RESULT_BUFFER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_R_RESULT_TOO_LARGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_R_RESULT_TOO_SMALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UI_R_UNKNOWN_CONTROL_COMMAND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/ui.h"/>
  </compounddef>
</doxygen>
