<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="thirdparty_2poppler_2poppler_2lexer_8h" kind="file" language="C++">
    <compoundname>Lexer.h</compoundname>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_stream_8h" local="yes">Stream.h</includes>
    <includedby refid="_annot_8cc" local="yes">thirdparty/poppler/poppler/Annot.cc</includedby>
    <includedby refid="_gfx_8cc" local="yes">thirdparty/poppler/poppler/Gfx.cc</includedby>
    <includedby refid="thirdparty_2poppler_2poppler_2parser_8h" local="yes">thirdparty/poppler/poppler/Parser.h</includedby>
    <includedby refid="_global_params_win_8cc" local="yes">thirdparty/poppler/poppler/GlobalParamsWin.cc</includedby>
    <includedby refid="_hints_8cc" local="yes">thirdparty/poppler/poppler/Hints.cc</includedby>
    <includedby refid="_lexer_8cc" local="yes">thirdparty/poppler/poppler/Lexer.cc</includedby>
    <includedby refid="_linearization_8cc" local="yes">thirdparty/poppler/poppler/Linearization.cc</includedby>
    <includedby refid="_p_d_f_doc_8cc" local="yes">thirdparty/poppler/poppler/PDFDoc.cc</includedby>
    <includedby refid="_stream_8cc" local="yes">thirdparty/poppler/poppler/Stream.cc</includedby>
    <includedby refid="_x_ref_8cc" local="yes">thirdparty/poppler/poppler/XRef.cc</includedby>
    <incdepgraph>
      <node id="15287">
        <label>stdarg.h</label>
      </node>
      <node id="15288">
        <label>stdlib.h</label>
      </node>
      <node id="15284">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="15280" relation="include">
        </childnode>
        <childnode refid="15283" relation="include">
        </childnode>
      </node>
      <node id="15291">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="15283" relation="include">
        </childnode>
        <childnode refid="15278" relation="include">
        </childnode>
        <childnode refid="15292" relation="include">
        </childnode>
      </node>
      <node id="15277">
        <label>thirdparty/poppler/poppler/Lexer.h</label>
        <link refid="thirdparty_2poppler_2poppler_2lexer_8h"/>
        <childnode refid="15278" relation="include">
        </childnode>
        <childnode refid="15295" relation="include">
        </childnode>
      </node>
      <node id="15290">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="15287" relation="include">
        </childnode>
        <childnode refid="15283" relation="include">
        </childnode>
        <childnode refid="15282" relation="include">
        </childnode>
        <childnode refid="15285" relation="include">
        </childnode>
      </node>
      <node id="15294">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="15283" relation="include">
        </childnode>
        <childnode refid="15278" relation="include">
        </childnode>
        <childnode refid="15292" relation="include">
        </childnode>
      </node>
      <node id="15286">
        <label>limits.h</label>
      </node>
      <node id="15283">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="15280" relation="include">
        </childnode>
      </node>
      <node id="15289">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="15295">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="15283" relation="include">
        </childnode>
        <childnode refid="15280" relation="include">
        </childnode>
        <childnode refid="15282" relation="include">
        </childnode>
        <childnode refid="15278" relation="include">
        </childnode>
        <childnode refid="15292" relation="include">
        </childnode>
      </node>
      <node id="15293">
        <label>pthread.h</label>
      </node>
      <node id="15281">
        <label>string.h</label>
      </node>
      <node id="15285">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="15286" relation="include">
        </childnode>
        <childnode refid="15287" relation="include">
        </childnode>
        <childnode refid="15288" relation="include">
        </childnode>
        <childnode refid="15282" relation="include">
        </childnode>
      </node>
      <node id="15278">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="15279" relation="include">
        </childnode>
        <childnode refid="15280" relation="include">
        </childnode>
        <childnode refid="15281" relation="include">
        </childnode>
        <childnode refid="15282" relation="include">
        </childnode>
        <childnode refid="15284" relation="include">
        </childnode>
        <childnode refid="15285" relation="include">
        </childnode>
        <childnode refid="15289" relation="include">
        </childnode>
        <childnode refid="15290" relation="include">
        </childnode>
        <childnode refid="15291" relation="include">
        </childnode>
        <childnode refid="15294" relation="include">
        </childnode>
        <childnode refid="15295" relation="include">
        </childnode>
      </node>
      <node id="15292">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="15293" relation="include">
        </childnode>
      </node>
      <node id="15282">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="15283" relation="include">
        </childnode>
      </node>
      <node id="15279">
        <label>set</label>
      </node>
      <node id="15280">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15304">
        <label>thirdparty/poppler/poppler/PDFDoc.cc</label>
        <link refid="_p_d_f_doc_8cc_source"/>
      </node>
      <node id="15303">
        <label>thirdparty/poppler/poppler/Parser.cc</label>
        <link refid="_parser_8cc_source"/>
      </node>
      <node id="15301">
        <label>thirdparty/poppler/poppler/Hints.cc</label>
        <link refid="_hints_8cc_source"/>
      </node>
      <node id="15296">
        <label>thirdparty/poppler/poppler/Lexer.h</label>
        <link refid="thirdparty_2poppler_2poppler_2lexer_8h"/>
        <childnode refid="15297" relation="include">
        </childnode>
        <childnode refid="15298" relation="include">
        </childnode>
        <childnode refid="15299" relation="include">
        </childnode>
        <childnode refid="15300" relation="include">
        </childnode>
        <childnode refid="15301" relation="include">
        </childnode>
        <childnode refid="15306" relation="include">
        </childnode>
        <childnode refid="15302" relation="include">
        </childnode>
        <childnode refid="15304" relation="include">
        </childnode>
        <childnode refid="15307" relation="include">
        </childnode>
        <childnode refid="15305" relation="include">
        </childnode>
      </node>
      <node id="15300">
        <label>thirdparty/poppler/poppler/GlobalParamsWin.cc</label>
        <link refid="_global_params_win_8cc_source"/>
      </node>
      <node id="15299">
        <label>thirdparty/poppler/poppler/Parser.h</label>
        <link refid="thirdparty_2poppler_2poppler_2parser_8h_source"/>
        <childnode refid="15298" relation="include">
        </childnode>
        <childnode refid="15300" relation="include">
        </childnode>
        <childnode refid="15301" relation="include">
        </childnode>
        <childnode refid="15302" relation="include">
        </childnode>
        <childnode refid="15303" relation="include">
        </childnode>
        <childnode refid="15304" relation="include">
        </childnode>
        <childnode refid="15305" relation="include">
        </childnode>
      </node>
      <node id="15305">
        <label>thirdparty/poppler/poppler/XRef.cc</label>
        <link refid="_x_ref_8cc_source"/>
      </node>
      <node id="15307">
        <label>thirdparty/poppler/poppler/Stream.cc</label>
        <link refid="_stream_8cc_source"/>
      </node>
      <node id="15306">
        <label>thirdparty/poppler/poppler/Lexer.cc</label>
        <link refid="_lexer_8cc_source"/>
      </node>
      <node id="15302">
        <label>thirdparty/poppler/poppler/Linearization.cc</label>
        <link refid="_linearization_8cc_source"/>
      </node>
      <node id="15297">
        <label>thirdparty/poppler/poppler/Annot.cc</label>
        <link refid="_annot_8cc_source"/>
      </node>
      <node id="15298">
        <label>thirdparty/poppler/poppler/Gfx.cc</label>
        <link refid="_gfx_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_lexer" prot="public">Lexer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="thirdparty_2poppler_2poppler_2lexer_8h_1a7b5f43243873bbdc04a9900c23ba3ebd" prot="public" static="no">
        <name>tokBufSize</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Lexer.h" line="38" column="9" bodyfile="thirdparty/poppler/poppler/Lexer.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lexer.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006,<sp/>2007,<sp/>2010,<sp/>2013<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Krzysztof<sp/>Kowalczyk<sp/>&lt;kkowalczyk@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LEXER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEXER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Stream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_x_ref" kindref="compound">XRef</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tokBufSize<sp/>128<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>size<sp/>of<sp/>token<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lexer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_lexer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_lexer" kindref="compound">Lexer</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>lexer<sp/>for<sp/>a<sp/>single<sp/>stream.<sp/><sp/>Deletes<sp/>the<sp/>stream<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lexer<sp/>is<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="class_lexer" kindref="compound">Lexer</ref>(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>lexer<sp/>for<sp/>a<sp/>stream<sp/>or<sp/>array<sp/>of<sp/>streams<sp/>(assumes<sp/>obj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>either<sp/>a<sp/>stream<sp/>or<sp/>array<sp/>of<sp/>streams).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_lexer" kindref="compound">Lexer</ref>(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>~<ref refid="class_lexer" kindref="compound">Lexer</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>object<sp/>from<sp/>the<sp/>input<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getObj(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objNum<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getObj(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmdA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objNum);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>next<sp/>line<sp/>in<sp/>the<sp/>input<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>skipToNextLine();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>over<sp/>one<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>skipChar()<sp/>{<sp/>getChar();<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*getStream()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curStr.isStream()<sp/>?<sp/>curStr.getStream()<sp/>:<sp/>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*)NULL;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>position<sp/>in<sp/>file.<sp/><sp/>This<sp/>is<sp/>only<sp/>used<sp/>for<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>Goffset<sp/>getPos()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curStr.isStream()<sp/>?<sp/>curStr.streamGetPos()<sp/>:<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>position<sp/>in<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curStr.isStream())<sp/>curStr.streamSetPos(pos,<sp/>dir);<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>&lt;c&gt;<sp/>is<sp/>a<sp/>whitespace<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GBool<sp/>isSpace(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>often<sp/>(e.g.<sp/>~30%<sp/>on<sp/>PDF<sp/>Refernce<sp/>1.6<sp/>pdf<sp/>file<sp/>from<sp/>Adobe<sp/>site)<sp/>getChar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>called<sp/>right<sp/>after<sp/>lookChar.<sp/>In<sp/>order<sp/>to<sp/>avoid<sp/>expensive<sp/>re-doing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getChar()<sp/>of<sp/>underlying<sp/>stream,<sp/>we<sp/>cache<sp/>the<sp/>last<sp/>value<sp/>found<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lookChar()<sp/>in<sp/>lookCharLastValueCached.<sp/>A<sp/>special<sp/>value<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LOOK_VALUE_NOT_CACHED<sp/>that<sp/>should<sp/>never<sp/>be<sp/>part<sp/>of<sp/>stream<sp/>indicates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>no<sp/>value<sp/>was<sp/>cached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LOOK_VALUE_NOT_CACHED<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookCharLastValueCached;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar(GBool<sp/>comesFromLook<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="class_array" kindref="compound">Array</ref><sp/>*streams;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>input<sp/>streams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strPtr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>of<sp/>current<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>curStr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>GBool<sp/>freeArray;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>lexer<sp/>free<sp/>the<sp/>streams<sp/>array?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tokBuf[tokBufSize];<sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>token<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/Lexer.h"/>
  </compounddef>
</doxygen>
