<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_key_sig" kind="class" language="C++" prot="public">
    <compoundname>Ms::KeySig</compoundname>
    <basecompoundref refid="class_ms_1_1_element" prot="public" virt="non-virtual">Ms::Element</basecompoundref>
    <includes refid="keysig_8h" local="no">keysig.h</includes>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_ms_1_1_key_sig_1a40929fcc0fe3fe56faabfe557078a524" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Ms::KeySig::showCourtesy</definition>
        <argsstring></argsstring>
        <name>showCourtesy</name>
        <read>showCourtesy</read>
        <write>undoSetShowCourtesy</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="32" column="1" bodyfile="libmscore/keysig.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_key_sig_1a9fda3ead811d0148f5d014a8b341413a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::KeySig::_showCourtesy</definition>
        <argsstring></argsstring>
        <name>_showCourtesy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="35" column="1" bodyfile="libmscore/keysig.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_key_sig_1ac86717369131f3f772a36f99a7ff5f09" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::KeySig::_hideNaturals</definition>
        <argsstring></argsstring>
        <name>_hideNaturals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="36" column="1" bodyfile="libmscore/keysig.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_key_sig_1a529869093187e62ae0917d60bcd80502" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_key_sig_event" kindref="compound">KeySigEvent</ref></type>
        <definition>KeySigEvent Ms::KeySig::_sig</definition>
        <argsstring></argsstring>
        <name>_sig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="37" column="1" bodyfile="libmscore/keysig.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_key_sig_1ae217314489a04c3d65c89a38238fd347" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::KeySig::addLayout</definition>
        <argsstring>(SymId sym, qreal x, int y)</argsstring>
        <name>addLayout</name>
        <param>
          <type>SymId</type>
          <declname>sym</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="38" column="1" bodyfile="libmscore/keysig.cpp" bodystart="77" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_key_sig_1ac7d0897d512be0a93f4dee9537d66765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::KeySig::KeySig</definition>
        <argsstring>(Score *=0)</argsstring>
        <name>KeySig</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <defname>s</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="41" column="1" bodyfile="libmscore/keysig.cpp" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1ad79ad55a4ce361cbdd3de35ebb77550b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::KeySig::KeySig</definition>
        <argsstring>(const KeySig &amp;)</argsstring>
        <name>KeySig</name>
        <param>
          <type>const <ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref> &amp;</type>
          <defname>k</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="42" column="1" bodyfile="libmscore/keysig.cpp" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a113fdcc8b4cfcb9f15a8a1f660b6ec17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref> *</type>
        <definition>virtual KeySig* Ms::KeySig::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="class_ms_1_1_element_1adcd981af2ae9890f31c993050d5f0f25">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="43" column="1" bodyfile="libmscore/keysig.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1ab2c41ba596ae3a1eeac31bc173d7c1e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::KeySig::draw</definition>
        <argsstring>(QPainter *) const override</argsstring>
        <name>draw</name>
        <reimplements refid="class_ms_1_1_element_1a0e093baaf71efa68b681c69e70a2cb71">draw</reimplements>
        <param>
          <type>QPainter *</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="44" column="1" bodyfile="libmscore/keysig.cpp" bodystart="254" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a02d48cece9b23346b905f9b535be18e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ElementType</type>
        <definition>virtual ElementType Ms::KeySig::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="class_ms_1_1_score_element_1a3dbb763c3cd4ec05d202d03115abe1d5">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="45" column="1" bodyfile="libmscore/keysig.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a87cd45c1e8bd14b8da2889dc5ccbd4e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::KeySig::acceptDrop</definition>
        <argsstring>(EditData &amp;) const override</argsstring>
        <name>acceptDrop</name>
        <reimplements refid="class_ms_1_1_element_1a35614445f0bc2212cbcc75c3f5810543">acceptDrop</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if this element accepts a drop at canvas relative <emphasis>pos</emphasis> of given element <emphasis>type</emphasis> and <emphasis>subtype</emphasis>.</para><para>Reimplemented by elements that accept drops. Used to change cursor shape while dragging to indicate drop targets. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="46" column="1" bodyfile="libmscore/keysig.cpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1aa151797b5a5391bdd93b07d754ab370e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::KeySig::drop</definition>
        <argsstring>(EditData &amp;) override</argsstring>
        <name>drop</name>
        <reimplements refid="class_ms_1_1_element_1a0ca69a9fb48e7b9fb481aacaf3860032">drop</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a dropped element at canvas relative <emphasis>pos</emphasis> of given element <emphasis>type</emphasis> and <emphasis>subtype</emphasis>. Returns dropped element if any. The ownership of element in DropData is transfered to the called element (if not used, element has to be deleted). The returned element will be selected if not in note edit mode.</para><para>Reimplemented by elements that accept drops. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="47" column="1" bodyfile="libmscore/keysig.cpp" bodystart="279" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a50ff6fe9275deb66132ebc4166bf8207" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::KeySig::layout</definition>
        <argsstring>() override</argsstring>
        <name>layout</name>
        <reimplements refid="class_ms_1_1_element_1a3ae68f5da280c53fd1d329f20601818b">layout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="48" column="1" bodyfile="libmscore/keysig.cpp" bodystart="90" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a82035150fc1a7627ab5f75addc660c3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>qreal</type>
        <definition>qreal Ms::KeySig::mag</definition>
        <argsstring>() const override</argsstring>
        <name>mag</name>
        <reimplements refid="class_ms_1_1_element_1ad01cda9f6017d09c9fb9305de18e9310">mag</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="49" column="1" bodyfile="libmscore/keysig.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1aa55156945479d8344da3941c36b9a191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE void</type>
        <definition>void Ms::KeySig::setKey</definition>
        <argsstring>(Key)</argsstring>
        <name>setKey</name>
        <param>
          <type>Key</type>
          <defname>key</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="52" column="1" bodyfile="libmscore/keysig.cpp" bodystart="305" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a4d793018e9602aacd74bc9f7bffea925" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::KeySig::segment</definition>
        <argsstring>() const</argsstring>
        <name>segment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="54" column="1" bodyfile="libmscore/keysig.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a5807ba72878cf6417f2fdc7b17622ab7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure* Ms::KeySig::measure</definition>
        <argsstring>() const</argsstring>
        <name>measure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="55" column="1" bodyfile="libmscore/keysig.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1afe1043e6f82d9f1ecff50f37cb915e24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::KeySig::write</definition>
        <argsstring>(XmlWriter &amp;) const override</argsstring>
        <name>write</name>
        <reimplements refid="class_ms_1_1_element_1a7298ea80b152246289da660cca217ad1">write</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="56" column="1" bodyfile="libmscore/keysig.cpp" bodystart="316" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a62dd49014d94197697321eb3dcf4feb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::KeySig::read</definition>
        <argsstring>(XmlReader &amp;) override</argsstring>
        <name>read</name>
        <reimplements refid="class_ms_1_1_element_1a36da47af8aac2c422a2bc3eb91f8ac4f">read</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="57" column="1" bodyfile="libmscore/keysig.cpp" bodystart="352" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1af8b85ec70e356433fbe0e79d1dfa3276" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Q_INVOKABLE Key</type>
        <definition>Q_INVOKABLE Key Ms::KeySig::key</definition>
        <argsstring>() const</argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="59" column="1" bodyfile="libmscore/keysig.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a9d29eb07a7bd7606f8c3ecfc88d11bd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::KeySig::isCustom</definition>
        <argsstring>() const</argsstring>
        <name>isCustom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="60" column="1" bodyfile="libmscore/keysig.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a3a22be5717a47695685a0408a9a471c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::KeySig::isAtonal</definition>
        <argsstring>() const</argsstring>
        <name>isAtonal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="61" column="1" bodyfile="libmscore/keysig.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a167094029a75cd2df41ebd1b2abee522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_key_sig_event" kindref="compound">KeySigEvent</ref></type>
        <definition>KeySigEvent Ms::KeySig::keySigEvent</definition>
        <argsstring>() const</argsstring>
        <name>keySigEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="62" column="1" bodyfile="libmscore/keysig.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a285b5feb064cd72f4230eb94d5d1377a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::KeySig::operator==</definition>
        <argsstring>(const KeySig &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref> &amp;</type>
          <defname>k</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="63" column="1" bodyfile="libmscore/keysig.cpp" bodystart="467" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a53c1ab0db30d98f2e2376f6572876fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::KeySig::changeKeySigEvent</definition>
        <argsstring>(const KeySigEvent &amp;)</argsstring>
        <name>changeKeySigEvent</name>
        <param>
          <type>const <ref refid="class_ms_1_1_key_sig_event" kindref="compound">KeySigEvent</ref> &amp;</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="64" column="1" bodyfile="libmscore/keysig.cpp" bodystart="476" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1aaaf4f96a1788a5bdb3689dc2df8fb60d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::KeySig::setKeySigEvent</definition>
        <argsstring>(const KeySigEvent &amp;e)</argsstring>
        <name>setKeySigEvent</name>
        <param>
          <type>const <ref refid="class_ms_1_1_key_sig_event" kindref="compound">KeySigEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="65" column="1" bodyfile="libmscore/keysig.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a01aa4a4a477b1ee7449e358d425e3b1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Ms::KeySig::tick</definition>
        <argsstring>() const</argsstring>
        <name>tick</name>
        <reimplements refid="class_ms_1_1_element_1a6c924295f18ff18e1ab0f045b0b378f8">tick</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="66" column="1" bodyfile="libmscore/keysig.cpp" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1ae86100386edc3a5b7445b4c3d7cee79a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::KeySig::showCourtesy</definition>
        <argsstring>() const</argsstring>
        <name>showCourtesy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="68" column="1" bodyfile="libmscore/keysig.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a754d46597fabc130c535fa62ec782133" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::KeySig::setShowCourtesy</definition>
        <argsstring>(bool v)</argsstring>
        <name>setShowCourtesy</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="69" column="1" bodyfile="libmscore/keysig.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a7dbec286817957b50743ddd8ec6ef999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::KeySig::undoSetShowCourtesy</definition>
        <argsstring>(bool v)</argsstring>
        <name>undoSetShowCourtesy</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="70" column="1" bodyfile="libmscore/keysig.cpp" bodystart="496" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a4efa800c2d7bf0e669ddce813650b7b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::KeySig::setHideNaturals</definition>
        <argsstring>(bool hide)</argsstring>
        <name>setHideNaturals</name>
        <param>
          <type>bool</type>
          <declname>hide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="72" column="1" bodyfile="libmscore/keysig.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a7bef6af1f7ad82d079eccfeb6ef87f0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::KeySig::getProperty</definition>
        <argsstring>(P_ID propertyId) const</argsstring>
        <name>getProperty</name>
        <reimplements refid="class_ms_1_1_element_1af805ffa43e16423754b0b7d0bbe0bb45">getProperty</reimplements>
        <param>
          <type>P_ID</type>
          <declname>propertyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="74" column="1" bodyfile="libmscore/keysig.cpp" bodystart="505" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a1113220498d9085822d9e6e2e08aed0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::KeySig::setProperty</definition>
        <argsstring>(P_ID propertyId, const QVariant &amp;)</argsstring>
        <name>setProperty</name>
        <reimplements refid="class_ms_1_1_element_1a2fb5f247f7ebb47ec9bc6459bb7768ec">setProperty</reimplements>
        <param>
          <type>P_ID</type>
          <declname>propertyId</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="75" column="1" bodyfile="libmscore/keysig.cpp" bodystart="518" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a8064beea19ada97d1d444263c7f5035e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::KeySig::propertyDefault</definition>
        <argsstring>(P_ID id) const</argsstring>
        <name>propertyDefault</name>
        <reimplements refid="class_ms_1_1_element_1ad15189534609cea38f8d688178dbad07">propertyDefault</reimplements>
        <param>
          <type>P_ID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="76" column="1" bodyfile="libmscore/keysig.cpp" bodystart="540" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a6a2fa355e2a688fddcab8c8795607f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::KeySig::nextElement</definition>
        <argsstring>() override</argsstring>
        <name>nextElement</name>
        <reimplements refid="class_ms_1_1_element_1a81092ae7891eb2ac2d43d6fe86e1e749">nextElement</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="78" column="1" bodyfile="libmscore/keysig.cpp" bodystart="553" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a7553106cdc3f3114dc6d392145bc0fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::KeySig::prevElement</definition>
        <argsstring>() override</argsstring>
        <name>prevElement</name>
        <reimplements refid="class_ms_1_1_element_1ad48ce06a988e98b0da7d4cf1e6f56ded">prevElement</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="79" column="1" bodyfile="libmscore/keysig.cpp" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1a1b8ee6c4209142b232f93ef904259cc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::KeySig::accessibleInfo</definition>
        <argsstring>() const override</argsstring>
        <name>accessibleInfo</name>
        <reimplements refid="class_ms_1_1_element_1a249d3763ecc760841d71c305004d4c93">accessibleInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="80" column="1" bodyfile="libmscore/keysig.cpp" bodystart="571" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_key_sig_1ab6ece3ae748ec1369eae8c02aef16c15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SymId</type>
        <definition>SymId Ms::KeySig::convertFromOldId</definition>
        <argsstring>(int val) const</argsstring>
        <name>convertFromOldId</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/keysig.h" line="82" column="1" bodyfile="libmscore/keysig.cpp" bodystart="425" bodyend="461"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref> class represents a Key Signature on a staff. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9349">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
      </node>
      <node id="9347">
        <label>Ms::KeySig</label>
        <link refid="class_ms_1_1_key_sig"/>
        <childnode refid="9348" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9348">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="9349" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9352">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="9353" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="9353">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="9354" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9350">
        <label>Ms::KeySig</label>
        <link refid="class_ms_1_1_key_sig"/>
        <childnode refid="9351" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9351">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="9352" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9354">
        <label>QList&lt; ScoreElement *&gt;</label>
      </node>
    </collaborationgraph>
    <location file="libmscore/keysig.h" line="31" column="1" bodyfile="libmscore/keysig.h" bodystart="31" bodyend="83"/>
    <listofallmembers>
      <member refid="class_ms_1_1_element_1a85687d7e7b049c00327023c7306cec14" prot="protected" virt="non-virtual"><scope>Ms::KeySig</scope><name>_color</name></member>
      <member refid="class_ms_1_1_key_sig_1ac86717369131f3f772a36f99a7ff5f09" prot="private" virt="non-virtual"><scope>Ms::KeySig</scope><name>_hideNaturals</name></member>
      <member refid="class_ms_1_1_score_element_1a405b151c60a010237414678a0e0952af" prot="protected" virt="non-virtual"><scope>Ms::KeySig</scope><name>_links</name></member>
      <member refid="class_ms_1_1_element_1a24960cc1b17ecdef26c9e2e51f8778f4" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>_name</name></member>
      <member refid="class_ms_1_1_key_sig_1a9fda3ead811d0148f5d014a8b341413a" prot="private" virt="non-virtual"><scope>Ms::KeySig</scope><name>_showCourtesy</name></member>
      <member refid="class_ms_1_1_key_sig_1a529869093187e62ae0917d60bcd80502" prot="private" virt="non-virtual"><scope>Ms::KeySig</scope><name>_sig</name></member>
      <member refid="class_ms_1_1_element_1a833151435bfcef81ea589f9e8fc3154b" prot="protected" virt="non-virtual"><scope>Ms::KeySig</scope><name>_z</name></member>
      <member refid="class_ms_1_1_element_1ac64eee038c2d81d1ae934be877d8acc5" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>abbox</name></member>
      <member refid="class_ms_1_1_key_sig_1a87cd45c1e8bd14b8da2889dc5ccbd4e9" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>acceptDrop</name></member>
      <member refid="class_ms_1_1_element_1ad28416b7cf27aad952ff9e872284ee54" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>accessibleExtraInfo</name></member>
      <member refid="class_ms_1_1_key_sig_1a1b8ee6c4209142b232f93ef904259cc3" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>accessibleInfo</name></member>
      <member refid="class_ms_1_1_element_1a6466e3a3ada3e0e7add1d1977bbfda96" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>add</name></member>
      <member refid="class_ms_1_1_element_1aeda671935e53857c2dee17b03d68b276" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>addbbox</name></member>
      <member refid="class_ms_1_1_key_sig_1ae217314489a04c3d65c89a38238fd347" prot="private" virt="non-virtual"><scope>Ms::KeySig</scope><name>addLayout</name></member>
      <member refid="class_ms_1_1_element_1a5c4dde45d29ea08d897e8ebcb9356658" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>adjustReadPos</name></member>
      <member refid="class_ms_1_1_element_1a36da6a07a74436d96c739f7134873eda" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>autoplace</name></member>
      <member refid="class_ms_1_1_element_1a977f5fd6785ea8b160d6b1943727ec9e" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>baseLine</name></member>
      <member refid="class_ms_1_1_element_1adc4d7b66745fbb0335dc73f0c3996994" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_element_1a2c5b74dd03d2d523e2318dbb3b15b13e" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_element_1a6ca9221d8858907d3063fa58255fb804" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>canvasBoundingRect</name></member>
      <member refid="class_ms_1_1_element_1aafc617f0cd5069a406a83da394b15e53" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>canvasPos</name></member>
      <member refid="class_ms_1_1_element_1a60903fed3fd306167c53d86ff3120b3c" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>canvasX</name></member>
      <member refid="class_ms_1_1_element_1a6b065b12b8c1a8549b2a5f96394059af" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>change</name></member>
      <member refid="class_ms_1_1_key_sig_1a53c1ab0db30d98f2e2376f6572876fcc" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>changeKeySigEvent</name></member>
      <member refid="class_ms_1_1_element_1aa3c82fa9821655ba767d02fb08fb3093" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>check</name></member>
      <member refid="class_ms_1_1_element_1a1464c2a43fca79ae654dc37064222755" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>clearFlags</name></member>
      <member refid="class_ms_1_1_key_sig_1a113fdcc8b4cfcb9f15a8a1f660b6ec17" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>clone</name></member>
      <member refid="class_ms_1_1_element_1aaf1b495b1a35846de518c268fc856afd" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>color</name></member>
      <member refid="class_ms_1_1_element_1a688112ba0053649f6ec94ed4efa19584" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>concertPitch</name></member>
      <member refid="class_ms_1_1_element_1a50e66c130bd475554fef1131c68ee4bb" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>contains</name></member>
      <member refid="class_ms_1_1_key_sig_1ab6ece3ae748ec1369eae8c02aef16c15" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>convertFromOldId</name></member>
      <member refid="class_ms_1_1_element_1a0e94278fa705e7ee020dd9b652d1bced" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>create</name></member>
      <member refid="class_ms_1_1_element_1a9de808f86f2dac5c4f7c4f9adc4d1d69" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a1aa2bbcaf4a29fe0f0c7723940485321" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a3396b960b9454ded75569952e2974daa" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>custom</name></member>
      <member refid="class_ms_1_1_element_1ad4d4351606adf92e9628dd7a85825ecb" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>drag</name></member>
      <member refid="class_ms_1_1_element_1a0250d845ffb8a34508b753bf57a7d407" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>dragAnchor</name></member>
      <member refid="class_ms_1_1_key_sig_1ab2c41ba596ae3a1eeac31bc173d7c1e2" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>draw</name></member>
      <member refid="class_ms_1_1_element_1aea1fcde23f210754997babe67e7c32aa" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>drawAt</name></member>
      <member refid="class_ms_1_1_element_1aeacd589786e73e54e81ba2cc9a812126" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>drawEditMode</name></member>
      <member refid="class_ms_1_1_element_1a19be3f786fea6071a0043666dfed093c" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1ab46d5de09232cb2f8d3e52de5042eff1" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1a99b748b700ce85d3507a51d5221191f4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_element_1aae2c7e7cfc90cf5e4d34573599c4cfe9" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_key_sig_1aa151797b5a5391bdd93b07d754ab370e" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>drop</name></member>
      <member refid="class_ms_1_1_element_1ac8a8ef532022a6618fd7c2827ab9d9e1" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>dropTarget</name></member>
      <member refid="class_ms_1_1_element_1a6392770f67e4c8dee01c324f63d5fcd7" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>dump</name></member>
      <member refid="class_ms_1_1_element_1a457eea698729e033dbe4949e38b348fa" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>dumpQPointF</name></member>
      <member refid="class_ms_1_1_element_1a63a79b1d3f298a5f06fe0548fc4474fc" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>edit</name></member>
      <member refid="class_ms_1_1_element_1a4de0afcde56da979d060edebd7bfd003" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>editCopy</name></member>
      <member refid="class_ms_1_1_element_1a4f5994e224c19a9f0ac2cdba056be706" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>editCut</name></member>
      <member refid="class_ms_1_1_element_1aebe5668ebea4eb253a203211eb6beb12" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>editDrag</name></member>
      <member refid="class_ms_1_1_element_1aef368799f5d05abeada68f329a75a836" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>Element</name></member>
      <member refid="class_ms_1_1_element_1acd09fb62181874c199be863980a23328" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>Element</name></member>
      <member refid="class_ms_1_1_element_1adbcd81f12f80859fdaf2ca1bd24d23d1" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>enabled</name></member>
      <member refid="class_ms_1_1_element_1abf57779ffc58ab9be91ff9376bb4b8c3" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>endDrag</name></member>
      <member refid="class_ms_1_1_element_1a65a5edb8c0c81b5f00f46f59ccfa8a1b" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>endEdit</name></member>
      <member refid="class_ms_1_1_element_1a827ec4bfa277942000b5cd94789a158c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>endEditDrag</name></member>
      <member refid="class_ms_1_1_element_1a9ce7e4cd657b83a9d6d4faf812c0d3a4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>findMeasure</name></member>
      <member refid="class_ms_1_1_element_1aedd1f66a4881665f277bc30fefe765b2" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>flag</name></member>
      <member refid="class_ms_1_1_element_1ae7e8d5928732f4b0c60cf6bc0060eb32" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>flags</name></member>
      <member refid="class_ms_1_1_element_1a3679cdb6351e67e9f482fa9a7fb3d466" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>generated</name></member>
      <member refid="class_ms_1_1_element_1ae486830fb33c13e5a392df2021b1732c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>getGrip</name></member>
      <member refid="class_ms_1_1_key_sig_1a7bef6af1f7ad82d079eccfeb6ef87f0c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>getProperty</name></member>
      <member refid="class_ms_1_1_score_element_1ac70559cf9efa9e503dcafd3a6d82c7a0" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>getPropertyStyle</name></member>
      <member refid="class_ms_1_1_element_1a03fc88ee19e2958f2443213af6d5e77d" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>gripAnchor</name></member>
      <member refid="class_ms_1_1_element_1abb3880878a2f2826b253d5e0e14b32b6" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>header</name></member>
      <member refid="class_ms_1_1_element_1a2a8ba8af6817e602c27c154e93542028" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>height</name></member>
      <member refid="class_ms_1_1_element_1affda693d2a03d79c80b363f66a1283c6" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>initSubStyle</name></member>
      <member refid="class_ms_1_1_element_1a77459c7e2f1077ec3b68b11c26640685" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>intersects</name></member>
      <member refid="class_ms_1_1_element_1a5f1d010c61f361c3310fd22cd9f65d88" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>ipos</name></member>
      <member refid="class_ms_1_1_key_sig_1a3a22be5717a47695685a0408a9a471c2" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isAtonal</name></member>
      <member refid="class_ms_1_1_score_element_1a997e1063786d8c705c74b3d66c54f269" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isBox</name></member>
      <member refid="class_ms_1_1_score_element_1accef1c91df491a43c54e70474deea60c" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isChordRest</name></member>
      <member refid="class_ms_1_1_key_sig_1a9d29eb07a7bd7606f8c3ecfc88d11bd9" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isCustom</name></member>
      <member refid="class_ms_1_1_score_element_1a203290a59b13861b957d2943f65a4cf0" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isDurationElement</name></member>
      <member refid="class_ms_1_1_element_1accef4917f0fce522b94b90a3ccd0f76b" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>isEditable</name></member>
      <member refid="class_ms_1_1_score_element_1a06e5d7c169bf6eb01f5f723cbdae973f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isMeasureBase</name></member>
      <member refid="class_ms_1_1_element_1aaad0ef7a078cd5d1659ff7ed9f65582c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>isMovable</name></member>
      <member refid="class_ms_1_1_element_1a592da9bef8f5ea3c9840931e8db5f6f6" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isNudged</name></member>
      <member refid="class_ms_1_1_element_1a8612168f4af9d7a976e1f8c8f6826143" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isPrintable</name></member>
      <member refid="class_ms_1_1_element_1a9c371f80fb0c8170ba7c54dd22e52ca6" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isSegmentFlag</name></member>
      <member refid="class_ms_1_1_score_element_1a4de90a044cdd2a7030d707f2b081c8a4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isSLine</name></member>
      <member refid="class_ms_1_1_score_element_1acf35020b5e670ac13791697e65b679d4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isSLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a372dfc0678c5194028e61b6a9a24ab62" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isSlurTieSegment</name></member>
      <member refid="class_ms_1_1_element_1a9ee65f31082d1e62a375fdd336df6ca1" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>isSpanner</name></member>
      <member refid="class_ms_1_1_element_1aa869afa0ddf7b15a0a0c9853cae603c4" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>isSpannerSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a2a2f39185cea69203227cdbbf781f402" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isStaffText</name></member>
      <member refid="class_ms_1_1_score_element_1a979c3d0bfaab90c64947e709eca66371" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>isText</name></member>
      <member refid="class_ms_1_1_element_1aa8c81e3444c2166a739fb31ca1bffe4e" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>isUserModified</name></member>
      <member refid="class_ms_1_1_element_1a07c3b2ed980bf10d79c377a68f7c500d" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>itemDiscovered</name></member>
      <member refid="class_ms_1_1_key_sig_1af8b85ec70e356433fbe0e79d1dfa3276" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>key</name></member>
      <member refid="class_ms_1_1_key_sig_1ac7d0897d512be0a93f4dee9537d66765" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>KeySig</name></member>
      <member refid="class_ms_1_1_key_sig_1ad79ad55a4ce361cbdd3de35ebb77550b" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>KeySig</name></member>
      <member refid="class_ms_1_1_key_sig_1a167094029a75cd2df41ebd1b2abee522" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>keySigEvent</name></member>
      <member refid="class_ms_1_1_key_sig_1a50ff6fe9275deb66132ebc4166bf8207" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>layout</name></member>
      <member refid="class_ms_1_1_score_element_1ad9b69df1d2c04f2b298520bb649a8c55" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>lid</name></member>
      <member refid="class_ms_1_1_element_1ab6aade6de785c3ad52c1ed1dadcfcd9f" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>linkedClone</name></member>
      <member refid="class_ms_1_1_score_element_1a2f0ed55c566c19cb483d77250cb52450" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>linkList</name></member>
      <member refid="class_ms_1_1_score_element_1a38f371d2c830610ab93e74c813d55e07" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>links</name></member>
      <member refid="class_ms_1_1_score_element_1a1dad93f0591eb31f69854e8f141b051e" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>linkTo</name></member>
      <member refid="class_ms_1_1_element_1a904f7cbd2d6c478e10a6e7d7ae9f638d" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>localSpatiumChanged</name></member>
      <member refid="class_ms_1_1_key_sig_1a82035150fc1a7627ab5f75addc660c3b" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>mag</name></member>
      <member refid="class_ms_1_1_element_1a7d8e2560e3ab7d216656bf79ecff7ae8" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>magS</name></member>
      <member refid="class_ms_1_1_score_element_1ae4991aaf0d79271cc347530f3d07fcd6" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>masterScore</name></member>
      <member refid="class_ms_1_1_key_sig_1a5807ba72878cf6417f2fdc7b17622ab7" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>measure</name></member>
      <member refid="class_ms_1_1_element_1a90f21ba358732f3c471069758d84a76f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>mimeData</name></member>
      <member refid="class_ms_1_1_element_1a794cd19d8af68dde867bab5a0bf75344" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>mousePress</name></member>
      <member refid="class_ms_1_1_element_1acee1036e1efc8c4142fdf980d37b5745" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>move</name></member>
      <member refid="class_ms_1_1_score_element_1ad80dda73306d6b784b0cac4626f797d4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>name</name></member>
      <member refid="class_ms_1_1_score_element_1ab6ded8e7ff6dcb45db0036a57f9f9d26" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>name</name></member>
      <member refid="class_ms_1_1_element_1a3b88a2b00074559aad9b8948eaf07a6f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>name2Element</name></member>
      <member refid="class_ms_1_1_score_element_1a3a355967d09b12bbce9e361e5c7f32cb" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_key_sig_1a6a2fa355e2a688fddcab8c8795607f52" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>nextElement</name></member>
      <member refid="class_ms_1_1_element_1ab9a5b8bfe46bc3cf604635a2689bb343" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>nextGrip</name></member>
      <member refid="class_ms_1_1_element_1a77e9d09289e5df2742e8b80c18e6fe14" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>operator=</name></member>
      <member refid="class_ms_1_1_key_sig_1a285b5feb064cd72f4230eb94d5d1377a" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>operator==</name></member>
      <member refid="class_ms_1_1_element_1a97c6426acf5bd7303aef532c1d95f105" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>pageBoundingRect</name></member>
      <member refid="class_ms_1_1_element_1a06cc027fe14db0cf896f02931356ae24" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>pagePos</name></member>
      <member refid="class_ms_1_1_element_1afbc508a91ce6aa696f2f6e33bd350bd8" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>pageX</name></member>
      <member refid="class_ms_1_1_element_1a52b30fdd589beba5b760a561a50ac601" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>parent</name></member>
      <member refid="class_ms_1_1_element_1a0049832d4191b3ce02446efa09127610" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>part</name></member>
      <member refid="class_ms_1_1_element_1a8ba22391443270db0f91a3164c457d1e" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>placeAbove</name></member>
      <member refid="class_ms_1_1_element_1a50092b502c319cb696998f24fc038695" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>placeBelow</name></member>
      <member refid="class_ms_1_1_element_1a951493711a51487f7f3c1786703b1a20" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>placement</name></member>
      <member refid="class_ms_1_1_element_1a1c16c977d6ad375dd159d459370deecb" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>Placement</name></member>
      <member refid="class_ms_1_1_element_1aa1bfaad0745fdce188743b73821e0692" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>point</name></member>
      <member refid="class_ms_1_1_element_1a19157e811d0d2a0e3c94dc844039ba2f" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>pos</name></member>
      <member refid="class_ms_1_1_key_sig_1a7553106cdc3f3114dc6d392145bc0fae" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>prevElement</name></member>
      <member refid="class_ms_1_1_element_1ade142ed940c21dfcd893bb8fd42c97ca" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>prevGrip</name></member>
      <member refid="class_ms_1_1_key_sig_1a8064beea19ada97d1d444263c7f5035e" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_score_element_1a1ccb82c8170c0b8ca5748879bffc44e6" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>propertyFlags</name></member>
      <member refid="class_ms_1_1_key_sig_1a62dd49014d94197697321eb3dcf4feb1" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>read</name></member>
      <member refid="class_ms_1_1_element_1abe885343e6c9c51d55cbf42865451a2b" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>readPos</name></member>
      <member refid="class_ms_1_1_element_1aabedff22ee4d865dea6442fabb6a53a2" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>readProperties</name></member>
      <member refid="class_ms_1_1_element_1a81615eec9cf2b7debc8d9a4755bcbd89" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>readProperty</name></member>
      <member refid="class_ms_1_1_element_1a4422ccd59c2a9759591e15e290d3afdb" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>readType</name></member>
      <member refid="class_ms_1_1_element_1acca1fd58c4df74da5cefc31787a2c715" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>remove</name></member>
      <member refid="class_ms_1_1_element_1a1994a1e5042f114a6b32927b3ab0ba4c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>reset</name></member>
      <member refid="class_ms_1_1_score_element_1ae84a49e39a49427d4b859e0f2eac0a0c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>resetProperty</name></member>
      <member refid="class_ms_1_1_element_1af1e61456c704ff3d45407a5fa80e04ff" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>rtick</name></member>
      <member refid="class_ms_1_1_element_1aab6ba028de833b5255ca6402e769d9a0" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>rUserXoffset</name></member>
      <member refid="class_ms_1_1_element_1ac3a76ec2d191286d792e43e717791c08" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>rUserYoffset</name></member>
      <member refid="class_ms_1_1_element_1a6a063f005375c9b61c53cf49ebc14623" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>rxpos</name></member>
      <member refid="class_ms_1_1_element_1a1397cfb5140978e6cd9aa294ade7d738" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>rypos</name></member>
      <member refid="class_ms_1_1_element_1ab4cacda18439ce6c8c615e253c762f12" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>scanElements</name></member>
      <member refid="class_ms_1_1_score_element_1a70883d048b0884821ac779d9ab168151" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>score</name></member>
      <member refid="class_ms_1_1_score_element_1a3fed4ec5f58054eb578ff9c7bb80d72f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_score_element_1ac2b2cb70fe954ba2b1cce6d35743edf2" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_element_1a965327598f61fdc8b3b8f4160dfa13c8" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>screenReaderInfo</name></member>
      <member refid="class_ms_1_1_element_1ad7481f119f9cbef134cfb25edb05ec1d" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>scriptBbox</name></member>
      <member refid="class_ms_1_1_element_1a6eb0b7ce45672411a219b760d0854f25" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>scriptPagePos</name></member>
      <member refid="class_ms_1_1_element_1a1b18a9698567497d88954e5ce75087bc" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>scriptPos</name></member>
      <member refid="class_ms_1_1_element_1a084b1d2f0ff6b5779bc3fcdf3c7081b4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>scriptSetPos</name></member>
      <member refid="class_ms_1_1_element_1aa9461a0abb634998802ed4525ae80726" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>scriptSetUserOff</name></member>
      <member refid="class_ms_1_1_element_1a04af0ab258637369798d94a85364b021" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>scriptUserOff</name></member>
      <member refid="class_ms_1_1_key_sig_1a4d793018e9602aacd74bc9f7bffea925" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>segment</name></member>
      <member refid="class_ms_1_1_element_1a7b4ff51eff905fed21705445958253c1" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>selectable</name></member>
      <member refid="class_ms_1_1_element_1ae4f2f3a774def87e608afd55ef29b3e9" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>selected</name></member>
      <member refid="class_ms_1_1_element_1ac84d802724c43c8dcec941e8c259ebca" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setAutoplace</name></member>
      <member refid="class_ms_1_1_element_1abe5c0aa8e74388b2b6b336dfec469a35" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setbbox</name></member>
      <member refid="class_ms_1_1_element_1a22907ac84ae65fb5b6c3bc2b14f3b23c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setColor</name></member>
      <member refid="class_ms_1_1_element_1a8ca2ec95d1247f2940b1285205b2f633" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setDropTarget</name></member>
      <member refid="class_ms_1_1_element_1ab75c49bf26fcb549bd1959ffe7925d8b" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setEnabled</name></member>
      <member refid="class_ms_1_1_element_1afbd51224c47d00551983d1b25f3c6f39" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_element_1ac28da1fe20339f2277852976ac6d7d8f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_element_1a5a3ecc094ac8f4bc0cff51eef0b58a5f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setFlags</name></member>
      <member refid="class_ms_1_1_element_1a6f4204d12e78c77052520492ae4416cd" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setGenerated</name></member>
      <member refid="class_ms_1_1_element_1a8e77484bef634bde3996a6a5cd0aafbc" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setGrip</name></member>
      <member refid="class_ms_1_1_element_1a5033ef29dffbf6e40958e4fdd2802b6d" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setHeader</name></member>
      <member refid="class_ms_1_1_element_1a48786d2a55a0857f1685299e97b85b60" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setHeight</name></member>
      <member refid="class_ms_1_1_key_sig_1a4efa800c2d7bf0e669ddce813650b7b2" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setHideNaturals</name></member>
      <member refid="class_ms_1_1_key_sig_1aa55156945479d8344da3941c36b9a191" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setKey</name></member>
      <member refid="class_ms_1_1_key_sig_1aaaf4f96a1788a5bdb3689dc2df8fb60d" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setKeySigEvent</name></member>
      <member refid="class_ms_1_1_score_element_1ae1e16c1a83100a1ea23b05bfb1642283" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setLinks</name></member>
      <member refid="class_ms_1_1_element_1a49df2a43ee4c87d33b78c60cce70ff4e" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setMag</name></member>
      <member refid="class_ms_1_1_element_1aa7757f6d62dc28447706ee8eb12da5ec" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setParent</name></member>
      <member refid="class_ms_1_1_element_1ae13af03f0efac5348d139609cbadc826" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setPlacement</name></member>
      <member refid="class_ms_1_1_element_1a2a2ce2358cc23529d8f038a940062e62" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_element_1ac7fcfee452c4de8e270aa6320365008c" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_key_sig_1a1113220498d9085822d9e6e2e08aed0c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a8ad551ed64d5ee466ff0b4d5992ae252" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setPropertyFlags</name></member>
      <member refid="class_ms_1_1_element_1a3fda819868331c381fb1d7dc6dae6c48" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setReadPos</name></member>
      <member refid="class_ms_1_1_score_element_1a6a1e59c49777e28459d2270981fc97df" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setScore</name></member>
      <member refid="class_ms_1_1_element_1adfe1acfd98d816c02267b9d26a693618" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setSelectable</name></member>
      <member refid="class_ms_1_1_element_1aa7d9ce43d66fd04a403e2242051dd7a8" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setSelected</name></member>
      <member refid="class_ms_1_1_key_sig_1a754d46597fabc130c535fa62ec782133" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setShowCourtesy</name></member>
      <member refid="class_ms_1_1_element_1a2610a3ae6f4ce80c36a123fa7d1e33f2" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setSystemFlag</name></member>
      <member refid="class_ms_1_1_element_1a9b433e4368d19bc18b9d8cb4c41fe1d4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setTag</name></member>
      <member refid="class_ms_1_1_element_1a884bf81982c8c302cbdf79ea567c3ced" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setTrack</name></member>
      <member refid="class_ms_1_1_element_1a304d88a7891a731cbfb8e5b0c2e8a5fc" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setTrailer</name></member>
      <member refid="class_ms_1_1_element_1abdb004ae5050742bb6e94eefc8067442" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setUserOff</name></member>
      <member refid="class_ms_1_1_element_1aca6f405281ab38a390561198ec0c6b19" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setUserXoffset</name></member>
      <member refid="class_ms_1_1_element_1a977093e21a1f1e361992ba095ba1359f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setUserYoffset</name></member>
      <member refid="class_ms_1_1_element_1a41438f8c28ffb2eb06d55de8360c1969" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setVisible</name></member>
      <member refid="class_ms_1_1_element_1a03037db721d985f097d7ca610f402850" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setVoice</name></member>
      <member refid="class_ms_1_1_element_1ae3346b5a7ad5893674afc28c9b0877ec" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>setWidth</name></member>
      <member refid="class_ms_1_1_element_1a1a35bada3f70ea05096258aa18d74b3c" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>setZ</name></member>
      <member refid="class_ms_1_1_element_1ad46a1fa8985b3d3897101b295a7a5d3e" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>shape</name></member>
      <member refid="class_ms_1_1_key_sig_1a40929fcc0fe3fe56faabfe557078a524" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>showCourtesy</name></member>
      <member refid="class_ms_1_1_key_sig_1ae86100386edc3a5b7445b4c3d7cee79a" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>showCourtesy</name></member>
      <member refid="class_ms_1_1_element_1a9f375d79304c4cec5b45ea883c9efc86" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>spatium</name></member>
      <member refid="class_ms_1_1_element_1a8198d208370c064154b2be113981cbda" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>spatiumChanged</name></member>
      <member refid="class_ms_1_1_element_1a14581354d9bfc2c39c7dafbed79403da" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>staff</name></member>
      <member refid="class_ms_1_1_element_1a3c37abb86b5dfb5b16fe74155154bab8" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>staffIdx</name></member>
      <member refid="class_ms_1_1_element_1a7d1a4797b0aba5b63dbf254429d5fc5e" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>startDrag</name></member>
      <member refid="class_ms_1_1_element_1a44811717889176d96221850366e5f055" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>startEdit</name></member>
      <member refid="class_ms_1_1_element_1af64bdeb257a0267ac2311aa0ef526248" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>startEditDrag</name></member>
      <member refid="class_ms_1_1_element_1a96c611797736aa826470b03e254aa47c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>styleChanged</name></member>
      <member refid="class_ms_1_1_element_1ad38a889b51fa8b8553a15ca29abbc874" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>subtype</name></member>
      <member refid="class_ms_1_1_element_1a861aa05fa45296c04d4309143211a9e6" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>subtypeName</name></member>
      <member refid="class_ms_1_1_element_1a1625813b59654991c24a9a10eb580f07" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symAdvance</name></member>
      <member refid="class_ms_1_1_element_1a70a8140969dcd988ed77e91c27b6a84f" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1adad5f2c7a943687f0b3de2e896942898" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1a984c5f0381896ac71fcf054d056bbe66" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symCutOutNE</name></member>
      <member refid="class_ms_1_1_element_1a545d8382d25c1402b0e46974ce84d444" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symCutOutNW</name></member>
      <member refid="class_ms_1_1_element_1af0b900ab6bb2674c1dcad1c5100fb4ee" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symCutOutSE</name></member>
      <member refid="class_ms_1_1_element_1a0cb9e0cf90c74e5b718e10f8a9a796da" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symCutOutSW</name></member>
      <member refid="class_ms_1_1_element_1ab3254b043c87dd338bfa6630c93e8e26" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symHeight</name></member>
      <member refid="class_ms_1_1_element_1a95c4ffee60af75b49f6e1c644db44493" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symIsValid</name></member>
      <member refid="class_ms_1_1_element_1a7c49ac344dd76c56fd51dad4287b79d5" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symStemDownNW</name></member>
      <member refid="class_ms_1_1_element_1a2526cc958a514c74daebfcdcc2dae7dc" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symStemUpSE</name></member>
      <member refid="class_ms_1_1_element_1adc45b084165da6ceb3afa7913d6a3feb" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_element_1a175d0a2254d83ee5f486123cb3ea2612" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_element_1af5369c927566d27fc7f0933e2359da52" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>systemFlag</name></member>
      <member refid="class_ms_1_1_element_1a31f5e22d38f84ff52c512857c52dd668" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>tag</name></member>
      <member refid="class_ms_1_1_key_sig_1a01aa4a4a477b1ee7449e358d425e3b1d" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>tick</name></member>
      <member refid="class_ms_1_1_element_1afb8e6c4666375224388e616251fc2de3" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>toTimeSigString</name></member>
      <member refid="class_ms_1_1_element_1ab4986d1b4f0d45b8e84cf52c46885c36" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>track</name></member>
      <member refid="class_ms_1_1_element_1a868f0f5663dd1d7422c19700e070a4a6" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>trailer</name></member>
      <member refid="class_ms_1_1_element_1ab28ffe83fb1064fb3c2a6fa648bca688" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>triggerLayout</name></member>
      <member refid="class_ms_1_1_key_sig_1a02d48cece9b23346b905f9b535be18e7" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>type</name></member>
      <member refid="class_ms_1_1_score_element_1aba58b3b45f4717c238275d98509f43b7" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a8c946c701ba5d45b118fa2825306adb4" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a5a2cfd46a97161523212d204e3ff2948" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoPushProperty</name></member>
      <member refid="class_ms_1_1_score_element_1ab17bd165ec90885c9912738fd98b8f9a" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoResetProperty</name></member>
      <member refid="class_ms_1_1_element_1aa9328fefa5648b5bc3f020b6cf481f38" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoSetColor</name></member>
      <member refid="class_ms_1_1_element_1ad938df1e59bb305de3c4844d1c77e329" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoSetPlacement</name></member>
      <member refid="class_ms_1_1_key_sig_1a7dbec286817957b50743ddd8ec6ef999" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoSetShowCourtesy</name></member>
      <member refid="class_ms_1_1_element_1a4033806e37a8a0bd95f75e06fb6d1286" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>undoSetVisible</name></member>
      <member refid="class_ms_1_1_score_element_1a994f2abd8df02a160c7055b0cae26c87" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>undoUnlink</name></member>
      <member refid="class_ms_1_1_score_element_1a1d76afaf3ee463445961c3d981901be1" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>unlink</name></member>
      <member refid="class_ms_1_1_element_1a8f923fd9314b5af1d41899be45aca411" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>updateGrips</name></member>
      <member refid="class_ms_1_1_score_element_1acb1866df2e440923354fa5b1ee9d5f52" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>userName</name></member>
      <member refid="class_ms_1_1_element_1a42f3df272426b165548fb49f5d0a850a" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>userOff</name></member>
      <member refid="class_ms_1_1_element_1a9f91ce44289781c10fbaab9f5867d387" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>visible</name></member>
      <member refid="class_ms_1_1_element_1a7e7ba0487a1113884ed218ba74c6a7d6" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>voice</name></member>
      <member refid="class_ms_1_1_element_1ad1e0d3968ecafec4140aac087bd8fd99" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>vStaffIdx</name></member>
      <member refid="class_ms_1_1_element_1abd781d11186d1951028a0efaf6d5cf5a" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>width</name></member>
      <member refid="class_ms_1_1_key_sig_1afe1043e6f82d9f1ecff50f37cb915e24" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>write</name></member>
      <member refid="class_ms_1_1_element_1a6d2d848ec99034b85e1a4e3b33857840" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>writeProperties</name></member>
      <member refid="class_ms_1_1_score_element_1a27407fb370f41b2107013e918ffb00fa" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>writeProperty</name></member>
      <member refid="class_ms_1_1_element_1a6f850cd0581c46bee4661210b7a7777c" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>x</name></member>
      <member refid="class_ms_1_1_element_1a30c056051bbce9e867a512b8cbc1f912" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>y</name></member>
      <member refid="class_ms_1_1_element_1a0e947d90ca39376fd98b995d34811126" prot="public" virt="non-virtual"><scope>Ms::KeySig</scope><name>z</name></member>
      <member refid="class_ms_1_1_element_1a1a5eff5e9b3d54d8e8207a7c594a1fc9" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>~Element</name></member>
      <member refid="class_ms_1_1_score_element_1abc6cbffe99d185a7262f86be05cf6365" prot="public" virt="virtual"><scope>Ms::KeySig</scope><name>~ScoreElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
