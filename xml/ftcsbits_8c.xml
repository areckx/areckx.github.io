<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ftcsbits_8c" kind="file" language="C++">
    <compoundname>ftcsbits.c</compoundname>
    <includes local="no">ft2build.h</includes>
    <includes refid="ftcsbits_8h" local="yes">ftcsbits.h</includes>
    <includes refid="ftccback_8h" local="yes">ftccback.h</includes>
    <includes refid="ftcerror_8h" local="yes">ftcerror.h</includes>
    <includedby refid="ftcache_8c" local="yes">thirdparty/freetype/src/cache/ftcache.c</includedby>
    <incdepgraph>
      <node id="78903">
        <label>ftcmanag.h</label>
        <link refid="ftcmanag_8h_source"/>
        <childnode refid="78900" relation="include">
        </childnode>
        <childnode refid="78904" relation="include">
        </childnode>
        <childnode refid="78905" relation="include">
        </childnode>
      </node>
      <node id="78907">
        <label>ftcimage.h</label>
        <link refid="ftcimage_8h_source"/>
        <childnode refid="78900" relation="include">
        </childnode>
        <childnode refid="78902" relation="include">
        </childnode>
      </node>
      <node id="78906">
        <label>ftccback.h</label>
        <link refid="ftccback_8h_source"/>
        <childnode refid="78900" relation="include">
        </childnode>
        <childnode refid="78904" relation="include">
        </childnode>
        <childnode refid="78907" relation="include">
        </childnode>
        <childnode refid="78903" relation="include">
        </childnode>
        <childnode refid="78902" relation="include">
        </childnode>
        <childnode refid="78901" relation="include">
        </childnode>
      </node>
      <node id="78902">
        <label>ftcglyph.h</label>
        <link refid="ftcglyph_8h_source"/>
        <childnode refid="78900" relation="include">
        </childnode>
        <childnode refid="78903" relation="include">
        </childnode>
      </node>
      <node id="78905">
        <label>ftccache.h</label>
        <link refid="ftccache_8h_source"/>
        <childnode refid="78904" relation="include">
        </childnode>
      </node>
      <node id="78904">
        <label>ftcmru.h</label>
        <link refid="ftcmru_8h_source"/>
        <childnode refid="78900" relation="include">
        </childnode>
      </node>
      <node id="78900">
        <label>ft2build.h</label>
      </node>
      <node id="78899">
        <label>thirdparty/freetype/src/cache/ftcsbits.c</label>
        <link refid="ftcsbits_8c"/>
        <childnode refid="78900" relation="include">
        </childnode>
        <childnode refid="78901" relation="include">
        </childnode>
        <childnode refid="78906" relation="include">
        </childnode>
        <childnode refid="78908" relation="include">
        </childnode>
      </node>
      <node id="78901">
        <label>ftcsbits.h</label>
        <link refid="ftcsbits_8h_source"/>
        <childnode refid="78900" relation="include">
        </childnode>
        <childnode refid="78902" relation="include">
        </childnode>
      </node>
      <node id="78908">
        <label>ftcerror.h</label>
        <link refid="ftcerror_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="78909">
        <label>thirdparty/freetype/src/cache/ftcsbits.c</label>
        <link refid="ftcsbits_8c"/>
        <childnode refid="78910" relation="include">
        </childnode>
      </node>
      <node id="78910">
        <label>thirdparty/freetype/src/cache/ftcache.c</label>
        <link refid="ftcache_8c_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ftcsbits_8c_1a9c208ea57bc9a5fcbfc81a6106d28f3a" prot="public" static="no">
        <name>FT_COMPONENT</name>
        <initializer>trace_cache</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="30" column="10" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftcsbits_8c_1af233315bf70255d04d42250f17ff762f" prot="public" static="no">
        <name>CHECK_CHAR</name>
        <param><defname>d</defname></param>
        <initializer>( temp = (FT_Char)d, (FT_Int) temp == (FT_Int) d )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="149" column="9"/>
      </memberdef>
      <memberdef kind="define" id="ftcsbits_8c_1a929cf350ca7c4d3139b16de0066c93bb" prot="public" static="no">
        <name>CHECK_BYTE</name>
        <param><defname>d</defname></param>
        <initializer>( temp = (FT_Byte)d, (FT_UInt)temp == (FT_UInt)d )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="150" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ftcsbits_8c_1ab44c1a1e41bfe9fe5a1a3ead0f12aab9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ftc_sbit_copy_bitmap</definition>
        <argsstring>(FTC_SBit sbit, FT_Bitmap *bitmap, FT_Memory memory)</argsstring>
        <name>ftc_sbit_copy_bitmap</name>
        <param>
          <type><ref refid="struct_f_t_c___s_bit_rec__" kindref="compound">FTC_SBit</ref></type>
          <declname>sbit</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___bitmap__" kindref="compound">FT_Bitmap</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>FT_Memory</type>
          <declname>memory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="43" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="43" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1a82d73b35bb418552e66312570f8b3d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ftc_snode_free</definition>
        <argsstring>(FTC_Node ftcsnode, FTC_Cache cache)</argsstring>
        <name>ftc_snode_free</name>
        <param>
          <type><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref></type>
          <declname>ftcsnode</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref></type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="65" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="65" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1ad29b4ff0cf2d34a929fa1159ee0be5c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTC_SNode_Free</definition>
        <argsstring>(FTC_SNode snode, FTC_Cache cache)</argsstring>
        <name>FTC_SNode_Free</name>
        <param>
          <type><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref></type>
          <declname>snode</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref></type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="84" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1ab16d38f62d3f15e5d99717722bf4635e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ftc_snode_load</definition>
        <argsstring>(FTC_SNode snode, FTC_Manager manager, FT_UInt gindex, FT_ULong *asize)</argsstring>
        <name>ftc_snode_load</name>
        <param>
          <type><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref></type>
          <declname>snode</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___manager_rec__" kindref="compound">FTC_Manager</ref></type>
          <declname>manager</declname>
        </param>
        <param>
          <type>FT_UInt</type>
          <declname>gindex</declname>
        </param>
        <param>
          <type>FT_ULong *</type>
          <declname>asize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="102" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="102" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1acdbf35587ad8c241cd65da826d154f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTC_SNode_New</definition>
        <argsstring>(FTC_SNode *psnode, FTC_GQuery gquery, FTC_Cache cache)</argsstring>
        <name>FTC_SNode_New</name>
        <param>
          <type><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref> *</type>
          <declname>psnode</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref></type>
          <declname>gquery</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref></type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="208" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="208" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1a3dcd020d8949aac6cd3cde75c575bbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ftc_snode_new</definition>
        <argsstring>(FTC_Node *ftcpsnode, FT_Pointer ftcgquery, FTC_Cache cache)</argsstring>
        <name>ftc_snode_new</name>
        <param>
          <type><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref> *</type>
          <declname>ftcpsnode</declname>
        </param>
        <param>
          <type>FT_Pointer</type>
          <declname>ftcgquery</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref></type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="266" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="266" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1a5f14a0f6616aaf92ca382da3a35d78ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ftc_snode_weight</definition>
        <argsstring>(FTC_Node ftcsnode, FTC_Cache cache)</argsstring>
        <name>ftc_snode_weight</name>
        <param>
          <type><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref></type>
          <declname>ftcsnode</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref></type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="279" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="279" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1aef0cb4e663848c570381e5116e48f3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ftc_snode_compare</definition>
        <argsstring>(FTC_Node ftcsnode, FT_Pointer ftcgquery, FTC_Cache cache, FT_Bool *list_changed)</argsstring>
        <name>ftc_snode_compare</name>
        <param>
          <type><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref></type>
          <declname>ftcsnode</declname>
        </param>
        <param>
          <type>FT_Pointer</type>
          <declname>ftcgquery</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref></type>
          <declname>cache</declname>
        </param>
        <param>
          <type>FT_Bool *</type>
          <declname>list_changed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="325" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="325" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="ftcsbits_8c_1a81810d98a5cbcdd8c1ca61a2d2c08932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTC_SNode_Compare</definition>
        <argsstring>(FTC_SNode snode, FTC_GQuery gquery, FTC_Cache cache, FT_Bool *list_changed)</argsstring>
        <name>FTC_SNode_Compare</name>
        <param>
          <type><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref></type>
          <declname>snode</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref></type>
          <declname>gquery</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref></type>
          <declname>cache</declname>
        </param>
        <param>
          <type>FT_Bool *</type>
          <declname>list_changed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cache/ftcsbits.c" line="410" column="1" bodyfile="thirdparty/freetype/src/cache/ftcsbits.c" bodystart="410" bodyend="417"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>ftcsbits.c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FreeType<sp/>sbits<sp/>manager<sp/>(body).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2000-2015<sp/>by<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>David<sp/>Turner,<sp/>Robert<sp/>Wilhelm,<sp/>and<sp/>Werner<sp/>Lemberg.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeType<sp/>project,<sp/>and<sp/>may<sp/>only<sp/>be<sp/>used,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>FreeType<sp/>project<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license,<sp/>LICENSE.TXT.<sp/><sp/>By<sp/>continuing<sp/>to<sp/>use,<sp/>modify,<sp/>or<sp/>distribute<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>this<sp/>file<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/>have<sp/>read<sp/>the<sp/>license<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>understand<sp/>and<sp/>accept<sp/>it<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ft2build.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_CACHE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftcsbits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_OBJECTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_ERRORS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftccback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftcerror.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/><sp/>FT_COMPONENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_COMPONENT<sp/><sp/>trace_cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SBIT<sp/>CACHE<sp/>NODES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>ftc_sbit_copy_bitmap(<sp/><ref refid="struct_f_t_c___s_bit_rec__" kindref="compound">FTC_SBit</ref><sp/><sp/><sp/><sp/>sbit,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___bitmap__" kindref="compound">FT_Bitmap</ref>*<sp/><sp/>bitmap,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/>memory<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>bitmap-&gt;pitch;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>size;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pitch<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>-pitch;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>(FT_ULong)pitch<sp/>*<sp/>bitmap-&gt;rows;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!FT_ALLOC(<sp/>sbit-&gt;buffer,<sp/>size<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_MEM_COPY(<sp/>sbit-&gt;buffer,<sp/>bitmap-&gt;buffer,<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>ftc_snode_free(<sp/><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref><sp/><sp/><sp/>ftcsnode,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref><sp/><sp/>cache<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/>snode<sp/><sp/>=<sp/>(<ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref>)ftcsnode;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_bit_rec__" kindref="compound">FTC_SBit</ref><sp/><sp/><sp/>sbit<sp/><sp/><sp/>=<sp/>snode-&gt;sbits;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/>count<sp/><sp/>=<sp/>snode-&gt;count;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/>memory<sp/>=<sp/>cache-&gt;memory;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>count<sp/>&gt;<sp/>0;<sp/>sbit++,<sp/>count--<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_FREE(<sp/>sbit-&gt;buffer<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>FTC_GNode_Done(<sp/>FTC_GNODE(<sp/>snode<sp/>),<sp/>cache<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_FREE(<sp/>snode<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>FTC_SNode_Free(<sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/>snode,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref><sp/><sp/>cache<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ftc_snode_free(<sp/>FTC_NODE(<sp/>snode<sp/>),<sp/>cache<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>This<sp/>function<sp/>tries<sp/>to<sp/>load<sp/>a<sp/>small<sp/>bitmap<sp/>within<sp/>a<sp/>given<sp/>FTC_SNode.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Note<sp/>that<sp/>it<sp/>returns<sp/>a<sp/>non-zero<sp/>error<sp/>code<sp/>_only_<sp/>in<sp/>the<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>out-of-memory<sp/>condition.<sp/><sp/>For<sp/>all<sp/>other<sp/>errors<sp/>(e.g.,<sp/>corresponding</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>to<sp/>a<sp/>bad<sp/>font<sp/>file),<sp/>this<sp/>function<sp/>will<sp/>mark<sp/>the<sp/>sbit<sp/>as<sp/>`unavailable&apos;</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>and<sp/>return<sp/>a<sp/>value<sp/>of<sp/>0.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>You<sp/>should<sp/>also<sp/>read<sp/>the<sp/>comment<sp/>within<sp/>the<sp/>@ftc_snode_compare</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>function<sp/>below<sp/>to<sp/>see<sp/>how<sp/>out-of-memory<sp/>is<sp/>handled<sp/>during<sp/>a<sp/>lookup.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>ftc_snode_load(<sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/><sp/><sp/>snode,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___manager_rec__" kindref="compound">FTC_Manager</ref><sp/><sp/>manager,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/>gindex,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/>*asize<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___g_node_rec__" kindref="compound">FTC_GNode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnode<sp/><sp/>=<sp/>FTC_GNODE(<sp/>snode<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>FTC_Family<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family<sp/>=<sp/>gnode-&gt;family;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>=<sp/>manager-&gt;memory;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___face_rec__" kindref="compound">FT_Face</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_bit_rec__" kindref="compound">FTC_SBit</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbit;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_family_class_rec__" kindref="compound">FTC_SFamilyClass</ref><sp/><sp/>clazz;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(FT_UInt)(gindex<sp/>-<sp/>gnode-&gt;gindex)<sp/>&gt;=<sp/>snode-&gt;count<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_ERROR((<sp/></highlight><highlight class="stringliteral">&quot;ftc_snode_load:<sp/>invalid<sp/>glyph<sp/>index&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_THROW(<sp/>Invalid_Argument<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>sbit<sp/><sp/>=<sp/>snode-&gt;sbits<sp/>+<sp/>(<sp/>gindex<sp/>-<sp/>gnode-&gt;gindex<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>clazz<sp/>=<sp/>(<ref refid="struct_f_t_c___s_family_class_rec__" kindref="compound">FTC_SFamilyClass</ref>)family-&gt;clazz;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>sbit-&gt;buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>clazz-&gt;family_load_glyph(<sp/>family,<sp/>gindex,<sp/>manager,<sp/>&amp;face<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>BadGlyph;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref><sp/><sp/>slot<sp/><sp/><sp/>=<sp/>face-&gt;glyph;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___bitmap__" kindref="compound">FT_Bitmap</ref>*<sp/><sp/><sp/><sp/>bitmap<sp/>=<sp/>&amp;slot-&gt;bitmap;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xadvance,<sp/>yadvance;<sp/></highlight><highlight class="comment">/*<sp/>FT_GlyphSlot-&gt;advance.{x|y}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slot-&gt;format<sp/>!=<sp/>FT_GLYPH_FORMAT_BITMAP<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_TRACE0((<sp/></highlight><highlight class="stringliteral">&quot;ftc_snode_load:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>glyph<sp/>loaded<sp/>didn&apos;t<sp/>return<sp/>a<sp/>bitmap\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>BadGlyph;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>whether<sp/>our<sp/>values<sp/>fit<sp/>into<sp/>8-bit<sp/>containers!<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>not<sp/>the<sp/>case,<sp/>our<sp/>bitmap<sp/>is<sp/>too<sp/>large<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>we<sp/>will<sp/>leave<sp/>it<sp/>as<sp/>`missing&apos;<sp/>with<sp/>sbit.buffer<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_CHAR(<sp/>d<sp/>)<sp/><sp/>(<sp/>temp<sp/>=<sp/>(FT_Char)d,<sp/>(FT_Int)<sp/>temp<sp/>==<sp/>(FT_Int)<sp/>d<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_BYTE(<sp/>d<sp/>)<sp/><sp/>(<sp/>temp<sp/>=<sp/>(FT_Byte)d,<sp/>(FT_UInt)temp<sp/>==<sp/>(FT_UInt)d<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>horizontal<sp/>advance<sp/>in<sp/>pixels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xadvance<sp/>=<sp/>(<sp/>slot-&gt;advance.x<sp/>+<sp/>32<sp/>)<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yadvance<sp/>=<sp/>(<sp/>slot-&gt;advance.y<sp/>+<sp/>32<sp/>)<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!CHECK_BYTE(<sp/>bitmap-&gt;rows<sp/><sp/>)<sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!CHECK_BYTE(<sp/>bitmap-&gt;width<sp/>)<sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!CHECK_CHAR(<sp/>bitmap-&gt;pitch<sp/>)<sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!CHECK_CHAR(<sp/>slot-&gt;bitmap_left<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!CHECK_CHAR(<sp/>slot-&gt;bitmap_top<sp/><sp/>)<sp/>||</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!CHECK_CHAR(<sp/>xadvance<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!CHECK_CHAR(<sp/>yadvance<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_TRACE2((<sp/></highlight><highlight class="stringliteral">&quot;ftc_snode_load:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>glyph<sp/>too<sp/>large<sp/>for<sp/>small<sp/>bitmap<sp/>cache\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>BadGlyph;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;width<sp/><sp/><sp/><sp/><sp/>=<sp/>(FT_Byte)bitmap-&gt;width;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;height<sp/><sp/><sp/><sp/>=<sp/>(FT_Byte)bitmap-&gt;rows;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;pitch<sp/><sp/><sp/><sp/><sp/>=<sp/>(FT_Char)bitmap-&gt;pitch;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;left<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(FT_Char)slot-&gt;bitmap_left;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;top<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(FT_Char)slot-&gt;bitmap_top;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;xadvance<sp/><sp/>=<sp/>(FT_Char)xadvance;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;yadvance<sp/><sp/>=<sp/>(FT_Char)yadvance;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;format<sp/><sp/><sp/><sp/>=<sp/>(FT_Byte)bitmap-&gt;pixel_mode;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;max_grays<sp/>=<sp/>(FT_Byte)(bitmap-&gt;num_grays<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>bitmap<sp/>into<sp/>a<sp/>new<sp/>buffer<sp/>--<sp/>ignore<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>ftc_sbit_copy_bitmap(<sp/>sbit,<sp/>bitmap,<sp/>memory<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now,<sp/>compute<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>asize<sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*asize<sp/>=<sp/>(FT_ULong)FT_ABS(<sp/>sbit-&gt;pitch<sp/>)<sp/>*<sp/>sbit-&gt;height;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>glyph<sp/>loading<sp/>successful<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>the<sp/>errors<sp/>that<sp/>might<sp/>have<sp/>occurred<sp/>--<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>mark<sp/>unloaded<sp/>glyphs<sp/>with<sp/>`sbit.buffer<sp/>==<sp/>0&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>`width<sp/>==<sp/>255&apos;,<sp/>`height<sp/>==<sp/>0&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>&amp;&amp;<sp/>FT_ERR_NEQ(<sp/>error,<sp/>Out_Of_Memory<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>BadGlyph:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;width<sp/><sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sbit-&gt;buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>asize<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*asize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>FTC_SNode_New(<sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/>*psnode,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref><sp/><sp/>gquery,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref><sp/><sp/><sp/>cache<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/>memory<sp/>=<sp/>cache-&gt;memory;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/><sp/><sp/>error;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/><sp/>snode<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/>gindex<sp/>=<sp/>gquery-&gt;gindex;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>FTC_Family<sp/><sp/>family<sp/>=<sp/>gquery-&gt;family;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_family_class_rec__" kindref="compound">FTC_SFamilyClass</ref><sp/><sp/>clazz<sp/>=<sp/>FTC_CACHE__SFAMILY_CLASS(<sp/>cache<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_count;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>total<sp/>=<sp/>clazz-&gt;family_get_count(<sp/>family,<sp/>cache-&gt;manager<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>total<sp/>==<sp/>0<sp/>||<sp/>gindex<sp/>&gt;=<sp/>total<sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>FT_THROW(<sp/>Invalid_Argument<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!FT_NEW(<sp/>snode<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/>count,<sp/>start;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>gindex<sp/>-<sp/>(<sp/>gindex<sp/>%<sp/>FTC_SBIT_ITEMS_PER_NODE<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>total<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>count<sp/>&gt;<sp/>FTC_SBIT_ITEMS_PER_NODE<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>FTC_SBIT_ITEMS_PER_NODE;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTC_GNode_Init(<sp/>FTC_GNODE(<sp/>snode<sp/>),<sp/>start,<sp/>family<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snode-&gt;count<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>node_count<sp/>=<sp/>0;<sp/>node_count<sp/>&lt;<sp/>count;<sp/>node_count++<sp/>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snode-&gt;sbits[node_count].width<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>ftc_snode_load(<sp/>snode,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache-&gt;manager,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gindex,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FTC_SNode_Free(<sp/>snode,<sp/>cache<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>Exit:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>*psnode<sp/>=<sp/>snode;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>ftc_snode_new(<sp/><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref><sp/><sp/><sp/>*ftcpsnode,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pointer<sp/><sp/>ftcgquery,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref><sp/><sp/><sp/>cache<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/>*psnode<sp/>=<sp/>(<ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref>*)ftcpsnode;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref><sp/><sp/>gquery<sp/>=<sp/>(<ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref>)ftcgquery;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FTC_SNode_New(<sp/>psnode,<sp/>gquery,<sp/>cache<sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Offset<sp/>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>ftc_snode_weight(<sp/><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref><sp/><sp/><sp/>ftcsnode,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref><sp/><sp/>cache<sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/>snode<sp/>=<sp/>(<ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref>)ftcsnode;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/>count<sp/>=<sp/>snode-&gt;count;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_bit_rec__" kindref="compound">FTC_SBit</ref><sp/><sp/><sp/>sbit<sp/><sp/>=<sp/>snode-&gt;sbits;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/>pitch;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Offset<sp/><sp/>size;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UNUSED(<sp/>cache<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>snode-&gt;count<sp/>&lt;=<sp/>FTC_SBIT_ITEMS_PER_NODE<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>node<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<sp/>*snode<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>count<sp/>&gt;<sp/>0;<sp/>count--,<sp/>sbit++<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sbit-&gt;buffer<sp/>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>sbit-&gt;pitch;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pitch<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>-pitch;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>the<sp/>size<sp/>of<sp/>a<sp/>given<sp/>glyph<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>(FT_Offset)pitch<sp/>*<sp/>sbit-&gt;height;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Offset<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>FTC_SNode_Weight(<sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/>snode<sp/>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftc_snode_weight(<sp/>FTC_NODE(<sp/>snode<sp/>),<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Bool<sp/>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>ftc_snode_compare(<sp/><ref refid="struct_f_t_c___node_rec__" kindref="compound">FTC_Node</ref><sp/><sp/><sp/><sp/>ftcsnode,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pointer<sp/><sp/>ftcgquery,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref><sp/><sp/><sp/>cache,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool*<sp/><sp/><sp/><sp/>list_changed<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/><sp/>snode<sp/><sp/>=<sp/>(<ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref>)ftcsnode;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref><sp/><sp/>gquery<sp/>=<sp/>(<ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref>)ftcgquery;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___g_node_rec__" kindref="compound">FTC_GNode</ref><sp/><sp/><sp/>gnode<sp/><sp/>=<sp/>FTC_GNODE(<sp/>snode<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/>gindex<sp/>=<sp/>gquery-&gt;gindex;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/><sp/><sp/><sp/>result;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list_changed)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*list_changed<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>FT_BOOL(<sp/>gnode-&gt;family<sp/>==<sp/>gquery-&gt;family<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_UInt)(<sp/>gindex<sp/>-<sp/>gnode-&gt;gindex<sp/>)<sp/>&lt;<sp/>snode-&gt;count<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>load<sp/>the<sp/>glyph<sp/>bitmap<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___s_bit_rec__" kindref="compound">FTC_SBit</ref><sp/><sp/>sbit<sp/>=<sp/>snode-&gt;sbits<sp/>+<sp/>(<sp/>gindex<sp/>-<sp/>gnode-&gt;gindex<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>following<sp/>code<sp/>illustrates<sp/>what<sp/>to<sp/>do<sp/>when<sp/>you<sp/>want<sp/>to</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>perform<sp/>operations<sp/>that<sp/>may<sp/>fail<sp/>within<sp/>a<sp/>lookup<sp/>function.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Here,<sp/>we<sp/>want<sp/>to<sp/>load<sp/>a<sp/>small<sp/>bitmap<sp/>on-demand;<sp/>we<sp/>thus</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>need<sp/>to<sp/>call<sp/>the<sp/>`ftc_snode_load&apos;<sp/>function<sp/>which<sp/>may<sp/>return</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>a<sp/>non-zero<sp/>error<sp/>code<sp/>only<sp/>when<sp/>we<sp/>are<sp/>out<sp/>of<sp/>memory<sp/>(OOM).</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>correct<sp/>thing<sp/>to<sp/>do<sp/>is<sp/>to<sp/>use<sp/>@FTC_CACHE_TRYLOOP<sp/>and</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@FTC_CACHE_TRYLOOP_END<sp/>in<sp/>order<sp/>to<sp/>implement<sp/>a<sp/>retry<sp/>loop</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>that<sp/>is<sp/>capable<sp/>of<sp/>flushing<sp/>the<sp/>cache<sp/>incrementally<sp/>when</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>an<sp/>OOM<sp/>errors<sp/>occur.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>However,<sp/>we<sp/>need<sp/>to<sp/>`lock&apos;<sp/>the<sp/>node<sp/>before<sp/>this<sp/>operation<sp/>to</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>prevent<sp/>it<sp/>from<sp/>being<sp/>flushed<sp/>within<sp/>the<sp/>loop.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>When<sp/>we<sp/>exit<sp/>the<sp/>loop,<sp/>we<sp/>unlock<sp/>the<sp/>node,<sp/>then<sp/>check<sp/>the<sp/>`error&apos;</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>variable.<sp/><sp/>If<sp/>it<sp/>is<sp/>non-zero,<sp/>this<sp/>means<sp/>that<sp/>the<sp/>cache<sp/>was</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>completely<sp/>flushed<sp/>and<sp/>that<sp/>no<sp/>usable<sp/>memory<sp/>was<sp/>found<sp/>to<sp/>load</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>bitmap.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>We<sp/>then<sp/>prefer<sp/>to<sp/>return<sp/>a<sp/>value<sp/>of<sp/>0<sp/>(i.e.,<sp/>NO<sp/>MATCH).<sp/><sp/>This</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>ensures<sp/>that<sp/>the<sp/>caller<sp/>will<sp/>try<sp/>to<sp/>allocate<sp/>a<sp/>new<sp/>node.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>operation<sp/>consequently<sp/>_fail_<sp/>and<sp/>the<sp/>lookup<sp/>function</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>returns<sp/>the<sp/>appropriate<sp/>OOM<sp/>error<sp/>code.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Note<sp/>that<sp/>`buffer<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>width<sp/>==<sp/>255&apos;<sp/>is<sp/>a<sp/>hack<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>tag<sp/>`unavailable&apos;<sp/>bitmaps<sp/>in<sp/>the<sp/>array.<sp/><sp/>We<sp/>should<sp/>never<sp/>try</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>to<sp/>load<sp/>these.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sbit-&gt;buffer<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>sbit-&gt;width<sp/>==<sp/>255<sp/>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>size;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftcsnode-&gt;ref_count++;<sp/><sp/></highlight><highlight class="comment">/*<sp/>lock<sp/>node<sp/>to<sp/>prevent<sp/>flushing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>retry<sp/>loop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FTC_CACHE_TRYLOOP(<sp/>cache<sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>ftc_snode_load(<sp/>snode,<sp/>cache-&gt;manager,<sp/>gindex,<sp/>&amp;size<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FTC_CACHE_TRYLOOP_END(<sp/>list_changed<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftcsnode-&gt;ref_count--;<sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache-&gt;manager-&gt;cur_weight<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FTC_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Bool<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>FTC_SNode_Compare(<sp/><ref refid="struct_f_t_c___s_node_rec__" kindref="compound">FTC_SNode</ref><sp/><sp/><sp/>snode,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___g_query_rec__" kindref="compound">FTC_GQuery</ref><sp/><sp/>gquery,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t_c___cache_rec__" kindref="compound">FTC_Cache</ref><sp/><sp/><sp/>cache,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool*<sp/><sp/><sp/><sp/>list_changed<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftc_snode_compare(<sp/>FTC_NODE(<sp/>snode<sp/>),<sp/>gquery,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache,<sp/>list_changed<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/cache/ftcsbits.c"/>
  </compounddef>
</doxygen>
