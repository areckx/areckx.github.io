<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ftstroke_8h" kind="file" language="C++">
    <compoundname>ftstroke.h</compoundname>
    <includes local="no">ft2build.h</includes>
    <incdepgraph>
      <node id="77514">
        <label>ft2build.h</label>
      </node>
      <node id="77513">
        <label>thirdparty/freetype/include/freetype/ftstroke.h</label>
        <link refid="ftstroke_8h"/>
        <childnode refid="77514" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ftstroke_8h_1a4f7903e8a82442fcf9e9bc22a45598d6" prot="public" static="no">
        <name>FT_Stroker_LineJoin_</name>
        <enumvalue id="ftstroke_8h_1a4f7903e8a82442fcf9e9bc22a45598d6ad13e974cada297192e460f14d9f0ba6b" prot="public">
          <name>FT_STROKER_LINEJOIN_ROUND</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstroke_8h_1a4f7903e8a82442fcf9e9bc22a45598d6aa875a789dd55495ef7d9214eacc0bdc2" prot="public">
          <name>FT_STROKER_LINEJOIN_BEVEL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstroke_8h_1a4f7903e8a82442fcf9e9bc22a45598d6acb76f61066e44a130d206d2066add1e4" prot="public">
          <name>FT_STROKER_LINEJOIN_MITER_VARIABLE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstroke_8h_1a4f7903e8a82442fcf9e9bc22a45598d6a38d166d5cf959f5f433e4259d0fe7f88" prot="public">
          <name>FT_STROKER_LINEJOIN_MITER</name>
          <initializer>= FT_STROKER_LINEJOIN_MITER_VARIABLE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstroke_8h_1a4f7903e8a82442fcf9e9bc22a45598d6a75d091d7418b2669c9cfaa4027ff7e82" prot="public">
          <name>FT_STROKER_LINEJOIN_MITER_FIXED</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="142" column="1" bodyfile="thirdparty/freetype/include/freetype/ftstroke.h" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="enum" id="ftstroke_8h_1a08e4f487ed8345fb0bbeeb953729d8d1" prot="public" static="no">
        <name>FT_Stroker_LineCap_</name>
        <enumvalue id="ftstroke_8h_1a08e4f487ed8345fb0bbeeb953729d8d1a4fcfe731e3c1efe39d4dcf19edd7e1ce" prot="public">
          <name>FT_STROKER_LINECAP_BUTT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstroke_8h_1a08e4f487ed8345fb0bbeeb953729d8d1a0417f93b0d7fea22cd20124a40479c1f" prot="public">
          <name>FT_STROKER_LINECAP_ROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstroke_8h_1a08e4f487ed8345fb0bbeeb953729d8d1a7cd7d3e711ed2072567c0f51fecb4a86" prot="public">
          <name>FT_STROKER_LINECAP_SQUARE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="175" column="1" bodyfile="thirdparty/freetype/include/freetype/ftstroke.h" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="enum" id="ftstroke_8h_1a361e8f43ea3b0861e52e603c7d0a83b6" prot="public" static="no">
        <name>FT_StrokerBorder_</name>
        <enumvalue id="ftstroke_8h_1a361e8f43ea3b0861e52e603c7d0a83b6ab5a331ec4a5a9da353de29c578fb2d6d" prot="public">
          <name>FT_STROKER_BORDER_LEFT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstroke_8h_1a361e8f43ea3b0861e52e603c7d0a83b6a60213f0f00e84979c5e4fc4e0857f994" prot="public">
          <name>FT_STROKER_BORDER_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="209" column="1" bodyfile="thirdparty/freetype/include/freetype/ftstroke.h" bodystart="208" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ftstroke_8h_1ac10d5f2301e83538779af9f59d630827" prot="public" static="no">
        <type>typedefFT_BEGIN_HEADER struct <ref refid="struct_f_t___stroker_rec__" kindref="compound">FT_StrokerRec_</ref> *</type>
        <definition>typedef typedefFT_BEGIN_HEADER struct FT_StrokerRec_* FT_Stroker</definition>
        <argsstring></argsstring>
        <name>FT_Stroker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="92" column="1" bodyfile="thirdparty/freetype/include/freetype/ftstroke.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ftstroke_8h_1a8a0734e8c1e7bddc89282083853f6331" prot="public" static="no">
        <type>enum FT_Stroker_LineJoin_</type>
        <definition>typedef enum FT_Stroker_LineJoin_  FT_Stroker_LineJoin</definition>
        <argsstring></argsstring>
        <name>FT_Stroker_LineJoin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="ftstroke_8h_1a856d9624e643352a1f6e305027de0736" prot="public" static="no">
        <type>enum FT_Stroker_LineCap_</type>
        <definition>typedef enum FT_Stroker_LineCap_  FT_Stroker_LineCap</definition>
        <argsstring></argsstring>
        <name>FT_Stroker_LineCap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="ftstroke_8h_1a8fe279798d596d9fedb6ad3b6f1e5896" prot="public" static="no">
        <type>enum FT_StrokerBorder_</type>
        <definition>typedef enum FT_StrokerBorder_  FT_StrokerBorder</definition>
        <argsstring></argsstring>
        <name>FT_StrokerBorder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="213" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ftstroke_8h_1a140debddc87985f3fd2e610eda00cb4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Outline_GetInsideBorder</definition>
        <argsstring>(FT_Outline *outline)</argsstring>
        <name>FT_Outline_GetInsideBorder</name>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="234" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a6a2dd261ba2617bdac0cc3ec28ecf137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Outline_GetOutsideBorder</definition>
        <argsstring>(FT_Outline *outline)</argsstring>
        <name>FT_Outline_GetOutsideBorder</name>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="255" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a81bf87929ccbc0d2604fb0e48277a7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_New</definition>
        <argsstring>(FT_Library library, FT_Stroker *astroker)</argsstring>
        <name>FT_Stroker_New</name>
        <param>
          <type><ref refid="struct_f_t___library_rec__" kindref="compound">FT_Library</ref></type>
          <declname>library</declname>
        </param>
        <param>
          <type>FT_Stroker *</type>
          <declname>astroker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="278" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="799" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1af0be981947c3636d7bb1ddcf432c613f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_Set</definition>
        <argsstring>(FT_Stroker stroker, FT_Fixed radius, FT_Stroker_LineCap line_cap, FT_Stroker_LineJoin line_join, FT_Fixed miter_limit)</argsstring>
        <name>FT_Stroker_Set</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type>FT_Fixed</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>FT_Stroker_LineCap</type>
          <declname>line_cap</declname>
        </param>
        <param>
          <type>FT_Stroker_LineJoin</type>
          <declname>line_join</declname>
        </param>
        <param>
          <type>FT_Fixed</type>
          <declname>miter_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="315" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="832" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a10f92fc5c5c968c4f720825bb2940bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_Rewind</definition>
        <argsstring>(FT_Stroker stroker)</argsstring>
        <name>FT_Stroker_Rewind</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="338" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="861" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1aac413eee959667991ec337765215c501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_ParseOutline</definition>
        <argsstring>(FT_Stroker stroker, FT_Outline *outline, FT_Bool opened)</argsstring>
        <name>FT_Stroker_ParseOutline</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <param>
          <type>FT_Bool</type>
          <declname>opened</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="375" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="2093" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a843508f735e0f169b6d00d91510ac000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_BeginSubPath</definition>
        <argsstring>(FT_Stroker stroker, FT_Vector *to, FT_Bool open)</argsstring>
        <name>FT_Stroker_BeginSubPath</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>FT_Bool</type>
          <declname>open</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="406" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="1788" bodyend="1819"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a954981a224366dcb418122e9ac1ef314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_EndSubPath</definition>
        <argsstring>(FT_Stroker stroker)</argsstring>
        <name>FT_Stroker_EndSubPath</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="432" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="1890" bodyend="1977"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a09c014bb4f39ab1d8aa04d3f652b5ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_LineTo</definition>
        <argsstring>(FT_Stroker stroker, FT_Vector *to)</argsstring>
        <name>FT_Stroker_LineTo</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="459" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="1295" bodyend="1365"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a907808cc2cee0c659100dbc10560e8db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_ConicTo</definition>
        <argsstring>(FT_Stroker stroker, FT_Vector *control, FT_Vector *to)</argsstring>
        <name>FT_Stroker_ConicTo</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>control</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="490" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="1371" bodyend="1566"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a6463e08d4f40c63cb109dfcd04afb60f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_CubicTo</definition>
        <argsstring>(FT_Stroker stroker, FT_Vector *control1, FT_Vector *control2, FT_Vector *to)</argsstring>
        <name>FT_Stroker_CubicTo</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>control1</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>control2</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="525" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="1572" bodyend="1782"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a21503fee2c6c57376d98885ac3e54910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_GetBorderCounts</definition>
        <argsstring>(FT_Stroker stroker, FT_StrokerBorder border, FT_UInt *anum_points, FT_UInt *anum_contours)</argsstring>
        <name>FT_Stroker_GetBorderCounts</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type>FT_StrokerBorder</type>
          <declname>border</declname>
        </param>
        <param>
          <type>FT_UInt *</type>
          <declname>anum_points</declname>
        </param>
        <param>
          <type>FT_UInt *</type>
          <declname>anum_contours</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="571" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="1983" bodyend="2008"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1af4b54d6a127efb98084b11394077539a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_ExportBorder</definition>
        <argsstring>(FT_Stroker stroker, FT_StrokerBorder border, FT_Outline *outline)</argsstring>
        <name>FT_Stroker_ExportBorder</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type>FT_StrokerBorder</type>
          <declname>border</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="617" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="2056" bodyend="2072"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a2ec913491a0b5226367d3a6dbaaf1c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_GetCounts</definition>
        <argsstring>(FT_Stroker stroker, FT_UInt *anum_points, FT_UInt *anum_contours)</argsstring>
        <name>FT_Stroker_GetCounts</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type>FT_UInt *</type>
          <declname>anum_points</declname>
        </param>
        <param>
          <type>FT_UInt *</type>
          <declname>anum_contours</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="648" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="2014" bodyend="2050"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a025959ebc066c402fbfa8450a66e6aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_Export</definition>
        <argsstring>(FT_Stroker stroker, FT_Outline *outline)</argsstring>
        <name>FT_Stroker_Export</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="674" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="2078" bodyend="2083"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a42e650e0dd4bbccfc1c32118c6ee524b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stroker_Done</definition>
        <argsstring>(FT_Stroker stroker)</argsstring>
        <name>FT_Stroker_Done</name>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="691" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="874" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1a976fc8903ea898e41e377a1de447743c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Glyph_Stroke</definition>
        <argsstring>(FT_Glyph *pglyph, FT_Stroker stroker, FT_Bool destroy)</argsstring>
        <name>FT_Glyph_Stroke</name>
        <param>
          <type><ref refid="struct_f_t___glyph_rec__" kindref="compound">FT_Glyph</ref> *</type>
          <declname>pglyph</declname>
        </param>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type>FT_Bool</type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="726" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="2301" bodyend="2374"/>
      </memberdef>
      <memberdef kind="function" id="ftstroke_8h_1abd8c1ca959e22145072cd14a12c08479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Glyph_StrokeBorder</definition>
        <argsstring>(FT_Glyph *pglyph, FT_Stroker stroker, FT_Bool inside, FT_Bool destroy)</argsstring>
        <name>FT_Glyph_StrokeBorder</name>
        <param>
          <type><ref refid="struct_f_t___glyph_rec__" kindref="compound">FT_Glyph</ref> *</type>
          <declname>pglyph</declname>
        </param>
        <param>
          <type>FT_Stroker</type>
          <declname>stroker</declname>
        </param>
        <param>
          <type>FT_Bool</type>
          <declname>inside</declname>
        </param>
        <param>
          <type>FT_Bool</type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/ftstroke.h" line="768" column="1" bodyfile="thirdparty/freetype/src/base/ftstroke.c" bodystart="2380" bodyend="2465"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>ftstroke.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FreeType<sp/>path<sp/>stroker<sp/>(specification).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2002-2015<sp/>by<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>David<sp/>Turner,<sp/>Robert<sp/>Wilhelm,<sp/>and<sp/>Werner<sp/>Lemberg.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeType<sp/>project,<sp/>and<sp/>may<sp/>only<sp/>be<sp/>used,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>FreeType<sp/>project<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license,<sp/>LICENSE.TXT.<sp/><sp/>By<sp/>continuing<sp/>to<sp/>use,<sp/>modify,<sp/>or<sp/>distribute<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>this<sp/>file<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/>have<sp/>read<sp/>the<sp/>license<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>understand<sp/>and<sp/>accept<sp/>it<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__FT_STROKE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FT_STROKE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ft2build.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_OUTLINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_GLYPH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">FT_BEGIN_HEADER</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>*<sp/>@section:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>glyph_stroker</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>*<sp/>@title:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>Glyph<sp/>Stroker</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>*<sp/>@abstract:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>Generating<sp/>bordered<sp/>and<sp/>stroked<sp/>glyphs.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>This<sp/>component<sp/>generates<sp/>stroked<sp/>outlines<sp/>of<sp/>a<sp/>given<sp/>vectorial</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>glyph.<sp/><sp/>It<sp/>also<sp/>allows<sp/>you<sp/>to<sp/>retrieve<sp/>the<sp/>`outside&apos;<sp/>and/or<sp/>the</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>`inside&apos;<sp/>borders<sp/>of<sp/>the<sp/>stroke.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>This<sp/>can<sp/>be<sp/>useful<sp/>to<sp/>generate<sp/>`bordered&apos;<sp/>glyph,<sp/>i.e.,<sp/>glyphs</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>displayed<sp/>with<sp/>a<sp/>coloured<sp/>(and<sp/>anti-aliased)<sp/>border<sp/>around<sp/>their</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>shape.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/>*<sp/>@order:</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_LineJoin</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_LineCap</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_StrokerBorder</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Outline_GetInsideBorder</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Outline_GetOutsideBorder</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Glyph_Stroke</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Glyph_StrokeBorder</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_New</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_Set</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_Rewind</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_ParseOutline</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_Done</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_BeginSubPath</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_EndSubPath</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_LineTo</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_ConicTo</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_CubicTo</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_GetBorderCounts</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_ExportBorder</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_GetCounts</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/>FT_Stroker_Export</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/>*<sp/>@type:</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/>Opaque<sp/>handle<sp/>to<sp/>a<sp/>path<sp/>stroker<sp/>object.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t___stroker_rec__" kindref="compound">FT_StrokerRec_</ref>*<sp/><sp/>FT_Stroker;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@enum:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_LineJoin</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>These<sp/>values<sp/>determine<sp/>how<sp/>two<sp/>joining<sp/>lines<sp/>are<sp/>rendered</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>in<sp/>a<sp/>stroker.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@values:</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINEJOIN_ROUND<sp/>::</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Used<sp/>to<sp/>render<sp/>rounded<sp/>line<sp/>joins.<sp/><sp/>Circular<sp/>arcs<sp/>are<sp/>used</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>to<sp/>join<sp/>two<sp/>lines<sp/>smoothly.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINEJOIN_BEVEL<sp/>::</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Used<sp/>to<sp/>render<sp/>beveled<sp/>line<sp/>joins.<sp/><sp/>The<sp/>outer<sp/>corner<sp/>of</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>the<sp/>joined<sp/>lines<sp/>is<sp/>filled<sp/>by<sp/>enclosing<sp/>the<sp/>triangular</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>region<sp/>of<sp/>the<sp/>corner<sp/>with<sp/>a<sp/>straight<sp/>line<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>outer<sp/>corners<sp/>of<sp/>each<sp/>stroke.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER_FIXED<sp/>::</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Used<sp/>to<sp/>render<sp/>mitered<sp/>line<sp/>joins,<sp/>with<sp/>fixed<sp/>bevels<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>miter<sp/>limit<sp/>is<sp/>exceeded.<sp/><sp/>The<sp/>outer<sp/>edges<sp/>of<sp/>the<sp/>strokes</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>two<sp/>segments<sp/>are<sp/>extended<sp/>until<sp/>they<sp/>meet<sp/>at<sp/>an</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>angle.<sp/><sp/>If<sp/>the<sp/>segments<sp/>meet<sp/>at<sp/>too<sp/>sharp<sp/>an<sp/>angle<sp/>(such</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>that<sp/>the<sp/>miter<sp/>would<sp/>extend<sp/>from<sp/>the<sp/>intersection<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>segments<sp/>a<sp/>distance<sp/>greater<sp/>than<sp/>the<sp/>product<sp/>of<sp/>the<sp/>miter</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>limit<sp/>value<sp/>and<sp/>the<sp/>border<sp/>radius),<sp/>then<sp/>a<sp/>bevel<sp/>join<sp/>(see</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>above)<sp/>is<sp/>used<sp/>instead.<sp/><sp/>This<sp/>prevents<sp/>long<sp/>spikes<sp/>being</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>created.<sp/><sp/>FT_STROKER_LINEJOIN_MITER_FIXED<sp/>generates<sp/>a<sp/>miter</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>line<sp/>join<sp/>as<sp/>used<sp/>in<sp/>PostScript<sp/>and<sp/>PDF.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER_VARIABLE<sp/>::</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER<sp/>::</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Used<sp/>to<sp/>render<sp/>mitered<sp/>line<sp/>joins,<sp/>with<sp/>variable<sp/>bevels<sp/>if</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>the<sp/>miter<sp/>limit<sp/>is<sp/>exceeded.<sp/><sp/>The<sp/>intersection<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>strokes<sp/>is<sp/>clipped<sp/>at<sp/>a<sp/>line<sp/>perpendicular<sp/>to<sp/>the<sp/>bisector</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>angle<sp/>between<sp/>the<sp/>strokes,<sp/>at<sp/>the<sp/>distance<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>intersection<sp/>of<sp/>the<sp/>segments<sp/>equal<sp/>to<sp/>the<sp/>product<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>miter<sp/>limit<sp/>value<sp/>and<sp/>the<sp/>border<sp/>radius.<sp/><sp/>This<sp/>prevents</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>long<sp/>spikes<sp/>being<sp/>created.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER_VARIABLE<sp/>generates<sp/>a<sp/>mitered<sp/>line</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>join<sp/>as<sp/>used<sp/>in<sp/>XPS.<sp/><sp/>FT_STROKER_LINEJOIN_MITER<sp/>is<sp/>an<sp/>alias</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>FT_STROKER_LINEJOIN_MITER_VARIABLE,<sp/>retained<sp/>for</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>backwards<sp/>compatibility.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>FT_Stroker_LineJoin_</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINEJOIN_ROUND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINEJOIN_BEVEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER_VARIABLE<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FT_STROKER_LINEJOIN_MITER_VARIABLE,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER_FIXED<sp/><sp/><sp/><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}<sp/>FT_Stroker_LineJoin;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@enum:</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_LineCap</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>These<sp/>values<sp/>determine<sp/>how<sp/>the<sp/>end<sp/>of<sp/>opened<sp/>sub-paths<sp/>are</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>rendered<sp/>in<sp/>a<sp/>stroke.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@values:</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINECAP_BUTT<sp/>::</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>end<sp/>of<sp/>lines<sp/>is<sp/>rendered<sp/>as<sp/>a<sp/>full<sp/>stop<sp/>on<sp/>the<sp/>last</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>point<sp/>itself.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINECAP_ROUND<sp/>::</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>end<sp/>of<sp/>lines<sp/>is<sp/>rendered<sp/>as<sp/>a<sp/>half-circle<sp/>around<sp/>the</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>last<sp/>point.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_LINECAP_SQUARE<sp/>::</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>end<sp/>of<sp/>lines<sp/>is<sp/>rendered<sp/>as<sp/>a<sp/>square<sp/>around<sp/>the</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>last<sp/>point.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>FT_Stroker_LineCap_</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINECAP_BUTT<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINECAP_ROUND,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_LINECAP_SQUARE</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}<sp/>FT_Stroker_LineCap;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@enum:</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_StrokerBorder</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>These<sp/>values<sp/>are<sp/>used<sp/>to<sp/>select<sp/>a<sp/>given<sp/>stroke<sp/>border</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>in<sp/>@FT_Stroker_GetBorderCounts<sp/>and<sp/>@FT_Stroker_ExportBorder.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@values:</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_BORDER_LEFT<sp/>::</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Select<sp/>the<sp/>left<sp/>border,<sp/>relative<sp/>to<sp/>the<sp/>drawing<sp/>direction.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_STROKER_BORDER_RIGHT<sp/>::</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Select<sp/>the<sp/>right<sp/>border,<sp/>relative<sp/>to<sp/>the<sp/>drawing<sp/>direction.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Applications<sp/>are<sp/>generally<sp/>interested<sp/>in<sp/>the<sp/>`inside&apos;<sp/>and<sp/>`outside&apos;</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>borders.<sp/><sp/>However,<sp/>there<sp/>is<sp/>no<sp/>direct<sp/>mapping<sp/>between<sp/>these<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`left&apos;<sp/>and<sp/>`right&apos;<sp/>ones,<sp/>since<sp/>this<sp/>really<sp/>depends<sp/>on<sp/>the<sp/>glyph&apos;s</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>drawing<sp/>orientation,<sp/>which<sp/>varies<sp/>between<sp/>font<sp/>formats.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>can<sp/>however<sp/>use<sp/>@FT_Outline_GetInsideBorder<sp/>and</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>@FT_Outline_GetOutsideBorder<sp/>to<sp/>get<sp/>these.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>FT_StrokerBorder_</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_BORDER_LEFT<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_STROKER_BORDER_RIGHT</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}<sp/>FT_StrokerBorder;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Outline_GetInsideBorder</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Retrieve<sp/>the<sp/>@FT_StrokerBorder<sp/>value<sp/>corresponding<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`inside&apos;<sp/>borders<sp/>of<sp/>a<sp/>given<sp/>outline.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline<sp/>::</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>source<sp/>outline<sp/>handle.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>border<sp/>index.<sp/><sp/>@FT_STROKER_BORDER_RIGHT<sp/>for<sp/>empty<sp/>or<sp/>invalid</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outlines.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_StrokerBorder<sp/>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>FT_Outline_GetInsideBorder(<sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/>outline<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Outline_GetOutsideBorder</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Retrieve<sp/>the<sp/>@FT_StrokerBorder<sp/>value<sp/>corresponding<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`outside&apos;<sp/>borders<sp/>of<sp/>a<sp/>given<sp/>outline.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline<sp/>::</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>source<sp/>outline<sp/>handle.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>border<sp/>index.<sp/><sp/>@FT_STROKER_BORDER_LEFT<sp/>for<sp/>empty<sp/>or<sp/>invalid</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outlines.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_StrokerBorder<sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>FT_Outline_GetOutsideBorder(<sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/>outline<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_New</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Create<sp/>a<sp/>new<sp/>stroker<sp/>object.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>library<sp/>::</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>FreeType<sp/>library<sp/>handle.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@output:</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>astroker<sp/>::</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>new<sp/>stroker<sp/>object<sp/>handle.<sp/><sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>error.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>FT_Stroker_New(<sp/><ref refid="struct_f_t___library_rec__" kindref="compound">FT_Library</ref><sp/><sp/><sp/>library,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Stroker<sp/><sp/>*astroker<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_Set</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Reset<sp/>a<sp/>stroker<sp/>object&apos;s<sp/>attributes.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>radius<sp/>::</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>border<sp/>radius.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>line_cap<sp/>::</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>line<sp/>cap<sp/>style.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>line_join<sp/>::</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>line<sp/>join<sp/>style.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>miter_limit<sp/>::</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>miter<sp/>limit<sp/>for<sp/>the<sp/>FT_STROKER_LINEJOIN_MITER_FIXED<sp/>and</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>FT_STROKER_LINEJOIN_MITER_VARIABLE<sp/>line<sp/>join<sp/>styles,</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>expressed<sp/>as<sp/>16.16<sp/>fixed-point<sp/>value.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>radius<sp/>is<sp/>expressed<sp/>in<sp/>the<sp/>same<sp/>units<sp/>as<sp/>the<sp/>outline</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>coordinates.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>This<sp/>function<sp/>calls<sp/>@FT_Stroker_Rewind<sp/>automatically.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>FT_Stroker_Set(<sp/>FT_Stroker<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Stroker_LineCap<sp/><sp/><sp/>line_cap,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Stroker_LineJoin<sp/><sp/>line_join,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>miter_limit<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_Rewind</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Reset<sp/>a<sp/>stroker<sp/>object<sp/>without<sp/>changing<sp/>its<sp/>attributes.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>call<sp/>this<sp/>function<sp/>before<sp/>beginning<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>series<sp/>of<sp/>calls<sp/>to<sp/>@FT_Stroker_BeginSubPath<sp/>or</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>@FT_Stroker_EndSubPath.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>FT_Stroker_Rewind(<sp/>FT_Stroker<sp/><sp/>stroker<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_ParseOutline</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>convenience<sp/>function<sp/>used<sp/>to<sp/>parse<sp/>a<sp/>whole<sp/>outline<sp/>with</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>stroker.<sp/><sp/>The<sp/>resulting<sp/>outline(s)<sp/>can<sp/>be<sp/>retrieved</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>later<sp/>by<sp/>functions<sp/>like<sp/>@FT_Stroker_GetCounts<sp/>and<sp/>@FT_Stroker_Export.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline<sp/>::</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>source<sp/>outline.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>opened<sp/>::</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>boolean.<sp/><sp/>If~1,<sp/>the<sp/>outline<sp/>is<sp/>treated<sp/>as<sp/>an<sp/>open<sp/>path<sp/>instead</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>of<sp/>a<sp/>closed<sp/>one.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>`opened&apos;<sp/>is~0<sp/>(the<sp/>default),<sp/>the<sp/>outline<sp/>is<sp/>treated<sp/>as<sp/>a<sp/>closed</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>path,<sp/>and<sp/>the<sp/>stroker<sp/>generates<sp/>two<sp/>distinct<sp/>`border&apos;<sp/>outlines.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>`opened&apos;<sp/>is~1,<sp/>the<sp/>outline<sp/>is<sp/>processed<sp/>as<sp/>an<sp/>open<sp/>path,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>generates<sp/>a<sp/>single<sp/>`stroke&apos;<sp/>outline.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>This<sp/>function<sp/>calls<sp/>@FT_Stroker_Rewind<sp/>automatically.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>FT_Stroker_ParseOutline(<sp/>FT_Stroker<sp/><sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/>outline,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/><sp/><sp/><sp/><sp/>opened<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_BeginSubPath</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Start<sp/>a<sp/>new<sp/>sub-path<sp/>in<sp/>the<sp/>stroker.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>::</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>start<sp/>vector.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>open<sp/>::</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>boolean.<sp/><sp/>If~1,<sp/>the<sp/>sub-path<sp/>is<sp/>treated<sp/>as<sp/>an<sp/>open<sp/>one.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>useful<sp/>when<sp/>you<sp/>need<sp/>to<sp/>stroke<sp/>a<sp/>path<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>not<sp/>stored<sp/>as<sp/>an<sp/>@FT_Outline<sp/>object.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>FT_Stroker_BeginSubPath(<sp/>FT_Stroker<sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>to,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/><sp/><sp/><sp/>open<sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_EndSubPath</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Close<sp/>the<sp/>current<sp/>sub-path<sp/>in<sp/>the<sp/>stroker.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>call<sp/>this<sp/>function<sp/>after<sp/>@FT_Stroker_BeginSubPath.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>the<sp/>subpath<sp/>was<sp/>not<sp/>`opened&apos;,<sp/>this<sp/>function<sp/>`draws&apos;<sp/>a</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>single<sp/>line<sp/>segment<sp/>to<sp/>the<sp/>start<sp/>position<sp/>when<sp/>needed.</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>FT_Stroker_EndSubPath(<sp/>FT_Stroker<sp/><sp/>stroker<sp/>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_LineTo</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`Draw&apos;<sp/>a<sp/>single<sp/>line<sp/>segment<sp/>in<sp/>the<sp/>stroker&apos;s<sp/>current<sp/>sub-path,</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>from<sp/>the<sp/>last<sp/>position.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>::</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>destination<sp/>point.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>call<sp/>this<sp/>function<sp/>between<sp/>@FT_Stroker_BeginSubPath<sp/>and</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>@FT_Stroker_EndSubPath.</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>FT_Stroker_LineTo(<sp/>FT_Stroker<sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>to<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_ConicTo</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`Draw&apos;<sp/>a<sp/>single<sp/>quadratic<sp/>Bézier<sp/>in<sp/>the<sp/>stroker&apos;s<sp/>current<sp/>sub-path,</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>from<sp/>the<sp/>last<sp/>position.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>control<sp/>::</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>Bézier<sp/>control<sp/>point.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>::</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>destination<sp/>point.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>call<sp/>this<sp/>function<sp/>between<sp/>@FT_Stroker_BeginSubPath<sp/>and</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>@FT_Stroker_EndSubPath.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>FT_Stroker_ConicTo(<sp/>FT_Stroker<sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>control,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>to<sp/>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_CubicTo</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`Draw&apos;<sp/>a<sp/>single<sp/>cubic<sp/>Bézier<sp/>in<sp/>the<sp/>stroker&apos;s<sp/>current<sp/>sub-path,</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>from<sp/>the<sp/>last<sp/>position.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>control1<sp/>::</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>Bézier<sp/>control<sp/>point.</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>control2<sp/>::</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>second<sp/>Bézier<sp/>control<sp/>point.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>::</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>destination<sp/>point.</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>call<sp/>this<sp/>function<sp/>between<sp/>@FT_Stroker_BeginSubPath<sp/>and</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>@FT_Stroker_EndSubPath.</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>FT_Stroker_CubicTo(<sp/>FT_Stroker<sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>control1,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>control2,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>to<sp/>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_GetBorderCounts</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Call<sp/>this<sp/>function<sp/>once<sp/>you<sp/>have<sp/>finished<sp/>parsing<sp/>your<sp/>paths</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>with<sp/>the<sp/>stroker.<sp/><sp/>It<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>points<sp/>and</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>contours<sp/>necessary<sp/>to<sp/>export<sp/>one<sp/>of<sp/>the<sp/>`border&apos;<sp/>or<sp/>`stroke&apos;</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outlines<sp/>generated<sp/>by<sp/>the<sp/>stroker.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>border<sp/>::</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>border<sp/>index.</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@output:</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>anum_points<sp/>::</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>points.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>anum_contours<sp/>::</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>contours.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>When<sp/>an<sp/>outline,<sp/>or<sp/>a<sp/>sub-path,<sp/>is<sp/>`closed&apos;,<sp/>the<sp/>stroker<sp/>generates</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>two<sp/>independent<sp/>`border&apos;<sp/>outlines,<sp/>named<sp/>`left&apos;<sp/>and<sp/>`right&apos;.</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>When<sp/>the<sp/>outline,<sp/>or<sp/>a<sp/>sub-path,<sp/>is<sp/>`opened&apos;,<sp/>the<sp/>stroker<sp/>merges</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>`border&apos;<sp/>outlines<sp/>with<sp/>caps.<sp/><sp/>The<sp/>`left&apos;<sp/>border<sp/>receives<sp/>all</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>points,<sp/>while<sp/>the<sp/>`right&apos;<sp/>border<sp/>becomes<sp/>empty.</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Use<sp/>the<sp/>function<sp/>@FT_Stroker_GetCounts<sp/>instead<sp/>if<sp/>you<sp/>want<sp/>to</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>retrieve<sp/>the<sp/>counts<sp/>associated<sp/>to<sp/>both<sp/>borders.</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>FT_Stroker_GetBorderCounts(<sp/>FT_Stroker<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_StrokerBorder<sp/><sp/>border,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*anum_points,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*anum_contours<sp/>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_ExportBorder</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Call<sp/>this<sp/>function<sp/>after<sp/>@FT_Stroker_GetBorderCounts<sp/>to</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>export<sp/>the<sp/>corresponding<sp/>border<sp/>to<sp/>your<sp/>own<sp/>@FT_Outline</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>structure.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Note<sp/>that<sp/>this<sp/>function<sp/>appends<sp/>the<sp/>border<sp/>points<sp/>and</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>contours<sp/>to<sp/>your<sp/>outline,<sp/>but<sp/>does<sp/>not<sp/>try<sp/>to<sp/>resize<sp/>its</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>arrays.</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>border<sp/>::</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>border<sp/>index.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline<sp/>::</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>outline<sp/>handle.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Always<sp/>call<sp/>this<sp/>function<sp/>after<sp/>@FT_Stroker_GetBorderCounts<sp/>to</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>get<sp/>sure<sp/>that<sp/>there<sp/>is<sp/>enough<sp/>room<sp/>in<sp/>your<sp/>@FT_Outline<sp/>object<sp/>to</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>receive<sp/>all<sp/>new<sp/>data.</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>When<sp/>an<sp/>outline,<sp/>or<sp/>a<sp/>sub-path,<sp/>is<sp/>`closed&apos;,<sp/>the<sp/>stroker<sp/>generates</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>two<sp/>independent<sp/>`border&apos;<sp/>outlines,<sp/>named<sp/>`left&apos;<sp/>and<sp/>`right&apos;.</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>When<sp/>the<sp/>outline,<sp/>or<sp/>a<sp/>sub-path,<sp/>is<sp/>`opened&apos;,<sp/>the<sp/>stroker<sp/>merges</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>`border&apos;<sp/>outlines<sp/>with<sp/>caps.<sp/><sp/>The<sp/>`left&apos;<sp/>border<sp/>receives<sp/>all</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>points,<sp/>while<sp/>the<sp/>`right&apos;<sp/>border<sp/>becomes<sp/>empty.</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Use<sp/>the<sp/>function<sp/>@FT_Stroker_Export<sp/>instead<sp/>if<sp/>you<sp/>want<sp/>to</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>retrieve<sp/>all<sp/>borders<sp/>at<sp/>once.</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>FT_Stroker_ExportBorder(<sp/>FT_Stroker<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_StrokerBorder<sp/><sp/>border,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline<sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_GetCounts</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Call<sp/>this<sp/>function<sp/>once<sp/>you<sp/>have<sp/>finished<sp/>parsing<sp/>your<sp/>paths</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>with<sp/>the<sp/>stroker.<sp/><sp/>It<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>points<sp/>and</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>contours<sp/>necessary<sp/>to<sp/>export<sp/>all<sp/>points/borders<sp/>from<sp/>the<sp/>stroked</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline/path.</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@output:</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>anum_points<sp/>::</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>points.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>anum_contours<sp/>::</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>contours.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>FT_Stroker_GetCounts(<sp/>FT_Stroker<sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/>*anum_points,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/>*anum_contours<sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_Export</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Call<sp/>this<sp/>function<sp/>after<sp/>@FT_Stroker_GetBorderCounts<sp/>to</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>export<sp/>all<sp/>borders<sp/>to<sp/>your<sp/>own<sp/>@FT_Outline<sp/>structure.</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Note<sp/>that<sp/>this<sp/>function<sp/>appends<sp/>the<sp/>border<sp/>points<sp/>and</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>contours<sp/>to<sp/>your<sp/>outline,<sp/>but<sp/>does<sp/>not<sp/>try<sp/>to<sp/>resize<sp/>its</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>arrays.</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline<sp/>::</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>target<sp/>outline<sp/>handle.</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>FT_Stroker_Export(<sp/>FT_Stroker<sp/><sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/>outline<sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Stroker_Done</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Destroy<sp/>a<sp/>stroker<sp/>object.</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>stroker<sp/>handle.<sp/><sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>FT_Stroker_Done(<sp/>FT_Stroker<sp/><sp/>stroker<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Glyph_Stroke</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Stroke<sp/>a<sp/>given<sp/>outline<sp/>glyph<sp/>object<sp/>with<sp/>a<sp/>given<sp/>stroker.</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@inout:</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>pglyph<sp/>::</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Source<sp/>glyph<sp/>handle<sp/>on<sp/>input,<sp/>new<sp/>glyph<sp/>handle<sp/>on<sp/>output.</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>destroy<sp/>::</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>Boolean.<sp/><sp/>If~1,<sp/>the<sp/>source<sp/>glyph<sp/>object<sp/>is<sp/>destroyed</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>on<sp/>success.</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>source<sp/>glyph<sp/>is<sp/>untouched<sp/>in<sp/>case<sp/>of<sp/>error.</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Adding<sp/>stroke<sp/>may<sp/>yield<sp/>a<sp/>significantly<sp/>wider<sp/>and<sp/>taller<sp/>glyph</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>depending<sp/>on<sp/>how<sp/>large<sp/>of<sp/>a<sp/>radius<sp/>was<sp/>used<sp/>to<sp/>stroke<sp/>the<sp/>glyph.<sp/><sp/>You</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>may<sp/>need<sp/>to<sp/>manually<sp/>adjust<sp/>horizontal<sp/>and<sp/>vertical<sp/>advance<sp/>amounts</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>account<sp/>for<sp/>this<sp/>added<sp/>size.</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>FT_Glyph_Stroke(<sp/><ref refid="struct_f_t___glyph_rec__" kindref="compound">FT_Glyph</ref><sp/><sp/><sp/><sp/>*pglyph,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Stroker<sp/><sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/><sp/><sp/><sp/><sp/>destroy<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@function:</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FT_Glyph_StrokeBorder</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Stroke<sp/>a<sp/>given<sp/>outline<sp/>glyph<sp/>object<sp/>with<sp/>a<sp/>given<sp/>stroker,<sp/>but</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>only<sp/>return<sp/>either<sp/>its<sp/>inside<sp/>or<sp/>outside<sp/>border.</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@inout:</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>pglyph<sp/>::</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Source<sp/>glyph<sp/>handle<sp/>on<sp/>input,<sp/>new<sp/>glyph<sp/>handle<sp/>on<sp/>output.</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stroker<sp/>::</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>stroker<sp/>handle.</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>inside<sp/>::</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>Boolean.<sp/><sp/>If~1,<sp/>return<sp/>the<sp/>inside<sp/>border,<sp/>otherwise</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>the<sp/>outside<sp/>border.</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>destroy<sp/>::</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>Boolean.<sp/><sp/>If~1,<sp/>the<sp/>source<sp/>glyph<sp/>object<sp/>is<sp/>destroyed</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>on<sp/>success.</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0~means<sp/>success.</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>source<sp/>glyph<sp/>is<sp/>untouched<sp/>in<sp/>case<sp/>of<sp/>error.</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Adding<sp/>stroke<sp/>may<sp/>yield<sp/>a<sp/>significantly<sp/>wider<sp/>and<sp/>taller<sp/>glyph</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>depending<sp/>on<sp/>how<sp/>large<sp/>of<sp/>a<sp/>radius<sp/>was<sp/>used<sp/>to<sp/>stroke<sp/>the<sp/>glyph.<sp/><sp/>You</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>may<sp/>need<sp/>to<sp/>manually<sp/>adjust<sp/>horizontal<sp/>and<sp/>vertical<sp/>advance<sp/>amounts</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>account<sp/>for<sp/>this<sp/>added<sp/>size.</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>FT_EXPORT(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>FT_Glyph_StrokeBorder(<sp/><ref refid="struct_f_t___glyph_rec__" kindref="compound">FT_Glyph</ref><sp/><sp/><sp/><sp/>*pglyph,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Stroker<sp/><sp/><sp/>stroker,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/><sp/><sp/><sp/><sp/>inside,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/><sp/><sp/><sp/><sp/>destroy<sp/>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">FT_END_HEADER</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__FT_STROKE_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>Variables:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>coding:<sp/>utf-8<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/include/freetype/ftstroke.h"/>
  </compounddef>
</doxygen>
