<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_test_copy_paste" kind="class" language="C++" prot="public">
    <compoundname>TestCopyPaste</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <basecompoundref refid="class_ms_1_1_m_test" prot="public" virt="non-virtual">Ms::MTest</basecompoundref>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_copy_paste_1a1631cfd47d108c3f8bc069af38f3213b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste</definition>
        <argsstring>(const char *)</argsstring>
        <name>copypaste</name>
        <param>
          <type>const char *</type>
          <defname>idx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="36" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="90" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_test_copy_paste_1a0e9dd6051373b64eea8d07d8e6d3e18d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypastestaff</definition>
        <argsstring>(const char *)</argsstring>
        <name>copypastestaff</name>
        <param>
          <type>const char *</type>
          <defname>idx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="37" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="130" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_test_copy_paste_1ab3f026d2ff818715a0725938ce283434" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypastevoice</definition>
        <argsstring>(const char *, int)</argsstring>
        <name>copypastevoice</name>
        <param>
          <type>const char *</type>
          <defname>idx</defname>
        </param>
        <param>
          <type>int</type>
          <defname>voice</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="38" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="230" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_test_copy_paste_1a2f691a4d14bbd315cc3ae4f1d04d1a11" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypastetuplet</definition>
        <argsstring>(const char *)</argsstring>
        <name>copypastetuplet</name>
        <param>
          <type>const char *</type>
          <defname>idx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="39" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="377" bodyend="404"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_copy_paste_1a8e4924456242394337a997771d4864d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::initTestCase</definition>
        <argsstring>()</argsstring>
        <name>initTestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="42" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a246dd886b8e05f61003c4ff209109bc0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste01</definition>
        <argsstring>()</argsstring>
        <name>copypaste01</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="43" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a446b38597e4a9b3dedae18e23362fb58" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste02</definition>
        <argsstring>()</argsstring>
        <name>copypaste02</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="44" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1adfa9bf2aaa5550aca8361b7b8e5c618b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste03</definition>
        <argsstring>()</argsstring>
        <name>copypaste03</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="45" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1af4aeb4194f40867a42c27ed127108d3a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste04</definition>
        <argsstring>()</argsstring>
        <name>copypaste04</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="46" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ae58ada9e5ea971c62f1ff9ba3a66f4e0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste05</definition>
        <argsstring>()</argsstring>
        <name>copypaste05</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="47" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a5c64bb804f6c991005526be657cf9355" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste06</definition>
        <argsstring>()</argsstring>
        <name>copypaste06</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="48" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a3ff2cc80a454ad13249ddf0ef8290e5c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste08</definition>
        <argsstring>()</argsstring>
        <name>copypaste08</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="50" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a211c7b1ec58967e3eb3ba5a461042ea7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste09</definition>
        <argsstring>()</argsstring>
        <name>copypaste09</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="51" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a7c9b5ccaad5e20a2c7cf9d67fd981b88" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste10</definition>
        <argsstring>()</argsstring>
        <name>copypaste10</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="52" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1af5d86545022b6de787a8582f6bcde5ca" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste11</definition>
        <argsstring>()</argsstring>
        <name>copypaste11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="53" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ae6a0f4fdc018b75ce68b11f3dfb8eb81" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste12</definition>
        <argsstring>()</argsstring>
        <name>copypaste12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="54" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a6f21bc89be6237646a3dca9003d57368" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPaste2Voice</definition>
        <argsstring>()</argsstring>
        <name>copyPaste2Voice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="55" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="190" bodyend="223"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ad9b9acdf04f91babddc08315cb677142" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPaste2Voice2</definition>
        <argsstring>()</argsstring>
        <name>copyPaste2Voice2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="56" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ac422f951dcc1d6a118453a09b7805251" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPaste2Voice3</definition>
        <argsstring>()</argsstring>
        <name>copyPaste2Voice3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="57" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a58ec4bf6c3a33c62d6d953bf240cec5a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPaste2Voice4</definition>
        <argsstring>()</argsstring>
        <name>copyPaste2Voice4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="58" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a02aff5f7869765107edfff53eb5fdd59" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPaste2Voice5</definition>
        <argsstring>()</argsstring>
        <name>copyPaste2Voice5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="59" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="265" bodyend="301"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a22b816b3e6b981eeddd9ea640aa5800a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste2Voice6</definition>
        <argsstring>()</argsstring>
        <name>copypaste2Voice6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="60" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="339" bodyend="375"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1afbf05481c13cd86fafb6818ab21be9f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPasteOnlySecondVoice</definition>
        <argsstring>()</argsstring>
        <name>copyPasteOnlySecondVoice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="61" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="304" bodyend="337"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a402c012d1377ec54611743c3de43551a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste19</definition>
        <argsstring>()</argsstring>
        <name>copypaste19</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="62" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ac4e3d8a7d0f4c6c71b7ebe8efd1a3164" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPasteShortTremolo</definition>
        <argsstring>()</argsstring>
        <name>copyPasteShortTremolo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="63" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a7bf7d82041c97fa5f778100a7c74bee7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste22</definition>
        <argsstring>()</argsstring>
        <name>copypaste22</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="64" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a4ae3dcbe1446441684c1e163f6d3caa0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste23</definition>
        <argsstring>()</argsstring>
        <name>copypaste23</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="65" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a173e4785854825c9468d2a85e29815e7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypaste24</definition>
        <argsstring>()</argsstring>
        <name>copypaste24</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="66" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ab2a64da6ffa34c52d98f5282988bd151" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copypastestaff50</definition>
        <argsstring>()</argsstring>
        <name>copypastestaff50</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="68" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1a8973936266ed4a6fe20d5a4e9a26ac74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPastePartial</definition>
        <argsstring>()</argsstring>
        <name>copyPastePartial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="70" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="160" bodyend="188"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ac272ef0f387fd11cb24318cd39692e61" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPasteTuplet01</definition>
        <argsstring>()</argsstring>
        <name>copyPasteTuplet01</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="72" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_copy_paste_1ab4a1a72536b13a916cdb340df9a20d75" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestCopyPaste::copyPasteTuplet02</definition>
        <argsstring>()</argsstring>
        <name>copyPasteTuplet02</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="73" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="17245">
        <label>QObject</label>
      </node>
      <node id="17244">
        <label>TestCopyPaste</label>
        <link refid="class_test_copy_paste"/>
        <childnode refid="17245" relation="public-inheritance">
        </childnode>
        <childnode refid="17246" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17246">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17261">
        <label>Ms::Sequencer</label>
        <link refid="class_ms_1_1_sequencer"/>
      </node>
      <node id="17248">
        <label>QObject</label>
      </node>
      <node id="17250">
        <label>Ms::EditData</label>
        <link refid="class_ms_1_1_edit_data"/>
        <childnode refid="17251" relation="usage">
          <edgelabel>duration</edgelabel>
        </childnode>
        <childnode refid="17252" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
        <childnode refid="17259" relation="usage">
          <edgelabel>element</edgelabel>
        </childnode>
      </node>
      <node id="17260">
        <label>Ms::MScore</label>
        <link refid="class_ms_1_1_m_score"/>
        <childnode refid="17248" relation="public-inheritance">
        </childnode>
        <childnode refid="17261" relation="usage">
          <edgelabel>seq</edgelabel>
        </childnode>
      </node>
      <node id="17247">
        <label>TestCopyPaste</label>
        <link refid="class_test_copy_paste"/>
        <childnode refid="17248" relation="public-inheritance">
        </childnode>
        <childnode refid="17249" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17258">
        <label>std::list&lt; SynthesizerGroup &gt;</label>
      </node>
      <node id="17257">
        <label>Ms::SynthesizerState</label>
        <link refid="class_ms_1_1_synthesizer_state"/>
        <childnode refid="17258" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17251">
        <label>Ms::Fraction</label>
        <link refid="class_ms_1_1_fraction"/>
      </node>
      <node id="17254">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="17255" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="17255">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="17256" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17249">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
        <childnode refid="17250" relation="usage">
          <edgelabel>ed</edgelabel>
        </childnode>
        <childnode refid="17253" relation="usage">
          <edgelabel>score</edgelabel>
        </childnode>
        <childnode refid="17260" relation="usage">
          <edgelabel>mscore</edgelabel>
        </childnode>
      </node>
      <node id="17253">
        <label>Ms::Score</label>
        <link refid="class_ms_1_1_score"/>
        <childnode refid="17248" relation="public-inheritance">
        </childnode>
        <childnode refid="17254" relation="private-inheritance">
        </childnode>
        <childnode refid="17257" relation="usage">
          <edgelabel>_synthesizerState</edgelabel>
        </childnode>
      </node>
      <node id="17259">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="17254" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17256">
        <label>QList&lt; ScoreElement *&gt;</label>
      </node>
      <node id="17252">
        <label>Ms::MuseScoreView</label>
        <link refid="class_ms_1_1_muse_score_view"/>
        <childnode refid="17253" relation="usage">
          <edgelabel>_score</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="33" column="1" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="32" bodyend="74"/>
    <listofallmembers>
      <member refid="class_ms_1_1_m_test_1a37e6c16e898cab655f8ccd2518274acf" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>compareFiles</name></member>
      <member refid="class_test_copy_paste_1a1631cfd47d108c3f8bc069af38f3213b" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste</name></member>
      <member refid="class_test_copy_paste_1a246dd886b8e05f61003c4ff209109bc0" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste01</name></member>
      <member refid="class_test_copy_paste_1a446b38597e4a9b3dedae18e23362fb58" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste02</name></member>
      <member refid="class_test_copy_paste_1adfa9bf2aaa5550aca8361b7b8e5c618b" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste03</name></member>
      <member refid="class_test_copy_paste_1af4aeb4194f40867a42c27ed127108d3a" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste04</name></member>
      <member refid="class_test_copy_paste_1ae58ada9e5ea971c62f1ff9ba3a66f4e0" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste05</name></member>
      <member refid="class_test_copy_paste_1a5c64bb804f6c991005526be657cf9355" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste06</name></member>
      <member refid="class_test_copy_paste_1a3ff2cc80a454ad13249ddf0ef8290e5c" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste08</name></member>
      <member refid="class_test_copy_paste_1a211c7b1ec58967e3eb3ba5a461042ea7" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste09</name></member>
      <member refid="class_test_copy_paste_1a7c9b5ccaad5e20a2c7cf9d67fd981b88" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste10</name></member>
      <member refid="class_test_copy_paste_1af5d86545022b6de787a8582f6bcde5ca" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste11</name></member>
      <member refid="class_test_copy_paste_1ae6a0f4fdc018b75ce68b11f3dfb8eb81" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste12</name></member>
      <member refid="class_test_copy_paste_1a402c012d1377ec54611743c3de43551a" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste19</name></member>
      <member refid="class_test_copy_paste_1a7bf7d82041c97fa5f778100a7c74bee7" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste22</name></member>
      <member refid="class_test_copy_paste_1a4ae3dcbe1446441684c1e163f6d3caa0" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste23</name></member>
      <member refid="class_test_copy_paste_1a173e4785854825c9468d2a85e29815e7" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste24</name></member>
      <member refid="class_test_copy_paste_1a6f21bc89be6237646a3dca9003d57368" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPaste2Voice</name></member>
      <member refid="class_test_copy_paste_1ad9b9acdf04f91babddc08315cb677142" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPaste2Voice2</name></member>
      <member refid="class_test_copy_paste_1ac422f951dcc1d6a118453a09b7805251" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPaste2Voice3</name></member>
      <member refid="class_test_copy_paste_1a58ec4bf6c3a33c62d6d953bf240cec5a" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPaste2Voice4</name></member>
      <member refid="class_test_copy_paste_1a02aff5f7869765107edfff53eb5fdd59" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPaste2Voice5</name></member>
      <member refid="class_test_copy_paste_1a22b816b3e6b981eeddd9ea640aa5800a" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypaste2Voice6</name></member>
      <member refid="class_test_copy_paste_1afbf05481c13cd86fafb6818ab21be9f2" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPasteOnlySecondVoice</name></member>
      <member refid="class_test_copy_paste_1a8973936266ed4a6fe20d5a4e9a26ac74" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPastePartial</name></member>
      <member refid="class_test_copy_paste_1ac4e3d8a7d0f4c6c71b7ebe8efd1a3164" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPasteShortTremolo</name></member>
      <member refid="class_test_copy_paste_1a0e9dd6051373b64eea8d07d8e6d3e18d" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypastestaff</name></member>
      <member refid="class_test_copy_paste_1ab2a64da6ffa34c52d98f5282988bd151" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypastestaff50</name></member>
      <member refid="class_test_copy_paste_1a2f691a4d14bbd315cc3ae4f1d04d1a11" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypastetuplet</name></member>
      <member refid="class_test_copy_paste_1ac272ef0f387fd11cb24318cd39692e61" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPasteTuplet01</name></member>
      <member refid="class_test_copy_paste_1ab4a1a72536b13a916cdb340df9a20d75" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copyPasteTuplet02</name></member>
      <member refid="class_test_copy_paste_1ab3f026d2ff818715a0725938ce283434" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>copypastevoice</name></member>
      <member refid="class_ms_1_1_m_test_1a47c4f40157a350d27906dc6331e6cfd9" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>ed</name></member>
      <member refid="class_ms_1_1_m_test_1a0bf5210cc1ee4587d6959899aaff4a14" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>initMTest</name></member>
      <member refid="class_test_copy_paste_1a8e4924456242394337a997771d4864d0" prot="private" virt="non-virtual"><scope>TestCopyPaste</scope><name>initTestCase</name></member>
      <member refid="class_ms_1_1_m_test_1a62fa3697bed02fa431b025df0457763e" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>mscore</name></member>
      <member refid="class_ms_1_1_m_test_1a744f5e054b180afc3e977956f58b069a" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>MTest</name></member>
      <member refid="class_ms_1_1_m_test_1af3c0a9c8bd7784086f966faf701429d3" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>readCreatedScore</name></member>
      <member refid="class_ms_1_1_m_test_1ac35525fff12b9e2d07806bcd6602217e" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>readScore</name></member>
      <member refid="class_ms_1_1_m_test_1a1891a6553283a1d3fda0aace440d359e" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>root</name></member>
      <member refid="class_ms_1_1_m_test_1a3014ea5ea6a33451fd5b26becb07cf7d" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>saveCompareMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a5c0af7fbce856e84aeda9c6699e2eeca" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>saveCompareMusicXmlScore</name></member>
      <member refid="class_ms_1_1_m_test_1a686ee7797f648e1d0e47e405ca90f92c" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>saveCompareScore</name></member>
      <member refid="class_ms_1_1_m_test_1a8e9111673d6bb2ed25851e4fa7858d03" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>saveMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a740ba0e9f2c5ebc6e0937ed9dd0da64f" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>saveMusicXml</name></member>
      <member refid="class_ms_1_1_m_test_1a58c9c58bc05dec98a8a1b783e18a1703" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>savePdf</name></member>
      <member refid="class_ms_1_1_m_test_1a9191a2086f4eb17a64eb466327c74452" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>saveScore</name></member>
      <member refid="class_ms_1_1_m_test_1a7ae6f01386275392b5c840ad6e8006f4" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>score</name></member>
      <member refid="class_ms_1_1_m_test_1a752b054eee21c04a6084af6672447499" prot="protected" virt="non-virtual"><scope>TestCopyPaste</scope><name>writeReadElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
