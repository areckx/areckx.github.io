<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_splash_output_dev" kind="class" language="C++" prot="public">
    <compoundname>SplashOutputDev</compoundname>
    <basecompoundref refid="class_output_dev" prot="public" virt="non-virtual">OutputDev</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_splash_output_dev_1a8898826ef1db305461d37c16e70d6c1a" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::keepAlphaChannel</definition>
        <argsstring></argsstring>
        <name>keepAlphaChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="434" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1af60cacb6b0c0fc4103386300a8836c56" prot="private" static="no" mutable="no">
        <type>SplashColorMode</type>
        <definition>SplashColorMode SplashOutputDev::colorMode</definition>
        <argsstring></argsstring>
        <name>colorMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="436" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a71c394eff4ee6f07aedf142c254b487a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SplashOutputDev::bitmapRowPad</definition>
        <argsstring></argsstring>
        <name>bitmapRowPad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="437" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a39daed52c87f11edf03e808a0948c577" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::bitmapTopDown</definition>
        <argsstring></argsstring>
        <name>bitmapTopDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="438" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a618873bc966d9b24f2877662954ca4df" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::bitmapUpsideDown</definition>
        <argsstring></argsstring>
        <name>bitmapUpsideDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="439" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a7100ebb12edd3b866325337082893521" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::fontAntialias</definition>
        <argsstring></argsstring>
        <name>fontAntialias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="440" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a92bbdfc6490f2c9bcd8a67260c8dd40c" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::vectorAntialias</definition>
        <argsstring></argsstring>
        <name>vectorAntialias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="441" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a230aecace6267b477d6010230a86abdf" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::overprintPreview</definition>
        <argsstring></argsstring>
        <name>overprintPreview</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="442" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a71aeeb113cf05ead45d7a20825889292" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::enableFreeTypeHinting</definition>
        <argsstring></argsstring>
        <name>enableFreeTypeHinting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="443" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1adb2b31669dea2530cf49ca58b7462a37" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::enableSlightHinting</definition>
        <argsstring></argsstring>
        <name>enableSlightHinting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="444" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a7725d2397b967e287434a3085349c736" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::reverseVideo</definition>
        <argsstring></argsstring>
        <name>reverseVideo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="445" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a9b5310ec2ff13605870dab7a75b8b1b7" prot="private" static="no" mutable="no">
        <type>SplashColor</type>
        <definition>SplashColor SplashOutputDev::paperColor</definition>
        <argsstring></argsstring>
        <name>paperColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="446" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a79d7918a5f7e23b49a41def6b6dfcf2f" prot="private" static="no" mutable="no">
        <type><ref refid="struct_splash_screen_params" kindref="compound">SplashScreenParams</ref></type>
        <definition>SplashScreenParams SplashOutputDev::screenParams</definition>
        <argsstring></argsstring>
        <name>screenParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="447" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a949f85259bf9604a0eec763b07f18f58" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::skipHorizText</definition>
        <argsstring></argsstring>
        <name>skipHorizText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="448" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1ab128d1d9b2fe46e08d2c0b93061ca392" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::skipRotatedText</definition>
        <argsstring></argsstring>
        <name>skipRotatedText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="449" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1ab9e47a03b5835b56cb0e47e91654932c" prot="private" static="no" mutable="no">
        <type><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref> *</type>
        <definition>PDFDoc* SplashOutputDev::doc</definition>
        <argsstring></argsstring>
        <name>doc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="451" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a395bd9abb7cd0d127c55a9010afb4a2b" prot="private" static="no" mutable="no">
        <type><ref refid="class_x_ref" kindref="compound">XRef</ref> *</type>
        <definition>XRef* SplashOutputDev::xref</definition>
        <argsstring></argsstring>
        <name>xref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="452" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1aca8916a463ae177002f0bcd00bfb13dd" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap* SplashOutputDev::bitmap</definition>
        <argsstring></argsstring>
        <name>bitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="454" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a3fb6bbed2db35a9922ad97c6428ba302" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash" kindref="compound">Splash</ref> *</type>
        <definition>Splash* SplashOutputDev::splash</definition>
        <argsstring></argsstring>
        <name>splash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="455" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1ae74f780e887ab39ab72df82d941abcaa" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_font_engine" kindref="compound">SplashFontEngine</ref> *</type>
        <definition>SplashFontEngine* SplashOutputDev::fontEngine</definition>
        <argsstring></argsstring>
        <name>fontEngine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="456" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a9c713b131ef6ff60bb222c61b88b27b3" prot="private" static="no" mutable="no">
        <type><ref refid="class_t3_font_cache" kindref="compound">T3FontCache</ref> *</type>
        <definition>T3FontCache* SplashOutputDev::t3FontCache[splashOutT3FontCacheSize]</definition>
        <argsstring>[splashOutT3FontCacheSize]</argsstring>
        <name>t3FontCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="459" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a3fe6157c7fd1a9c0f9f69304a06ac9b1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SplashOutputDev::nT3Fonts</definition>
        <argsstring></argsstring>
        <name>nT3Fonts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="460" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a3d9e8751bf682d659c5c0475a82163be" prot="private" static="no" mutable="no">
        <type><ref refid="struct_t3_glyph_stack" kindref="compound">T3GlyphStack</ref> *</type>
        <definition>T3GlyphStack* SplashOutputDev::t3GlyphStack</definition>
        <argsstring></argsstring>
        <name>t3GlyphStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="461" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1aa1a6b098d998d1b97f896112ddbed6bd" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::haveT3Dx</definition>
        <argsstring></argsstring>
        <name>haveT3Dx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="462" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a5b4cfc947bb6ce7838abc10f7ec5aff0" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_font" kindref="compound">SplashFont</ref> *</type>
        <definition>SplashFont* SplashOutputDev::font</definition>
        <argsstring></argsstring>
        <name>font</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="464" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1aca4d879256721a52123129c7ba0e2a90" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::needFontUpdate</definition>
        <argsstring></argsstring>
        <name>needFontUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="465" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a093b2759ac0392857c7c6ec66aa8a799" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
        <definition>SplashPath* SplashOutputDev::textClipPath</definition>
        <argsstring></argsstring>
        <name>textClipPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="466" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1a8c6d6b1f2dc9778bdfdb7bd549f9fd31" prot="private" static="no" mutable="no">
        <type><ref refid="struct_splash_transparency_group" kindref="compound">SplashTransparencyGroup</ref> *</type>
        <definition>SplashTransparencyGroup* SplashOutputDev::transpGroupStack</definition>
        <argsstring></argsstring>
        <name>transpGroupStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="469" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_output_dev_1aa8633df95b74f456ea4f7a8830e65b54" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SplashOutputDev::nestCount</definition>
        <argsstring></argsstring>
        <name>nestCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="471" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_splash_output_dev_1a573ef4d16f6f6f9e58aee16bebd03b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SplashOutputDev::SplashOutputDev</definition>
        <argsstring>(SplashColorMode colorModeA, int bitmapRowPadA, GBool reverseVideoA, SplashColorPtr paperColorA, GBool bitmapTopDownA=gTrue, SplashThinLineMode thinLineMode=splashThinLineDefault, GBool overprintPreviewA=globalParams-&gt;getOverprintPreview())</argsstring>
        <name>SplashOutputDev</name>
        <param>
          <type>SplashColorMode</type>
          <declname>colorModeA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bitmapRowPadA</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>reverseVideoA</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>paperColorA</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>bitmapTopDownA</declname>
          <defval>gTrue</defval>
        </param>
        <param>
          <type>SplashThinLineMode</type>
          <declname>thinLineMode</declname>
          <defval>splashThinLineDefault</defval>
        </param>
        <param>
          <type>GBool</type>
          <declname>overprintPreviewA</declname>
          <defval>globalParams-&gt;getOverprintPreview()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="199" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1367" bodyend="1414"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1abdc27b99a2bdacc96b809b60d7559ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SplashOutputDev::~SplashOutputDev</definition>
        <argsstring>()</argsstring>
        <name>~SplashOutputDev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="206" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1467" bodyend="1482"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a2f17cd900b94377281927cad046305a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool SplashOutputDev::useTilingPatternFill</definition>
        <argsstring>()</argsstring>
        <name>useTilingPatternFill</name>
        <reimplements refid="class_output_dev_1a9272d5990ad2b286ff4ecb627a9843f6">useTilingPatternFill</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="213" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a0006831ac5e4f1c9c2edfa5a2bc3f05f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool SplashOutputDev::useShadedFills</definition>
        <argsstring>(int type)</argsstring>
        <name>useShadedFills</name>
        <reimplements refid="class_output_dev_1a28d7bdc07a55834bf0b2e5a2c87ac907">useShadedFills</reimplements>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="218" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="218" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a12ccc54c04f37930e7d10500eb3bd7cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool SplashOutputDev::upsideDown</definition>
        <argsstring>()</argsstring>
        <name>upsideDown</name>
        <reimplements refid="class_output_dev_1a6f03f8de862d1dfcfeabd8fc9f8c779c">upsideDown</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="223" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a5bbe45ef25cf9b6e3357c0ffbfb8c98a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool SplashOutputDev::useDrawChar</definition>
        <argsstring>()</argsstring>
        <name>useDrawChar</name>
        <reimplements refid="class_output_dev_1a0e4c506af59324b094b0433b4612f3af">useDrawChar</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="226" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a29024ecc13db2e418e2fbaaf1ca9dc39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool SplashOutputDev::interpretType3Chars</definition>
        <argsstring>()</argsstring>
        <name>interpretType3Chars</name>
        <reimplements refid="class_output_dev_1aa9681fb6f14963ebfc9fdf3fc1c4ea8e">interpretType3Chars</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="230" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a802c51e8d7ce384322d51bbe5d6ffb00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::startPage</definition>
        <argsstring>(int pageNum, GfxState *state, XRef *xref)</argsstring>
        <name>startPage</name>
        <reimplements refid="class_output_dev_1a1521b7823ba04bccef3f69f71ddf068a">startPage</reimplements>
        <param>
          <type>int</type>
          <declname>pageNum</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_x_ref" kindref="compound">XRef</ref> *</type>
          <declname>xref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="235" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1508" bodyend="1593"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aac108f9462b713ef0ef0352c20100afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::endPage</definition>
        <argsstring>()</argsstring>
        <name>endPage</name>
        <reimplements refid="class_output_dev_1a6ee379b0784e080f28058fc226f1c590">endPage</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="238" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1595" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1adbae408536813971115f49ffcc5bf9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::saveState</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>saveState</name>
        <reimplements refid="class_output_dev_1a9756dda2c43a69c2f7a07fa226873e8a">saveState</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="241" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1601" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a984acc99cd5c00005839f92cea712d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::restoreState</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>restoreState</name>
        <reimplements refid="class_output_dev_1a2739adc2b718fba838464fc759cae209">restoreState</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="242" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1605" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a9a9a348a82d8f2c5e045c4fedd6efcde" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateAll</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateAll</name>
        <reimplements refid="class_output_dev_1a93327999b4eb997b33e7d2091c72d7da">updateAll</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="245" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1610" bodyend="1623"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a26fb7faa226548082f477cf12bb8022f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateCTM</definition>
        <argsstring>(GfxState *state, double m11, double m12, double m21, double m22, double m31, double m32)</argsstring>
        <name>updateCTM</name>
        <reimplements refid="class_output_dev_1a1f4c88972c59fe75ebe79bec6f22727a">updateCTM</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m11</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m12</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m21</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m22</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m31</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="246" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1625" bodyend="1639"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a4e68b7a79c9e0caf72d9eed6710c6970" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateLineDash</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateLineDash</name>
        <reimplements refid="class_output_dev_1a21a6c8bac1bb874507cc2858a1775056">updateLineDash</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="248" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1641" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1afbf1093b69f050356aa8fb87ff9e2a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateFlatness</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateFlatness</name>
        <reimplements refid="class_output_dev_1a5a5694c57e4c3ee7d9f3a06ff433acb3">updateFlatness</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="249" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1661" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a8c558177fa28476830f4e4a3537ebb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateLineJoin</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateLineJoin</name>
        <reimplements refid="class_output_dev_1a4cd594a8dfcad47a04d5e317bd41263d">updateLineJoin</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="250" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1668" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aae1617055a18bf202859878bc69bd215" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateLineCap</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateLineCap</name>
        <reimplements refid="class_output_dev_1ae82804bfcaa9c38cb2d7f23862329890">updateLineCap</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="251" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1672" bodyend="1674"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a72c2b36a7b11a0288a054a5627f1444a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateMiterLimit</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateMiterLimit</name>
        <reimplements refid="class_output_dev_1a74a07b0ef9ba5c15bf453fed9c528728">updateMiterLimit</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="252" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1676" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1add65a8eeba7ed482f32ae13a2b8bbff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateLineWidth</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateLineWidth</name>
        <reimplements refid="class_output_dev_1aceb59d18f9397f4b88e088ecedfb26ee">updateLineWidth</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="253" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1680" bodyend="1682"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ad318eaa81c9fb070e9083756aedbe3fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateStrokeAdjust</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateStrokeAdjust</name>
        <reimplements refid="class_output_dev_1a306598c4f6ef12322e1f575c09e1fe10">updateStrokeAdjust</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="254" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1684" bodyend="1689"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aeae866c00316da78f0d66fb349335758" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateFillColorSpace</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateFillColorSpace</name>
        <reimplements refid="class_output_dev_1af46b04e9b1d4caedc883e2bd944d5731">updateFillColorSpace</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="255" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1691" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a9d049536916af0fbca34f86de8769cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateStrokeColorSpace</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateStrokeColorSpace</name>
        <reimplements refid="class_output_dev_1a213a611aadc3324d7a0ec0da6522c4ef">updateStrokeColorSpace</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="256" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1698" bodyend="1703"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a1bd34e8e4176060b6751072330215464" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateFillColor</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateFillColor</name>
        <reimplements refid="class_output_dev_1a15416568303178d9ed4845b3c09dff6a">updateFillColor</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="257" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1705" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a16be5674bb70e0b9043174abab3e920e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateStrokeColor</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateStrokeColor</name>
        <reimplements refid="class_output_dev_1a0899a8d22039e61343357444dcc48578">updateStrokeColor</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="258" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1738" bodyend="1769"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a8a043be24cad9800a05d2747b51701c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateBlendMode</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateBlendMode</name>
        <reimplements refid="class_output_dev_1abe4aa366ffedf9e4c9c9e99fb37413d2">updateBlendMode</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="259" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1930" bodyend="1932"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a70fd964b5b428f78a9b9d378d05382a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateFillOpacity</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateFillOpacity</name>
        <reimplements refid="class_output_dev_1a3c08aea8dd5180bef704b1c484ae60ae">updateFillOpacity</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="260" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1934" bodyend="1939"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a94960bf5aaac12834042256e29a09183" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateStrokeOpacity</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateStrokeOpacity</name>
        <reimplements refid="class_output_dev_1aae769c911e3adf88fe09b4e7d3ba4430">updateStrokeOpacity</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="261" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1941" bodyend="1946"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ae1a1ef7608befd913335703e2847306a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updatePatternOpacity</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updatePatternOpacity</name>
        <reimplements refid="class_output_dev_1a87fabe2327708ebb0a29604a4b0b1b77">updatePatternOpacity</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="262" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1948" bodyend="1950"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aa3084029e805378e10251259c744db26" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::clearPatternOpacity</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>clearPatternOpacity</name>
        <reimplements refid="class_output_dev_1a909e1d99398b8387f7ddcaa53de9e9d6">clearPatternOpacity</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="263" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1952" bodyend="1954"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1acd6c98a1141321a780ae2a97c8c17af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateFillOverprint</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateFillOverprint</name>
        <reimplements refid="class_output_dev_1aa1256118203d372534ce8d1b2fed6582">updateFillOverprint</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="264" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1956" bodyend="1958"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ad84da47f884d02380e98a023be897341" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateStrokeOverprint</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateStrokeOverprint</name>
        <reimplements refid="class_output_dev_1a0d5a0433b4ef0b21a8a6a13f72bf78f2">updateStrokeOverprint</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="265" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1960" bodyend="1962"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ad571992f5b6bb521ea584e59fc71d38d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateOverprintMode</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateOverprintMode</name>
        <reimplements refid="class_output_dev_1a6fb0ff3d1ac46fede38478376be83e8d">updateOverprintMode</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="266" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1964" bodyend="1966"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a53a0fbb6a8eae6ad5117077baf88f1f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateTransfer</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateTransfer</name>
        <reimplements refid="class_output_dev_1a88f138182fee6e2139c9ec16f5d2c7b0">updateTransfer</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="267" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1968" bodyend="2011"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a6bfd5a77f1f7f3d993e3910b3af6ed00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::updateFont</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>updateFont</name>
        <reimplements refid="class_output_dev_1af59f68777aac425cdf8e1bcc964680f2">updateFont</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="270" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2013" bodyend="2015"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a04248923064a683ada958ce3a5c8c6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::stroke</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>stroke</name>
        <reimplements refid="class_output_dev_1aa24b70b1cff92053ef27c7e57f9c6e3a">stroke</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="273" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2314" bodyend="2325"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ac88f3dc99f6e8835d092e41196682f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::fill</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>fill</name>
        <reimplements refid="class_output_dev_1a27be5a4851d168b8e08d52dc32dfc9d9">fill</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="274" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2327" bodyend="2338"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aa7a5a7b2e729c6a45504675551a61771" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::eoFill</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>eoFill</name>
        <reimplements refid="class_output_dev_1a33a36bcae0a743b6182f73e50abc4c41">eoFill</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="275" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2340" bodyend="2351"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a8a3d6f9afca0c400f99150ed7af70356" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::tilingPatternFill</definition>
        <argsstring>(GfxState *state, Gfx *gfx, Catalog *catalog, Object *str, double *pmat, int paintType, int tilingType, Dict *resDict, double *mat, double *bbox, int x0, int y0, int x1, int y1, double xStep, double yStep)</argsstring>
        <name>tilingPatternFill</name>
        <reimplements refid="class_output_dev_1af51488d09f76b2f06bdd4b332c602c8c">tilingPatternFill</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_gfx" kindref="compound">Gfx</ref> *</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type><ref refid="class_catalog" kindref="compound">Catalog</ref> *</type>
          <declname>catalog</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>pmat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>paintType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tilingType</declname>
        </param>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>resDict</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xStep</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yStep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="276" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4547" bodyend="4746"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aa59a1cfbf186f0b962d0cf6981f0dc9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::functionShadedFill</definition>
        <argsstring>(GfxState *state, GfxFunctionShading *shading)</argsstring>
        <name>functionShadedFill</name>
        <reimplements refid="class_output_dev_1ab07903de11eb3ee7406eb688d609ec07">functionShadedFill</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref> *</type>
          <declname>shading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="281" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4843" bodyend="4908"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a6c94b8d6c4c996bd52f0a5bbd60882eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::axialShadedFill</definition>
        <argsstring>(GfxState *state, GfxAxialShading *shading, double tMin, double tMax)</argsstring>
        <name>axialShadedFill</name>
        <reimplements refid="class_output_dev_1a8b296e1a5cf43432101c59b67af4128a">axialShadedFill</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref> *</type>
          <declname>shading</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tMin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="282" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4910" bodyend="4917"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aea17328bede0cfb234d5c873de21ef77" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::radialShadedFill</definition>
        <argsstring>(GfxState *state, GfxRadialShading *shading, double tMin, double tMax)</argsstring>
        <name>radialShadedFill</name>
        <reimplements refid="class_output_dev_1a5f7d9ce5c0580f38955e5dc10d8b435e">radialShadedFill</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref> *</type>
          <declname>shading</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tMin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="283" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4919" bodyend="4926"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1acd422c9346aae22f845cc6aa0fc5a326" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::gouraudTriangleShadedFill</definition>
        <argsstring>(GfxState *state, GfxGouraudTriangleShading *shading)</argsstring>
        <name>gouraudTriangleShadedFill</name>
        <reimplements refid="class_output_dev_1a9c03f7f5128797d0ff6026fdc0be7091">gouraudTriangleShadedFill</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref> *</type>
          <declname>shading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="284" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4748" bodyend="4777"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a5d7d2e5da62386a53a4ccb3d1d6b1d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::clip</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>clip</name>
        <reimplements refid="class_output_dev_1ad29af51b92ec67117ef04c31a3a7cd8b">clip</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="287" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2353" bodyend="2359"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a277d7aa13caf27a660d5dfd0483b9a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::eoClip</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>eoClip</name>
        <reimplements refid="class_output_dev_1ab7f90de29bab85a8ccb3331889363bc1">eoClip</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="288" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2361" bodyend="2367"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a885b85f871c4947b2d1b05d65ad18f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::clipToStrokePath</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>clipToStrokePath</name>
        <reimplements refid="class_output_dev_1a1240052875f7a0bfdc1e849b3ad957d5">clipToStrokePath</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="289" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2369" bodyend="2377"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ae7e9cfe10183b147c55ae4c597ae1687" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::drawChar</definition>
        <argsstring>(GfxState *state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, Unicode *u, int uLen)</argsstring>
        <name>drawChar</name>
        <reimplements refid="class_output_dev_1a6c9cea15f3fa7ee836e6e793c63803d5">drawChar</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>originX</declname>
        </param>
        <param>
          <type>double</type>
          <declname>originY</declname>
        </param>
        <param>
          <type>CharCode</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nBytes</declname>
        </param>
        <param>
          <type>Unicode *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="292" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2416" bodyend="2526"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ae79cd61d955882fcbbb480c32c025145" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::beginType3Char</definition>
        <argsstring>(GfxState *state, double x, double y, double dx, double dy, CharCode code, Unicode *u, int uLen)</argsstring>
        <name>beginType3Char</name>
        <reimplements refid="class_output_dev_1a76e82f369f41ecf05f0ae825947c74cc">beginType3Char</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>CharCode</type>
          <declname>code</declname>
        </param>
        <param>
          <type>Unicode *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="296" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2528" bodyend="2675"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a9ee678643377b38d019cff486216ae4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::endType3Char</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>endType3Char</name>
        <reimplements refid="class_output_dev_1a83985f2d8420d2c587f2b5848b0e458a">endType3Char</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="299" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2677" bodyend="2699"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a107a1dd5702716f582842c5fd1246563" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::beginTextObject</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>beginTextObject</name>
        <reimplements refid="class_output_dev_1a5ab9de85c9fd722c86d399169d8f521c">beginTextObject</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="300" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2852" bodyend="2853"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a60602b81a51aa18cfdce4f6c66d5d32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::endTextObject</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>endTextObject</name>
        <reimplements refid="class_output_dev_1ab8decd3c140caa8265369f1ecfc729a5">endTextObject</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="301" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2855" bodyend="2861"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1adf00a5fa24ad9fe56caa115a520435e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::drawImageMask</definition>
        <argsstring>(GfxState *state, Object *ref, Stream *str, int width, int height, GBool invert, GBool interpolate, GBool inlineImg)</argsstring>
        <name>drawImageMask</name>
        <reimplements refid="class_output_dev_1a630a960bf7cfada13e56c968c2be041d">drawImageMask</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="class_stream" kindref="compound">Stream</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>invert</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>inlineImg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="304" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2888" bodyend="2929"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a6642a5b0208642713115c3d2782e6ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setSoftMaskFromImageMask</definition>
        <argsstring>(GfxState *state, Object *ref, Stream *str, int width, int height, GBool invert, GBool inlineImg, double *baseMatrix)</argsstring>
        <name>setSoftMaskFromImageMask</name>
        <reimplements refid="class_output_dev_1a2e26e4b8a43b55575b36139728ed6542">setSoftMaskFromImageMask</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="class_stream" kindref="compound">Stream</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>invert</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>inlineImg</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>baseMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="307" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2931" bodyend="2980"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a3eac1c51612d12735b8c2f4fa3a3eb66" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::unsetSoftMaskFromImageMask</definition>
        <argsstring>(GfxState *state, double *baseMatrix)</argsstring>
        <name>unsetSoftMaskFromImageMask</name>
        <reimplements refid="class_output_dev_1ab26abaccd671a63425c64e3192567b27">unsetSoftMaskFromImageMask</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>baseMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="311" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2982" bodyend="3001"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aa48ad5492f0c0392c517f0ecc297d262" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::drawImage</definition>
        <argsstring>(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, GBool interpolate, int *maskColors, GBool inlineImg)</argsstring>
        <name>drawImage</name>
        <reimplements refid="class_output_dev_1a5faa216a4d6de3e7a372abb0318085e2">drawImage</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="class_stream" kindref="compound">Stream</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref> *</type>
          <declname>colorMap</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maskColors</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>inlineImg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="312" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="3503" bodyend="3652"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aead002098984f3cc349c89761dd4c7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::drawMaskedImage</definition>
        <argsstring>(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, GBool interpolate, Stream *maskStr, int maskWidth, int maskHeight, GBool maskInvert, GBool maskInterpolate)</argsstring>
        <name>drawMaskedImage</name>
        <reimplements refid="class_output_dev_1a9da1d31676bdac51fb98da1281e2863d">drawMaskedImage</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="class_stream" kindref="compound">Stream</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref> *</type>
          <declname>colorMap</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <param>
          <type><ref refid="class_stream" kindref="compound">Stream</ref> *</type>
          <declname>maskStr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maskWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maskHeight</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>maskInvert</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>maskInterpolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="315" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="3774" bodyend="3954"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ab01959ecca430d1f238334e5eae989b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::drawSoftMaskedImage</definition>
        <argsstring>(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, GBool interpolate, Stream *maskStr, int maskWidth, int maskHeight, GfxImageColorMap *maskColorMap, GBool maskInterpolate)</argsstring>
        <name>drawSoftMaskedImage</name>
        <reimplements refid="class_output_dev_1ac2ee00e7cddb1617eeeb4a32f089be99">drawSoftMaskedImage</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="class_stream" kindref="compound">Stream</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref> *</type>
          <declname>colorMap</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <param>
          <type><ref refid="class_stream" kindref="compound">Stream</ref> *</type>
          <declname>maskStr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maskWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maskHeight</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref> *</type>
          <declname>maskColorMap</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>maskInterpolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="321" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="3956" bodyend="4128"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a53049bb1f66a17ce738f3e5423ea4baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::type3D0</definition>
        <argsstring>(GfxState *state, double wx, double wy)</argsstring>
        <name>type3D0</name>
        <reimplements refid="class_output_dev_1a04cf5c31e2b2bb4ae0b2376350234ec0">type3D0</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="331" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2701" bodyend="2703"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a2ef7c3495d18cf3c46ab7dddcfd11a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::type3D1</definition>
        <argsstring>(GfxState *state, double wx, double wy, double llx, double lly, double urx, double ury)</argsstring>
        <name>type3D1</name>
        <reimplements refid="class_output_dev_1aaadf8faecf05a1719baf96219fcd13f4">type3D1</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>llx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lly</declname>
        </param>
        <param>
          <type>double</type>
          <declname>urx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ury</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="332" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2705" bodyend="2834"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ad9a8bcbe9f88b964d6b777d0ee9717a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::checkTransparencyGroup</definition>
        <argsstring>(GfxState *state, GBool knockout)</argsstring>
        <name>checkTransparencyGroup</name>
        <reimplements refid="class_output_dev_1a7c277c07f07e0c4c70d048b57aa0b3c7">checkTransparencyGroup</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>knockout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="336" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4130" bodyend="4139"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a2246929a4e882888927dd269fc3a5a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::beginTransparencyGroup</definition>
        <argsstring>(GfxState *state, double *bbox, GfxColorSpace *blendingColorSpace, GBool isolated, GBool knockout, GBool forSoftMask)</argsstring>
        <name>beginTransparencyGroup</name>
        <reimplements refid="class_output_dev_1adf5dc30b2401ef362ff5c24f167169a3">beginTransparencyGroup</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref> *</type>
          <declname>blendingColorSpace</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>isolated</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>knockout</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>forSoftMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="337" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4141" bodyend="4303"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a9a75bcd28cda50c09c689143b399f805" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::endTransparencyGroup</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>endTransparencyGroup</name>
        <reimplements refid="class_output_dev_1ab40b03e24dab2d6cd11de6a3551d2593">endTransparencyGroup</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="341" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4305" bodyend="4314"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a2c48ab27384046399b81275c8c232476" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::paintTransparencyGroup</definition>
        <argsstring>(GfxState *state, double *bbox)</argsstring>
        <name>paintTransparencyGroup</name>
        <reimplements refid="class_output_dev_1ada3eb127f26195713c2609a6eea6990c">paintTransparencyGroup</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="342" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4316" bodyend="4354"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a855b36136a435dcc5780d20e8ccae816" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setSoftMask</definition>
        <argsstring>(GfxState *state, double *bbox, GBool alpha, Function *transferFunc, GfxColor *backdropColor)</argsstring>
        <name>setSoftMask</name>
        <reimplements refid="class_output_dev_1a34df49c454e5dd3d3ec841ef38e08199">setSoftMask</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="class_function" kindref="compound">Function</ref> *</type>
          <declname>transferFunc</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>backdropColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="343" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4356" bodyend="4493"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aaacd9b0440674444e4ba0afbea4edc98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::clearSoftMask</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>clearSoftMask</name>
        <reimplements refid="class_output_dev_1a0323fd4cd9bf7baed8f9f9cd155cfac1">clearSoftMask</reimplements>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="345" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4495" bodyend="4497"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a7d9b81549ff12883d50045b4abfdaf69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::startDoc</definition>
        <argsstring>(PDFDoc *docA)</argsstring>
        <name>startDoc</name>
        <param>
          <type><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref> *</type>
          <declname>docA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="350" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1484" bodyend="1506"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a0eed52b07fe876e4edc5fde3835d4fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setPaperColor</definition>
        <argsstring>(SplashColorPtr paperColorA)</argsstring>
        <name>setPaperColor</name>
        <param>
          <type>SplashColorPtr</type>
          <declname>paperColorA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="352" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4499" bodyend="4501"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a0b5236a6d6ac7c2fdb9dae387843dd2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::isReverseVideo</definition>
        <argsstring>()</argsstring>
        <name>isReverseVideo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="354" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ae4397e03ba344e30b268e13486fe812a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setReverseVideo</definition>
        <argsstring>(GBool reverseVideoA)</argsstring>
        <name>setReverseVideo</name>
        <param>
          <type>GBool</type>
          <declname>reverseVideoA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="355" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="355" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1af1ed8c8393cc4d426191afdfdad5cb77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap* SplashOutputDev::getBitmap</definition>
        <argsstring>()</argsstring>
        <name>getBitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="358" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a961fd9478ec09a778438c84083c6fc67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SplashOutputDev::getBitmapWidth</definition>
        <argsstring>()</argsstring>
        <name>getBitmapWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="359" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4503" bodyend="4505"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a959029040d24f536ba0f29bb7012c5bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SplashOutputDev::getBitmapHeight</definition>
        <argsstring>()</argsstring>
        <name>getBitmapHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="360" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4507" bodyend="4509"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1afd87483aa137365e3aae45bd847b3608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap * SplashOutputDev::takeBitmap</definition>
        <argsstring>()</argsstring>
        <name>takeBitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="364" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4511" bodyend="4518"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a2da784588c62377f9c63c33279ff6368" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setBitmapUpsideDown</definition>
        <argsstring>(GBool f)</argsstring>
        <name>setBitmapUpsideDown</name>
        <param>
          <type>GBool</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="368" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1ac796ac3e1f6c7434c2bb807832a6d209" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_splash" kindref="compound">Splash</ref> *</type>
        <definition>Splash* SplashOutputDev::getSplash</definition>
        <argsstring>()</argsstring>
        <name>getSplash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="371" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a503944f52feb8011ad6319efc132c240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::getModRegion</definition>
        <argsstring>(int *xMin, int *yMin, int *xMax, int *yMax)</argsstring>
        <name>getModRegion</name>
        <param>
          <type>int *</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yMin</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xMax</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="374" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4520" bodyend="4523"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aff2686303ff95bf87ff43650978dfb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::clearModRegion</definition>
        <argsstring>()</argsstring>
        <name>clearModRegion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="377" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4525" bodyend="4527"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a450b68a49c88e79a4514b5ee821f2f24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_splash_font" kindref="compound">SplashFont</ref> *</type>
        <definition>SplashFont* SplashOutputDev::getCurrentFont</definition>
        <argsstring>()</argsstring>
        <name>getCurrentFont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="379" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a909a7a5781ccd6848950f260a3603108" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setSkipText</definition>
        <argsstring>(GBool skipHorizTextA, GBool skipRotatedTextA)</argsstring>
        <name>setSkipText</name>
        <param>
          <type>GBool</type>
          <declname>skipHorizTextA</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>skipRotatedTextA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="383" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="383" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a11c4184c78f7c4dcf0bf4a7ec6ee882f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SplashOutputDev::getNestCount</definition>
        <argsstring>()</argsstring>
        <name>getNestCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="386" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="386" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1af858c026f3a6f240475594d9cf2dbb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::getVectorAntialias</definition>
        <argsstring>()</argsstring>
        <name>getVectorAntialias</name>
        <reimplements refid="class_output_dev_1aa3763793657e69a99f1a5b421184ed1c">getVectorAntialias</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="389" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4530" bodyend="4532"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a9e6206ce4eb342401ecc8c01f08b0f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setVectorAntialias</definition>
        <argsstring>(GBool vaa)</argsstring>
        <name>setVectorAntialias</name>
        <reimplements refid="class_output_dev_1acfc60ae8c0873218a3c5d498bacaf11c">setVectorAntialias</reimplements>
        <param>
          <type>GBool</type>
          <declname>vaa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="390" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4534" bodyend="4538"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a82f88a129bcb9c397b7e16a9100e713a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::getFontAntialias</definition>
        <argsstring>()</argsstring>
        <name>getFontAntialias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="393" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a99603ea80ee75b5eeb4b1008e65e3ded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setFontAntialias</definition>
        <argsstring>(GBool anti)</argsstring>
        <name>setFontAntialias</name>
        <param>
          <type>GBool</type>
          <declname>anti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="394" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a9ffa2fbe23152dcc17ee848547f6bb9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setFreeTypeHinting</definition>
        <argsstring>(GBool enable, GBool enableSlightHinting)</argsstring>
        <name>setFreeTypeHinting</name>
        <param>
          <type>GBool</type>
          <declname>enable</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>enableSlightHinting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="396" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4541" bodyend="4545"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_splash_output_dev_1aca3c88c1afbdbaf774be3c596d76f26a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::doUpdateFont</definition>
        <argsstring>(GfxState *state)</argsstring>
        <name>doUpdateFont</name>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="399" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2017" bodyend="2312"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_splash_output_dev_1a491d04924800a95da6b73a81bc4169ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::univariateShadedFill</definition>
        <argsstring>(GfxState *state, SplashUnivariatePattern *pattern, double tMin, double tMax)</argsstring>
        <name>univariateShadedFill</name>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_splash_univariate_pattern" kindref="compound">SplashUnivariatePattern</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tMin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="402" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="4779" bodyend="4841"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a2907c5c4fe20b4a259705d1edd09b6c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setupScreenParams</definition>
        <argsstring>(double hDPI, double vDPI)</argsstring>
        <name>setupScreenParams</name>
        <param>
          <type>double</type>
          <declname>hDPI</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vDPI</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="404" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1416" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a56f03532734f9620f3e85f0c58a1c0a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
        <definition>SplashPattern * SplashOutputDev::getColor</definition>
        <argsstring>(GfxGray gray)</argsstring>
        <name>getColor</name>
        <param>
          <type>GfxGray</type>
          <declname>gray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="405" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1771" bodyend="1779"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a5cc13f27953c93cd4db976bb2fc4c7aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
        <definition>SplashPattern * SplashOutputDev::getColor</definition>
        <argsstring>(GfxRGB *rgb)</argsstring>
        <name>getColor</name>
        <param>
          <type><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref> *</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="406" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1781" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a6e9d21dcfd6ae19def4f550ba6fdfbeb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::getMatteColor</definition>
        <argsstring>(SplashColorMode colorMode, GfxImageColorMap *colorMap, GfxColor *matteColor, SplashColor splashMatteColor)</argsstring>
        <name>getMatteColor</name>
        <param>
          <type>SplashColorMode</type>
          <declname>colorMode</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref> *</type>
          <declname>colorMap</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>matteColor</declname>
        </param>
        <param>
          <type>SplashColor</type>
          <declname>splashMatteColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="411" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1821" bodyend="1864"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a77d412e906aea973b3859307ef92fc94" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::setOverprintMask</definition>
        <argsstring>(GfxColorSpace *colorSpace, GBool overprintFlag, int overprintMode, GfxColor *singleColor, GBool grayIndexed=gFalse)</argsstring>
        <name>setOverprintMask</name>
        <param>
          <type><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref> *</type>
          <declname>colorSpace</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>overprintFlag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>overprintMode</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>singleColor</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>grayIndexed</declname>
          <defval>gFalse</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="412" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="1866" bodyend="1928"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a0eda38694cf258f93ab9d8662e6bf2c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
        <definition>SplashPath * SplashOutputDev::convertPath</definition>
        <argsstring>(GfxState *state, GfxPath *path, GBool dropEmptySubpaths)</argsstring>
        <name>convertPath</name>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_path" kindref="compound">GfxPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>dropEmptySubpaths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="414" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2379" bodyend="2414"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1aef1592545c9fabd7fc11afbc72688840" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplashOutputDev::drawType3Glyph</definition>
        <argsstring>(GfxState *state, T3FontCache *t3Font, T3FontCacheTag *tag, Guchar *data)</argsstring>
        <name>drawType3Glyph</name>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_t3_font_cache" kindref="compound">T3FontCache</ref> *</type>
          <declname>t3Font</declname>
        </param>
        <param>
          <type><ref refid="struct_t3_font_cache_tag" kindref="compound">T3FontCacheTag</ref> *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="416" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2836" bodyend="2850"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_splash_output_dev_1adb2eb8c07f97f311890009572f0abf48" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::imageMaskSrc</definition>
        <argsstring>(void *data, SplashColorPtr line)</argsstring>
        <name>imageMaskSrc</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="424" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="2869" bodyend="2886"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a5420ac24f2461ec26cb6a587dbe1dcce" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::imageSrc</definition>
        <argsstring>(void *data, SplashColorPtr colorLine, Guchar *alphaLine)</argsstring>
        <name>imageSrc</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>colorLine</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>alphaLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="425" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="3051" bodyend="3206"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a0543a81593831b4e03a03b242550a003" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::alphaImageSrc</definition>
        <argsstring>(void *data, SplashColorPtr line, Guchar *alphaLine)</argsstring>
        <name>alphaImageSrc</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>line</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>alphaLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="427" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="3302" bodyend="3409"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a1c5af5e85664ed765cfc8e4629e3159f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::maskedImageSrc</definition>
        <argsstring>(void *data, SplashColorPtr line, Guchar *alphaLine)</argsstring>
        <name>maskedImageSrc</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>line</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>alphaLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="429" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="3663" bodyend="3772"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_output_dev_1a0b50d59d5bf131f4a10b4a478f198969" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool SplashOutputDev::tilingBitmapSrc</definition>
        <argsstring>(void *data, SplashColorPtr line, Guchar *alphaLine)</argsstring>
        <name>tilingBitmapSrc</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>line</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>alphaLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="431" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.cc" bodystart="3421" bodyend="3501"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="15426">
        <label>OutputDev</label>
        <link refid="class_output_dev"/>
      </node>
      <node id="15425">
        <label>SplashOutputDev</label>
        <link refid="class_splash_output_dev"/>
        <childnode refid="15426" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15428">
        <label>OutputDev</label>
        <link refid="class_output_dev"/>
      </node>
      <node id="15427">
        <label>SplashOutputDev</label>
        <link refid="class_splash_output_dev"/>
        <childnode refid="15428" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="thirdparty/poppler/poppler/SplashOutputDev.h" line="195" column="1" bodyfile="thirdparty/poppler/poppler/SplashOutputDev.h" bodystart="195" bodyend="472"/>
    <listofallmembers>
      <member refid="class_splash_output_dev_1a0543a81593831b4e03a03b242550a003" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>alphaImageSrc</name></member>
      <member refid="class_splash_output_dev_1a6c94b8d6c4c996bd52f0a5bbd60882eb" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>axialShadedFill</name></member>
      <member refid="class_output_dev_1af18b529a68d2b5d5948cbc0c4e8330c4" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>axialShadedSupportExtend</name></member>
      <member refid="class_output_dev_1af1d24bd84cbcda2862c76cf8e081f86d" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>beginActualText</name></member>
      <member refid="class_output_dev_1abb35b1288a0f1d823a24f3e45c6067b9" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>beginMarkedContent</name></member>
      <member refid="class_output_dev_1abc90da88fb9ee1e10d3b60b4821a75d8" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>beginString</name></member>
      <member refid="class_output_dev_1af0a25f677aa1a95e2a6e060b1dc81e9f" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>beginStringOp</name></member>
      <member refid="class_splash_output_dev_1a107a1dd5702716f582842c5fd1246563" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>beginTextObject</name></member>
      <member refid="class_splash_output_dev_1a2246929a4e882888927dd269fc3a5a9b" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>beginTransparencyGroup</name></member>
      <member refid="class_splash_output_dev_1ae79cd61d955882fcbbb480c32c025145" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>beginType3Char</name></member>
      <member refid="class_splash_output_dev_1aca8916a463ae177002f0bcd00bfb13dd" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>bitmap</name></member>
      <member refid="class_splash_output_dev_1a71c394eff4ee6f07aedf142c254b487a" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>bitmapRowPad</name></member>
      <member refid="class_splash_output_dev_1a39daed52c87f11edf03e808a0948c577" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>bitmapTopDown</name></member>
      <member refid="class_splash_output_dev_1a618873bc966d9b24f2877662954ca4df" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>bitmapUpsideDown</name></member>
      <member refid="class_output_dev_1a223ee5e8d92f2d66130d1c0e33990fc9" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>checkPageSlice</name></member>
      <member refid="class_splash_output_dev_1ad9a8bcbe9f88b964d6b777d0ee9717a9" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>checkTransparencyGroup</name></member>
      <member refid="class_splash_output_dev_1aff2686303ff95bf87ff43650978dfb57" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>clearModRegion</name></member>
      <member refid="class_splash_output_dev_1aa3084029e805378e10251259c744db26" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>clearPatternOpacity</name></member>
      <member refid="class_splash_output_dev_1aaacd9b0440674444e4ba0afbea4edc98" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>clearSoftMask</name></member>
      <member refid="class_splash_output_dev_1a5d7d2e5da62386a53a4ccb3d1d6b1d4a" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>clip</name></member>
      <member refid="class_splash_output_dev_1a885b85f871c4947b2d1b05d65ad18f08" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>clipToStrokePath</name></member>
      <member refid="class_splash_output_dev_1af60cacb6b0c0fc4103386300a8836c56" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>colorMode</name></member>
      <member refid="class_splash_output_dev_1a0eda38694cf258f93ab9d8662e6bf2c4" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>convertPath</name></member>
      <member refid="class_output_dev_1aeefcb427f9006903796d6d467e393adc" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>cvtDevToUser</name></member>
      <member refid="class_output_dev_1aff3985dadb18d1e458419ebd997c44c1" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>cvtUserToDev</name></member>
      <member refid="class_splash_output_dev_1ab9e47a03b5835b56cb0e47e91654932c" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>doc</name></member>
      <member refid="class_splash_output_dev_1aca3c88c1afbdbaf774be3c596d76f26a" prot="protected" virt="non-virtual"><scope>SplashOutputDev</scope><name>doUpdateFont</name></member>
      <member refid="class_splash_output_dev_1ae7e9cfe10183b147c55ae4c597ae1687" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>drawChar</name></member>
      <member refid="class_output_dev_1a8347dc89808e1ab4b69f8309ad0edc9e" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>drawForm</name></member>
      <member refid="class_splash_output_dev_1aa48ad5492f0c0392c517f0ecc297d262" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>drawImage</name></member>
      <member refid="class_splash_output_dev_1adf00a5fa24ad9fe56caa115a520435e6" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>drawImageMask</name></member>
      <member refid="class_splash_output_dev_1aead002098984f3cc349c89761dd4c7ce" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>drawMaskedImage</name></member>
      <member refid="class_splash_output_dev_1ab01959ecca430d1f238334e5eae989b9" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>drawSoftMaskedImage</name></member>
      <member refid="class_output_dev_1a53444c7b8dc07625395c3d25805dfbd2" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>drawString</name></member>
      <member refid="class_splash_output_dev_1aef1592545c9fabd7fc11afbc72688840" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>drawType3Glyph</name></member>
      <member refid="class_output_dev_1a829cff0b8ff47de516574542de539d1c" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>dump</name></member>
      <member refid="class_splash_output_dev_1a71aeeb113cf05ead45d7a20825889292" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>enableFreeTypeHinting</name></member>
      <member refid="class_splash_output_dev_1adb2b31669dea2530cf49ca58b7462a37" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>enableSlightHinting</name></member>
      <member refid="class_output_dev_1a23f812adafca46e599ec0f7290534127" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endActualText</name></member>
      <member refid="class_output_dev_1ae94023fd2c678bf75b13e58ba60f1196" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endMarkedContent</name></member>
      <member refid="class_splash_output_dev_1aac108f9462b713ef0ef0352c20100afb" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endPage</name></member>
      <member refid="class_output_dev_1a465aec15453cbdf837b0d5fb117aee46" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endProfile</name></member>
      <member refid="class_output_dev_1a218a55aeb13ac2288ba7f2f3f4ce7f12" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endString</name></member>
      <member refid="class_output_dev_1adda0f049d956b26ee965e73aa0081282" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endStringOp</name></member>
      <member refid="class_splash_output_dev_1a60602b81a51aa18cfdce4f6c66d5d32c" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endTextObject</name></member>
      <member refid="class_splash_output_dev_1a9a75bcd28cda50c09c689143b399f805" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endTransparencyGroup</name></member>
      <member refid="class_splash_output_dev_1a9ee678643377b38d019cff486216ae4e" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>endType3Char</name></member>
      <member refid="class_splash_output_dev_1a277d7aa13caf27a660d5dfd0483b9a85" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>eoClip</name></member>
      <member refid="class_splash_output_dev_1aa7a5a7b2e729c6a45504675551a61771" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>eoFill</name></member>
      <member refid="class_splash_output_dev_1ac88f3dc99f6e8835d092e41196682f93" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>fill</name></member>
      <member refid="class_splash_output_dev_1a5b4cfc947bb6ce7838abc10f7ec5aff0" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>font</name></member>
      <member refid="class_splash_output_dev_1a7100ebb12edd3b866325337082893521" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>fontAntialias</name></member>
      <member refid="class_splash_output_dev_1ae74f780e887ab39ab72df82d941abcaa" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>fontEngine</name></member>
      <member refid="class_splash_output_dev_1aa59a1cfbf186f0b962d0cf6981f0dc9b" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>functionShadedFill</name></member>
      <member refid="class_splash_output_dev_1af1ed8c8393cc4d426191afdfdad5cb77" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getBitmap</name></member>
      <member refid="class_splash_output_dev_1a959029040d24f536ba0f29bb7012c5bf" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getBitmapHeight</name></member>
      <member refid="class_splash_output_dev_1a961fd9478ec09a778438c84083c6fc67" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getBitmapWidth</name></member>
      <member refid="class_splash_output_dev_1a56f03532734f9620f3e85f0c58a1c0a2" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>getColor</name></member>
      <member refid="class_splash_output_dev_1a5cc13f27953c93cd4db976bb2fc4c7aa" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>getColor</name></member>
      <member refid="class_splash_output_dev_1a450b68a49c88e79a4514b5ee821f2f24" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getCurrentFont</name></member>
      <member refid="class_output_dev_1a1238a44cb9258955a94151a16e671878" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getDefCTM</name></member>
      <member refid="class_output_dev_1a1438903f85bc90716abee8122cf489e8" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getDefICTM</name></member>
      <member refid="class_splash_output_dev_1a82f88a129bcb9c397b7e16a9100e713a" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getFontAntialias</name></member>
      <member refid="class_splash_output_dev_1a6e9d21dcfd6ae19def4f550ba6fdfbeb" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>getMatteColor</name></member>
      <member refid="class_splash_output_dev_1a503944f52feb8011ad6319efc132c240" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getModRegion</name></member>
      <member refid="class_splash_output_dev_1a11c4184c78f7c4dcf0bf4a7ec6ee882f" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getNestCount</name></member>
      <member refid="class_output_dev_1ad1bc9865d811a68c0bdcf2a73bcf004b" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>getProfileHash</name></member>
      <member refid="class_splash_output_dev_1ac796ac3e1f6c7434c2bb807832a6d209" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>getSplash</name></member>
      <member refid="class_splash_output_dev_1af858c026f3a6f240475594d9cf2dbb22" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>getVectorAntialias</name></member>
      <member refid="class_splash_output_dev_1acd422c9346aae22f845cc6aa0fc5a326" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>gouraudTriangleShadedFill</name></member>
      <member refid="class_splash_output_dev_1aa1a6b098d998d1b97f896112ddbed6bd" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>haveT3Dx</name></member>
      <member refid="class_splash_output_dev_1adb2eb8c07f97f311890009572f0abf48" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>imageMaskSrc</name></member>
      <member refid="class_splash_output_dev_1a5420ac24f2461ec26cb6a587dbe1dcce" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>imageSrc</name></member>
      <member refid="class_output_dev_1a91a429fc51f4100808d0b6fb5b5a6d75" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>incCharCount</name></member>
      <member refid="class_splash_output_dev_1a29024ecc13db2e418e2fbaaf1ca9dc39" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>interpretType3Chars</name></member>
      <member refid="class_splash_output_dev_1a0b5236a6d6ac7c2fdb9dae387843dd2c" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>isReverseVideo</name></member>
      <member refid="class_splash_output_dev_1a8898826ef1db305461d37c16e70d6c1a" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>keepAlphaChannel</name></member>
      <member refid="class_output_dev_1acd0ecfc113ad397b105cfcd3e443aab4" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>markPoint</name></member>
      <member refid="class_output_dev_1a473f1fde6b4cfd2cf29a2f737620f1ea" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>markPoint</name></member>
      <member refid="class_splash_output_dev_1a1c5af5e85664ed765cfc8e4629e3159f" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>maskedImageSrc</name></member>
      <member refid="class_output_dev_1aeb6b343278e1bf777afa4eee8eed2ac2" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>needCharCount</name></member>
      <member refid="class_output_dev_1a01e321ecf774481f826da5c7cd0a6d3b" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>needClipToCropBox</name></member>
      <member refid="class_splash_output_dev_1aca4d879256721a52123129c7ba0e2a90" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>needFontUpdate</name></member>
      <member refid="class_output_dev_1ac22cca1656cfcdc4431c1638ba428cf1" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>needNonText</name></member>
      <member refid="class_splash_output_dev_1aa8633df95b74f456ea4f7a8830e65b54" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>nestCount</name></member>
      <member refid="class_splash_output_dev_1a3fe6157c7fd1a9c0f9f69304a06ac9b1" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>nT3Fonts</name></member>
      <member refid="class_output_dev_1a4cd6b911a4dc9a4aacc4b60d88afe01c" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>opiBegin</name></member>
      <member refid="class_output_dev_1a49f554f17b8c532fa813c180afafaf82" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>opiEnd</name></member>
      <member refid="class_output_dev_1aa30a2c3ef7459089abb446ee3dd9c949" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>OutputDev</name></member>
      <member refid="class_splash_output_dev_1a230aecace6267b477d6010230a86abdf" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>overprintPreview</name></member>
      <member refid="class_splash_output_dev_1a2c48ab27384046399b81275c8c232476" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>paintTransparencyGroup</name></member>
      <member refid="class_splash_output_dev_1a9b5310ec2ff13605870dab7a75b8b1b7" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>paperColor</name></member>
      <member refid="class_output_dev_1ae8682d4076d88334a1b837ec8fc8b5a5" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>patchMeshShadedFill</name></member>
      <member refid="class_output_dev_1a9671ac2488c1b6109068bfafd7447f08" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>processLink</name></member>
      <member refid="class_output_dev_1a330bd1fb84b3c5bcbb6db2579ec86060" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>psXObject</name></member>
      <member refid="class_splash_output_dev_1aea17328bede0cfb234d5c873de21ef77" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>radialShadedFill</name></member>
      <member refid="class_output_dev_1ad2596d7dfbfd19b8bf375d23e826663e" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>radialShadedSupportExtend</name></member>
      <member refid="class_splash_output_dev_1a984acc99cd5c00005839f92cea712d8f" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>restoreState</name></member>
      <member refid="class_output_dev_1a8f03af87f145a05913cc52e371d26702" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>restoreTextPos</name></member>
      <member refid="class_splash_output_dev_1a7725d2397b967e287434a3085349c736" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>reverseVideo</name></member>
      <member refid="class_splash_output_dev_1adbae408536813971115f49ffcc5bf9e4" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>saveState</name></member>
      <member refid="class_output_dev_1a528e180c891e750dd674ed938e2c2395" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>saveTextPos</name></member>
      <member refid="class_splash_output_dev_1a79d7918a5f7e23b49a41def6b6dfcf2f" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>screenParams</name></member>
      <member refid="class_splash_output_dev_1a2da784588c62377f9c63c33279ff6368" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>setBitmapUpsideDown</name></member>
      <member refid="class_output_dev_1a626861f473e4c868a7846f289a7f32dd" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>setDefaultCTM</name></member>
      <member refid="class_splash_output_dev_1a99603ea80ee75b5eeb4b1008e65e3ded" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>setFontAntialias</name></member>
      <member refid="class_splash_output_dev_1a9ffa2fbe23152dcc17ee848547f6bb9a" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>setFreeTypeHinting</name></member>
      <member refid="class_splash_output_dev_1a77d412e906aea973b3859307ef92fc94" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>setOverprintMask</name></member>
      <member refid="class_splash_output_dev_1a0eed52b07fe876e4edc5fde3835d4fbd" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>setPaperColor</name></member>
      <member refid="class_splash_output_dev_1ae4397e03ba344e30b268e13486fe812a" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>setReverseVideo</name></member>
      <member refid="class_splash_output_dev_1a909a7a5781ccd6848950f260a3603108" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>setSkipText</name></member>
      <member refid="class_splash_output_dev_1a855b36136a435dcc5780d20e8ccae816" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>setSoftMask</name></member>
      <member refid="class_splash_output_dev_1a6642a5b0208642713115c3d2782e6ce0" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>setSoftMaskFromImageMask</name></member>
      <member refid="class_splash_output_dev_1a2907c5c4fe20b4a259705d1edd09b6c6" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>setupScreenParams</name></member>
      <member refid="class_splash_output_dev_1a9e6206ce4eb342401ecc8c01f08b0f75" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>setVectorAntialias</name></member>
      <member refid="class_splash_output_dev_1a949f85259bf9604a0eec763b07f18f58" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>skipHorizText</name></member>
      <member refid="class_splash_output_dev_1ab128d1d9b2fe46e08d2c0b93061ca392" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>skipRotatedText</name></member>
      <member refid="class_splash_output_dev_1a3fb6bbed2db35a9922ad97c6428ba302" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>splash</name></member>
      <member refid="class_splash_output_dev_1a573ef4d16f6f6f9e58aee16bebd03b91" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>SplashOutputDev</name></member>
      <member refid="class_splash_output_dev_1a7d9b81549ff12883d50045b4abfdaf69" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>startDoc</name></member>
      <member refid="class_splash_output_dev_1a802c51e8d7ce384322d51bbe5d6ffb00" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>startPage</name></member>
      <member refid="class_output_dev_1a087c3f2802f97d852c323a003086fbb8" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>startProfile</name></member>
      <member refid="class_splash_output_dev_1a04248923064a683ada958ce3a5c8c6ef" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>stroke</name></member>
      <member refid="class_splash_output_dev_1a9c713b131ef6ff60bb222c61b88b27b3" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>t3FontCache</name></member>
      <member refid="class_splash_output_dev_1a3d9e8751bf682d659c5c0475a82163be" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>t3GlyphStack</name></member>
      <member refid="class_splash_output_dev_1afd87483aa137365e3aae45bd847b3608" prot="public" virt="non-virtual"><scope>SplashOutputDev</scope><name>takeBitmap</name></member>
      <member refid="class_splash_output_dev_1a093b2759ac0392857c7c6ec66aa8a799" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>textClipPath</name></member>
      <member refid="class_splash_output_dev_1a0b50d59d5bf131f4a10b4a478f198969" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>tilingBitmapSrc</name></member>
      <member refid="class_splash_output_dev_1a8a3d6f9afca0c400f99150ed7af70356" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>tilingPatternFill</name></member>
      <member refid="class_splash_output_dev_1a8c6d6b1f2dc9778bdfdb7bd549f9fd31" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>transpGroupStack</name></member>
      <member refid="class_splash_output_dev_1a53049bb1f66a17ce738f3e5423ea4baa" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>type3D0</name></member>
      <member refid="class_splash_output_dev_1a2ef7c3495d18cf3c46ab7dddcfd11a19" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>type3D1</name></member>
      <member refid="class_splash_output_dev_1a491d04924800a95da6b73a81bc4169ca" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>univariateShadedFill</name></member>
      <member refid="class_splash_output_dev_1a3eac1c51612d12735b8c2f4fa3a3eb66" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>unsetSoftMaskFromImageMask</name></member>
      <member refid="class_splash_output_dev_1a9a9a348a82d8f2c5e045c4fedd6efcde" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateAll</name></member>
      <member refid="class_output_dev_1a653436589426a8652bacecd4cddff417" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateAlphaIsShape</name></member>
      <member refid="class_splash_output_dev_1a8a043be24cad9800a05d2747b51701c7" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateBlendMode</name></member>
      <member refid="class_output_dev_1a01168f564318064748a8a395229b700a" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateCharSpace</name></member>
      <member refid="class_splash_output_dev_1a26fb7faa226548082f477cf12bb8022f" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateCTM</name></member>
      <member refid="class_splash_output_dev_1a1bd34e8e4176060b6751072330215464" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateFillColor</name></member>
      <member refid="class_splash_output_dev_1aeae866c00316da78f0d66fb349335758" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateFillColorSpace</name></member>
      <member refid="class_output_dev_1a3d08d3dd986deb8de48a7984d5fc1d5b" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateFillColorStop</name></member>
      <member refid="class_splash_output_dev_1a70fd964b5b428f78a9b9d378d05382a2" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateFillOpacity</name></member>
      <member refid="class_splash_output_dev_1acd6c98a1141321a780ae2a97c8c17af1" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateFillOverprint</name></member>
      <member refid="class_splash_output_dev_1afbf1093b69f050356aa8fb87ff9e2a85" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateFlatness</name></member>
      <member refid="class_splash_output_dev_1a6bfd5a77f1f7f3d993e3910b3af6ed00" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateFont</name></member>
      <member refid="class_output_dev_1aa8200b0a5cf6e5258bcd8973286d7cb3" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateHorizScaling</name></member>
      <member refid="class_splash_output_dev_1aae1617055a18bf202859878bc69bd215" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateLineCap</name></member>
      <member refid="class_splash_output_dev_1a4e68b7a79c9e0caf72d9eed6710c6970" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateLineDash</name></member>
      <member refid="class_splash_output_dev_1a8c558177fa28476830f4e4a3537ebb95" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateLineJoin</name></member>
      <member refid="class_splash_output_dev_1add65a8eeba7ed482f32ae13a2b8bbff7" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateLineWidth</name></member>
      <member refid="class_splash_output_dev_1a72c2b36a7b11a0288a054a5627f1444a" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateMiterLimit</name></member>
      <member refid="class_splash_output_dev_1ad571992f5b6bb521ea584e59fc71d38d" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateOverprintMode</name></member>
      <member refid="class_splash_output_dev_1ae1a1ef7608befd913335703e2847306a" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updatePatternOpacity</name></member>
      <member refid="class_output_dev_1a6271d1ebd09c0a79eadba5c078949710" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateRender</name></member>
      <member refid="class_output_dev_1ac6105a80a144bb1653d5822580ff2063" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateRise</name></member>
      <member refid="class_splash_output_dev_1ad318eaa81c9fb070e9083756aedbe3fa" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateStrokeAdjust</name></member>
      <member refid="class_splash_output_dev_1a16be5674bb70e0b9043174abab3e920e" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateStrokeColor</name></member>
      <member refid="class_splash_output_dev_1a9d049536916af0fbca34f86de8769cc1" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateStrokeColorSpace</name></member>
      <member refid="class_splash_output_dev_1a94960bf5aaac12834042256e29a09183" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateStrokeOpacity</name></member>
      <member refid="class_splash_output_dev_1ad84da47f884d02380e98a023be897341" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateStrokeOverprint</name></member>
      <member refid="class_output_dev_1a5e1ad53b378a61a9035d2d1a232aa9ff" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateTextKnockout</name></member>
      <member refid="class_output_dev_1a44a3b5ca4aa58bc026fc2e28417ac113" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateTextMat</name></member>
      <member refid="class_output_dev_1ac7171bda1b19bda650dd51addb7b19ba" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateTextPos</name></member>
      <member refid="class_output_dev_1aa24010d0b4f1304f565a24b8c3f4916d" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateTextShift</name></member>
      <member refid="class_splash_output_dev_1a53a0fbb6a8eae6ad5117077baf88f1f6" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateTransfer</name></member>
      <member refid="class_output_dev_1a624caf1670d8bd6ea47c81f176799400" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>updateWordSpace</name></member>
      <member refid="class_splash_output_dev_1a12ccc54c04f37930e7d10500eb3bd7cd" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>upsideDown</name></member>
      <member refid="class_splash_output_dev_1a5bbe45ef25cf9b6e3357c0ffbfb8c98a" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>useDrawChar</name></member>
      <member refid="class_output_dev_1a88a89943e0b1c93eb7e2b68daf263930" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>useDrawForm</name></member>
      <member refid="class_output_dev_1a1af7bbf76242dd3a1c970d80a042b025" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>useFillColorStop</name></member>
      <member refid="class_splash_output_dev_1a0006831ac5e4f1c9c2edfa5a2bc3f05f" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>useShadedFills</name></member>
      <member refid="class_splash_output_dev_1a2f17cd900b94377281927cad046305a4" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>useTilingPatternFill</name></member>
      <member refid="class_splash_output_dev_1a92bbdfc6490f2c9bcd8a67260c8dd40c" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>vectorAntialias</name></member>
      <member refid="class_splash_output_dev_1a395bd9abb7cd0d127c55a9010afb4a2b" prot="private" virt="non-virtual"><scope>SplashOutputDev</scope><name>xref</name></member>
      <member refid="class_output_dev_1ab13c071bada522565f64aba6b8b30b6e" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>~OutputDev</name></member>
      <member refid="class_splash_output_dev_1abdc27b99a2bdacc96b809b60d7559ea8" prot="public" virt="virtual"><scope>SplashOutputDev</scope><name>~SplashOutputDev</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
