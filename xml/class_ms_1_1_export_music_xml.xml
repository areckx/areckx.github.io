<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_export_music_xml" kind="class" language="C++" prot="public">
    <compoundname>Ms::ExportMusicXml</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1aa429381534af80eb51e31587d6982048" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
        <definition>Score* Ms::ExportMusicXml::_score</definition>
        <argsstring></argsstring>
        <name>_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="269" column="1" bodyfile="mscore/exportxml.cpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1acd0244658b11e4349b0b9e6ab56baa39" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref></type>
        <definition>XmlWriter Ms::ExportMusicXml::xml</definition>
        <argsstring></argsstring>
        <name>xml</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="270" column="1" bodyfile="mscore/exportxml.cpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a3b2b2d5f604155547f778d9816013c21" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_slur_handler" kindref="compound">SlurHandler</ref></type>
        <definition>SlurHandler Ms::ExportMusicXml::sh</definition>
        <argsstring></argsstring>
        <name>sh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="271" column="1" bodyfile="mscore/exportxml.cpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1ac22a2b7290e4ce22573dc7e6962df297" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_glissando_handler" kindref="compound">GlissandoHandler</ref></type>
        <definition>GlissandoHandler Ms::ExportMusicXml::gh</definition>
        <argsstring></argsstring>
        <name>gh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="272" column="1" bodyfile="mscore/exportxml.cpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1abfdfbead4f8e7542a4bf9e7020d55a36" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::ExportMusicXml::tick</definition>
        <argsstring></argsstring>
        <name>tick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="273" column="1" bodyfile="mscore/exportxml.cpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a7fa11152b9fb4ceab7509672e9a4767d" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_attributes" kindref="compound">Attributes</ref></type>
        <definition>Attributes Ms::ExportMusicXml::attr</definition>
        <argsstring></argsstring>
        <name>attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="274" column="1" bodyfile="mscore/exportxml.cpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a86a5923d1511e2c0186e83c8ee28e4f8" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_text_line" kindref="compound">TextLine</ref> const  *</type>
        <definition>TextLine const* Ms::ExportMusicXml::brackets[MAX_NUMBER_LEVEL]</definition>
        <argsstring>[MAX_NUMBER_LEVEL]</argsstring>
        <name>brackets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="275" column="1" bodyfile="mscore/exportxml.cpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a3bae54db11fc34ccef0608b9c85bee5e" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref> const  *</type>
        <definition>Hairpin const* Ms::ExportMusicXml::hairpins[MAX_NUMBER_LEVEL]</definition>
        <argsstring>[MAX_NUMBER_LEVEL]</argsstring>
        <name>hairpins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="276" column="1" bodyfile="mscore/exportxml.cpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a012cc094a8ad40c3f5d7a62a2b52a866" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_ottava" kindref="compound">Ottava</ref> const  *</type>
        <definition>Ottava const* Ms::ExportMusicXml::ottavas[MAX_NUMBER_LEVEL]</definition>
        <argsstring>[MAX_NUMBER_LEVEL]</argsstring>
        <name>ottavas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="277" column="1" bodyfile="mscore/exportxml.cpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a4c364c8ac02dfce1c789ab07b800fa4b" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_trill" kindref="compound">Trill</ref> const  *</type>
        <definition>Trill const* Ms::ExportMusicXml::trills[MAX_NUMBER_LEVEL]</definition>
        <argsstring>[MAX_NUMBER_LEVEL]</argsstring>
        <name>trills</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="278" column="1" bodyfile="mscore/exportxml.cpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a60d2a4e06c9dfe33c77c844cb3a63140" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::ExportMusicXml::div</definition>
        <argsstring></argsstring>
        <name>div</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="279" column="1" bodyfile="mscore/exportxml.cpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1ad112a80ec820a62bc74fa958838132b7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ms::ExportMusicXml::millimeters</definition>
        <argsstring></argsstring>
        <name>millimeters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="280" column="1" bodyfile="mscore/exportxml.cpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1ac0586cd706e10fff5a986525205a1d68" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::ExportMusicXml::tenths</definition>
        <argsstring></argsstring>
        <name>tenths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="281" column="1" bodyfile="mscore/exportxml.cpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a996bafa92f670735245330d9b5ae0bf5" prot="private" static="no" mutable="no">
        <type>TrillHash</type>
        <definition>TrillHash Ms::ExportMusicXml::trillStart</definition>
        <argsstring></argsstring>
        <name>trillStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="282" column="1" bodyfile="mscore/exportxml.cpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1a43d791f305321700f6c26fc09397dcae" prot="private" static="no" mutable="no">
        <type>TrillHash</type>
        <definition>TrillHash Ms::ExportMusicXml::trillStop</definition>
        <argsstring></argsstring>
        <name>trillStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="283" column="1" bodyfile="mscore/exportxml.cpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_export_music_xml_1aad6651c7e5f17d69074ee46ab40c076e" prot="private" static="no" mutable="no">
        <type>MxmlInstrumentMap</type>
        <definition>MxmlInstrumentMap Ms::ExportMusicXml::instrMap</definition>
        <argsstring></argsstring>
        <name>instrMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="284" column="1" bodyfile="mscore/exportxml.cpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a93b6a1b6e193c5b42234ec8dabe13ce1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::ExportMusicXml::findHairpin</definition>
        <argsstring>(const Hairpin *tl) const</argsstring>
        <name>findHairpin</name>
        <param>
          <type>const <ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref> *</type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="286" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3306" bodyend="3311"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a7f50f6134660915334e945947430a2e3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::ExportMusicXml::findBracket</definition>
        <argsstring>(const TextLine *tl) const</argsstring>
        <name>findBracket</name>
        <param>
          <type>const <ref refid="class_ms_1_1_text_line" kindref="compound">TextLine</ref> *</type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="287" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3455" bodyend="3460"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a111f4702b1efb852cd6a4ea3b8bf134f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::ExportMusicXml::findOttava</definition>
        <argsstring>(const Ottava *tl) const</argsstring>
        <name>findOttava</name>
        <param>
          <type>const <ref refid="class_ms_1_1_ottava" kindref="compound">Ottava</ref> *</type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="288" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3364" bodyend="3369"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a0718436bfff3461c2a1e69a34621758b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::ExportMusicXml::findTrill</definition>
        <argsstring>(const Trill *tl) const</argsstring>
        <name>findTrill</name>
        <param>
          <type>const <ref refid="class_ms_1_1_trill" kindref="compound">Trill</ref> *</type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="289" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1720" bodyend="1725"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1ae39ff94e6f706cfac6138ea9ad2065a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::chord</definition>
        <argsstring>(Chord *chord, int staff, const std::vector&lt; Lyrics *&gt; *ll, bool useDrumset)</argsstring>
        <name>chord</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref> *&gt; *</type>
          <declname>ll</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useDrumset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write <emphasis>chord</emphasis> on <emphasis>staff</emphasis> with lyriclist <emphasis>ll</emphasis>.</para><para>For a single-staff part, <emphasis>staff</emphasis> equals zero, suppressing the &lt;staff&gt; element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="290" column="1" bodyfile="mscore/exportxml.cpp" bodystart="2373" bodyend="2750"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a578632fabbec0f3d1bd3b39bb5fde2f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::rest</definition>
        <argsstring>(Rest *chord, int staff)</argsstring>
        <name>rest</name>
        <param>
          <type><ref refid="class_ms_1_1_rest" kindref="compound">Rest</ref> *</type>
          <declname>chord</declname>
          <defname>rest</defname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write <emphasis>rest</emphasis> on <emphasis>staff</emphasis>.</para><para>For a single-staff part, <emphasis>staff</emphasis> equals zero, suppressing the &lt;staff&gt; element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="291" column="1" bodyfile="mscore/exportxml.cpp" bodystart="2762" bodyend="2868"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a341e1bc55f00769ef29cb80638b7ccb1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::clef</definition>
        <argsstring>(int staff, const Clef *clef)</argsstring>
        <name>clef</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_clef" kindref="compound">Clef</ref> *</type>
          <declname>clef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="292" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1664" bodyend="1683"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a5d9f08dcec6306f098307bcbb8ef64c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::timesig</definition>
        <argsstring>(TimeSig *tsig)</argsstring>
        <name>timesig</name>
        <param>
          <type><ref refid="class_ms_1_1_time_sig" kindref="compound">TimeSig</ref> *</type>
          <declname>tsig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="293" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1548" bodyend="1576"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a5cc0736f64465330461ef5aa7401f5e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::keysig</definition>
        <argsstring>(const KeySig *ks, ClefType ct, int staff=0, bool visible=true)</argsstring>
        <name>keysig</name>
        <param>
          <type>const <ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref> *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>ClefType</type>
          <declname>ct</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="294" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1604" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a1bf4dffae7a2bde231dd23c1f67025be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::barlineLeft</definition>
        <argsstring>(Measure *m)</argsstring>
        <name>barlineLeft</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="295" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1423" bodyend="1437"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a549783ace9d0f143ce6f66f58d7a0461" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::barlineRight</definition>
        <argsstring>(Measure *m)</argsstring>
        <name>barlineRight</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="296" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1443" bodyend="1514"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a6c3d491263bfb09273786df96942a2c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::lyrics</definition>
        <argsstring>(const std::vector&lt; Lyrics *&gt; *ll, const int trk)</argsstring>
        <name>lyrics</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref> *&gt; *</type>
          <declname>ll</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>trk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="297" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3640" bodyend="3681"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a211a3eb5d02de4b1e62f9f8d0592d843" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::work</definition>
        <argsstring>(const MeasureBase *measure)</argsstring>
        <name>work</name>
        <param>
          <type>const <ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="298" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3924" bodyend="3940"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a92811b1829377c7ff83cc5564cb225e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::calcDivMoveToTick</definition>
        <argsstring>(int t)</argsstring>
        <name>calcDivMoveToTick</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="299" column="1" bodyfile="mscore/exportxml.cpp" bodystart="921" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a046029bb5f036c8513febaaf204fc682" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::calcDivisions</definition>
        <argsstring>()</argsstring>
        <name>calcDivisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="300" column="1" bodyfile="mscore/exportxml.cpp" bodystart="964" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1ac9b15b431cbd731deee4a7ee3f879dfc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Ms::ExportMusicXml::getTenthsFromInches</definition>
        <argsstring>(double)</argsstring>
        <name>getTenthsFromInches</name>
        <param>
          <type>double</type>
          <defname>inches</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="301" column="1" bodyfile="mscore/exportxml.cpp" bodystart="5490" bodyend="5493"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a674f852dff12ba8bc31f01ac76c77592" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Ms::ExportMusicXml::getTenthsFromDots</definition>
        <argsstring>(double)</argsstring>
        <name>getTenthsFromDots</name>
        <param>
          <type>double</type>
          <defname>dots</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="302" column="1" bodyfile="mscore/exportxml.cpp" bodystart="5495" bodyend="5498"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a8ed98ce13727d80dfc64693bd349af4f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::keysigTimesig</definition>
        <argsstring>(const Measure *m, const Part *p)</argsstring>
        <name>keysigTimesig</name>
        <param>
          <type>const <ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Output attributes at start of measure: key, time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="303" column="1" bodyfile="mscore/exportxml.cpp" bodystart="4231" bodyend="4307"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a0b41ebef114ba1e220c96f3f895f530a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::chordAttributes</definition>
        <argsstring>(Chord *chord, Notations &amp;notations, Technical &amp;technical, TrillHash &amp;trillStart, TrillHash &amp;trillStop)</argsstring>
        <name>chordAttributes</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_notations" kindref="compound">Notations</ref> &amp;</type>
          <declname>notations</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_technical" kindref="compound">Technical</ref> &amp;</type>
          <declname>technical</declname>
        </param>
        <param>
          <type>TrillHash &amp;</type>
          <declname>trillStart</declname>
        </param>
        <param>
          <type>TrillHash &amp;</type>
          <declname>trillStop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="304" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1885" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a60849afe75af75fd7330b23702df3548" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::wavyLineStartStop</definition>
        <argsstring>(Chord *chord, Notations &amp;notations, Ornaments &amp;ornaments, TrillHash &amp;trillStart, TrillHash &amp;trillStop)</argsstring>
        <name>wavyLineStartStop</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_notations" kindref="compound">Notations</ref> &amp;</type>
          <declname>notations</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_ornaments" kindref="compound">Ornaments</ref> &amp;</type>
          <declname>ornaments</declname>
        </param>
        <param>
          <type>TrillHash &amp;</type>
          <declname>trillStart</declname>
        </param>
        <param>
          <type>TrillHash &amp;</type>
          <declname>trillStop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="306" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1731" bodyend="1780"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a7af424e2a2dc8e92069cb60e9f1309b7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::print</definition>
        <argsstring>(Measure *m, int idx, int staffCount, int staves)</argsstring>
        <name>print</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staves</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle the &lt;print&gt; element. When exporting layout and all breaks, a &lt;print&gt; with layout informations is generated for the measure types TopSystem, NewSystem and newPage. When exporting layout but only manual or no breaks, a &lt;print&gt; with layout informations is generated only for the measure type TopSystem, as it is assumed the system layout is broken by the importing application anyway and is thus useless. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="308" column="1" bodyfile="mscore/exportxml.cpp" bodystart="4463" bodyend="4584"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1aee91ec6fbce39475711384c41132394a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::findAndExportClef</definition>
        <argsstring>(Measure *m, const int staves, const int strack, const int etrack)</argsstring>
        <name>findAndExportClef</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>staves</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>strack</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>etrack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make sure clefs at end of measure get exported at start of next measure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="309" column="1" bodyfile="mscore/exportxml.cpp" bodystart="4594" bodyend="4659"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a067647101c5d80c342c7bc1321cacaed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::writeElement</definition>
        <argsstring>(Element *el, const Measure *m, int sstaff, bool useDrumset)</argsstring>
        <name>writeElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>el</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sstaff</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useDrumset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write <emphasis>el</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="310" column="1" bodyfile="mscore/exportxml.cpp" bodystart="4850" bodyend="4924"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a7c6e0711107261a5d4b031a596f2f45a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::ExportMusicXml::ExportMusicXml</definition>
        <argsstring>(Score *s)</argsstring>
        <name>ExportMusicXml</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="313" column="1" bodyfile="mscore/exportxml.cpp" bodystart="313" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a7acf6ba93e814908c050a9d26bb2ad8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::write</definition>
        <argsstring>(QIODevice *dev)</argsstring>
        <name>write</name>
        <param>
          <type>QIODevice *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the score to <emphasis>dev</emphasis> in MusicXML format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="319" column="1" bodyfile="mscore/exportxml.cpp" bodystart="5002" bodyend="5407"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1ac7f70649c0b6978fdf3bea35f8f38005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::credits</definition>
        <argsstring>(XmlWriter &amp;xml)</argsstring>
        <name>credits</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="320" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1152" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1af889a2c6e0f560094a1202ccd4256bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::moveToTick</definition>
        <argsstring>(int t)</argsstring>
        <name>moveToTick</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="321" column="1" bodyfile="mscore/exportxml.cpp" bodystart="1520" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a504b0b0f0dd29399b7e1a71d695dbc75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::words</definition>
        <argsstring>(Text const *const text, int staff)</argsstring>
        <name>words</name>
        <param>
          <type><ref refid="class_ms_1_1_text" kindref="compound">Text</ref> const *const</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="322" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3253" bodyend="3271"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a2bdc0aba34d8c0539baa328f3f624f44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::rehearsal</definition>
        <argsstring>(RehearsalMark const *const rmk, int staff)</argsstring>
        <name>rehearsal</name>
        <param>
          <type><ref refid="class_ms_1_1_rehearsal_mark" kindref="compound">RehearsalMark</ref> const *const</type>
          <declname>rmk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="323" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3277" bodyend="3299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1aa2dee352a74ca9288c782f008e60604a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::hairpin</definition>
        <argsstring>(Hairpin const *const hp, int staff, int tick)</argsstring>
        <name>hairpin</name>
        <param>
          <type><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref> const *const</type>
          <declname>hp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="324" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3317" bodyend="3357"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a937dae3a58954254a912578fbb092169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::ottava</definition>
        <argsstring>(Ottava const *const ot, int staff, int tick)</argsstring>
        <name>ottava</name>
        <param>
          <type><ref refid="class_ms_1_1_ottava" kindref="compound">Ottava</ref> const *const</type>
          <declname>ot</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="325" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3377" bodyend="3432"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1ad1e86781063f5feb360914e667006471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::pedal</definition>
        <argsstring>(Pedal const *const pd, int staff, int tick)</argsstring>
        <name>pedal</name>
        <param>
          <type><ref refid="class_ms_1_1_pedal" kindref="compound">Pedal</ref> const *const</type>
          <declname>pd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="326" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3438" bodyend="3448"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1abd16232edbcfa06ce9f95e19e3d3184e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::textLine</definition>
        <argsstring>(TextLine const *const tl, int staff, int tick)</argsstring>
        <name>textLine</name>
        <param>
          <type><ref refid="class_ms_1_1_text_line" kindref="compound">TextLine</ref> const *const</type>
          <declname>tl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="327" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3466" bodyend="3557"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a640671bceb30cacdf00f2af2563fdcf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::dynamic</definition>
        <argsstring>(Dynamic const *const dyn, int staff)</argsstring>
        <name>dynamic</name>
        <param>
          <type><ref refid="class_ms_1_1_dynamic" kindref="compound">Dynamic</ref> const *const</type>
          <declname>dyn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="328" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3567" bodyend="3608"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a65f63ab697bf6ad320b221625e8a6bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::symbol</definition>
        <argsstring>(Symbol const *const sym, int staff)</argsstring>
        <name>symbol</name>
        <param>
          <type><ref refid="class_ms_1_1_symbol" kindref="compound">Symbol</ref> const *const</type>
          <declname>sym</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="329" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3617" bodyend="3634"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a00d1a5001ea155dbc8d59e50f700d4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::tempoText</definition>
        <argsstring>(TempoText const *const text, int staff)</argsstring>
        <name>tempoText</name>
        <param>
          <type><ref refid="class_ms_1_1_tempo_text" kindref="compound">TempoText</ref> const *const</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="330" column="1" bodyfile="mscore/exportxml.cpp" bodystart="3230" bodyend="3247"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1a07acf86b6180a86b8196d39990ba115b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::ExportMusicXml::harmony</definition>
        <argsstring>(Harmony const *const, FretDiagram const *const fd, int offset=0)</argsstring>
        <name>harmony</name>
        <param>
          <type><ref refid="class_ms_1_1_harmony" kindref="compound">Harmony</ref> const *</type>
          <declname>const</declname>
          <defname>h</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_fret_diagram" kindref="compound">FretDiagram</ref> const *const</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="331" column="1" bodyfile="mscore/exportxml.cpp" bodystart="5504" bodyend="5656"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_export_music_xml_1ac9b5a76a326ac14c7c0f4c53e64265bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
        <definition>Score* Ms::ExportMusicXml::score</definition>
        <argsstring>()</argsstring>
        <name>score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/exportxml.cpp" line="332" column="1" bodyfile="mscore/exportxml.cpp" bodystart="332" bodyend="332"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="mscore/exportxml.cpp" line="268" column="1" bodyfile="mscore/exportxml.cpp" bodystart="268" bodyend="333"/>
    <listofallmembers>
      <member refid="class_ms_1_1_export_music_xml_1aa429381534af80eb51e31587d6982048" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>_score</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a7fa11152b9fb4ceab7509672e9a4767d" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>attr</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a1bf4dffae7a2bde231dd23c1f67025be" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>barlineLeft</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a549783ace9d0f143ce6f66f58d7a0461" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>barlineRight</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a86a5923d1511e2c0186e83c8ee28e4f8" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>brackets</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a046029bb5f036c8513febaaf204fc682" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>calcDivisions</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a92811b1829377c7ff83cc5564cb225e4" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>calcDivMoveToTick</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ae39ff94e6f706cfac6138ea9ad2065a1" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>chord</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a0b41ebef114ba1e220c96f3f895f530a" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>chordAttributes</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a341e1bc55f00769ef29cb80638b7ccb1" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>clef</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ac7f70649c0b6978fdf3bea35f8f38005" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>credits</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a60d2a4e06c9dfe33c77c844cb3a63140" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>div</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a640671bceb30cacdf00f2af2563fdcf5" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>dynamic</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a7c6e0711107261a5d4b031a596f2f45a" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>ExportMusicXml</name></member>
      <member refid="class_ms_1_1_export_music_xml_1aee91ec6fbce39475711384c41132394a" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>findAndExportClef</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a7f50f6134660915334e945947430a2e3" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>findBracket</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a93b6a1b6e193c5b42234ec8dabe13ce1" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>findHairpin</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a111f4702b1efb852cd6a4ea3b8bf134f" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>findOttava</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a0718436bfff3461c2a1e69a34621758b" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>findTrill</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a674f852dff12ba8bc31f01ac76c77592" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>getTenthsFromDots</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ac9b15b431cbd731deee4a7ee3f879dfc" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>getTenthsFromInches</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ac22a2b7290e4ce22573dc7e6962df297" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>gh</name></member>
      <member refid="class_ms_1_1_export_music_xml_1aa2dee352a74ca9288c782f008e60604a" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>hairpin</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a3bae54db11fc34ccef0608b9c85bee5e" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>hairpins</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a07acf86b6180a86b8196d39990ba115b" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>harmony</name></member>
      <member refid="class_ms_1_1_export_music_xml_1aad6651c7e5f17d69074ee46ab40c076e" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>instrMap</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a5cc0736f64465330461ef5aa7401f5e2" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>keysig</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a8ed98ce13727d80dfc64693bd349af4f" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>keysigTimesig</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a6c3d491263bfb09273786df96942a2c5" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>lyrics</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ad112a80ec820a62bc74fa958838132b7" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>millimeters</name></member>
      <member refid="class_ms_1_1_export_music_xml_1af889a2c6e0f560094a1202ccd4256bf2" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>moveToTick</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a937dae3a58954254a912578fbb092169" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>ottava</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a012cc094a8ad40c3f5d7a62a2b52a866" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>ottavas</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ad1e86781063f5feb360914e667006471" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>pedal</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a7af424e2a2dc8e92069cb60e9f1309b7" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>print</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a2bdc0aba34d8c0539baa328f3f624f44" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>rehearsal</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a578632fabbec0f3d1bd3b39bb5fde2f0" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>rest</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ac9b5a76a326ac14c7c0f4c53e64265bc" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>score</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a3b2b2d5f604155547f778d9816013c21" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>sh</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a65f63ab697bf6ad320b221625e8a6bdf" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>symbol</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a00d1a5001ea155dbc8d59e50f700d4bf" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>tempoText</name></member>
      <member refid="class_ms_1_1_export_music_xml_1ac0586cd706e10fff5a986525205a1d68" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>tenths</name></member>
      <member refid="class_ms_1_1_export_music_xml_1abd16232edbcfa06ce9f95e19e3d3184e" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>textLine</name></member>
      <member refid="class_ms_1_1_export_music_xml_1abfdfbead4f8e7542a4bf9e7020d55a36" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>tick</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a5d9f08dcec6306f098307bcbb8ef64c9" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>timesig</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a4c364c8ac02dfce1c789ab07b800fa4b" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>trills</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a996bafa92f670735245330d9b5ae0bf5" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>trillStart</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a43d791f305321700f6c26fc09397dcae" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>trillStop</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a60849afe75af75fd7330b23702df3548" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>wavyLineStartStop</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a504b0b0f0dd29399b7e1a71d695dbc75" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>words</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a211a3eb5d02de4b1e62f9f8d0592d843" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>work</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a7acf6ba93e814908c050a9d26bb2ad8b" prot="public" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>write</name></member>
      <member refid="class_ms_1_1_export_music_xml_1a067647101c5d80c342c7bc1321cacaed" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>writeElement</name></member>
      <member refid="class_ms_1_1_export_music_xml_1acd0244658b11e4349b0b9e6ab56baa39" prot="private" virt="non-virtual"><scope>Ms::ExportMusicXml</scope><name>xml</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
