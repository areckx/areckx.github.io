<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_global_params_win_8cc" kind="file" language="C++">
    <compoundname>GlobalParamsWin.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">shlobj.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="gmem_8h" local="yes">goo/gmem.h</includes>
    <includes refid="_goo_string_8h" local="yes">goo/GooString.h</includes>
    <includes refid="_goo_list_8h" local="yes">goo/GooList.h</includes>
    <includes refid="_goo_hash_8h" local="yes">goo/GooHash.h</includes>
    <includes refid="gfile_8h" local="yes">goo/gfile.h</includes>
    <includes refid="_error_8h" local="yes">Error.h</includes>
    <includes refid="_name_to_char_code_8h" local="yes">NameToCharCode.h</includes>
    <includes refid="_char_code_to_unicode_8h" local="yes">CharCodeToUnicode.h</includes>
    <includes refid="_unicode_map_8h" local="yes">UnicodeMap.h</includes>
    <includes refid="_c_map_8h" local="yes">CMap.h</includes>
    <includes refid="_builtin_font_tables_8h" local="yes">BuiltinFontTables.h</includes>
    <includes refid="_font_encoding_tables_8h" local="yes">FontEncodingTables.h</includes>
    <includes refid="_global_params_8h" local="yes">GlobalParams.h</includes>
    <includes refid="_gfx_font_8h" local="yes">GfxFont.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_stream_8h" local="yes">Stream.h</includes>
    <includes refid="thirdparty_2poppler_2poppler_2lexer_8h" local="yes">Lexer.h</includes>
    <includes refid="thirdparty_2poppler_2poppler_2parser_8h" local="yes">Parser.h</includes>
    <incdepgraph>
      <node id="87622">
        <label>sys/stat.h</label>
      </node>
      <node id="87594">
        <label>stdarg.h</label>
      </node>
      <node id="87584">
        <label>windows.h</label>
      </node>
      <node id="87589">
        <label>assert.h</label>
      </node>
      <node id="87599">
        <label>goo/gfile.h</label>
        <link refid="gfile_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87587" relation="include">
        </childnode>
        <childnode refid="87595" relation="include">
        </childnode>
        <childnode refid="87600" relation="include">
        </childnode>
        <childnode refid="87601" relation="include">
        </childnode>
        <childnode refid="87602" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
      </node>
      <node id="87615">
        <label>GfxFont.h</label>
        <link refid="_gfx_font_8h_source"/>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87592" relation="include">
        </childnode>
        <childnode refid="87616" relation="include">
        </childnode>
        <childnode refid="87605" relation="include">
        </childnode>
      </node>
      <node id="87595">
        <label>stdlib.h</label>
      </node>
      <node id="87590">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="87587" relation="include">
        </childnode>
        <childnode refid="87591" relation="include">
        </childnode>
      </node>
      <node id="87619">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87616" relation="include">
        </childnode>
        <childnode refid="87607" relation="include">
        </childnode>
      </node>
      <node id="87604">
        <label>NameToCharCode.h</label>
        <link refid="_name_to_char_code_8h_source"/>
        <childnode refid="87605" relation="include">
        </childnode>
      </node>
      <node id="87614">
        <label>GlobalParams.h</label>
        <link refid="_global_params_8h_source"/>
        <childnode refid="87589" relation="include">
        </childnode>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87587" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87605" relation="include">
        </childnode>
        <childnode refid="87607" relation="include">
        </childnode>
      </node>
      <node id="87613">
        <label>FontEncodingTables.h</label>
        <link refid="_font_encoding_tables_8h_source"/>
      </node>
      <node id="87623">
        <label>Lexer.h</label>
        <link refid="thirdparty_2poppler_2poppler_2lexer_8h_source"/>
        <childnode refid="87616" relation="include">
        </childnode>
        <childnode refid="87621" relation="include">
        </childnode>
      </node>
      <node id="87603">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="87594" relation="include">
        </childnode>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87592" relation="include">
        </childnode>
      </node>
      <node id="87582">
        <label>thirdparty/poppler/poppler/GlobalParamsWin.cc</label>
        <link refid="_global_params_win_8cc"/>
        <childnode refid="87583" relation="include">
        </childnode>
        <childnode refid="87584" relation="include">
        </childnode>
        <childnode refid="87585" relation="include">
        </childnode>
        <childnode refid="87586" relation="include">
        </childnode>
        <childnode refid="87587" relation="include">
        </childnode>
        <childnode refid="87588" relation="include">
        </childnode>
        <childnode refid="87589" relation="include">
        </childnode>
        <childnode refid="87590" relation="include">
        </childnode>
        <childnode refid="87592" relation="include">
        </childnode>
        <childnode refid="87597" relation="include">
        </childnode>
        <childnode refid="87598" relation="include">
        </childnode>
        <childnode refid="87599" relation="include">
        </childnode>
        <childnode refid="87603" relation="include">
        </childnode>
        <childnode refid="87604" relation="include">
        </childnode>
        <childnode refid="87606" relation="include">
        </childnode>
        <childnode refid="87609" relation="include">
        </childnode>
        <childnode refid="87610" relation="include">
        </childnode>
        <childnode refid="87611" relation="include">
        </childnode>
        <childnode refid="87613" relation="include">
        </childnode>
        <childnode refid="87614" relation="include">
        </childnode>
        <childnode refid="87615" relation="include">
        </childnode>
        <childnode refid="87622" relation="include">
        </childnode>
        <childnode refid="87616" relation="include">
        </childnode>
        <childnode refid="87621" relation="include">
        </childnode>
        <childnode refid="87623" relation="include">
        </childnode>
        <childnode refid="87624" relation="include">
        </childnode>
      </node>
      <node id="87597">
        <label>goo/GooList.h</label>
        <link refid="_goo_list_8h_source"/>
        <childnode refid="87596" relation="include">
        </childnode>
      </node>
      <node id="87612">
        <label>BuiltinFont.h</label>
        <link refid="_builtin_font_8h_source"/>
        <childnode refid="87596" relation="include">
        </childnode>
      </node>
      <node id="87620">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87616" relation="include">
        </childnode>
        <childnode refid="87607" relation="include">
        </childnode>
      </node>
      <node id="87600">
        <label>stddef.h</label>
      </node>
      <node id="87624">
        <label>Parser.h</label>
        <link refid="thirdparty_2poppler_2poppler_2parser_8h_source"/>
        <childnode refid="87623" relation="include">
        </childnode>
      </node>
      <node id="87593">
        <label>limits.h</label>
      </node>
      <node id="87591">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="87587" relation="include">
        </childnode>
      </node>
      <node id="87618">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="87621">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87587" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87616" relation="include">
        </childnode>
        <childnode refid="87607" relation="include">
        </childnode>
      </node>
      <node id="87608">
        <label>pthread.h</label>
      </node>
      <node id="87602">
        <label>sys/types.h</label>
      </node>
      <node id="87586">
        <label>string.h</label>
      </node>
      <node id="87592">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="87593" relation="include">
        </childnode>
        <childnode refid="87594" relation="include">
        </childnode>
        <childnode refid="87595" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
      </node>
      <node id="87616">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="87617" relation="include">
        </childnode>
        <childnode refid="87587" relation="include">
        </childnode>
        <childnode refid="87586" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87590" relation="include">
        </childnode>
        <childnode refid="87592" relation="include">
        </childnode>
        <childnode refid="87618" relation="include">
        </childnode>
        <childnode refid="87603" relation="include">
        </childnode>
        <childnode refid="87619" relation="include">
        </childnode>
        <childnode refid="87620" relation="include">
        </childnode>
        <childnode refid="87621" relation="include">
        </childnode>
      </node>
      <node id="87601">
        <label>unistd.h</label>
      </node>
      <node id="87585">
        <label>shlobj.h</label>
      </node>
      <node id="87607">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="87608" relation="include">
        </childnode>
      </node>
      <node id="87605">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="87588">
        <label>ctype.h</label>
      </node>
      <node id="87596">
        <label>gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
      </node>
      <node id="87609">
        <label>UnicodeMap.h</label>
        <link refid="_unicode_map_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87605" relation="include">
        </childnode>
        <childnode refid="87607" relation="include">
        </childnode>
      </node>
      <node id="87617">
        <label>set</label>
      </node>
      <node id="87583">
        <label>config.h</label>
      </node>
      <node id="87611">
        <label>BuiltinFontTables.h</label>
        <link refid="_builtin_font_tables_8h_source"/>
        <childnode refid="87612" relation="include">
        </childnode>
      </node>
      <node id="87610">
        <label>CMap.h</label>
        <link refid="_c_map_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87605" relation="include">
        </childnode>
        <childnode refid="87607" relation="include">
        </childnode>
      </node>
      <node id="87587">
        <label>stdio.h</label>
      </node>
      <node id="87598">
        <label>goo/GooHash.h</label>
        <link refid="_goo_hash_8h_source"/>
        <childnode refid="87596" relation="include">
        </childnode>
      </node>
      <node id="87606">
        <label>CharCodeToUnicode.h</label>
        <link refid="_char_code_to_unicode_8h_source"/>
        <childnode refid="87591" relation="include">
        </childnode>
        <childnode refid="87605" relation="include">
        </childnode>
        <childnode refid="87596" relation="include">
        </childnode>
        <childnode refid="87607" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_global_params_win_8cc_1a2e05b0d1fd3c8145a2a5cc47b0d0dd19" prot="public" static="no">
        <name>lockGlobalParams</name>
        <initializer>gLockMutex(&amp;mutex)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="56" column="11" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1aef43b62c0eb74e99a87e9c08700dc09c" prot="public" static="no">
        <name>lockUnicodeMapCache</name>
        <initializer>gLockMutex(&amp;unicodeMapCacheMutex)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="57" column="11" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a930e03abf55675a78093517a4bf3d49d" prot="public" static="no">
        <name>lockCMapCache</name>
        <initializer>gLockMutex(&amp;cMapCacheMutex)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="58" column="11" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a844f622ac9f0589b17ac261878675356" prot="public" static="no">
        <name>unlockGlobalParams</name>
        <initializer>gUnlockMutex(&amp;mutex)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="59" column="11" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a1bab0bca2d3d70464ffd16f4ca3f1e8b" prot="public" static="no">
        <name>unlockUnicodeMapCache</name>
        <initializer>gUnlockMutex(&amp;unicodeMapCacheMutex)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="60" column="11" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a6b729a9220a6cb2b31ef993f8460c260" prot="public" static="no">
        <name>unlockCMapCache</name>
        <initializer>gUnlockMutex(&amp;cMapCacheMutex)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="61" column="11" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1acdb91b884b3ed8484fbaa54ae12111de" prot="public" static="no">
        <name>DEFAULT_SUBSTITUTE_FONT</name>
        <initializer>&quot;Helvetica&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="71" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a6a30044c8a3ef3ee7ec770ed5367a24f" prot="public" static="no">
        <name>DEFAULT_CID_FONT_AC1_MSWIN</name>
        <initializer>&quot;MingLiU&quot;   /* Adobe-CNS1 for Taiwan, HongKong */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="72" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a08ed4a663cc18bb485f4bf91778f6f4c" prot="public" static="no">
        <name>DEFAULT_CID_FONT_AG1_MSWIN</name>
        <initializer>&quot;SimSun&quot;    /* Adobe-GB1 for PRC, Singapore */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="73" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a84cd149469524ae001371d0bedb925f2" prot="public" static="no">
        <name>DEFAULT_CID_FONT_AJ1_MSWIN</name>
        <initializer>&quot;MS-Mincho&quot; /* Adobe-Japan1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="74" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a9574d0942a794b207c0ed665d28bf93f" prot="public" static="no">
        <name>DEFAULT_CID_FONT_AJ2_MSWIN</name>
        <initializer>&quot;MS-Mincho&quot; /* Adobe-Japan2 (legacy) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="75" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a99baec4ad0e3a09b9af827e0665f02af" prot="public" static="no">
        <name>DEFAULT_CID_FONT_AK1_MSWIN</name>
        <initializer>&quot;Batang&quot;    /* Adobe-Korea1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="76" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1ac0415403d64685e268c77d78723c9f4e" prot="public" static="no">
        <name>DEFAULT_CID_FONT_MSWIN</name>
        <initializer>&quot;ArialUnicode&quot;  /* Unknown */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="77" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_global_params_win_8cc_1a0ae666356d63d11c498b21fe638606b1" prot="public" static="no">
        <name>FONTS_SUBDIR</name>
        <initializer>&quot;\\fonts&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="178" column="9" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_global_params_win_8cc_1a8f8f80d37794cde9472343e4487ba3eb" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="80" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_global_params_win_8cc_1a6cd0b3e9f96de44da8c73a80a118304d" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* t1FileName</definition>
        <argsstring></argsstring>
        <name>t1FileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="81" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_global_params_win_8cc_1a1078786697eb546cd9bffc88a5c059cc" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ttFileName</definition>
        <argsstring></argsstring>
        <name>ttFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="82" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_global_params_win_8cc_1aa59fa992219be45e267da0eb90164c38" prot="public" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool warnIfMissing</definition>
        <argsstring></argsstring>
        <name>warnIfMissing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="83" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_global_params_win_8cc_1a32a316c4b78ff208ea674c170fb23d85" prot="public" static="yes" mutable="no">
        <type>struct @124</type>
        <definition>struct @124  displayFontTab[]</definition>
        <argsstring>[]</argsstring>
        <name>displayFontTab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="176" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_global_params_win_8cc_1a954ed63a963f521f3aa1a8892e39d3eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GetWindowsFontDir</definition>
        <argsstring>(char *winFontDir, int cbWinFontDirLen)</argsstring>
        <name>GetWindowsFontDir</name>
        <param>
          <type>char *</type>
          <declname>winFontDir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cbWinFontDirLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="180" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="180" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="_global_params_win_8cc_1a90c7863fc40ca3d6aa32c3f0f088ed92" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FileExists</definition>
        <argsstring>(const char *path)</argsstring>
        <name>FileExists</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="235" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="235" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="_global_params_win_8cc_1a9ee77a3b96c45414e66cb9302eb0899c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>static GooString* replaceSuffix</definition>
        <argsstring>(GooString *path, const char *suffixA, const char *suffixB)</argsstring>
        <name>replaceSuffix</name>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>suffixA</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>suffixB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="391" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="391" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="_global_params_win_8cc_1abdcf5926ea6e6c4a05b2a91c19404a82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* findSubstituteName</definition>
        <argsstring>(GfxFont *font, GooHash *fontFiles, GooHash *substFiles, const char *origName)</argsstring>
        <name>findSubstituteName</name>
        <param>
          <type><ref refid="class_gfx_font" kindref="compound">GfxFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="class_goo_hash" kindref="compound">GooHash</ref> *</type>
          <declname>fontFiles</declname>
        </param>
        <param>
          <type><ref refid="class_goo_hash" kindref="compound">GooHash</ref> *</type>
          <declname>substFiles</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>origName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc" line="506" column="1" bodyfile="thirdparty/poppler/poppler/GlobalParamsWin.cc" bodystart="506" bodyend="554"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Written<sp/>by<sp/>Krzysztof<sp/>Kowalczyk<sp/>(http://blog.kowalczyk.info)</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>but<sp/>mostly<sp/>based<sp/>on<sp/>xpdf<sp/>code.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>//<sp/>Copyright<sp/>(C)<sp/>2010,<sp/>2012<sp/>Hib<sp/>Eris<sp/>&lt;hib@hiberis.nl&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>//<sp/>Copyright<sp/>(C)<sp/>2012,<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Suzuki<sp/>Toshiya<sp/>&lt;mpsuzuki@hiroshima-u.ac.jp&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Mark<sp/>Brand<sp/>&lt;mabrand@mabrand.nl&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adam<sp/>Reichold<sp/>&lt;adamreichold@myopera.com&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Dmytro<sp/>Morgun<sp/>&lt;lztoad@gmail.com&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">TODO:<sp/>instead<sp/>of<sp/>a<sp/>fixed<sp/>mapping<sp/>defined<sp/>in<sp/>displayFontTab,<sp/>it<sp/>could</highlight></codeline>
<codeline lineno="13"><highlight class="comment">scan<sp/>the<sp/>whole<sp/>fonts<sp/>directory,<sp/>parse<sp/>TTF<sp/>files<sp/>and<sp/>build<sp/>font</highlight></codeline>
<codeline lineno="14"><highlight class="comment">description<sp/>for<sp/>all<sp/>fonts<sp/>available<sp/>in<sp/>Windows.<sp/>That&apos;s<sp/>how<sp/>MuPDF<sp/>works.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PACKAGE_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(_WIN32_IE<sp/>&gt;=<sp/>0x0500)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;_WIN32_IE<sp/>must<sp/>be<sp/>defined<sp/>&gt;=<sp/>0x0500<sp/>for<sp/>SHGFP_TYPE_CURRENT<sp/>from<sp/>shlobj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shlobj.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooHash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;NameToCharCode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CharCodeToUnicode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;UnicodeMap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CMap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BuiltinFontTables.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FontEncodingTables.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GlobalParams.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxFont.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Stream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Lexer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Parser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lockGlobalParams<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gLockMutex(&amp;mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lockUnicodeMapCache<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gLockMutex(&amp;unicodeMapCacheMutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lockCMapCache<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gLockMutex(&amp;cMapCacheMutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>unlockGlobalParams<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gUnlockMutex(&amp;mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>unlockUnicodeMapCache<sp/><sp/><sp/><sp/><sp/><sp/><sp/>gUnlockMutex(&amp;unicodeMapCacheMutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>unlockCMapCache<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gUnlockMutex(&amp;cMapCacheMutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lockGlobalParams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lockUnicodeMapCache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>lockCMapCache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>unlockGlobalParams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>unlockUnicodeMapCache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>unlockCMapCache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_SUBSTITUTE_FONT<sp/>&quot;Helvetica&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_CID_FONT_AC1_MSWIN<sp/>&quot;MingLiU&quot;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adobe-CNS1<sp/>for<sp/>Taiwan,<sp/>HongKong<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_CID_FONT_AG1_MSWIN<sp/>&quot;SimSun&quot;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adobe-GB1<sp/>for<sp/>PRC,<sp/>Singapore<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_CID_FONT_AJ1_MSWIN<sp/>&quot;MS-Mincho&quot;<sp/></highlight><highlight class="comment">/*<sp/>Adobe-Japan1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_CID_FONT_AJ2_MSWIN<sp/>&quot;MS-Mincho&quot;<sp/></highlight><highlight class="comment">/*<sp/>Adobe-Japan2<sp/>(legacy)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_CID_FONT_AK1_MSWIN<sp/>&quot;Batang&quot;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adobe-Korea1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_CID_FONT_MSWIN<sp/>&quot;ArialUnicode&quot;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Unknown<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*t1FileName;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ttFileName;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>GBool<sp/>warnIfMissing;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/>displayFontTab[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Courier&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n022003l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cour.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Courier-Bold&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n022004l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;courbd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Courier-BoldOblique&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n022024l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;courbi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Courier-Oblique&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n022023l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;couri.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Helvetica&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n019003l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arial.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Helvetica-Bold&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n019004l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arialbd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Helvetica-BoldOblique&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;n019024l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arialbi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Helvetica-Oblique&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n019023l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ariali.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>not<sp/>sure<sp/>if<sp/>&quot;symbol.ttf&quot;<sp/>is<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Symbol&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;s050000l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;symbol.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Times-Bold&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n021004l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;timesbd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Times-BoldItalic&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n021024l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;timesbi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Times-Italic&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n021023l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;timesi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Times-Roman&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;n021003l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;times.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>not<sp/>sure<sp/>if<sp/>&quot;wingding.ttf&quot;<sp/>is<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ZapfDingbats&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;d050000l.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wingding.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>those<sp/>seem<sp/>to<sp/>be<sp/>frequently<sp/>accessed<sp/>by<sp/>PDF<sp/>files<sp/>and<sp/>I<sp/>kind<sp/>of<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>font<sp/>file<sp/>do<sp/>the<sp/>refer<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Palatino&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;pala.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Palatino-Roman&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;pala.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Palatino-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;palab.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Palatino-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;palai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Palatino,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;palai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Palatino-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;palabi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialBlack&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialbd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialNarrow&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialn.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialNarrow,Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnb.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialNarrow,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialni.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialNarrow,BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnbi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialNarrow-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnb.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialNarrow-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialni.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialNarrow-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnbi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HelveticaNarrow&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialn.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HelveticaNarrow,Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnb.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HelveticaNarrow,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialni.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HelveticaNarrow,BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnbi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HelveticaNarrow-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnb.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HelveticaNarrow-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialni.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HelveticaNarrow-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialnbi.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;BookAntiqua&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;bkant.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;BookAntiqua,Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;bkant.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;BookAntiqua,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;bkant.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;BookAntiqua,BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;bkant.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;BookAntiqua-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;bkant.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;BookAntiqua-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;bkant.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;BookAntiqua-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;bkant.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Verdana&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdana.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Verdana,Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanab.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Verdana,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Verdana,BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanaz.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Verdana-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanab.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Verdana-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Verdana-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanaz.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tahoma&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;tahoma.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tahoma,Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;tahomabd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tahoma,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;tahoma.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tahoma,BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;tahomabd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tahoma-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;tahomabd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tahoma-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;tahoma.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Tahoma-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;tahomabd.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;CCRIKH+Verdana&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdana.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;CCRIKH+Verdana,Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanab.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;CCRIKH+Verdana,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;CCRIKH+Verdana,BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanaz.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;CCRIKH+Verdana-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanab.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;CCRIKH+Verdana-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;CCRIKH+Verdana-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;verdanaz.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Georgia&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;georgia.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Georgia,Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;georgiab.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Georgia,Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;georgiai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Georgia,BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;georgiaz.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Georgia-Bold&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;georgiab.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Georgia-Italic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;georgiai.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Georgia-BoldItalic&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;georgiaz.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fallback<sp/>for<sp/>Adobe<sp/>CID<sp/>fonts:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MingLiU&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;mingliu.ttf&quot;</highlight><highlight class="normal">,<sp/>gFalse},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;SimSun&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;simsun.ttf&quot;</highlight><highlight class="normal">,<sp/>gFalse},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MS-Mincho&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;msmincho.ttf&quot;</highlight><highlight class="normal">,<sp/>gFalse},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Batang&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;batang.ttf&quot;</highlight><highlight class="normal">,<sp/>gFalse},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ArialUnicode&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;arialuni.ttf&quot;</highlight><highlight class="normal">,<sp/>gTrue},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{NULL}</highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FONTS_SUBDIR<sp/>&quot;\\fonts&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetWindowsFontDir(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*winFontDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbWinFontDirLen)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>(__stdcall<sp/>*SHGetSpecialFolderPathFunc)(HWND<sp/><sp/>hwndOwner,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPTSTR<sp/>lpszPath,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nFolder,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/><sp/>fCreate);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>(__stdcall<sp/>*SHGetFolderPathFunc)(HWND<sp/><sp/>hwndOwner,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nFolder,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/>hToken,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/><sp/>dwFlags,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPTSTR<sp/>pszPath);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SHGetSpecialFolderPath<sp/>isn&apos;t<sp/>available<sp/>in<sp/>older<sp/>versions<sp/>of<sp/>shell32.dll<sp/>(Win95<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WinNT4),<sp/>so<sp/>do<sp/>a<sp/>dynamic<sp/>load<sp/>of<sp/>ANSI<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>winFontDir[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>HMODULE<sp/>hLib<sp/>=<sp/>LoadLibrary(</highlight><highlight class="stringliteral">&quot;shell32.dll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hLib)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHGetFolderPathFunc<sp/>=<sp/>(HRESULT<sp/>(__stdcall<sp/>*)(HWND,<sp/>int,<sp/>HANDLE,<sp/>DWORD,<sp/>LPTSTR))<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetProcAddress(hLib,<sp/></highlight><highlight class="stringliteral">&quot;SHGetFolderPathA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SHGetFolderPathFunc)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*SHGetFolderPathFunc)(NULL,<sp/>CSIDL_FONTS,<sp/>NULL,<sp/>SHGFP_TYPE_CURRENT,<sp/>winFontDir);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!winFontDir[0])<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>an<sp/>older<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHGetSpecialFolderPathFunc<sp/>=<sp/>(BOOL<sp/>(__stdcall<sp/>*)(HWND,<sp/>LPTSTR,<sp/>int,<sp/>BOOL))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetProcAddress(hLib,<sp/></highlight><highlight class="stringliteral">&quot;SHGetSpecialFolderPathA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SHGetSpecialFolderPathFunc)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*SHGetSpecialFolderPathFunc)(NULL,<sp/>winFontDir,<sp/>CSIDL_FONTS,<sp/>FALSE);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeLibrary(hLib);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winFontDir[0])</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>older<sp/>DLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>hLib<sp/>=<sp/>LoadLibrary(</highlight><highlight class="stringliteral">&quot;SHFolder.dll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hLib)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SHGetFolderPathFunc<sp/>=<sp/>(HRESULT<sp/>(__stdcall<sp/>*)(HWND,<sp/>int,<sp/>HANDLE,<sp/>DWORD,<sp/>LPTSTR))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetProcAddress(hLib,<sp/></highlight><highlight class="stringliteral">&quot;SHGetFolderPathA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SHGetFolderPathFunc)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*SHGetFolderPathFunc)(NULL,<sp/>CSIDL_FONTS,<sp/>NULL,<sp/>SHGFP_TYPE_CURRENT,<sp/>winFontDir);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeLibrary(hLib);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winFontDir[0])</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Everything<sp/>else<sp/>failed<sp/>so<sp/>the<sp/>standard<sp/>fonts<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>GetWindowsDirectory(winFontDir,<sp/>cbWinFontDirLen);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winFontDir[0])<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncat(winFontDir,<sp/>FONTS_SUBDIR,<sp/>cbWinFontDirLen);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winFontDir[cbWinFontDirLen-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FileExists(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>f<sp/>=<sp/>fopen(path,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SysFontList::scanWindowsFonts(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*winFontDir)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>OSVERSIONINFO<sp/>version;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>DWORD<sp/>idx,<sp/>valNameLen,<sp/>dataLen,<sp/>type;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>HKEY<sp/>regKey;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valName[1024],<sp/>data[1024];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>fontNum;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p0,<sp/>*p1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fontPath;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>version.dwOSVersionInfoSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(version);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>GetVersionEx(&amp;version);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version.dwPlatformId<sp/>==<sp/>VER_PLATFORM_WIN32_NT)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SOFTWARE\\Microsoft\\Windows<sp/>NT\\CurrentVersion\\Fonts\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Fonts\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyEx(HKEY_LOCAL_MACHINE,<sp/>path,<sp/>0,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KEY_QUERY_VALUE<sp/>|<sp/>KEY_ENUMERATE_SUB_KEYS,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;regKey)<sp/>==<sp/>ERROR_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>valNameLen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valName)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegEnumValue(regKey,<sp/>idx,<sp/>valName,<sp/>&amp;valNameLen,<sp/>NULL,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;type,<sp/>(LPBYTE)data,<sp/>&amp;dataLen)<sp/>!=<sp/>ERROR_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>REG_SZ<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>valNameLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>valNameLen<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valName)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dataLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>dataLen<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>valName[valNameLen]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>data[dataLen]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>strlen(data);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcasecmp(data<sp/>+<sp/>n<sp/>-<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;.ttf&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcasecmp(data<sp/>+<sp/>n<sp/>-<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;.ttc&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcasecmp(data<sp/>+<sp/>n<sp/>-<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;.otf&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontPath<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(data);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(dataLen<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>data[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>data[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontPath-&gt;insert(0,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontPath-&gt;insert(0,<sp/>winFontDir);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontPath-&gt;append(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>valName;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p0)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>strstr(p0,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p1<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p1<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p0<sp/>+<sp/>strlen(p0);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fonts-&gt;append(makeWindowsFont(p0,<sp/>fontNum,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontPath-&gt;getCString()));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++fontNum;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fontPath;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++idx;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>RegCloseKey(regKey);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="class_sys_font_info" kindref="compound">SysFontInfo</ref><sp/>*SysFontList::makeWindowsFont(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontNum,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>GBool<sp/>bold,<sp/>italic,<sp/>oblique,<sp/>fixedWidth;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*s;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>SysFontType<sp/>type;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>substituteName;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>strlen(name);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>bold<sp/>=<sp/>italic<sp/>=<sp/>oblique<sp/>=<sp/>fixedWidth<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&apos;<sp/>(TrueType)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>11<sp/>&amp;&amp;<sp/>!strncmp(name<sp/>+<sp/>n<sp/>-<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(TrueType)&quot;</highlight><highlight class="normal">,<sp/>11))<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>11;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&apos;<sp/>(OpenType)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>11<sp/>&amp;&amp;<sp/>!strncmp(name<sp/>+<sp/>n<sp/>-<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(OpenType)&quot;</highlight><highlight class="normal">,<sp/>11))<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>11;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&apos;<sp/>Italic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>7<sp/>&amp;&amp;<sp/>!strncmp(name<sp/>+<sp/>n<sp/>-<sp/>7,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Italic&quot;</highlight><highlight class="normal">,<sp/>7))<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>7;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>italic<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&apos;<sp/>Oblique&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>7<sp/>&amp;&amp;<sp/>!strncmp(name<sp/>+<sp/>n<sp/>-<sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Oblique&quot;</highlight><highlight class="normal">,<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>oblique<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&apos;<sp/>Bold&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>5<sp/>&amp;&amp;<sp/>!strncmp(name<sp/>+<sp/>n<sp/>-<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bold&quot;</highlight><highlight class="normal">,<sp/>5))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>5;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>bold<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&apos;<sp/>Regular&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>5<sp/>&amp;&amp;<sp/>!strncmp(name<sp/>+<sp/>n<sp/>-<sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Regular&quot;</highlight><highlight class="normal">,<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>familyname<sp/>cannot<sp/>indicate<sp/>whether<sp/>a<sp/>font<sp/>is<sp/>fixedWidth<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>well-known<sp/>fixedWidth<sp/>typeface<sp/>family<sp/>names<sp/>or<sp/>keyword<sp/>are<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strstr(name,<sp/></highlight><highlight class="stringliteral">&quot;Courier&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(name,<sp/></highlight><highlight class="stringliteral">&quot;Fixed&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(strstr(name,<sp/></highlight><highlight class="stringliteral">&quot;Mono&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!strstr(name,<sp/></highlight><highlight class="stringliteral">&quot;Monotype&quot;</highlight><highlight class="normal">))<sp/>||</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(name,<sp/></highlight><highlight class="stringliteral">&quot;Typewriter&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>fixedWidth<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>fixedWidth<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>normalize<sp/>the<sp/>font<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(name,<sp/>n);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>s-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>s-&gt;getChar(i);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;del(i);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcasecmp(path<sp/>+<sp/>strlen(path)<sp/>-<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;.ttc&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>sysFontTTC;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>sysFontTTF;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_sys_font_info" kindref="compound">SysFontInfo</ref>(s,<sp/>bold,<sp/>italic,<sp/>oblique,<sp/>fixedWidth,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(path),<sp/>type,<sp/>fontNum,<sp/>substituteName.copy());</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>*<sp/>replaceSuffix(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*path,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>suffixA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>suffixB)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>suffLenA<sp/>=<sp/>strlen(suffixA);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>suffLenB<sp/>=<sp/>strlen(suffixB);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baseLenA<sp/>=<sp/>path-&gt;getLength()<sp/>-<sp/>suffLenA;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baseLenB<sp/>=<sp/>path-&gt;getLength()<sp/>-<sp/>suffLenB;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcasecmp(path-&gt;getCString()+baseLenA,<sp/>suffixA))<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>path-&gt;del(baseLenA,suffLenA)-&gt;append(suffixB);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcasecmp(path-&gt;getCString()+baseLenB,<sp/>suffixB))<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>path-&gt;del(baseLenB,suffLenB)-&gt;append(suffixA);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GlobalParams::setupBaseFonts(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>dir)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dataRoot<sp/>=<sp/>popplerDataDir<sp/>?<sp/>popplerDataDir<sp/>:<sp/>POPPLER_DATADIR;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fileName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_file" kindref="compound">GooFile</ref><sp/>*file;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseFontsInitialized)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>baseFontsInitialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>winFontDir[MAX_PATH];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>GetWindowsFontDir(winFontDir,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(winFontDir));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>displayFontTab[i].name;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/><sp/>*fontName<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(displayFontTab[i].name);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fontFiles-&gt;lookup(fontName))</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fontPath<sp/>=<sp/>appendToPath(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(dir),<sp/>displayFontTab[i].t1FileName);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FileExists(fontPath-&gt;getCString())<sp/>||</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileExists(replaceSuffix(fontPath,<sp/></highlight><highlight class="stringliteral">&quot;.pfb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.pfa&quot;</highlight><highlight class="normal">)-&gt;getCString()))<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addFontFile(fontName,<sp/>fontPath);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fontPath;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winFontDir[0]<sp/>&amp;&amp;<sp/>displayFontTab[i].ttFileName)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fontPath<sp/>=<sp/>appendToPath(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(winFontDir),<sp/>displayFontTab[i].ttFileName);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FileExists(fontPath-&gt;getCString())<sp/>||</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileExists(replaceSuffix(fontPath,<sp/></highlight><highlight class="stringliteral">&quot;.ttc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.ttf&quot;</highlight><highlight class="normal">)-&gt;getCString()))<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addFontFile(fontName,<sp/>fontPath);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fontPath;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(displayFontTab[i].warnIfMissing)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>display<sp/>font<sp/>for<sp/>&apos;{0:s}&apos;&quot;</highlight><highlight class="normal">,<sp/>displayFontTab[i].name);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fontName;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winFontDir[0])<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>gooWinFontsDir(winFontDir);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sysFonts-&gt;scanWindowsFonts(&amp;gooWinFontsDir);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(dataRoot);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>fileName-&gt;append(</highlight><highlight class="stringliteral">&quot;/cidfmap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>open<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>GooFile::open(fileName);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parser" kindref="compound">Parser</ref><sp/>*parser;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1,<sp/>obj2;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj1.initNull();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_parser" kindref="compound">Parser</ref>(NULL,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_lexer" kindref="compound">Lexer</ref>(NULL,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_file_stream" kindref="compound">FileStream</ref>(file,<sp/>0,<sp/>gFalse,<sp/>file-&gt;size(),<sp/>&amp;obj1)),</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gTrue);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parser-&gt;getObj(&amp;obj1);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!obj1.isEOF())<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser-&gt;getObj(&amp;obj2);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isName())<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Substitutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isDict())<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj3;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj2.getDict()-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Path&quot;</highlight><highlight class="normal">,<sp/>&amp;obj3);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj3.isString())</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addFontFile(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(obj1.getName()),<sp/>obj3.getString()-&gt;copy());</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj3.free();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aliases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isName())<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substFiles-&gt;add(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(obj1.getName()),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(obj2.getName()));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj2.free();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser-&gt;getObj(&amp;obj1);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>trailing<sp/>&apos;;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(obj1.isCmd(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser-&gt;getObj(&amp;obj1);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>parser;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fileName;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*findSubstituteName(<ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*<ref refid="structfont" kindref="compound">font</ref>,<sp/><ref refid="class_goo_hash" kindref="compound">GooHash</ref><sp/>*fontFiles,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_hash" kindref="compound">GooHash</ref><sp/>*substFiles,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*origName)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(origName);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!origName)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*name2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(origName);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>strlen(origName);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&quot;-Identity-H&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>11<sp/>&amp;&amp;<sp/>!strcmp(name2-&gt;getCString()<sp/>+<sp/>n<sp/>-<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;-Identity-H&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name2-&gt;del(n<sp/>-<sp/>11,<sp/>11);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>11;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>&quot;-Identity-V&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>11<sp/>&amp;&amp;<sp/>!strcmp(name2-&gt;getCString()<sp/>+<sp/>n<sp/>-<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;-Identity-V&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name2-&gt;del(n<sp/>-<sp/>11,<sp/>11);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>11;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*substName<sp/>=<sp/>(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*)substFiles-&gt;lookup(name2);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(substName<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>name2;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>substName-&gt;getCString();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>try<sp/>to<sp/>at<sp/>least<sp/>guess<sp/>bold/italic/bolditalic<sp/>from<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>name2;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font-&gt;isCIDFont())<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collection<sp/>=<sp/>((<ref refid="class_gfx_c_i_d_font" kindref="compound">GfxCIDFont</ref><sp/>*)font)-&gt;getCollection();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!collection-&gt;cmp(</highlight><highlight class="stringliteral">&quot;Adobe-CNS1&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name3<sp/>=<sp/>DEFAULT_CID_FONT_AC1_MSWIN;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!collection-&gt;cmp(</highlight><highlight class="stringliteral">&quot;Adobe-GB1&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name3<sp/>=<sp/>DEFAULT_CID_FONT_AG1_MSWIN;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!collection-&gt;cmp(</highlight><highlight class="stringliteral">&quot;Adobe-Japan1&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name3<sp/>=<sp/>DEFAULT_CID_FONT_AJ1_MSWIN;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!collection-&gt;cmp(</highlight><highlight class="stringliteral">&quot;Adobe-Japan2&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name3<sp/>=<sp/>DEFAULT_CID_FONT_AJ2_MSWIN;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!collection-&gt;cmp(</highlight><highlight class="stringliteral">&quot;Adobe-Korea1&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name3<sp/>=<sp/>DEFAULT_CID_FONT_AK1_MSWIN;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name3<sp/>&amp;&amp;<sp/>fontFiles-&gt;lookup(name3))</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name3;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fontFiles-&gt;lookup(DEFAULT_CID_FONT_MSWIN))</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEFAULT_CID_FONT_MSWIN;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEFAULT_SUBSTITUTE_FONT;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Windows<sp/>implementation<sp/>of<sp/>external<sp/>font<sp/>matching<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*GlobalParams::findSystemFontFile(<ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*font,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SysFontType<sp/>*type,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fontNum,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*substituteFontName,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*base14Name)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="class_sys_font_info" kindref="compound">SysFontInfo</ref><sp/>*fi;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*path<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fontName<sp/>=<sp/>font-&gt;getName();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fontName)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>lockGlobalParams;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>setupBaseFonts(NULL);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>base14Name<sp/>should<sp/>be<sp/>changed?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>system<sp/>using<sp/>FontConfig,<sp/>findSystemFontFile()<sp/>uses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>base14Name<sp/>only<sp/>for<sp/>the<sp/>creation<sp/>of<sp/>query<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fi<sp/>=<sp/>sysFonts-&gt;find(fontName,<sp/>gFalse,<sp/>gFalse)))<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>path<sp/>=<sp/>fi-&gt;path-&gt;copy();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>fi-&gt;type;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>*fontNum<sp/>=<sp/>fi-&gt;fontNum;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(substituteFontName)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>substituteFontName-&gt;Set(fi-&gt;substituteName-&gt;getCString());</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*substFontName<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(findSubstituteName(font,<sp/>fontFiles,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substFiles,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontName-&gt;getCString()));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*path2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>a<sp/>font<sp/>for<sp/>&apos;{0:t}&apos;,<sp/>subst<sp/>is<sp/>&apos;{1:t}&apos;&quot;</highlight><highlight class="normal">,<sp/>fontName,<sp/>substFontName);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((path2<sp/>=<sp/>(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*)fontFiles-&gt;lookup(substFontName)))<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref>(path2);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(substituteFontName)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>substituteFontName-&gt;Set(path-&gt;getCString());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcasecmp(path-&gt;getCString()<sp/>+<sp/>path-&gt;getLength()<sp/>-<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;.ttc&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>sysFontTTC;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>sysFontTTF;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*fontNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>unlockGlobalParams;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/GlobalParamsWin.cc"/>
  </compounddef>
</doxygen>
