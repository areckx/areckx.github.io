<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_struct_tree_root_8h" kind="file" language="C++">
    <compoundname>StructTreeRoot.h</compoundname>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_struct_element_8h" local="yes">StructElement.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="_catalog_8cc" local="yes">thirdparty/poppler/poppler/Catalog.cc</includedby>
    <includedby refid="_struct_element_8cc" local="yes">thirdparty/poppler/poppler/StructElement.cc</includedby>
    <includedby refid="_struct_tree_root_8cc" local="yes">thirdparty/poppler/poppler/StructTreeRoot.cc</includedby>
    <incdepgraph>
      <node id="90332">
        <label>stdarg.h</label>
      </node>
      <node id="90347">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90327" relation="include">
        </childnode>
      </node>
      <node id="90348">
        <label>assert.h</label>
      </node>
      <node id="90346">
        <label>GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="90324" relation="include">
        </childnode>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90347" relation="include">
        </childnode>
        <childnode refid="90348" relation="include">
        </childnode>
        <childnode refid="90349" relation="include">
        </childnode>
      </node>
      <node id="90350">
        <label>GfxFont.h</label>
        <link refid="_gfx_font_8h_source"/>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90330" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90344" relation="include">
        </childnode>
      </node>
      <node id="90341">
        <label>StructElement.h</label>
        <link refid="_struct_element_8h_source"/>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90330" relation="include">
        </childnode>
        <childnode refid="90342" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90351" relation="include">
        </childnode>
        <childnode refid="90327" relation="include">
        </childnode>
      </node>
      <node id="90333">
        <label>stdlib.h</label>
      </node>
      <node id="90329">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="90325" relation="include">
        </childnode>
        <childnode refid="90324" relation="include">
        </childnode>
      </node>
      <node id="90336">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="90324" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90337" relation="include">
        </childnode>
      </node>
      <node id="90342">
        <label>MarkedContentOutputDev.h</label>
        <link refid="_marked_content_output_dev_8h_source"/>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90329" relation="include">
        </childnode>
        <childnode refid="90343" relation="include">
        </childnode>
        <childnode refid="90346" relation="include">
        </childnode>
        <childnode refid="90350" relation="include">
        </childnode>
        <childnode refid="90351" relation="include">
        </childnode>
      </node>
      <node id="90349">
        <label>map</label>
      </node>
      <node id="90335">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="90332" relation="include">
        </childnode>
        <childnode refid="90324" relation="include">
        </childnode>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90330" relation="include">
        </childnode>
      </node>
      <node id="90339">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="90324" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90337" relation="include">
        </childnode>
      </node>
      <node id="90331">
        <label>limits.h</label>
      </node>
      <node id="90324">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="90325" relation="include">
        </childnode>
      </node>
      <node id="90334">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="90340">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="90324" relation="include">
        </childnode>
        <childnode refid="90325" relation="include">
        </childnode>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90337" relation="include">
        </childnode>
      </node>
      <node id="90338">
        <label>pthread.h</label>
      </node>
      <node id="90345">
        <label>PopplerCache.h</label>
        <link refid="_poppler_cache_8h_source"/>
        <childnode refid="90326" relation="include">
        </childnode>
      </node>
      <node id="90328">
        <label>string.h</label>
      </node>
      <node id="90330">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="90331" relation="include">
        </childnode>
        <childnode refid="90332" relation="include">
        </childnode>
        <childnode refid="90333" relation="include">
        </childnode>
        <childnode refid="90323" relation="include">
        </childnode>
      </node>
      <node id="90326">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="90327" relation="include">
        </childnode>
        <childnode refid="90325" relation="include">
        </childnode>
        <childnode refid="90328" relation="include">
        </childnode>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90329" relation="include">
        </childnode>
        <childnode refid="90330" relation="include">
        </childnode>
        <childnode refid="90334" relation="include">
        </childnode>
        <childnode refid="90335" relation="include">
        </childnode>
        <childnode refid="90336" relation="include">
        </childnode>
        <childnode refid="90339" relation="include">
        </childnode>
        <childnode refid="90340" relation="include">
        </childnode>
      </node>
      <node id="90351">
        <label>vector</label>
      </node>
      <node id="90343">
        <label>OutputDev.h</label>
        <link refid="_output_dev_8h_source"/>
        <childnode refid="90324" relation="include">
        </childnode>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90344" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90345" relation="include">
        </childnode>
      </node>
      <node id="90337">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="90338" relation="include">
        </childnode>
      </node>
      <node id="90344">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="90323">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="90324" relation="include">
        </childnode>
      </node>
      <node id="90327">
        <label>set</label>
      </node>
      <node id="90322">
        <label>thirdparty/poppler/poppler/StructTreeRoot.h</label>
        <link refid="_struct_tree_root_8h"/>
        <childnode refid="90323" relation="include">
        </childnode>
        <childnode refid="90326" relation="include">
        </childnode>
        <childnode refid="90341" relation="include">
        </childnode>
        <childnode refid="90351" relation="include">
        </childnode>
      </node>
      <node id="90325">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="90354">
        <label>thirdparty/poppler/poppler/StructElement.cc</label>
        <link refid="_struct_element_8cc_source"/>
      </node>
      <node id="90353">
        <label>thirdparty/poppler/poppler/Catalog.cc</label>
        <link refid="_catalog_8cc_source"/>
      </node>
      <node id="90355">
        <label>thirdparty/poppler/poppler/StructTreeRoot.cc</label>
        <link refid="_struct_tree_root_8cc_source"/>
      </node>
      <node id="90352">
        <label>thirdparty/poppler/poppler/StructTreeRoot.h</label>
        <link refid="_struct_tree_root_8h"/>
        <childnode refid="90353" relation="include">
        </childnode>
        <childnode refid="90354" relation="include">
        </childnode>
        <childnode refid="90355" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_struct_tree_root" prot="public">StructTreeRoot</innerclass>
    <innerclass refid="struct_struct_tree_root_1_1_parent" prot="private">StructTreeRoot::Parent</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>StructTreeRoot.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>GPLv2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2013,<sp/>2014<sp/>Igalia<sp/>S.L.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STRUCTTREEROOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRUCTTREEROOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;StructElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dict" kindref="compound">Dict</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_struct_tree_root" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref>(<ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*docA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*rootDict);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>~<ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*getDoc()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doc;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getRoleMap()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>roleMap.isDict()<sp/>?<sp/>roleMap.getDict()<sp/>:<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getClassMap()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>classMap.isDict()<sp/>?<sp/>classMap.getDict()<sp/>:<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>getNumChildren()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements.size();<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_struct_element" kindref="compound">StructElement</ref><sp/>*getChild(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements.at(i);<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="class_struct_element" kindref="compound">StructElement</ref><sp/>*getChild(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements.at(i);<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>appendChild(<ref refid="class_struct_element" kindref="compound">StructElement</ref><sp/>*element)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element<sp/>&amp;&amp;<sp/>element-&gt;isOk())<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elements.push_back(element);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_struct_element" kindref="compound">StructElement</ref><sp/>*findParentElement(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>parentTree.size()<sp/>&amp;&amp;<sp/>parentTree[index].size()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parentTree[index][0].element;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;StructElement*&gt;<sp/>ElemPtrArray;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Structure<sp/>for<sp/>items<sp/>in<sp/>/ParentTree,<sp/>it<sp/>keeps<sp/>a<sp/>mapping<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>references<sp/>and<sp/>pointers<sp/>to<sp/>StructElement<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Parent<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_struct_element" kindref="compound">StructElement</ref><sp/>*element;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Parent():<sp/>element(NULL)<sp/>{<sp/>ref.num<sp/>=<sp/>ref.gen<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>Parent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parent<sp/>&amp;p):<sp/>element(p.element)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ref.num<sp/>=<sp/>p.ref.num;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ref.gen<sp/>=<sp/>p.ref.gen;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>~Parent()<sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*doc;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>roleMap;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>classMap;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ElemPtrArray<sp/>elements;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;Parent&gt;<sp/>&gt;<sp/>parentTree;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse(<ref refid="class_dict" kindref="compound">Dict</ref><sp/>*rootDict);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parentTreeAdd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>&amp;objectRef,<sp/><ref refid="class_struct_element" kindref="compound">StructElement</ref><sp/>*element);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_struct_element" kindref="compound">StructElement</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/StructTreeRoot.h"/>
  </compounddef>
</doxygen>
