<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__mxml__io_8cpp" kind="file" language="C++">
    <compoundname>tst_mxml_io.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="staff_8h" local="yes">libmscore/staff.h</includes>
    <includes refid="keysig_8h" local="yes">libmscore/keysig.h</includes>
    <includes local="yes">tst_mxml_io.moc</includes>
    <incdepgraph>
      <node id="74374">
        <label>list</label>
      </node>
      <node id="74368">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="74359" relation="include">
        </childnode>
      </node>
      <node id="74387">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="74388" relation="include">
        </childnode>
        <childnode refid="74391" relation="include">
        </childnode>
      </node>
      <node id="74370">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="74383">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="74384" relation="include">
        </childnode>
        <childnode refid="74385" relation="include">
        </childnode>
        <childnode refid="74387" relation="include">
        </childnode>
      </node>
      <node id="74397">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="74398" relation="include">
        </childnode>
      </node>
      <node id="74395">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="74396" relation="include">
        </childnode>
        <childnode refid="74353" relation="include">
        </childnode>
        <childnode refid="74397" relation="include">
        </childnode>
      </node>
      <node id="74356">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="74385">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="74386" relation="include">
        </childnode>
        <childnode refid="74384" relation="include">
        </childnode>
      </node>
      <node id="74375">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="74401">
        <label>pitch.h</label>
        <link refid="pitch_8h_source"/>
      </node>
      <node id="74398">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="74351" relation="include">
        </childnode>
        <childnode refid="74356" relation="include">
        </childnode>
        <childnode refid="74359" relation="include">
        </childnode>
      </node>
      <node id="74404">
        <label>keylist.h</label>
        <link refid="keylist_8h_source"/>
        <childnode refid="74370" relation="include">
        </childnode>
      </node>
      <node id="74361">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="74365">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="74351" relation="include">
        </childnode>
        <childnode refid="74366" relation="include">
        </childnode>
      </node>
      <node id="74409">
        <label>tst_mxml_io.moc</label>
      </node>
      <node id="74394">
        <label>map</label>
      </node>
      <node id="74403">
        <label>clef.h</label>
        <link refid="clef_8h"/>
        <childnode refid="74351" relation="include">
        </childnode>
        <childnode refid="74359" relation="include">
        </childnode>
      </node>
      <node id="74362">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="74353" relation="include">
        </childnode>
        <childnode refid="74363" relation="include">
        </childnode>
      </node>
      <node id="74348">
        <label>mtest/musicxml/io/tst_mxml_io.cpp</label>
        <link refid="tst__mxml__io_8cpp"/>
        <childnode refid="74349" relation="include">
        </childnode>
        <childnode refid="74350" relation="include">
        </childnode>
        <childnode refid="74357" relation="include">
        </childnode>
        <childnode refid="74383" relation="include">
        </childnode>
        <childnode refid="74395" relation="include">
        </childnode>
        <childnode refid="74399" relation="include">
        </childnode>
        <childnode refid="74408" relation="include">
        </childnode>
        <childnode refid="74409" relation="include">
        </childnode>
      </node>
      <node id="74386">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="74399">
        <label>libmscore/staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="74359" relation="include">
        </childnode>
        <childnode refid="74400" relation="include">
        </childnode>
        <childnode refid="74401" relation="include">
        </childnode>
        <childnode refid="74402" relation="include">
        </childnode>
        <childnode refid="74404" relation="include">
        </childnode>
        <childnode refid="74405" relation="include">
        </childnode>
        <childnode refid="74407" relation="include">
        </childnode>
        <childnode refid="74355" relation="include">
        </childnode>
      </node>
      <node id="74376">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="74377" relation="include">
        </childnode>
      </node>
      <node id="74389">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="74353" relation="include">
        </childnode>
      </node>
      <node id="74388">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="74389" relation="include">
        </childnode>
        <childnode refid="74390" relation="include">
        </childnode>
      </node>
      <node id="74377">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="74378" relation="include">
        </childnode>
        <childnode refid="74379" relation="include">
        </childnode>
        <childnode refid="74380" relation="include">
        </childnode>
      </node>
      <node id="74405">
        <label>stafftypelist.h</label>
        <link refid="stafftypelist_8h_source"/>
        <childnode refid="74406" relation="include">
        </childnode>
      </node>
      <node id="74396">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="74351" relation="include">
        </childnode>
        <childnode refid="74381" relation="include">
        </childnode>
      </node>
      <node id="74408">
        <label>libmscore/keysig.h</label>
        <link refid="keysig_8h_source"/>
        <childnode refid="74370" relation="include">
        </childnode>
        <childnode refid="74351" relation="include">
        </childnode>
      </node>
      <node id="74369">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="74364" relation="include">
        </childnode>
      </node>
      <node id="74350">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="74351" relation="include">
        </childnode>
      </node>
      <node id="74378">
        <label>vector</label>
      </node>
      <node id="74366">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="74352">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="74382">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="74353">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="74354" relation="include">
        </childnode>
      </node>
      <node id="74364">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="74365" relation="include">
        </childnode>
      </node>
      <node id="74360">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="74361" relation="include">
        </childnode>
      </node>
      <node id="74384">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="74391">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="74392" relation="include">
        </childnode>
        <childnode refid="74393" relation="include">
        </childnode>
      </node>
      <node id="74371">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="74351" relation="include">
        </childnode>
        <childnode refid="74362" relation="include">
        </childnode>
      </node>
      <node id="74381">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="74351" relation="include">
        </childnode>
      </node>
      <node id="74351">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="74352" relation="include">
        </childnode>
        <childnode refid="74353" relation="include">
        </childnode>
        <childnode refid="74355" relation="include">
        </childnode>
        <childnode refid="74356" relation="include">
        </childnode>
      </node>
      <node id="74373">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="74374" relation="include">
        </childnode>
      </node>
      <node id="74380">
        <label>iostream</label>
      </node>
      <node id="74400">
        <label>velo.h</label>
        <link refid="velo_8h"/>
      </node>
      <node id="74359">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="74354" relation="include">
        </childnode>
        <childnode refid="74360" relation="include">
        </childnode>
      </node>
      <node id="74407">
        <label>groups.h</label>
        <link refid="groups_8h_source"/>
        <childnode refid="74353" relation="include">
        </childnode>
        <childnode refid="74359" relation="include">
        </childnode>
        <childnode refid="74362" relation="include">
        </childnode>
        <childnode refid="74371" relation="include">
        </childnode>
      </node>
      <node id="74358">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="74359" relation="include">
        </childnode>
        <childnode refid="74362" relation="include">
        </childnode>
        <childnode refid="74371" relation="include">
        </childnode>
      </node>
      <node id="74367">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="74406">
        <label>stafftype.h</label>
        <link refid="stafftype_8h_source"/>
        <childnode refid="74351" relation="include">
        </childnode>
        <childnode refid="74352" relation="include">
        </childnode>
        <childnode refid="74359" relation="include">
        </childnode>
        <childnode refid="74362" relation="include">
        </childnode>
      </node>
      <node id="74390">
        <label>set</label>
      </node>
      <node id="74354">
        <label>config.h</label>
      </node>
      <node id="74379">
        <label>algorithm</label>
      </node>
      <node id="74357">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="74354" relation="include">
        </childnode>
        <childnode refid="74358" relation="include">
        </childnode>
        <childnode refid="74372" relation="include">
        </childnode>
        <childnode refid="74373" relation="include">
        </childnode>
        <childnode refid="74375" relation="include">
        </childnode>
        <childnode refid="74376" relation="include">
        </childnode>
        <childnode refid="74381" relation="include">
        </childnode>
        <childnode refid="74382" relation="include">
        </childnode>
      </node>
      <node id="74393">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="74394" relation="include">
        </childnode>
      </node>
      <node id="74392">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="74353" relation="include">
        </childnode>
      </node>
      <node id="74355">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="74402">
        <label>cleflist.h</label>
        <link refid="cleflist_8h_source"/>
        <childnode refid="74359" relation="include">
        </childnode>
        <childnode refid="74403" relation="include">
        </childnode>
      </node>
      <node id="74372">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="74368" relation="include">
        </childnode>
        <childnode refid="74359" relation="include">
        </childnode>
        <childnode refid="74362" relation="include">
        </childnode>
      </node>
      <node id="74363">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="74351" relation="include">
        </childnode>
        <childnode refid="74364" relation="include">
        </childnode>
        <childnode refid="74367" relation="include">
        </childnode>
        <childnode refid="74368" relation="include">
        </childnode>
        <childnode refid="74356" relation="include">
        </childnode>
        <childnode refid="74369" relation="include">
        </childnode>
        <childnode refid="74370" relation="include">
        </childnode>
      </node>
      <node id="74349">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_mxml_i_o" prot="public">TestMxmlIO</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__mxml__io_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;musicxml/io/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/musicxml/io/tst_mxml_io.cpp" line="28" column="9" bodyfile="mtest/musicxml/io/tst_mxml_io.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tst__mxml__io_8cpp_1a3601311e12f595f31b1f5d407a6020ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fixupScore</definition>
        <argsstring>(Score *score)</argsstring>
        <name>fixupScore</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/musicxml/io/tst_mxml_io.cpp" line="191" column="1" bodyfile="mtest/musicxml/io/tst_mxml_io.cpp" bodystart="191" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012-2014<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>start<sp/>includes<sp/>required<sp/>for<sp/>fixupScore()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="staff_8h" kindref="compound">libmscore/staff.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/keysig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>includes<sp/>required<sp/>for<sp/>fixupScore()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_ms_1a772f048bd958bf708fd495e49c49aac8" kindref="member">saveMxl</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;musicxml/io/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestMxmlIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_test_mxml_i_o" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_mxml_i_o" kindref="compound">TestMxmlIO</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mxmlIoTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mxmlIoTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mxmlMscxExportTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mxmlReadTestCompr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mxmlReadWriteTestCompr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>list<sp/>of<sp/>MusicXML<sp/>regression<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>failing<sp/>tests<sp/>are<sp/>commented<sp/>out<sp/>and<sp/>annotated<sp/>with<sp/>the<sp/>failure<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>extract<sp/>the<sp/>list<sp/>in<sp/>a<sp/>shell<sp/>scipt<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cat<sp/>tst_mxml_io.cpp<sp/>|<sp/>grep<sp/>&quot;{<sp/>&lt;test&gt;&quot;<sp/>|<sp/>awk<sp/>-F\&quot;<sp/>&apos;{print<sp/>$2}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>&lt;test&gt;<sp/>is<sp/>mxmlIoTest<sp/>or<sp/>mxmlIoTestRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>accidentals1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testAccidentals1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>accidentals2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testAccidentals2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>accidentals3()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testAccidentals3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arpGliss1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testArpGliss1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arpGliss2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testArpGliss2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arpGliss3()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testArpGliss3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barStyles()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testBarStyles&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>barStyles2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testBarStyles2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>chordDiagrams1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testChordDiagrams1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>chordNoVoice()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testChordNoVoice&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clefs1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testClefs1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>completeMeasureRests()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testCompleteMeasureRests&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cueNotes()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testCueNotes&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dalSegno()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testDalSegno&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dcalCoda()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testDCalCoda&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dcalFine()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testDCalFine&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>directions1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testDirections1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>divisionsDefinedTooLate1()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testDivsDefinedTooLate1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>divisionsDefinedTooLate2()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testDivsDefinedTooLate2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drumset1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testDrumset1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//ws:<sp/>fails<sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>drumset2()<sp/>{<sp/>mxmlIoTest(&quot;testDrumset2&quot;);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>durationRoundingError()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testDurationRoundingError&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dynamics1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testDynamics1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dynamics2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testDynamics2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dynamics3()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testDynamics3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>emptyMeasure()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testEmptyMeasure&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>emptyVoice1()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testEmptyVoice1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>extendedLyrics()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testExtendedLyrics&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>figuredBass1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testFiguredBass1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>figuredBass2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testFiguredBass2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>figuredBass3()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testFiguredBass3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>formattedThings()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testFormattedThings&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>grace1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testGrace1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>grace2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testGrace2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>harmony1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testHarmony1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>harmony2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testHarmony2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>harmony3()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testHarmony3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>harmony4()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testHarmony4&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>harmony5()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testHarmony5&quot;</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>chordnames<sp/>without<sp/>chordrest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hello()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testHello&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>helloReadCompr()<sp/>{<sp/>mxmlReadTestCompr(</highlight><highlight class="stringliteral">&quot;testHello&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>helloReadWriteCompr()<sp/>{<sp/>mxmlReadWriteTestCompr(</highlight><highlight class="stringliteral">&quot;testHello&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>implicitMeasure1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testImplicitMeasure1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incorrectStaffNumber()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testIncorrectStaffNumber&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>instrumentChangeMIDIportExport()<sp/>{<sp/>mxmlMscxExportTestRef(</highlight><highlight class="stringliteral">&quot;testInstrumentChangeMIDIportExport&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>instrumentSound()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testInstrumentSound&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invalidTimesig()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testInvalidTimesig&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invisibleElements()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testInvisibleElements&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>keysig1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testKeysig1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>keysig2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testKeysig2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lines1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testLines1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lines2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testLines2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lyricsVoice2a()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testLyricsVoice2a&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lyricsVoice2b()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testLyricsVoice2b&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>manualBreaks()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testManualBreaks&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measureLength()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testMeasureLength&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midiPortExport()<sp/>{<sp/>mxmlMscxExportTestRef(</highlight><highlight class="stringliteral">&quot;testMidiPortExport&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multiInstrumentPart1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testMultiInstrumentPart1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multiInstrumentPart2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testMultiInstrumentPart2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multiMeasureRest1()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testMultiMeasureRest1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multiMeasureRest2()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testMultiMeasureRest2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multiMeasureRest3()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testMultiMeasureRest3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multipleNotations()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testMultipleNotations&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nonStandardKeySig1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNonStandardKeySig1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>nonStandardKeySig2()<sp/>{<sp/>mxmlIoTest(&quot;testNonStandardKeySig2&quot;);<sp/>}<sp/>//problem<sp/>with<sp/>cautionary<sp/>measure<sp/>8<sp/>and<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nonStandardKeySig2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNonStandardKeySig3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nonUniqueThings()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testNonUniqueThings&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noteAttributes1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNoteAttributes1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noteAttributes2()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testNoteAttributes2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noteAttributes3()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNoteAttributes3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noteheadParentheses()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNoteheadParentheses&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noteheads()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNoteheads&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noteheadsFilled()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNoteheadsFilled&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notesRests1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNotesRests1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notesRests2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testNotesRests2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>numberedLyrics()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testNumberedLyrics&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>overlappingSpanners()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testOverlappingSpanners&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printSpacingNo()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testPrintSpacingNo&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>repeatCounts()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testRepeatCounts&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>repeatSingleMeasure()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testRepeatSingleMeasure&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restNotations()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testRestNotations&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restsNoType()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testRestsNoType&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restsTypeWhole()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testRestsTypeWhole&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>slurTieLineStyle()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testSlurTieLineStyle&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>slurs()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testSlurs&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>slurs2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testSlurs2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>specialCharacters()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testSpecialCharacters&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>staffTwoKeySigs()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testStaffTwoKeySigs&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stringVoiceName()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testStringVoiceName&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>systemBrackets1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testSystemBrackets1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>systemBrackets2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testSystemBrackets2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tablature1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTablature1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tablature2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTablature2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tablature3()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTablature3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tablature4()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTablature4&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tempo1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTempo1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tempo2()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testTempo2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timesig1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTimesig1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timesig3()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTimesig3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tremolo()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTremolo&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplets1()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testTuplets1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplets2()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testTuplets2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplets3()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testTuplets3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplets4()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testTuplets4&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uninitializedDivisions()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testUninitializedDivisions&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unusualDurations()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testUnusualDurations&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>virtualInstruments()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testVirtualInstruments&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceMapper1()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testVoiceMapper1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceMapper2()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testVoiceMapper2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceMapper3()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testVoiceMapper3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voicePiano1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testVoicePiano1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>volta1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testVolta1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wedge1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testWedge1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wedge2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testWedge2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>words1()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testWords1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>words2()<sp/>{<sp/>mxmlIoTest(</highlight><highlight class="stringliteral">&quot;testWords2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound1()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testSound1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound2()<sp/>{<sp/>mxmlIoTestRef(</highlight><highlight class="stringliteral">&quot;testSound2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMxmlIO::initTestCase()</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>fixupScore<sp/>--<sp/>do<sp/>required<sp/>fixups<sp/>after<sp/>MusicXML<sp/>import</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>see<sp/>mscore/file.cpp<sp/>MuseScore::readScore(Score*<sp/>score,<sp/>QString<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TODO:<sp/>remove<sp/>duplication<sp/>of<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fixupScore(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;syntiState().append(SyntiParameter(&quot;soundfont&quot;,<sp/>MScore::soundFont));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae50d0b620dca99b269dea62ddcf71f5a" kindref="member">connectTies</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;masterScore()-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;setCreated(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;setSaved(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staffIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(<ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref>*<sp/>st,<sp/>score-&gt;staves())<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st-&gt;updateKeymap())</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;clearKeys();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track<sp/>=<sp/>staffIdx<sp/>*<sp/>VOICES;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*<sp/>key1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m<sp/>=<sp/>score-&gt;firstMeasure();<sp/>m;<sp/>m<sp/>=<sp/>m-&gt;nextMeasure())<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m-&gt;first();<sp/>s;<sp/>s<sp/>=<sp/>s-&gt;next())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;element(track))</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e<sp/>=<sp/>s-&gt;element(track);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;generated())</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>((s-&gt;subtype()<sp/>==<sp/>SegClef)<sp/>&amp;&amp;<sp/>st-&gt;updateClefList())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Clef*<sp/>clef<sp/>=<sp/>static_cast&lt;Clef*&gt;(e);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;setClef(s-&gt;tick(),<sp/>clef-&gt;clefTypeList());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;segmentType()<sp/>==<sp/>Segment::Type::KeySig)<sp/>&amp;&amp;<sp/>st-&gt;updateKeymap())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*<sp/>ks<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>naturals<sp/>=<sp/>key1<sp/>?<sp/>key1-&gt;keySigEvent().accidentalType()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ks-&gt;setOldSig(naturals);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;setKey(s-&gt;tick(),<sp/>ks-&gt;key());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key1<sp/>=<sp/>ks;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;sectionBreak())</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;setUpdateKeymap(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++staffIdx;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mxmlIoTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>MusicXML<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>new<sp/>file<sp/>and<sp/>verify<sp/>both<sp/>files<sp/>are<sp/>identical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMxmlIO::mxmlIoTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlImportBreaks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMusicXml(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mxmlIoTestRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>MusicXML<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>new<sp/>file<sp/>and<sp/>verify<sp/>against<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMxmlIO::mxmlIoTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlImportBreaks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMusicXml(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_ref.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mxmlMscxExportTestRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>MuseScore<sp/>mscx<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>MusicXML<sp/>file<sp/>and<sp/>verify<sp/>against<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMxmlIO::mxmlMscxExportTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportLayout<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMusicXml(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_ref.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mxmlReadTestCompr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>compressed<sp/>MusicXML<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>new<sp/>file<sp/>and<sp/>verify<sp/>against<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMxmlIO::mxmlReadTestCompr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlImportBreaks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mxl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMusicXml(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_mxl_read.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_mxl_read.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mxmlReadWriteTestCompr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>MusicXML<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>compressed<sp/>MusicXML<sp/>file,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>the<sp/>compressed<sp/>MusicXML<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>new<sp/>file<sp/>and<sp/>verify<sp/>files<sp/>are<sp/>identical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestMxmlIO::mxmlReadWriteTestCompr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlImportBreaks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>mxl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_ms_1a772f048bd958bf708fd495e49c49aac8" kindref="member">saveMxl</ref>(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_mxl_read_write.mxl&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>mxl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>readCreatedScore(QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_mxl_read_write.mxl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>and<sp/>verify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_mxl_read_write.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_mxml_i_o" kindref="compound">TestMxmlIO</ref>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_mxml_io.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="mtest/musicxml/io/tst_mxml_io.cpp"/>
  </compounddef>
</doxygen>
