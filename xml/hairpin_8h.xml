<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hairpin_8h" kind="file" language="C++">
    <compoundname>hairpin.h</compoundname>
    <includes refid="element_8h" local="yes">element.h</includes>
    <includes refid="dynamic_8h" local="yes">dynamic.h</includes>
    <includes refid="line_8h" local="yes">line.h</includes>
    <includes refid="textlinebase_8h" local="yes">textlinebase.h</includes>
    <includes refid="mscore_8h" local="yes">mscore.h</includes>
    <includedby refid="moc__hairpin_8cpp" local="yes">build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_hairpin.cpp</includedby>
    <includedby refid="cmd_8cpp" local="yes">libmscore/cmd.cpp</includedby>
    <includedby refid="edit_8cpp" local="yes">libmscore/edit.cpp</includedby>
    <includedby refid="element_8cpp" local="yes">libmscore/element.cpp</includedby>
    <includedby refid="hairpin_8cpp" local="yes">libmscore/hairpin.cpp</includedby>
    <includedby refid="layout_8cpp" local="yes">libmscore/layout.cpp</includedby>
    <includedby refid="measure_8cpp" local="yes">libmscore/measure.cpp</includedby>
    <includedby refid="mscore_8cpp" local="yes">libmscore/mscore.cpp</includedby>
    <includedby refid="note_8cpp" local="yes">libmscore/note.cpp</includedby>
    <includedby refid="paste_8cpp" local="yes">libmscore/paste.cpp</includedby>
    <includedby refid="read206_8cpp" local="yes">libmscore/read206.cpp</includedby>
    <includedby refid="rendermidi_8cpp" local="yes">libmscore/rendermidi.cpp</includedby>
    <includedby refid="segment_8cpp" local="yes">libmscore/segment.cpp</includedby>
    <includedby refid="undo_8cpp" local="yes">libmscore/undo.cpp</includedby>
    <includedby refid="capella_8cpp" local="yes">mscore/capella.cpp</includedby>
    <includedby refid="debugger_8cpp" local="yes">mscore/debugger/debugger.cpp</includedby>
    <includedby refid="exportly_8cpp" local="yes">mscore/exportly.cpp</includedby>
    <includedby refid="exportxml_8cpp" local="yes">mscore/exportxml.cpp</includedby>
    <includedby refid="file_8cpp" local="yes">mscore/file.cpp</includedby>
    <includedby refid="importgtp_8h" local="yes">mscore/importgtp.h</includedby>
    <includedby refid="importgtp-gp6_8cpp" local="yes">mscore/importgtp-gp6.cpp</includedby>
    <includedby refid="importgtp_8cpp" local="yes">mscore/importgtp.cpp</includedby>
    <includedby refid="importmxmlpass2_8cpp" local="yes">mscore/importmxmlpass2.cpp</includedby>
    <includedby refid="importove_8cpp" local="yes">mscore/importove.cpp</includedby>
    <includedby refid="inspector_hairpin_8cpp" local="yes">mscore/inspector/inspectorHairpin.cpp</includedby>
    <includedby refid="menus_8cpp" local="yes">mscore/menus.cpp</includedby>
    <includedby refid="propertymenu_8cpp" local="yes">mscore/propertymenu.cpp</includedby>
    <includedby refid="scoreview_8cpp" local="yes">mscore/scoreview.cpp</includedby>
    <includedby refid="tst__hairpin_8cpp" local="yes">mtest/libmscore/hairpin/tst_hairpin.cpp</includedby>
    <incdepgraph>
      <node id="24422">
        <label>libmscore/hairpin.h</label>
        <link refid="hairpin_8h"/>
        <childnode refid="24423" relation="include">
        </childnode>
        <childnode refid="24429" relation="include">
        </childnode>
        <childnode refid="24436" relation="include">
        </childnode>
        <childnode refid="24438" relation="include">
        </childnode>
        <childnode refid="24433" relation="include">
        </childnode>
      </node>
      <node id="24428">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="24435">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="24436">
        <label>line.h</label>
        <link refid="line_8h_source"/>
        <childnode refid="24437" relation="include">
        </childnode>
        <childnode refid="24433" relation="include">
        </childnode>
      </node>
      <node id="24429">
        <label>dynamic.h</label>
        <link refid="dynamic_8h_source"/>
        <childnode refid="24430" relation="include">
        </childnode>
        <childnode refid="24433" relation="include">
        </childnode>
      </node>
      <node id="24438">
        <label>textlinebase.h</label>
        <link refid="textlinebase_8h_source"/>
        <childnode refid="24436" relation="include">
        </childnode>
        <childnode refid="24434" relation="include">
        </childnode>
        <childnode refid="24432" relation="include">
        </childnode>
      </node>
      <node id="24437">
        <label>spanner.h</label>
        <link refid="spanner_8h_source"/>
        <childnode refid="24423" relation="include">
        </childnode>
      </node>
      <node id="24431">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="24424">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="24432">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="24425">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="24426" relation="include">
        </childnode>
      </node>
      <node id="24434">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="24435" relation="include">
        </childnode>
      </node>
      <node id="24430">
        <label>text.h</label>
        <link refid="text_8h_source"/>
        <childnode refid="24423" relation="include">
        </childnode>
        <childnode refid="24431" relation="include">
        </childnode>
        <childnode refid="24432" relation="include">
        </childnode>
      </node>
      <node id="24423">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="24424" relation="include">
        </childnode>
        <childnode refid="24425" relation="include">
        </childnode>
        <childnode refid="24427" relation="include">
        </childnode>
        <childnode refid="24428" relation="include">
        </childnode>
      </node>
      <node id="24433">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="24426" relation="include">
        </childnode>
        <childnode refid="24434" relation="include">
        </childnode>
      </node>
      <node id="24426">
        <label>config.h</label>
      </node>
      <node id="24427">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="24439">
        <label>libmscore/hairpin.h</label>
        <link refid="hairpin_8h"/>
        <childnode refid="24440" relation="include">
        </childnode>
        <childnode refid="24442" relation="include">
        </childnode>
        <childnode refid="24443" relation="include">
        </childnode>
        <childnode refid="24444" relation="include">
        </childnode>
        <childnode refid="24445" relation="include">
        </childnode>
        <childnode refid="24446" relation="include">
        </childnode>
        <childnode refid="24447" relation="include">
        </childnode>
        <childnode refid="24448" relation="include">
        </childnode>
        <childnode refid="24449" relation="include">
        </childnode>
        <childnode refid="24450" relation="include">
        </childnode>
        <childnode refid="24451" relation="include">
        </childnode>
        <childnode refid="24452" relation="include">
        </childnode>
        <childnode refid="24453" relation="include">
        </childnode>
        <childnode refid="24454" relation="include">
        </childnode>
        <childnode refid="24455" relation="include">
        </childnode>
        <childnode refid="24456" relation="include">
        </childnode>
        <childnode refid="24457" relation="include">
        </childnode>
        <childnode refid="24458" relation="include">
        </childnode>
        <childnode refid="24459" relation="include">
        </childnode>
        <childnode refid="24460" relation="include">
        </childnode>
        <childnode refid="24463" relation="include">
        </childnode>
        <childnode refid="24464" relation="include">
        </childnode>
        <childnode refid="24465" relation="include">
        </childnode>
        <childnode refid="24466" relation="include">
        </childnode>
        <childnode refid="24467" relation="include">
        </childnode>
        <childnode refid="24468" relation="include">
        </childnode>
        <childnode refid="24469" relation="include">
        </childnode>
        <childnode refid="24470" relation="include">
        </childnode>
        <childnode refid="24471" relation="include">
        </childnode>
      </node>
      <node id="24462">
        <label>mscore/importgtp-gp5.cpp</label>
        <link refid="importgtp-gp5_8cpp_source"/>
      </node>
      <node id="24443">
        <label>libmscore/edit.cpp</label>
        <link refid="edit_8cpp_source"/>
      </node>
      <node id="24467">
        <label>mscore/inspector/inspectorHairpin.cpp</label>
        <link refid="inspector_hairpin_8cpp_source"/>
      </node>
      <node id="24458">
        <label>mscore/exportxml.cpp</label>
        <link refid="exportxml_8cpp_source"/>
      </node>
      <node id="24468">
        <label>mscore/menus.cpp</label>
        <link refid="menus_8cpp_source"/>
      </node>
      <node id="24465">
        <label>mscore/importmxmlpass2.cpp</label>
        <link refid="importmxmlpass2_8cpp_source"/>
      </node>
      <node id="24464">
        <label>mscore/importgtp.cpp</label>
        <link refid="importgtp_8cpp_source"/>
      </node>
      <node id="24441">
        <label>build.release/libmscore/libmscore_autogen/moc_compilation.cpp</label>
        <link refid="libmscore_2libmscore__autogen_2moc__compilation_8cpp_source"/>
      </node>
      <node id="24445">
        <label>libmscore/hairpin.cpp</label>
        <link refid="hairpin_8cpp_source"/>
      </node>
      <node id="24463">
        <label>mscore/importgtp-gp6.cpp</label>
        <link refid="importgtp-gp6_8cpp_source"/>
      </node>
      <node id="24454">
        <label>libmscore/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="24452">
        <label>libmscore/rendermidi.cpp</label>
        <link refid="rendermidi_8cpp"/>
      </node>
      <node id="24440">
        <label>build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_hairpin.cpp</label>
        <link refid="moc__hairpin_8cpp_source"/>
        <childnode refid="24441" relation="include">
        </childnode>
      </node>
      <node id="24449">
        <label>libmscore/note.cpp</label>
        <link refid="note_8cpp"/>
      </node>
      <node id="24471">
        <label>mtest/libmscore/hairpin/tst_hairpin.cpp</label>
        <link refid="tst__hairpin_8cpp_source"/>
      </node>
      <node id="24470">
        <label>mscore/scoreview.cpp</label>
        <link refid="scoreview_8cpp_source"/>
      </node>
      <node id="24450">
        <label>libmscore/paste.cpp</label>
        <link refid="paste_8cpp_source"/>
      </node>
      <node id="24442">
        <label>libmscore/cmd.cpp</label>
        <link refid="cmd_8cpp"/>
      </node>
      <node id="24459">
        <label>mscore/file.cpp</label>
        <link refid="file_8cpp_source"/>
      </node>
      <node id="24447">
        <label>libmscore/measure.cpp</label>
        <link refid="measure_8cpp"/>
      </node>
      <node id="24466">
        <label>mscore/importove.cpp</label>
        <link refid="importove_8cpp_source"/>
      </node>
      <node id="24453">
        <label>libmscore/segment.cpp</label>
        <link refid="segment_8cpp_source"/>
      </node>
      <node id="24457">
        <label>mscore/exportly.cpp</label>
        <link refid="exportly_8cpp_source"/>
      </node>
      <node id="24455">
        <label>mscore/capella.cpp</label>
        <link refid="capella_8cpp_source"/>
      </node>
      <node id="24446">
        <label>libmscore/layout.cpp</label>
        <link refid="layout_8cpp_source"/>
      </node>
      <node id="24448">
        <label>libmscore/mscore.cpp</label>
        <link refid="mscore_8cpp_source"/>
      </node>
      <node id="24460">
        <label>mscore/importgtp.h</label>
        <link refid="importgtp_8h_source"/>
        <childnode refid="24461" relation="include">
        </childnode>
        <childnode refid="24462" relation="include">
        </childnode>
        <childnode refid="24463" relation="include">
        </childnode>
        <childnode refid="24464" relation="include">
        </childnode>
      </node>
      <node id="24456">
        <label>mscore/debugger/debugger.cpp</label>
        <link refid="debugger_8cpp_source"/>
      </node>
      <node id="24469">
        <label>mscore/propertymenu.cpp</label>
        <link refid="propertymenu_8cpp_source"/>
      </node>
      <node id="24444">
        <label>libmscore/element.cpp</label>
        <link refid="element_8cpp"/>
      </node>
      <node id="24451">
        <label>libmscore/read206.cpp</label>
        <link refid="read206_8cpp_source"/>
      </node>
      <node id="24461">
        <label>mscore/importgtp-gp4.cpp</label>
        <link refid="importgtp-gp4_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ms_1_1_hairpin_segment" prot="public">Ms::HairpinSegment</innerclass>
    <innerclass refid="class_ms_1_1_hairpin" prot="public">Ms::Hairpin</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="hairpin_8h_1aaea2d7657c01f689db58c622a6464b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_METATYPE</definition>
        <argsstring>(Ms::HairpinType)</argsstring>
        <name>Q_DECLARE_METATYPE</name>
        <param>
          <type>Ms::HairpinType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/hairpin.h" line="149" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2002-2011<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__HAIRPIN_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAIRPIN_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;element.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dynamic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;line.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;textlinebase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Score;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Hairpin;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>HairpinType<sp/>:<sp/>char<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CRESC_HAIRPIN,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DECRESC_HAIRPIN,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CRESC_LINE,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DECRESC_LINE</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@@<sp/>HairpinSegment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_ms_1_1_hairpin_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_hairpin_segment" kindref="compound">HairpinSegment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_text_line_base_segment" kindref="compound">TextLineBaseSegment</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>drawCircledTip;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>circledTip;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/><sp/><sp/>circledTipRadius;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startEdit(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startEditDrag(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>editDrag(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateGrips(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endEdit(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QPainter*)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_hairpin_segment" kindref="compound">HairpinSegment</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_hairpin_segment" kindref="compound">HairpinSegment</ref>*<sp/>clone()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_hairpin_segment" kindref="compound">HairpinSegment</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ElementType::HAIRPIN_SEGMENT;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref>*<sp/>hairpin()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref>*)spanner();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>getProperty(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setProperty(P_ID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>propertyDefault(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>PropertyFlags<sp/>propertyFlags(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StyleIdx<sp/>getPropertyStyle(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetProperty(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layout()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref><sp/>shape()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@@<sp/>Hairpin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@P<sp/>dynRange<sp/><sp/><sp/><sp/><sp/>enum<sp/>(Dynamic.STAFF,<sp/>Dynamic.PART,<sp/>Dynamic.SYSTEM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@P<sp/>hairpinType<sp/><sp/>enum<sp/>(Hairpin.CRESCENDO,<sp/>Hairpin.DECRESCENDO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@P<sp/>veloChange<sp/><sp/><sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_ms_1_1_hairpin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_text_line_base" kindref="compound">TextLineBase</ref><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_ENUMS(Type)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_ENUMS(Ms::Dynamic::Range)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_PROPERTY(Ms::Dynamic::Range<sp/>dynRange<sp/><sp/><sp/><sp/>READ<sp/><sp/>dynRange<sp/><sp/><sp/><sp/>WRITE<sp/>undoSetDynRange)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_PROPERTY(Ms::HairpinType<sp/><sp/><sp/><sp/>hairpinType<sp/>READ<sp/><sp/>hairpinType<sp/>WRITE<sp/>undoSetHairpinType)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_PROPERTY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>veloChange<sp/><sp/>READ<sp/><sp/>veloChange<sp/><sp/>WRITE<sp/>undoSetVeloChange)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>_hairpinCircledTip;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HairpinType<sp/>_hairpinType;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_veloChange;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dynamic::Range<sp/>_dynRange;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PropertyFlags<sp/>lineWidthStyle;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref><sp/>_hairpinHeight;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref><sp/>_hairpinContHeight;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PropertyFlags<sp/>hairpinHeightStyle;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PropertyFlags<sp/>hairpinContHeightStyle;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref>*<sp/>clone()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ElementType::HAIRPIN;<sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HairpinType<sp/>hairpinType()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_hairpinType;<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHairpinType(HairpinType<sp/>val);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undoSetHairpinType(HairpinType);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>segment()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*)parent();<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layout()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_line_segment" kindref="compound">LineSegment</ref>*<sp/>createLineSegment()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hairpinCircledTip()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_hairpinCircledTip;<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHairpinCircledTip(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_hairpinCircledTip<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>veloChange()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_veloChange;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVeloChange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_veloChange<sp/>=<sp/>v;<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undoSetVeloChange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dynamic::Range<sp/>dynRange()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dynRange;<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDynRange(Dynamic::Range<sp/>t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_dynRange<sp/>=<sp/>t;<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undoSetDynRange(Dynamic::Range<sp/>t);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref><sp/>hairpinHeight()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_hairpinHeight;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHairpinHeight(<ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref><sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_hairpinHeight<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref><sp/>hairpinContHeight()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_hairpinContHeight;<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHairpinContHeight(<ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref><sp/>val)<sp/><sp/><sp/><sp/>{<sp/>_hairpinContHeight<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(<ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>read(<ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>getProperty(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setProperty(P_ID<sp/>propertyId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>propertyDefault(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>PropertyFlags<sp/>propertyFlags(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetProperty(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StyleIdx<sp/>getPropertyStyle(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setYoff(qreal)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>styleChanged()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>accessibleInfo()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_dynamic" kindref="compound">Dynamic</ref>*<sp/>lookupDynamic(<ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">Q_DECLARE_METATYPE(Ms::HairpinType);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libmscore/hairpin.h"/>
  </compounddef>
</doxygen>
