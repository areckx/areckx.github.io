<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_beat_tracker" kind="namespace" language="C++">
    <compoundname>BeatTracker</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="_beat_tracker_8cpp_1a01268a6a25a570e19ff9113f1af5e4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; BeatTracker::beatTrack</definition>
        <argsstring>(const AgentParameters &amp;params, const EventList &amp;events, const EventList &amp;beats)</argsstring>
        <name>beatTrack</name>
        <param>
          <type>const <ref refid="class_agent_parameters" kindref="compound">AgentParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const EventList &amp;</type>
          <declname>events</declname>
        </param>
        <param>
          <type>const EventList &amp;</type>
          <declname>beats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform beat tracking. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>The onsets or peaks in a feature list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beats</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial beats which are given, if any </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The list of beats, or an empty list if beat tracking fails </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/BeatTracker.cpp" line="24" column="1" bodyfile="thirdparty/beatroot/BeatTracker.cpp" bodystart="24" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="_beat_tracker_8cpp_1a78512d6b486d3d1e1b64a45f0ecad8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; BeatTracker::beatTrack</definition>
        <argsstring>(const AgentParameters &amp;params, const EventList &amp;events)</argsstring>
        <name>beatTrack</name>
        <param>
          <type>const <ref refid="class_agent_parameters" kindref="compound">AgentParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const EventList &amp;</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform beat tracking. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>The onsets or peaks in a feature list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The list of beats, or an empty list if beat tracking fails </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/BeatTracker.cpp" line="70" column="1" bodyfile="thirdparty/beatroot/BeatTracker.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_beat_tracker_8cpp_1af4127a8ccb938d7afe3523c4fa455fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; BeatTracker::beatTrack</definition>
        <argsstring>(const EventList &amp;events)</argsstring>
        <name>beatTrack</name>
        <param>
          <type>const EventList &amp;</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/BeatTracker.cpp" line="75" column="1" bodyfile="thirdparty/beatroot/BeatTracker.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="thirdparty/beatroot/BeatTracker.cpp" line="22" column="1"/>
  </compounddef>
</doxygen>
