<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_m_test" kind="class" language="C++" prot="public">
    <compoundname>Ms::MTest</compoundname>
    <derivedcompoundref refid="class_test_album" prot="public" virt="non-virtual">TestAlbum</derivedcompoundref>
    <derivedcompoundref refid="class_test_barline" prot="public" virt="non-virtual">TestBarline</derivedcompoundref>
    <derivedcompoundref refid="class_test_beam" prot="public" virt="non-virtual">TestBeam</derivedcompoundref>
    <derivedcompoundref refid="class_test_benchmark" prot="public" virt="non-virtual">TestBenchmark</derivedcompoundref>
    <derivedcompoundref refid="class_test_biab" prot="public" virt="non-virtual">TestBiab</derivedcompoundref>
    <derivedcompoundref refid="class_test_breath" prot="public" virt="non-virtual">TestBreath</derivedcompoundref>
    <derivedcompoundref refid="class_test_bww_i_o" prot="public" virt="non-virtual">TestBwwIO</derivedcompoundref>
    <derivedcompoundref refid="class_test_capella_i_o" prot="public" virt="non-virtual">TestCapellaIO</derivedcompoundref>
    <derivedcompoundref refid="class_test_chord_symbol" prot="public" virt="non-virtual">TestChordSymbol</derivedcompoundref>
    <derivedcompoundref refid="class_test_clef" prot="public" virt="non-virtual">TestClef</derivedcompoundref>
    <derivedcompoundref refid="class_test_clef_courtesy" prot="public" virt="non-virtual">TestClefCourtesy</derivedcompoundref>
    <derivedcompoundref refid="class_test_compat114" prot="public" virt="non-virtual">TestCompat114</derivedcompoundref>
    <derivedcompoundref refid="class_test_compat206" prot="public" virt="non-virtual">TestCompat206</derivedcompoundref>
    <derivedcompoundref refid="class_test_concert_pitch_benchmark" prot="public" virt="non-virtual">TestConcertPitchBenchmark</derivedcompoundref>
    <derivedcompoundref refid="class_test_copy_paste" prot="public" virt="non-virtual">TestCopyPaste</derivedcompoundref>
    <derivedcompoundref refid="class_test_copy_paste_symbol_list" prot="public" virt="non-virtual">TestCopyPasteSymbolList</derivedcompoundref>
    <derivedcompoundref refid="class_test_cursor" prot="public" virt="non-virtual">TestCursor</derivedcompoundref>
    <derivedcompoundref refid="class_test_duration_type" prot="public" virt="non-virtual">TestDurationType</derivedcompoundref>
    <derivedcompoundref refid="class_test_dynamic" prot="public" virt="non-virtual">TestDynamic</derivedcompoundref>
    <derivedcompoundref refid="class_test_earlymusic" prot="public" virt="non-virtual">TestEarlymusic</derivedcompoundref>
    <derivedcompoundref refid="class_test_element" prot="public" virt="non-virtual">TestElement</derivedcompoundref>
    <derivedcompoundref refid="class_test_exchangevoices" prot="public" virt="non-virtual">TestExchangevoices</derivedcompoundref>
    <derivedcompoundref refid="class_test_guitar_pro" prot="public" virt="non-virtual">TestGuitarPro</derivedcompoundref>
    <derivedcompoundref refid="class_test_hairpin" prot="public" virt="non-virtual">TestHairpin</derivedcompoundref>
    <derivedcompoundref refid="class_test_implode_explode" prot="public" virt="non-virtual">TestImplodeExplode</derivedcompoundref>
    <derivedcompoundref refid="class_test_import_midi" prot="public" virt="non-virtual">TestImportMidi</derivedcompoundref>
    <derivedcompoundref refid="class_test_instrument_change" prot="public" virt="non-virtual">TestInstrumentChange</derivedcompoundref>
    <derivedcompoundref refid="class_test_join" prot="public" virt="non-virtual">TestJoin</derivedcompoundref>
    <derivedcompoundref refid="class_test_key_sig" prot="public" virt="non-virtual">TestKeySig</derivedcompoundref>
    <derivedcompoundref refid="class_test_links" prot="public" virt="non-virtual">TestLinks</derivedcompoundref>
    <derivedcompoundref refid="class_test_measure" prot="public" virt="non-virtual">TestMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_test_midi" prot="public" virt="non-virtual">TestMidi</derivedcompoundref>
    <derivedcompoundref refid="class_test_midi_mapping" prot="public" virt="non-virtual">TestMidiMapping</derivedcompoundref>
    <derivedcompoundref refid="class_test_mxml_i_o" prot="public" virt="non-virtual">TestMxmlIO</derivedcompoundref>
    <derivedcompoundref refid="class_test_note" prot="public" virt="non-virtual">TestNote</derivedcompoundref>
    <derivedcompoundref refid="class_test_notes" prot="public" virt="non-virtual">TestNotes</derivedcompoundref>
    <derivedcompoundref refid="class_test_opcodes" prot="public" virt="non-virtual">TestOpcodes</derivedcompoundref>
    <derivedcompoundref refid="class_test_ove_i_o" prot="public" virt="non-virtual">TestOveIO</derivedcompoundref>
    <derivedcompoundref refid="class_test_ove_i_o" prot="public" virt="non-virtual">TestOveIO</derivedcompoundref>
    <derivedcompoundref refid="class_test_ove_i_o" prot="public" virt="non-virtual">TestOveIO</derivedcompoundref>
    <derivedcompoundref refid="class_test_parts" prot="public" virt="non-virtual">TestParts</derivedcompoundref>
    <derivedcompoundref refid="class_test_repeat" prot="public" virt="non-virtual">TestRepeat</derivedcompoundref>
    <derivedcompoundref refid="class_test_rhythmic_grouping" prot="public" virt="non-virtual">TestRhythmicGrouping</derivedcompoundref>
    <derivedcompoundref refid="class_test_scripting" prot="public" virt="non-virtual">TestScripting</derivedcompoundref>
    <derivedcompoundref refid="class_test_selection_filter" prot="public" virt="non-virtual">TestSelectionFilter</derivedcompoundref>
    <derivedcompoundref refid="class_test_selection_range_delete" prot="public" virt="non-virtual">TestSelectionRangeDelete</derivedcompoundref>
    <derivedcompoundref refid="class_test_sfz_comments" prot="public" virt="non-virtual">TestSfzComments</derivedcompoundref>
    <derivedcompoundref refid="class_test_sfz_envelopes" prot="public" virt="non-virtual">TestSfzEnvelopes</derivedcompoundref>
    <derivedcompoundref refid="class_test_sfz_global" prot="public" virt="non-virtual">TestSfzGlobal</derivedcompoundref>
    <derivedcompoundref refid="class_test_sfz_includes" prot="public" virt="non-virtual">TestSfzIncludes</derivedcompoundref>
    <derivedcompoundref refid="class_test_sfz_input_controls" prot="public" virt="non-virtual">TestSfzInputControls</derivedcompoundref>
    <derivedcompoundref refid="class_test_sfz_loop" prot="public" virt="non-virtual">TestSfzLoop</derivedcompoundref>
    <derivedcompoundref refid="class_test_spanners" prot="public" virt="non-virtual">TestSpanners</derivedcompoundref>
    <derivedcompoundref refid="class_test_split" prot="public" virt="non-virtual">TestSplit</derivedcompoundref>
    <derivedcompoundref refid="class_test_split_staff" prot="public" virt="non-virtual">TestSplitStaff</derivedcompoundref>
    <derivedcompoundref refid="class_test_text" prot="public" virt="non-virtual">TestText</derivedcompoundref>
    <derivedcompoundref refid="class_test_timesig" prot="public" virt="non-virtual">TestTimesig</derivedcompoundref>
    <derivedcompoundref refid="class_test_tools" prot="public" virt="non-virtual">TestTools</derivedcompoundref>
    <derivedcompoundref refid="class_test_transpose" prot="public" virt="non-virtual">TestTranspose</derivedcompoundref>
    <derivedcompoundref refid="class_test_tuplet" prot="public" virt="non-virtual">TestTuplet</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_ms_1_1_m_test_1a62fa3697bed02fa431b025df0457763e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_m_score" kindref="compound">Ms::MScore</ref> *</type>
        <definition>Ms::MScore* Ms::MTest::mscore</definition>
        <argsstring></argsstring>
        <name>mscore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="31" column="1" bodyfile="mtest/testutils.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_m_test_1a1891a6553283a1d3fda0aace440d359e" prot="protected" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MTest::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="32" column="1" bodyfile="mtest/testutils.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_m_test_1a7ae6f01386275392b5c840ad6e8006f4" prot="protected" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_score" kindref="compound">Ms::Score</ref> *</type>
        <definition>Ms::Score* Ms::MTest::score</definition>
        <argsstring></argsstring>
        <name>score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="33" column="1" bodyfile="mtest/testutils.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_m_test_1a47c4f40157a350d27906dc6331e6cfd9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref></type>
        <definition>EditData Ms::MTest::ed</definition>
        <argsstring></argsstring>
        <name>ed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="34" column="1" bodyfile="mtest/testutils.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_ms_1_1_m_test_1a744f5e054b180afc3e977956f58b069a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::MTest::MTest</definition>
        <argsstring>()</argsstring>
        <name>MTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="36" column="1" bodyfile="mtest/testutils.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1ac35525fff12b9e2d07806bcd6602217e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_master_score" kindref="compound">Ms::MasterScore</ref> *</type>
        <definition>MasterScore * Ms::MTest::readScore</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>readScore</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="37" column="1" bodyfile="mtest/testutils.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1af3c0a9c8bd7784086f966faf701429d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_master_score" kindref="compound">Ms::MasterScore</ref> *</type>
        <definition>MasterScore * Ms::MTest::readCreatedScore</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>readCreatedScore</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="38" column="1" bodyfile="mtest/testutils.cpp" bodystart="134" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a9191a2086f4eb17a64eb466327c74452" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::saveScore</definition>
        <argsstring>(Ms::Score *, const QString &amp;name) const</argsstring>
        <name>saveScore</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Ms::Score</ref> *</type>
          <defname>score</defname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="39" column="1" bodyfile="mtest/testutils.cpp" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a58c9c58bc05dec98a8a1b783e18a1703" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::savePdf</definition>
        <argsstring>(Ms::MasterScore *, const QString &amp;name)</argsstring>
        <name>savePdf</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">Ms::MasterScore</ref> *</type>
          <defname>cs</defname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="40" column="1" bodyfile="mtest/testutils.cpp" bodystart="244" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a740ba0e9f2c5ebc6e0937ed9dd0da64f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::saveMusicXml</definition>
        <argsstring>(Ms::MasterScore *, const QString &amp;name)</argsstring>
        <name>saveMusicXml</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">Ms::MasterScore</ref> *</type>
          <defname>score</defname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="41" column="1" bodyfile="mtest/testutils.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a8e9111673d6bb2ed25851e4fa7858d03" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::saveMimeData</definition>
        <argsstring>(QByteArray mimeData, const QString &amp;saveName)</argsstring>
        <name>saveMimeData</name>
        <param>
          <type>QByteArray</type>
          <declname>mimeData</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>saveName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="42" column="1" bodyfile="mtest/testutils.cpp" bodystart="303" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a37e6c16e898cab655f8ccd2518274acf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::compareFiles</definition>
        <argsstring>(const QString &amp;saveName, const QString &amp;compareWith) const</argsstring>
        <name>compareFiles</name>
        <param>
          <type>const QString &amp;</type>
          <declname>saveName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>compareWith</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="43" column="1" bodyfile="mtest/testutils.cpp" bodystart="194" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a686ee7797f648e1d0e47e405ca90f92c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::saveCompareScore</definition>
        <argsstring>(Ms::Score *, const QString &amp;saveName, const QString &amp;compareWith) const</argsstring>
        <name>saveCompareScore</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Ms::Score</ref> *</type>
          <defname>score</defname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>saveName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>compareWith</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="44" column="1" bodyfile="mtest/testutils.cpp" bodystart="223" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a5c0af7fbce856e84aeda9c6699e2eeca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::saveCompareMusicXmlScore</definition>
        <argsstring>(Ms::MasterScore *, const QString &amp;saveName, const QString &amp;compareWith)</argsstring>
        <name>saveCompareMusicXmlScore</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">Ms::MasterScore</ref> *</type>
          <defname>score</defname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>saveName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>compareWith</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="45" column="1" bodyfile="mtest/testutils.cpp" bodystart="234" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a3014ea5ea6a33451fd5b26becb07cf7d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MTest::saveCompareMimeData</definition>
        <argsstring>(QByteArray, const QString &amp;saveName, const QString &amp;compareWith)</argsstring>
        <name>saveCompareMimeData</name>
        <param>
          <type>QByteArray</type>
          <defname>mimeData</defname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>saveName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>compareWith</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="46" column="1" bodyfile="mtest/testutils.cpp" bodystart="317" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a752b054eee21c04a6084af6672447499" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Ms::Element</ref> *</type>
        <definition>Element * Ms::MTest::writeReadElement</definition>
        <argsstring>(Ms::Element *element)</argsstring>
        <name>writeReadElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Ms::Element</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="47" column="1" bodyfile="mtest/testutils.cpp" bodystart="83" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_m_test_1a0bf5210cc1ee4587d6959899aaff4a14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MTest::initMTest</definition>
        <argsstring>()</argsstring>
        <name>initMTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/testutils.h" line="48" column="1" bodyfile="mtest/testutils.cpp" bodystart="327" bodyend="346"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10659">
        <label>TestBreath</label>
        <link refid="class_test_breath"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10686">
        <label>TestMidiMapping</label>
        <link refid="class_test_midi_mapping"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10664">
        <label>TestClefCourtesy</label>
        <link refid="class_test_clef_courtesy"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10692">
        <label>TestParts</label>
        <link refid="class_test_parts"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10663">
        <label>TestClef</label>
        <link refid="class_test_clef"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10679">
        <label>TestImportMidi</label>
        <link refid="class_test_import_midi"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10671">
        <label>TestDurationType</label>
        <link refid="class_test_duration_type"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10672">
        <label>TestDynamic</label>
        <link refid="class_test_dynamic"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10706">
        <label>TestSplitStaff</label>
        <link refid="class_test_split_staff"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10687">
        <label>TestMxmlIO</label>
        <link refid="class_test_mxml_i_o"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10676">
        <label>TestGuitarPro</label>
        <link refid="class_test_guitar_pro"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10670">
        <label>TestCursor</label>
        <link refid="class_test_cursor"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10683">
        <label>TestLinks</label>
        <link refid="class_test_links"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10710">
        <label>TestTranspose</label>
        <link refid="class_test_transpose"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10685">
        <label>TestMidi</label>
        <link refid="class_test_midi"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10654">
        <label>TestAlbum</label>
        <link refid="class_test_album"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10668">
        <label>TestCopyPaste</label>
        <link refid="class_test_copy_paste"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10669">
        <label>TestCopyPasteSymbolList</label>
        <link refid="class_test_copy_paste_symbol_list"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10682">
        <label>TestKeySig</label>
        <link refid="class_test_key_sig"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10700">
        <label>TestSfzGlobal</label>
        <link refid="class_test_sfz_global"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10690">
        <label>TestOpcodes</label>
        <link refid="class_test_opcodes"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10697">
        <label>TestSelectionRangeDelete</label>
        <link refid="class_test_selection_range_delete"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10709">
        <label>TestTools</label>
        <link refid="class_test_tools"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10704">
        <label>TestSpanners</label>
        <link refid="class_test_spanners"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10701">
        <label>TestSfzIncludes</label>
        <link refid="class_test_sfz_includes"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10711">
        <label>TestTuplet</label>
        <link refid="class_test_tuplet"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10708">
        <label>TestTimesig</label>
        <link refid="class_test_timesig"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10707">
        <label>TestText</label>
        <link refid="class_test_text"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10680">
        <label>TestInstrumentChange</label>
        <link refid="class_test_instrument_change"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10657">
        <label>TestBenchmark</label>
        <link refid="class_test_benchmark"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10677">
        <label>TestHairpin</label>
        <link refid="class_test_hairpin"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10665">
        <label>TestCompat114</label>
        <link refid="class_test_compat114"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10689">
        <label>TestNotes</label>
        <link refid="class_test_notes"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10684">
        <label>TestMeasure</label>
        <link refid="class_test_measure"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10698">
        <label>TestSfzComments</label>
        <link refid="class_test_sfz_comments"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10688">
        <label>TestNote</label>
        <link refid="class_test_note"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10702">
        <label>TestSfzInputControls</label>
        <link refid="class_test_sfz_input_controls"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10699">
        <label>TestSfzEnvelopes</label>
        <link refid="class_test_sfz_envelopes"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10667">
        <label>TestConcertPitchBenchmark</label>
        <link refid="class_test_concert_pitch_benchmark"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10691">
        <label>TestOveIO</label>
        <link refid="class_test_ove_i_o"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10675">
        <label>TestExchangevoices</label>
        <link refid="class_test_exchangevoices"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10653">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
      </node>
      <node id="10678">
        <label>TestImplodeExplode</label>
        <link refid="class_test_implode_explode"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10681">
        <label>TestJoin</label>
        <link refid="class_test_join"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10696">
        <label>TestSelectionFilter</label>
        <link refid="class_test_selection_filter"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10661">
        <label>TestCapellaIO</label>
        <link refid="class_test_capella_i_o"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10666">
        <label>TestCompat206</label>
        <link refid="class_test_compat206"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10703">
        <label>TestSfzLoop</label>
        <link refid="class_test_sfz_loop"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10655">
        <label>TestBarline</label>
        <link refid="class_test_barline"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10658">
        <label>TestBiab</label>
        <link refid="class_test_biab"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10695">
        <label>TestScripting</label>
        <link refid="class_test_scripting"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10674">
        <label>TestElement</label>
        <link refid="class_test_element"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10673">
        <label>TestEarlymusic</label>
        <link refid="class_test_earlymusic"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10656">
        <label>TestBeam</label>
        <link refid="class_test_beam"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10705">
        <label>TestSplit</label>
        <link refid="class_test_split"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10660">
        <label>TestBwwIO</label>
        <link refid="class_test_bww_i_o"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10694">
        <label>TestRhythmicGrouping</label>
        <link refid="class_test_rhythmic_grouping"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10693">
        <label>TestRepeat</label>
        <link refid="class_test_repeat"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10662">
        <label>TestChordSymbol</label>
        <link refid="class_test_chord_symbol"/>
        <childnode refid="10653" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10725">
        <label>Ms::Sequencer</label>
        <link refid="class_ms_1_1_sequencer"/>
      </node>
      <node id="10717">
        <label>QObject</label>
      </node>
      <node id="10713">
        <label>Ms::EditData</label>
        <link refid="class_ms_1_1_edit_data"/>
        <childnode refid="10714" relation="usage">
          <edgelabel>duration</edgelabel>
        </childnode>
        <childnode refid="10715" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
        <childnode refid="10723" relation="usage">
          <edgelabel>element</edgelabel>
        </childnode>
      </node>
      <node id="10724">
        <label>Ms::MScore</label>
        <link refid="class_ms_1_1_m_score"/>
        <childnode refid="10717" relation="public-inheritance">
        </childnode>
        <childnode refid="10725" relation="usage">
          <edgelabel>seq</edgelabel>
        </childnode>
      </node>
      <node id="10722">
        <label>std::list&lt; SynthesizerGroup &gt;</label>
      </node>
      <node id="10721">
        <label>Ms::SynthesizerState</label>
        <link refid="class_ms_1_1_synthesizer_state"/>
        <childnode refid="10722" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10714">
        <label>Ms::Fraction</label>
        <link refid="class_ms_1_1_fraction"/>
      </node>
      <node id="10718">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="10719" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="10719">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="10720" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10712">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
        <childnode refid="10713" relation="usage">
          <edgelabel>ed</edgelabel>
        </childnode>
        <childnode refid="10716" relation="usage">
          <edgelabel>score</edgelabel>
        </childnode>
        <childnode refid="10724" relation="usage">
          <edgelabel>mscore</edgelabel>
        </childnode>
      </node>
      <node id="10716">
        <label>Ms::Score</label>
        <link refid="class_ms_1_1_score"/>
        <childnode refid="10717" relation="public-inheritance">
        </childnode>
        <childnode refid="10718" relation="private-inheritance">
        </childnode>
        <childnode refid="10721" relation="usage">
          <edgelabel>_synthesizerState</edgelabel>
        </childnode>
      </node>
      <node id="10723">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="10718" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10720">
        <label>QList&lt; ScoreElement *&gt;</label>
      </node>
      <node id="10715">
        <label>Ms::MuseScoreView</label>
        <link refid="class_ms_1_1_muse_score_view"/>
        <childnode refid="10716" relation="usage">
          <edgelabel>_score</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="mtest/testutils.h" line="29" column="1" bodyfile="mtest/testutils.h" bodystart="29" bodyend="49"/>
    <listofallmembers>
      <member refid="class_ms_1_1_m_test_1a37e6c16e898cab655f8ccd2518274acf" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>compareFiles</name></member>
      <member refid="class_ms_1_1_m_test_1a47c4f40157a350d27906dc6331e6cfd9" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>ed</name></member>
      <member refid="class_ms_1_1_m_test_1a0bf5210cc1ee4587d6959899aaff4a14" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>initMTest</name></member>
      <member refid="class_ms_1_1_m_test_1a62fa3697bed02fa431b025df0457763e" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>mscore</name></member>
      <member refid="class_ms_1_1_m_test_1a744f5e054b180afc3e977956f58b069a" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>MTest</name></member>
      <member refid="class_ms_1_1_m_test_1af3c0a9c8bd7784086f966faf701429d3" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>readCreatedScore</name></member>
      <member refid="class_ms_1_1_m_test_1ac35525fff12b9e2d07806bcd6602217e" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>readScore</name></member>
      <member refid="class_ms_1_1_m_test_1a1891a6553283a1d3fda0aace440d359e" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>root</name></member>
      <member refid="class_ms_1_1_m_test_1a3014ea5ea6a33451fd5b26becb07cf7d" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>saveCompareMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a5c0af7fbce856e84aeda9c6699e2eeca" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>saveCompareMusicXmlScore</name></member>
      <member refid="class_ms_1_1_m_test_1a686ee7797f648e1d0e47e405ca90f92c" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>saveCompareScore</name></member>
      <member refid="class_ms_1_1_m_test_1a8e9111673d6bb2ed25851e4fa7858d03" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>saveMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a740ba0e9f2c5ebc6e0937ed9dd0da64f" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>saveMusicXml</name></member>
      <member refid="class_ms_1_1_m_test_1a58c9c58bc05dec98a8a1b783e18a1703" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>savePdf</name></member>
      <member refid="class_ms_1_1_m_test_1a9191a2086f4eb17a64eb466327c74452" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>saveScore</name></member>
      <member refid="class_ms_1_1_m_test_1a7ae6f01386275392b5c840ad6e8006f4" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>score</name></member>
      <member refid="class_ms_1_1_m_test_1a752b054eee21c04a6084af6672447499" prot="protected" virt="non-virtual"><scope>Ms::MTest</scope><name>writeReadElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
