<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct_ms_1_1_music_x_m_l_drum_instrument" kind="struct" language="C++" prot="public">
    <compoundname>Ms::MusicXMLDrumInstrument</compoundname>
    <includes refid="musicxmlsupport_8h" local="no">musicxmlsupport.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a95b59fb0ee0724d68ab5915d4ffe91b3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MusicXMLDrumInstrument::pitch</definition>
        <argsstring></argsstring>
        <name>pitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="130" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1aaec11f6efbdf28c44a6fb2ddb5c42041" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLDrumInstrument::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="131" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a47df2c70e17ababbc264fb22971b4fb4" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLDrumInstrument::sound</definition>
        <argsstring></argsstring>
        <name>sound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="132" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a7920d315ee5f3118782e6c383dec7f9a" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLDrumInstrument::virtLib</definition>
        <argsstring></argsstring>
        <name>virtLib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="133" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1afbf9b891c6b39a8d909405b28e4e81f3" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLDrumInstrument::virtName</definition>
        <argsstring></argsstring>
        <name>virtName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="134" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a7d0c786832781978098523a8b74d0013" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MusicXMLDrumInstrument::midiChannel</definition>
        <argsstring></argsstring>
        <name>midiChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="135" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a669ed86e409821040bb736b631e565a9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MusicXMLDrumInstrument::midiPort</definition>
        <argsstring></argsstring>
        <name>midiPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="136" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a7fca697c5ca56a4ae5621c4c39bcce57" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MusicXMLDrumInstrument::midiProgram</definition>
        <argsstring></argsstring>
        <name>midiProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="137" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1af1d9ca16460953b65d61b35abc0f587f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MusicXMLDrumInstrument::midiVolume</definition>
        <argsstring></argsstring>
        <name>midiVolume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="138" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1afcbdb83904ff6e9af343c3f50673c62f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MusicXMLDrumInstrument::midiPan</definition>
        <argsstring></argsstring>
        <name>midiPan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="139" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a7277ebfabce59ebd77342fa6918e8613" prot="public" static="no" mutable="no">
        <type>NoteHead::Group</type>
        <definition>NoteHead::Group Ms::MusicXMLDrumInstrument::notehead</definition>
        <argsstring></argsstring>
        <name>notehead</name>
        <briefdescription>
<para>notehead symbol set </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="140" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a1b52e9bff1f54a32e85586169b646a21" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MusicXMLDrumInstrument::line</definition>
        <argsstring></argsstring>
        <name>line</name>
        <briefdescription>
<para>place notehead onto this line </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="141" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a376178d58678571e4ae0730af14e91ce" prot="public" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_direction" kindref="compound">Direction</ref></type>
        <definition>Direction Ms::MusicXMLDrumInstrument::stemDirection</definition>
        <argsstring></argsstring>
        <name>stemDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="142" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_ms_1_1_music_x_m_l_drum_instrument_1aadaa4c1661a67eaff88f84484ca59704" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::MusicXMLDrumInstrument::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="144" column="1" bodyfile="mscore/musicxmlsupport.cpp" bodystart="138" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a6ebc65909a0807d2f9986387aba80229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::MusicXMLDrumInstrument::MusicXMLDrumInstrument</definition>
        <argsstring>()</argsstring>
        <name>MusicXMLDrumInstrument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="146" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="struct_ms_1_1_music_x_m_l_drum_instrument_1a8f50feee2e661185c812766ee4aa1ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::MusicXMLDrumInstrument::MusicXMLDrumInstrument</definition>
        <argsstring>(QString s)</argsstring>
        <name>MusicXMLDrumInstrument</name>
        <param>
          <type>QString</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="149" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="struct_ms_1_1_music_x_m_l_drum_instrument_1aae992aab6a9dc9ee81240306b59b80d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::MusicXMLDrumInstrument::MusicXMLDrumInstrument</definition>
        <argsstring>(int p, QString s, NoteHead::Group nh, int l, Direction d)</argsstring>
        <name>MusicXMLDrumInstrument</name>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>s</declname>
        </param>
        <param>
          <type>NoteHead::Group</type>
          <declname>nh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_direction" kindref="compound">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/musicxmlsupport.h" line="152" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="152" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A single instrument in a MusicXML part. Used for both a drum part and a (non-drum) multi-instrument part </para>    </detaileddescription>
    <collaborationgraph>
      <node id="10827">
        <label>Ms::MusicXMLDrumInstrument</label>
        <link refid="struct_ms_1_1_music_x_m_l_drum_instrument"/>
        <childnode refid="10828" relation="usage">
          <edgelabel>stemDirection</edgelabel>
        </childnode>
      </node>
      <node id="10828">
        <label>Ms::Direction</label>
        <link refid="class_ms_1_1_direction"/>
      </node>
    </collaborationgraph>
    <location file="mscore/musicxmlsupport.h" line="129" column="1" bodyfile="mscore/musicxmlsupport.h" bodystart="129" bodyend="155"/>
    <listofallmembers>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a1b52e9bff1f54a32e85586169b646a21" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>line</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a7d0c786832781978098523a8b74d0013" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>midiChannel</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1afcbdb83904ff6e9af343c3f50673c62f" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>midiPan</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a669ed86e409821040bb736b631e565a9" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>midiPort</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a7fca697c5ca56a4ae5621c4c39bcce57" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>midiProgram</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1af1d9ca16460953b65d61b35abc0f587f" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>midiVolume</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a6ebc65909a0807d2f9986387aba80229" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>MusicXMLDrumInstrument</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a8f50feee2e661185c812766ee4aa1ad1" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>MusicXMLDrumInstrument</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1aae992aab6a9dc9ee81240306b59b80d8" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>MusicXMLDrumInstrument</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1aaec11f6efbdf28c44a6fb2ddb5c42041" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>name</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a7277ebfabce59ebd77342fa6918e8613" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>notehead</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a95b59fb0ee0724d68ab5915d4ffe91b3" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>pitch</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a47df2c70e17ababbc264fb22971b4fb4" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>sound</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a376178d58678571e4ae0730af14e91ce" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>stemDirection</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1aadaa4c1661a67eaff88f84484ca59704" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>toString</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1a7920d315ee5f3118782e6c383dec7f9a" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>virtLib</name></member>
      <member refid="struct_ms_1_1_music_x_m_l_drum_instrument_1afbf9b891c6b39a8d909405b28e4e81f3" prot="public" virt="non-virtual"><scope>Ms::MusicXMLDrumInstrument</scope><name>virtName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
